[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 15,
      "-": 46
    }
  },
  {
    "path": "data/jUnitInputTest.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "T|0|run"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 1
    }
  },
  {
    "path": "data/savefile.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "E|0|cry|7pm-8pm"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "D|1|sleep|2020-02-19"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "T|0|run"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 3
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " * Represents command that adds tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public abstract class AddCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    protected String taskDescription;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * Constructs command object that adds tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * @param taskDescription literal description of the task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public AddCommand(String taskDescription) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * Returns whether the command is an exit command by user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * @return true if command is exit command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 23
    }
  },
  {
    "path": "src/main/java/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " * Represents command that adds deadline-typed tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class AddDeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * Constructs command object that adds deadline-typed tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * @param taskDescription literal description of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * @param by date in YYYY-MM-DD format as a String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public AddDeadlineCommand(String taskDescription, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(taskDescription);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * @param tasks TaskList instance used by Duke in this session"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * @param ui Ui instance used by Duke in this session"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * @param storage Storage instance used by Duke in this session"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * @throws DateTimeParseException"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            DateTimeParseException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Task newTask \u003d new Deadline(taskDescription, by);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String output \u003d ui.showAdded(newTask, tasks.size());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 38
    }
  },
  {
    "path": "src/main/java/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class AddEventCommand extends AddCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public AddEventCommand(String taskDescription, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(taskDescription);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Task newTask \u003d new Event(taskDescription, at);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String output \u003d ui.showAdded(newTask, tasks.size());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 19
    }
  },
  {
    "path": "src/main/java/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class AddToDoCommand extends AddCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    AddToDoCommand(String taskDescription) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(taskDescription);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Task newTask \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String output \u003d ui.showAdded(newTask, tasks.size());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 16
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    abstract String execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    abstract boolean isExit();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 5
    }
  },
  {
    "path": "src/main/java/CommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class CommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    CommandException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 5
    }
  },
  {
    "path": "src/main/java/CorruptedFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class CorruptedFileException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    CorruptedFileException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(\"Save file is corrupted, unable to load tasks.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 5
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public Deadline(String desc, String byString) throws DateTimeParseException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.by \u003d LocalDate.parse(byString);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        taskType \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return \"[\" + taskType + \"]\" + super.toString() + \" (by: \" "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                + by.getMonth().getDisplayName(TextStyle.SHORT_STANDALONE, Locale.ENGLISH) + \" \" "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                + by.getDayOfMonth() + \" \" "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                + by.getYear() + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String generateSaveFileData() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return \"D|\" + (isDone ? \"1\" : \"0\") + \"|\" + desc + \"|\" + by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 28
    }
  },
  {
    "path": "src/main/java/DeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class DeadlineException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    DeadlineException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 5
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    protected int indexOfTaskToDelete;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    DeleteCommand(int indexOfTaskToDelete) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.indexOfTaskToDelete \u003d indexOfTaskToDelete;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Task taskToDelete \u003d tasks.getTask(indexOfTaskToDelete);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        tasks.delete(indexOfTaskToDelete);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String output \u003d ui.showDeleted(taskToDelete, tasks.size());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "       private void delete(int indexOfTaskToDelete) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Task taskToDelete \u003d taskList.get(indexOfTaskToDelete - 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        taskList.remove(indexOfTaskToDelete - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                \"     Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                \"       \" + taskToDelete + \"\\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                \"     Now you have \" + taskList.size() +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                (taskList.size() \u003d\u003d 1 ? \" task in the list.\\n\" : \" tasks in the list.\\n\") +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        writeSaveFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 38
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 59
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    protected int indexOfDoneTask;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    DoneCommand(int indexOfDoneTask) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.indexOfDoneTask \u003d indexOfDoneTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Task doneTask \u003d tasks.getTask(indexOfDoneTask);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String output \u003d ui.showDone(doneTask);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private void markAsDone(int indexOfDoneTask) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Task doneTask \u003d tasks.get(indexOfDoneTask - 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                \"     Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                \"       \" + doneTask + \"\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        writeSaveFile();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 34
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " * Represents a task-tracking chat bot with Command Line Interface."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * Constructs Duke object which represents a chat bot and loads saved tasks if save file exists."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * @param filePath relative path of save file for saved tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * Constructs Duke object and loads saved tasks (from a pre-defined path) if save file exists."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String filePath \u003d \"./data/savefile.txt\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        new Duke(\"./data/savefile.txt\").run();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                ui.showLineTop(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                ui.showError(\"Incorrect date format. Retry with YYYY-MM-DD.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                ui.showLineBottom();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            String fullCommand \u003d input;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            String output \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return \"Incorrect date format. Retry with YYYY-MM-DD.\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "/*"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        File saveFile \u003d new File(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        File folder \u003d new File(\"./data\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (!folder.exists()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            System.out.println(\"Folder does not exists yet, new data folder created in project root\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            folder.mkdir();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (saveFile.exists()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                duke.readSaveFile(saveFile);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                System.out.println(\"file not found\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                System.out.println(\"corrupt save file\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "*/"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private void readSaveFile(File saveFile) throws Exception {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        ArrayList\u003cTask\u003e savedTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Scanner fileReader \u003d new Scanner(saveFile);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        while (fileReader.hasNextLine()) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            String taskData \u003d fileReader.nextLine();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            Task currTask \u003d TaskGenerator.generateTask(taskData);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            savedTaskList.add(currTask);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        taskList \u003d savedTaskList;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private void writeSaveFile() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            File saveFile \u003d new File(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (!saveFile.exists()) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                saveFile.createNewFile();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            BufferedWriter bfWriter \u003d new BufferedWriter(new FileWriter(saveFile));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            String currLine \u003d \"\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            ListIterator\u003cTask\u003e listIterator \u003d taskList.listIterator();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            while (listIterator.hasNext()) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                Task task \u003d listIterator.next();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                currLine \u003d task.generateSaveFileData();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                bfWriter.write(currLine);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                bfWriter.newLine();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                currLine \u003d \"\";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            bfWriter.close();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private void init() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                    list();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                    int indexOfTaskToDelete \u003d Integer.parseInt(input.substring(7));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                    delete(indexOfTaskToDelete);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                    int indexOfDoneTask \u003d Integer.parseInt(input.substring(5));"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                    markAsDone(indexOfDoneTask);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                } else if (input.startsWith(\"todo\") || input.startsWith(\"deadline\") || input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                    add(input);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                    throw new CommandException();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                        + \"     \" + e + \"\\n\""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                        + \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    //todo"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private void add(String input) throws ToDoException, DeadlineException, EventException {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                throw new ToDoException();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            newTask \u003d new ToDo(input.substring(5));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (input.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                throw new DeadlineException();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            int indexOfSeparator \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            newTask \u003d new Deadline(input.substring(9, indexOfSeparator - 1),"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                    input.substring(indexOfSeparator + 4));"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (input.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                throw new EventException();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            int indexOfSeparator \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            newTask \u003d new Event(input.substring(6, indexOfSeparator - 1),"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                    input.substring(indexOfSeparator + 4));"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                \"     Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                \"       \" + newTask + \"\\n\" +"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                \"     Now you have \" + tasks.size() +"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                (tasks.size() \u003d\u003d 1 ? \" task in the list.\\n\" : \" tasks in the list.\\n\") +"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        writeSaveFile();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private void list() {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                    \"     You have no tasks in your list.\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                    \"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            ListIterator\u003cTask\u003e listIterator \u003d tasks.listIterator();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            while (listIterator.hasNext()) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                Task t \u003d listIterator.next();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                System.out.println(\"     \" + i + \".\" + t);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    //todo"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private void markAsDone(int indexOfDoneTask) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Task doneTask \u003d tasks.get(indexOfDoneTask - 1);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                \"     Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                \"       \" + doneTask + \"\\n\" +"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        writeSaveFile();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    //todo"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private void delete(int indexOfTaskToDelete) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Task taskToDelete \u003d taskList.get(indexOfTaskToDelete - 1);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        taskList.remove(indexOfTaskToDelete - 1);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                \"     Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                \"       \" + taskToDelete + \"\\n\" +"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                \"     Now you have \" + taskList.size() +"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                (taskList.size() \u003d\u003d 1 ? \" task in the list.\\n\" : \" tasks in the list.\\n\") +"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        writeSaveFile();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 276,
      "-": 6
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private String msg;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    DukeException(String msg) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public Event(String desc, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        taskType \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return \"[\" + taskType + \"]\" + super.toString() +  \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String generateSaveFileData() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return \"E|\" + (isDone ? \"1\" : \"0\") + \"|\" + desc + \"|\" + at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 19
    }
  },
  {
    "path": "src/main/java/EventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class EventException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    EventException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 5
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String output \u003d ui.showExit();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (o instanceof ExitCommand) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 25
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private String searchString;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public FindCommand(String searchString) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.searchString \u003d searchString;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        int numOfTasks \u003d tasks.size();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d numOfTasks; i++) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            Task currTask \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            String currDesc \u003d currTask.getDesc();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (currDesc.contains(searchString)) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                matchedTasks.add(currTask);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (matchedTasks.isEmpty()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            output \u003d ui.showNoMatch();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            output +\u003d ui.showMatchingTaskHeader() + \"\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            for (Task t : matchedTasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                output +\u003d ui.showTaskWithIndex(i, t) + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 41
    }
  },
  {
    "path": "src/main/java/InvalidTaskTypeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class InvalidTaskTypeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    InvalidTaskTypeException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(\"invalid task type excountered\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 5
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        int numOfTasks \u003d tasks.size();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            output \u003d ui.showListNoTasks();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            output \u003d ui.showListWithTasksHeader() + \"\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d numOfTasks; i++) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                output +\u003d ui.showTaskWithIndex(i, tasks.getTask(i)) + \"\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (o instanceof ListCommand) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 32
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                DialogBox.getDukeDialog(\"Hello! I\u0027m Duke \\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                        \"What can I do for you?\\n\", dukeImage)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            new Timer().schedule(new TimerTask() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                public void run () { "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                    System.exit(0); "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }, 2000);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 68
    }
  },
  {
    "path": "src/main/java/NoFolderException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class NoFolderException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    NoFolderException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(\"Folder does not exists yet, new \u0027data\u0027 folder created under root\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 5
    }
  },
  {
    "path": "src/main/java/NoSavedFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class NoSavedFileException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    NoSavedFileException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(\"No save file for tasks found. Automatically created new save file under root/data\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 5
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public static Command parse(String input) throws ToDoException, DeadlineException, EventException, "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            CommandException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            int indexOfTaskToDelete \u003d Integer.parseInt(input.substring(7));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return new DeleteCommand(indexOfTaskToDelete);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            int indexOfDoneTask \u003d Integer.parseInt(input.substring(5));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return new DoneCommand(indexOfDoneTask);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return new FindCommand(input.substring(5));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                throw new ToDoException();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                return new AddToDoCommand(input.substring(5));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (input.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                throw new DeadlineException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            int indexOfSeparator \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            String taskDescription \u003d input.substring(9, indexOfSeparator - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            String by \u003d input.substring(indexOfSeparator + 4);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return new AddDeadlineCommand(taskDescription, by);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (input.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                throw new EventException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            int indexOfSeparator \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            String taskDescription \u003d input.substring(6, indexOfSeparator - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            String at \u003d input.substring(indexOfSeparator + 4);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return new AddEventCommand(taskDescription, at);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            throw new CommandException();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 42
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    Storage(String filePath) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws CorruptedFileException, UnableToCreateSaveFileException, NoSavedFileException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            ArrayList\u003cTask\u003e savedTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            String folderPath \u003d getFolderPath();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            File folder \u003d new File(folderPath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (!folder.exists()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                folder.mkdir();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            File saveFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            Scanner fileReader \u003d new Scanner(saveFile);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            while (fileReader.hasNextLine()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                String taskData \u003d fileReader.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                Task currTask \u003d TaskGenerator.generateTask(taskData);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                savedTaskList.add(currTask);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return savedTaskList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            File saveFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                saveFile.createNewFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                throw new UnableToCreateSaveFileException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            throw new NoSavedFileException();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            File saveFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            File folder \u003d new File(getFolderPath());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (!folder.exists()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                folder.mkdir();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (!saveFile.exists()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                saveFile.createNewFile();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            BufferedWriter bfWriter \u003d new BufferedWriter(new FileWriter(saveFile));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            int numOfTasks \u003d tasks.size();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d numOfTasks; i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                Task task \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                bfWriter.write(task.generateSaveFileData());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                bfWriter.newLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            bfWriter.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private String getFolderPath() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        int indexOfLastSlash \u003d 0;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        for (int i \u003d filePath.length() - 1; i \u003e\u003d 0; i--) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (filePath.charAt(i) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                indexOfLastSlash \u003d i;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return filePath.substring(0, indexOfLastSlash);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 74
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    protected String desc;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public Task(String desc) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public abstract String generateSaveFileData();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return desc;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + desc;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 33
    }
  },
  {
    "path": "src/main/java/TaskGenerator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class TaskGenerator {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public static Task generateTask(String taskData) throws CorruptedFileException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String[] taskSubData \u003d taskData.split(\"\\\\|\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String taskTypeLetter \u003d taskSubData[0];"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Boolean isDone \u003d taskSubData[1].equals(\"1\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String taskDesc \u003d taskSubData[2];"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (taskTypeLetter.equals(\"T\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            task \u003d new ToDo(taskDesc);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (taskTypeLetter.equals(\"D\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            task \u003d new Deadline(taskDesc, taskSubData[3]);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (taskTypeLetter.equals(\"E\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            task \u003d new Event(taskDesc, taskSubData[3]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            // todo: generate exception"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            System.out.println(\"corrupted save file\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            throw new CorruptedFileException();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 28
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private ArrayList\u003cTask\u003e innerList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        innerList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        innerList \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void add(Task newTask) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        innerList.add(newTask);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void delete(int indexOfTaskToDelete) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        innerList.remove(indexOfTaskToDelete - 1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return innerList.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return innerList.get(i - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return innerList.isEmpty();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 34
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    TODO(\"T\"),"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    DEADLINE(\"D\"),"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    EVENT(\"E\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String letter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    TaskType(String letter) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.letter \u003d letter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return letter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 19
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public ToDo(String desc) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        taskType \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return \"[\" + taskType + \"]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String generateSaveFileData() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return \"T|\" + (isDone ? \"1\" : \"0\") + \"|\" + desc;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (o instanceof ToDo) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            ToDo other \u003d (ToDo) o;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return this.desc.equals(other.desc) \u0026\u0026 this.isDone \u003d\u003d other.isDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 28
    }
  },
  {
    "path": "src/main/java/ToDoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class ToDoException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    ToDoException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 5
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_GREET \u003d \"Hello! I\u0027m Duke \\n\" +"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_EXIT \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_ADDED_TASK \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_LIST_TASK_NO_TASK \u003d \"You have no tasks in your list.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_LIST_TASK_HAVE_TASK \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_MARK_DONE \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_DELETED_TASK \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_FOUND_MATCHING_TASK \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_NO_MATCHING_TASK \u003d \"No matching tasks are found in your list.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return MSG_GREET;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return MSG_EXIT;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showError(Exception e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return e.getMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showError(String e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return e;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showListWithTasksHeader() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return MSG_LIST_TASK_HAVE_TASK;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showListNoTasks() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return MSG_LIST_TASK_NO_TASK;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showTaskWithIndex(int i, Task task) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return i + \".\" + task;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showDeleted(Task task, int numOfRemainingTasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return MSG_DELETED_TASK + task + \"\\n\" "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                + (numOfRemainingTasks \u003d\u003d 0 "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                        ? \"Now you have no tasks in the list.\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                        : (numOfRemainingTasks \u003d\u003d 1 "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                                ? \"Now you have 1 task in the list.\" "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                                : \"Now you have \" + numOfRemainingTasks + \" tasks in the list.\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showDone(Task task) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return MSG_MARK_DONE + task;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showAdded(Task task, int numOfTasks) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return MSG_ADDED_TASK + task + \"\\n\" "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                + (numOfTasks \u003d\u003d 0"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                        ? \"Now you have no tasks in the list.\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                        : (numOfTasks \u003d\u003d 1"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                                ? \"Now you have 1 task in the list.\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                                : \"Now you have \" + numOfTasks + \" tasks in the list.\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showNoMatch() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return MSG_NO_MATCHING_TASK;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showMatchingTaskHeader() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return MSG_FOUND_MATCHING_TASK;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 74
    }
  },
  {
    "path": "src/main/java/UnableToCreateSaveFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class UnableToCreateSaveFileException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    UnableToCreateSaveFileException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(\"Unable to create save file.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 5
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void parse_byeInput_exitCommand() throws Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        assertEquals(new ExitCommand(), Parser.parse(\"bye\"));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void parse_listInput_listCommand() throws Exception {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        assertEquals(new ListCommand(), Parser.parse(\"list\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 14
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void load_fileWithToDoRunUndoneTask_arrayListContainingUndoneRunToDoTask() throws Exception {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        assertEquals(new ArrayList\u003cTask\u003e(Arrays.asList(new ToDo(\"run\"))), "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                new Storage(\"./data/jUnitInputTest.txt\").load());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "deadline return book /by Apr 10th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "event team meeting /at Tomorrow 1-2pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "todo study"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "done 2"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 2,
      "-": 37
    }
  }
]
