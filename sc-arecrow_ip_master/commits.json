{"authorDailyContributionsMap":{"sc-arecrow":[{"date":"2020-08-14","commitResults":[{"hash":"52aee5dee91603c101fbc44f92a832b50d326a1b","messageTitle":"Changed name from Duke to Viscount and changed logo","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":10},"sh":{"insertions":1,"deletions":1}}},{"hash":"906ace992a860b48906b7a194473749391ecb9d6","messageTitle":"Level-1","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":7}}},{"hash":"9deeb57575dc7f966eaffad10aa8ca823b27b14e","messageTitle":"Level-2","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":3}}},{"hash":"c7124aaa5c3d9f769cfd091c17f2405b123bdcbc","messageTitle":"Level-3","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":13}}},{"hash":"07deb6f1742a1830365dfe3e76eab5757f70af7b","messageTitle":"Level-4","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":12}}}]},{"date":"2020-08-15","commitResults":[{"hash":"1c8af858540834b390225c66fcf7ea02e28d03cb","messageTitle":"A-TextUiTesting","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":0},"java":{"insertions":2,"deletions":1},"bat":{"insertions":2,"deletions":2}}},{"hash":"de48983348169b9703234c30e69d33ab1d11e145","messageTitle":"Added exceptions to handle errors","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":12,"deletions":1},"java":{"insertions":168,"deletions":22}}},{"hash":"92c8affc168473f62f208e16cbdea167a32f6d31","messageTitle":"Added delete function and changed error messages","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":0},"java":{"insertions":28,"deletions":5}}}]},{"date":"2020-08-20","commitResults":[{"hash":"c661eeb532913d5feab9d5f4152d58251eea0b39","messageTitle":"Refactor variable and method names and organise code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":32}}},{"hash":"18270c35b757bbf84f4ebd966fd1ea5e030b2141","messageTitle":"Add javadoc to Viscount","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":83,"deletions":40}}}]},{"date":"2020-08-21","commitResults":[{"hash":"ecf53af8e0d10e6ec0aac57f47e25dffb79570a6","messageTitle":"Modify constructor of Task and subclasses","messageBody":"Constructor of Task and subclasses Todo, Deadline and Event accept\none argument for its description, and the isDone field is set to\nfalse.\n\nTo load task list data from disk, we must be able to create tasks\nwith isDone field set to true.\n\nLet\u0027s add an isDone parameter to the constructor of Task and its\nsubclasses, which will allow us to dictate the isDone field when\nwe create new task objects.\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":11},"sh":{"insertions":2,"deletions":2}}},{"hash":"72e785b577613716ea31b0acf9d212e34c60d591","messageTitle":"Make Task an abstract class and add toTaskData method","messageBody":"Task is a normal class.\n\nThere are some methods like toTaskData that are implemented\ndifferently depending on the subclass of Task.\n\nLet\u0027s make Task an abstract class to provide this common\nfunctionality across the subclasses while also allowing Task to\nhave default methods.\n\nUsing an abstract class is preferable over an interface because\nthe subclasses have an \"is-a\" relationship to Task, instead of a\n\"can-do\" relationship.\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":7}}},{"hash":"7b4010f148d033e754b23d1fc08691f02bef0164","messageTitle":"Add save functionality","messageBody":"Viscount does not have save functionality.\n\nHence data is lost after the program ends.\n\nLet\u0027s enhance Viscount with saving functionality so that tasks are\nwritten onto disk after every change to the task list. Let\u0027s also\nupdate the UI testing to simulate running Viscount multiple times\nand test for persistence of data.\n","fileTypesAndContributionMap":{"txt":{"insertions":27,"deletions":25},"java":{"insertions":77,"deletions":0},"bat":{"insertions":7,"deletions":2},"sh":{"insertions":10,"deletions":2}}}]},{"date":"2020-08-23","commitResults":[{"hash":"9b7a7795754f6f3d687c84a0d34712440381add0","messageTitle":"Modify IOException handling","messageBody":"Viscount continues to run even after an IOException is thrown.\n\nThis runs the risk of users continuing to use Viscount when their\ndata is not being saved to disk.\n\nLet\u0027s modify IOException handling such that when one is thrown,\nViscount immediately shuts down, preventing further loss of data.\n","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":53}}},{"hash":"b6d8af33e712581910a6affd06019092458b1502","messageTitle":"Improve date and time representation","messageBody":"Viscount represents date and time with a string given by the user.\n\nThis is inadequate because of the lack of standardisation of date\nand time across different tasks.\n\nLet\u0027s improve date and time representation using the java\nLocalDateTime library so it is standardised across all tasks.\n","fileTypesAndContributionMap":{"txt":{"insertions":11,"deletions":5},"java":{"insertions":74,"deletions":14},"sh":{"insertions":2,"deletions":2}}},{"hash":"074f73522f190429e90e2852e81a9a823f796e3c","messageTitle":"Make Task an abstract class and add hasDateTime method","messageBody":"Task is a normal class.\n\nThere are some methods like hasDateTime that are implemented\ndifferently depending on the subclass of Task.\n\nLet\u0027s make Task an abstract class to provide this common\nfunctionality across the subclasses while also allowing Task to\nhave default methods.\n\nUsing an abstract class is preferable over an interface because the\nsubclasses have an \"is-a\" relationship to Task, instead of a\n\"can-do\" relationship.\n","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":8}}},{"hash":"4725cfb7e0a16ff7e602a749ecee43f7cdf751a3","messageTitle":"Create TaskType enum","messageBody":"There is no TaskType enum.\n\nObjects that are instances of subclasses of Task cannot be\ndifferentiated according to their type of task.\n\nLet\u0027s create a TaskType enum and give each instance of Task a\ntaskType field to allow for this differentiation.\n","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":4}}},{"hash":"f5230ecd6a86a84f4fe8ecf711ab427bb804c072","messageTitle":"Improve list function","messageBody":"Viscount can list tasks that users have added.\n\nWith a better representation of date and time of deadlines and events,\nusers should be able to have better control over what tasks are listed.\n\nLet\u0027s improve the list function to enable users to:\n* list tasks of a specified type\n* list tasks occurring today or a specified day\n","fileTypesAndContributionMap":{"txt":{"insertions":12,"deletions":2},"java":{"insertions":106,"deletions":7}}}]},{"date":"2020-08-24","commitResults":[{"hash":"49c7c6d0dd44c5bac1d689e07ba0e1dcc30bafa9","messageTitle":"Extracted Ui, Storage, Parser, TaskList and Command classes.","messageBody":"Viscount class is handling many functionalities, of which most\ncan be classified into various categories.\n\nNo one class should hold that many functions as it goes against the\nSingle Responsibility Principle in OOP.\n\nLet\u0027s extract out code with similar functions into several classes,\nnamely Ui, Storage, Parser, TaskList and Command, to better represent\nthe system in an object oriented manner.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":572,"deletions":408}}},{"hash":"d3c31875a7ee67bd1ed5c7bdd0da809b1012e556","messageTitle":"Added several exception handling cases","messageBody":"Viscount does not have exception handling for IO exceptions and\nusing the following command \u0027list todo /on\u0027.\n\nSince these are exceptions that can reasonably occur, they are checked\nexceptions and should be handled accordingly.\n\nLet\u0027s:\n* Add a new exception for unsupported operations\n* Gracefully handle IOExceptions by shutting down Viscount when they\noccur, which will potentially save the user from the loss of their data\n","fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":34}}},{"hash":"70c97fc738629b957d4064104f1e3278a9da758e","messageTitle":"Divide classes into packages","messageBody":"Viscount code is all in one directory.\n\nClass files that are related to one another can be grouped into\npackages. This results in a more organised project structure.\n\nLet\u0027s organise the class files into suitable java packages.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":106,"deletions":10},"bat":{"insertions":3,"deletions":3},"sh":{"insertions":4,"deletions":4}}},{"hash":"7f8aab73b230b8203dc30aa0612be98408157281","messageTitle":"Add JUnit test for some Ui and TaskList functions","messageBody":"Viscount is not undergoing any unit testing.\n\nIt is difficult to confirm that Viscount is working as intended with\nonly text UI testing. It is also beneficial to test each part of the\nprogram separately.\n\nLet\u0027s add JUnit tests for some of the functions in Ui and TaskList\nto confirm that these parts of Viscount are working as intended.\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":202,"deletions":6}}},{"hash":"33945d71a0f0212aedd146ab6b4f80257cd2af91","messageTitle":"Fix bug for Viscount to create data directory","messageBody":"Viscount shuts down if it cannot find the data directory in which\nthe data file is supposed to be in.\n\nViscount should create the directory if it cannot find it, before\ncreating the data file inside.\n\nLet\u0027s fix the bug to enable Viscount to create the data directory.\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":4}}}]},{"date":"2020-08-25","commitResults":[{"hash":"7849d3953fa30fc432db47d4d48111d13063ef22","messageTitle":"Fix runtest.bat to write correct Unicode symbols","messageBody":"When runtest.bat is run, the output written to ACTUAL.TXT contains\n? characters instead of the correct tick and cross Unicode characters.\n\nThis is an inaccurate representation of the true output from Viscount.\n\nLet\u0027s fix the runtest.bat to write the correct Unicode symbols by\nencoding with UTF-8.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1},"bat":{"insertions":3,"deletions":1},"sh":{"insertions":2,"deletions":0}}},{"hash":"a06bd28223e4e98ab21609cce33c3ea718797c7c","messageTitle":"Refactor Parser class and change add task command","messageBody":"Parser class contains parse method that contains all logic pertaining\nto parsing of raw input from user. User types task type followed by\narguments to add a new task.\n\nThis is not as obvious to the user, who may accidentally add tasks\nthat they did not intend to.\n\nLet\u0027s\n* extract out the parts of code from parse method to make it more\nreadable\n* change add task command so users have to type \u0027add\u0027 followed by\nthe task type and then the arguments\n","fileTypesAndContributionMap":{"txt":{"insertions":15,"deletions":14},"java":{"insertions":80,"deletions":54}}},{"hash":"f227e70df39bbce688c5dc4a920997a0e70b58e7","messageTitle":"Add JavaDocs","messageBody":"Viscount code does not contain any Javadocs\n\nJavadocs are useful for other developers to quickly understand\nwhat a method does, and hence should be added for public methods\nthat are accessible to all developers.\n\nLet\u0027s add Javadoc comments to Viscount code.\n","fileTypesAndContributionMap":{"txt":{"insertions":15,"deletions":14},"java":{"insertions":336,"deletions":90}}},{"hash":"73447380e4321594258419462a2a38054a6975e0","messageTitle":"Add Javadocs to Viscount classes","messageBody":"Viscount classes do not have any header comments.\n\nViscount classes should have header comments to let other developers\nknow what each class represents, especially for public classes.\n\nLet\u0027s add Javadocs to Viscount classes.\n","fileTypesAndContributionMap":{"java":{"insertions":95,"deletions":3}}},{"hash":"fcae17752a9883d2788ceaa8d610e0c43e45b49f","messageTitle":"Tweak code to comply with coding standard.","messageBody":"Viscount code has some inconsistencies with coding standard.\n\nCode should comply to a coding standard for readability.\n\nLet\u0027s tweak Viscount code to comply with a coding standard.\n\nRefer to this page to see the coding standards\nhttps://se-education.org/guides/conventions/java/intermediate.html\n","fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":60}}},{"hash":"64d9ff02c1f3e2be26899733b3c0f80caf7dacb0","messageTitle":"Rename modifier to taskTypeModifier for list command","messageBody":"List command contains a variable called \u0027modifier\u0027.\n\nThis is an ambiguous name that does not fully represent what\ninformation the variable is supposed to contain.\n\nLet\u0027s rename the variable to taskTypeModifier.\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":16}}},{"hash":"f3a6f9948adf04a3e749f2f2bd29ca9dd86cda4f","messageTitle":"Add find functionality to list command","messageBody":"Users can list their tasks and can filter by task type or by date\nand time of task.\n\nUsers should also be able to filter their tasks by the description.\n\nLet\u0027s add a find functionaly to the list command to allow users to\nfilter by description in conjunction with the rest of the list\nmodifiers.\n","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":43,"deletions":17}}}]},{"date":"2020-08-28","commitResults":[{"hash":"f94b93aa8bed38f53c8f2652011c748c94e3841a","messageTitle":"Add more tests to UiTest.","messageBody":"UiTest tests showWelcome, showExit and input.\n\nUiTest should test for the other functions of the Ui class, especially\nthose listing and modifying tasks and the task list.\n\nLet\u0027s add more tests to UiTest to test listing and modifying tasks and\nthe task list.\n","fileTypesAndContributionMap":{"java":{"insertions":147,"deletions":19}}},{"hash":"f492ad8387d34a3f97a37508d357a45899f475f2","messageTitle":"Add Gradle support","messageBody":"Viscount does not have any build automation tools implemented.\n\nBuild automation tools like Gradle can help the process of building\nthe project by handling various aspects like testing and dependency\nmanagement.\n\nLet\u0027s add Gradle support to Viscount.\n","fileTypesAndContributionMap":{"gradle":{"insertions":10,"deletions":5}}},{"hash":"87d2dbf88c2ef6b5a6d618ae39d6db3983335f70","messageTitle":"Add CheckStyle to the project.","messageBody":"Coding style for Viscount is checked manually.\n\nThis may result in oversight of some coding style violations due to\nhuman error.\n\nLet\u0027s add CheckStyle, a static analysis tool, to help detect coding\nstyle violations in the project automatically.\n","fileTypesAndContributionMap":{"gradle":{"insertions":6,"deletions":5},"java":{"insertions":229,"deletions":170}}}]},{"date":"2020-08-30","commitResults":[{"hash":"2a33c82736034034414fe90a55a0c5e8b1702e34","messageTitle":"Setup basic JavaFX in Viscount","messageBody":"Viscount uses the console to interact with the user.\n\nA Graphical User Interface (GUI) gives the user a better experience\nwith using Viscount because of easier actions like mouse clicks, and\nalso because of visual feedback to their actions.\n\nLet\u0027s setup JavaFX in Viscount.\n","fileTypesAndContributionMap":{"gradle":{"insertions":18,"deletions":3},"java":{"insertions":40,"deletions":3}}},{"hash":"cbfeaa9dc60d13db982da81b31839adc53210afb","messageTitle":"Implement basic GUI for chat function.","messageBody":"With JavaFX set up, the next step is to make the screen for the chat\nwindow.\n\nLet\u0027s create a basic GUI for the chat window, to be integrated with\nViscount later.\n","fileTypesAndContributionMap":{"java":{"insertions":145,"deletions":2}}}]},{"date":"2020-08-31","commitResults":[{"hash":"c0695c8b4a8ec7f941e9c7435b48c34ce9aeb86e","messageTitle":"Convert basic GUI to use FXML","messageBody":"The basic GUI setup has many major problems:\n* Every small change to the GUI requires rebuilding the app\n* Components are heavily dependent on each other\n* Code is untidy and long\n\nLet\u0027s convert the basic GUI to use FXML instead.\n","fileTypesAndContributionMap":{"fxml":{"insertions":86,"deletions":0},"java":{"insertions":105,"deletions":134},"bat":{"insertions":1,"deletions":1}}},{"hash":"ec011dbab66a3bd720da44905741ad22e88a1704","messageTitle":"Integrate Viscount logic with JavaFX GUI and FXML","messageBody":"After creating a GUI for the chat window on JavaFX, the next step is\nto integrate Viscount chatbot logic with the GUI.\n\nLet\u0027s restructure the Viscount logic to change it from a console-based\napplication to one with a GUI, implemented with JavaFX and FXML\n","fileTypesAndContributionMap":{"fxml":{"insertions":9,"deletions":8},"java":{"insertions":149,"deletions":482}}}]},{"date":"2020-09-01","commitResults":[{"hash":"9c1b8fbdd917bcccfe1723fb629cf9e009a2e8d4","messageTitle":"Fix bug where application could not be launched from JAR file","messageBody":"Viscount application works when the main method from the Main class\nwas ran.\n\nHowever, trying to launch the application using the JAR file resulted\nin an error.\n\nLet\u0027s fix the bug to allow users to launch the application from the JAR\nfile.\n","tags":["Level-10"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":17,"deletions":9}}}]},{"date":"2020-09-04","commitResults":[{"hash":"742bab0c605fdd93dc127632b473bc93628c485f","messageTitle":"Add assertions to ensure code logic holds.","messageBody":"Viscount code does not contain any assertions.\n\nAssertions should be implemented in any program to verify the program\nstate, and an assertion failure indicates a possible bug in the code.\n\nLet\u0027s add assertions to verify Viscount code logic and to look out for\npossible bugs in said logic.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"de5f2e2d9ab781fb7384cbdb693a68fd69ccbc22","messageTitle":"Refactored Viscount code to improve code quality.","messageBody":"Viscount code contains methods that are very long and violates the\nSLAP principle in some places.\n\nUnderstandability of code is important as code may have to be read,\nunderstood and modified by other developers later on.\n\nLet\u0027s improve code quality in Viscount to make it more readable.\n","fileTypesAndContributionMap":{"java":{"insertions":222,"deletions":143}}}]},{"date":"2020-09-06","commitResults":[{"hash":"154fbd39cb432191b0399cc84bdd5bbd17940014","messageTitle":"Add mass done and delete operations","messageBody":"Viscount users can only mark done and delete tasks one at a time, by\nusing their index number in the list.\n\nThis is not user friendly especially if the user has many tasks that\nthey want to mark as done or delete all at once.\n\nLet\u0027s add\n* a mark all tasks as done operation\n* a delete all tasks operation\n* a delete all done tasks operation\n","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":219,"deletions":16}}}]},{"date":"2020-09-07","commitResults":[{"hash":"4def89720a4dc37db2630ed658fec292f12afc82","messageTitle":"Remove redundant exceptions and clean up exception handling","messageBody":"These are some exceptions in Viscount:\n* ViscountMissingArgumentException\n* ViscountMissingDescriptionException\n* ViscountMissingArgumentDescriptionException\n\nThese exceptions are similar to one another and it is redundant to\nhave multiple exception classes.\n\nLet\u0027s:\n* remove the redundant exceptions and combine their functions to\nViscountMissingArgumentException\n* clean up some parts of exception handling\n","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":49}}}]},{"date":"2020-09-09","commitResults":[{"hash":"047215ed8b7c2bdbcf7d68fad243ace50ccf6c34","messageTitle":"Override equals method to subclasses of Task","messageBody":"Todo, Deadline and Event does not override equals method.\n\nThis results in task comparison to fail when the same task is\ninstantiated twice into two objects having equal fields, because the\ndefault equals method compares the objects\u0027 hashcode.\n\nLet\u0027s override the equals method to declare that tasks are equal if\nthey have exactly the same fields (task type, description, doneness\nand date time if applicable).\n","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":0}}},{"hash":"ecfe04fb5265131c9c4dd5e7e1dbf85ab32476ad","messageTitle":"Override equals method of subclasses of Command","messageBody":"Add, Delete, Done and ListCommands do not have an equals method\noverriding the default method, which compares objects by reference.\n\nThis results in command comparison failure when comparing the same\ncommand instantiated into two objects with the same fields.\n\nLet\u0027s override the equals method to declare command equality when\nthe two commands have the same fields.\n","fileTypesAndContributionMap":{"java":{"insertions":62,"deletions":0}}},{"hash":"fe55991a529c4161322678bbbb191847c5fb089f","messageTitle":"Add JUnit tests for Parser class","messageBody":"Viscount has JUnit tests for its Ui and TaskList classes.\n\nLet\u0027s enhance Viscount testing by adding tests for the Parser class,\nto ensure the parser is translating user input correctly.\n","fileTypesAndContributionMap":{"java":{"insertions":319,"deletions":17}}}]},{"date":"2020-09-11","commitResults":[{"hash":"872d973b30c0bd3c1191ffc513bcfc23d25216d3","messageTitle":"Improve Viscount GUI","messageBody":"Viscount has basic default GUI from JavaFX.\n\nA more visually appealing GUI might make the application more\nenjoyable to use.\n\nLet\u0027s improve Viscount\u0027s GUI by\n* introducing some padding to make messages spaced out properly\n* putting input and responses in visible text boxes\n* setting error responses to have a different background color\n* setting an application icon and title\n","tags":["A-BetterGui"],"fileTypesAndContributionMap":{"fxml":{"insertions":20,"deletions":63},"java":{"insertions":41,"deletions":16}}},{"hash":"320d7e61097b822634659de14bab9b7983da554f","messageTitle":"Change application name to Viscount","messageBody":"Application name is \"Viscount Task Manager\"\n\nLet\u0027s change the name to \"Viscount\"\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"143fc469b5447b6b732332deb3f5d04272c91f30","messageTitle":"Add User Guide to Viscount","messageBody":"Prospective users of Viscount do not have any guides to refer to to\nfigure out how to use Viscount.\n\nLet\u0027s add a User Guide so that new users are able to learn the\nvarious features that Viscount has.\n","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":5},"md":{"insertions":200,"deletions":8}}},{"hash":"21d381ba521ccec1bf753aa9e60eab1226abbf93","messageTitle":"Add edit feature into Viscount","messageBody":"Viscount does not have an edit function.\n\nUsers have to delete and recreate a task from scratch if they make\na mistake while adding a task.\n\nLet\u0027s add an edit task feature so users can edit existing tasks with\nless hassle.\n","fileTypesAndContributionMap":{"java":{"insertions":473,"deletions":26},"md":{"insertions":30,"deletions":1}}}]},{"date":"2020-09-13","commitResults":[{"hash":"ca3c7c3eb5b1328590d2319cca52662361f72d01","messageTitle":"Add JUnit tests for edit feature","messageBody":"Viscount has edit feature where users can update their tasks without\ndeleting and remaking a new task.\n\nLet\u0027s add JUnit tests for the edit feature.\n","tags":["C-Update"],"fileTypesAndContributionMap":{"java":{"insertions":90,"deletions":0}}},{"hash":"c5bf3aab57c60d6943a71608ad5d7b87b9f21419","messageTitle":"Update README.md","messageBody":"README.md contains Duke default instructions.\r\n\r\nLet\u0027s update the README.md to tell both users and\r\ndevelopers how to set up Viscount.","fileTypesAndContributionMap":{"md":{"insertions":13,"deletions":12}}}]},{"date":"2020-09-15","commitResults":[{"hash":"7b0b908bc65e0f47747cc3d34eeaa466462fd6bd","messageTitle":"Update README.md","messageBody":"Fixed a typo in the user guide.","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":2}}},{"hash":"f3e2b8c5dad56c1e62ddf036747bb39831468ad9","messageTitle":"Update README.md","messageBody":"Fixed a typo in the README.md","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}},{"hash":"e3d215c23d62f4493e96c814da5f9ffdbf5bf217","messageTitle":"Add Javadocs to public methods","messageBody":"Some public methods in Viscount code do not have Javadoc comments.\n\nAccording to the coding standard, all public classes and methods\nmust have Javadoc comments.\n\nLet\u0027s add Javadocs to these public methods that are missing them.\n","fileTypesAndContributionMap":{"java":{"insertions":246,"deletions":6}}}]},{"date":"2020-09-18","commitResults":[{"hash":"598d5e6b2cf3b3932cf1cd50d0fbfc1cad47bf14","messageTitle":"Update README.md","messageBody":"Changed the link of the user guide","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"sc-arecrow":{"java":3156,"md":236,"fxml":44,"sh":13,"bat":10,"gradle":21,"txt":49}},"authorContributionVariance":{"sc-arecrow":117476.43},"authorDisplayNameMap":{"sc-arecrow":"CS2103-F09-1 GOH ..HIAK"}}
