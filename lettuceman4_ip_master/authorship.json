[
  {
    "path": "src/main/java/DateAndTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe DateAndTime class defines the behavior of an object that represents specific time.\u003c/p\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class DateAndTime {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /** Creates an object to represent date and time as a whole."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param date The date"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param time The time"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public DateAndTime(LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public DateAndTime(LocalDate localDate) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.date \u003d localDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (time !\u003d null) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return time.toString() + \", \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) ;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else  {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 41
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe DeadlineTask class defines the behavior of deadline task that has a"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * specific date to be done by for the task.\u003c/p\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private DateAndTime timeToBeDoneBy;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public DeadlineTask(String taskName, boolean isDone, DateAndTime timeToBeDoneBy) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        super(taskName, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.timeToBeDoneBy \u003d timeToBeDoneBy;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public DateAndTime getTimeToBeDoneBy() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return timeToBeDoneBy;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return \"[D] [\" + getStatusIcon() + \"] \" + taskDescription + \" (by: \" + timeToBeDoneBy + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 21
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String separationLine \u003d \"     _____________________________________________________\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String indentation \u003d \"      \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        System.out.println(separationLine + logo);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        System.out.print(indentation + \"Ah another dude trying to be productive. Sure. \\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        System.out.print(indentation + \"Let\u0027s see how long it takes. \\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        System.out.print(indentation + \"So, tell me, what do you want, sweetie? \\n\" + separationLine);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        IOHandler handler \u003d new IOHandler();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        handler.handleInput();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 14,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe DukeException class defines the behavior of an exception that is produced by Duke.\u003c/p\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    protected final String message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 14
    }
  },
  {
    "path": "src/main/java/DukeExceptionHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class DukeExceptionHandler {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /** Checks for Duke exception in the user input."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param userInput A String that represent the user\u0027s input"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @return A DukeException if an exception is found, null if there is no found exception"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public static DukeException checkForException(String userInput) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String[] replyArr \u003d null;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        DukeException exception \u003d null;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (userInput.length() \u003e 0) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            replyArr \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (userInput.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            exception \u003d new EmptyTaskException();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        // shortest userInput allowed is \"list\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        // also unexpected if it doesn\u0027t contain any of the keywords:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        // \"todo, deadline, event, done, delete, list, find\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else if (userInput.length() \u003c 4 ||"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                (!userInput.contains(\"todo\") \u0026\u0026 !userInput.contains(\"deadline\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                    \u0026\u0026 !userInput.contains(\"event\") \u0026\u0026 !userInput.contains(\"done\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                        \u0026\u0026 !userInput.contains(\"delete\") \u0026\u0026 !userInput.contains(\"list\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                            \u0026\u0026 !userInput.contains(\"find\"))) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            exception \u003d new UnexpectedInputException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        // if the userInput has the task keywords but not description"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        // future: need to check if deadline and event have \"/by\" and \"/at\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        // can try to use string.startsWith"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else if (replyArr.length \u003d\u003d 1 \u0026\u0026 (replyArr[0].equals(\"todo\") ||"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                                            replyArr[0].equals(\"deadline\") ||"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                                            replyArr[0].equals(\"event\"))) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (replyArr[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                exception \u003d new MissingDescriptionException(InputType.TODO);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            } else if (replyArr[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                exception \u003d new MissingDescriptionException(InputType.DEADLINE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                exception \u003d new MissingDescriptionException(InputType.EVENT);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        // if the userInput has the action keywords but no task number"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else if (replyArr.length \u003d\u003d 1 \u0026\u0026 (replyArr[0].equals(\"done\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                || replyArr[0].equals(\"delete\"))) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (replyArr[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                exception \u003d new MissingTaskIndexException(InputType.DONE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                exception \u003d new MissingTaskIndexException(InputType.DELETE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return exception;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 48
    }
  },
  {
    "path": "src/main/java/EmptyTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class EmptyTaskException extends MissingElementException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public EmptyTaskException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        super(\"A task cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 5
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe EventTask class defines the behavior of an event task that has a"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * specific date and time when the event happens.\u003c/p\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private DateAndTime eventTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public EventTask(String taskName, boolean isDone, DateAndTime eventTime) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        super(taskName, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public DateAndTime getEventTime() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return eventTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return \"[E] [\" + getStatusIcon() + \"] \" + taskDescription + \" (at: \" + eventTime + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 21
    }
  },
  {
    "path": "src/main/java/FileReadWrite.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe FileReadWrite class handles the writing to and reading"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * from saved file with static methods.\u003c/p\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class FileReadWrite {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static java.nio.file.Path path \u003d java.nio.file.Paths.get(home, \"iP\", \"SavedData\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static String fullFilePath \u003d path + \"/SavedData.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static boolean directoryExists \u003d java.nio.file.Files.exists(path);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public static void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        // if file not existed, create new then add"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (!directoryExists) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            Files.createDirectories(path);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        FileWriter fw \u003d new FileWriter(fullFilePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        fw.write(textToAdd + System.lineSeparator());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        fw.flush();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public static void appendToFile(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        FileWriter fw \u003d new FileWriter(fullFilePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        fw.write(textToAppend + System.lineSeparator());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public static List\u003cString\u003e loadFromSavedFile() throws IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        File file \u003d new File(fullFilePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return Files.readAllLines(Paths.get(fullFilePath));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 45
    }
  },
  {
    "path": "src/main/java/FileReadWriteIO.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe FileReadWriteIO connects the logic between reading and writing a general file to"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * reading and writing the specific files of the project.\u003c/p\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class FileReadWriteIO {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    // Saves task in 2 lines, first line is task description and second is status (1 is done, 0 is not done)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static void saveTaskData(TaskData taskData) throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        FileReadWrite.writeToFile(taskData.getTaskType() + \" %% \" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                                            taskData.getTaskDescription() + \" %% \" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                                            taskData.getIsDone() + \" %% \" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                                            taskData.getDate() + \" %% \" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                                            taskData.getTime());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private static void appendTaskData(TaskData taskData) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        FileReadWrite.appendToFile(taskData.getTaskType() + \" %% \" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                                                taskData.getTaskDescription() + \" %% \" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                                                taskData.getIsDone() + \" %% \" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                                                taskData.getDate() + \" %% \" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                                                taskData.getTime());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /** Saves all tasks and their status in the list of task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param taskManagerData The data object that stores information about the task list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @throws IOException when an IO operation fails"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public static void saveTaskListData(TaskManagerData taskManagerData) throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        for (int i \u003d 0; i \u003c taskManagerData.getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                saveTaskData(taskManagerData.getTaskList().get(0));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                appendTaskData(taskManagerData.getTaskList().get(i));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public static List\u003cString\u003e loadUngroupedSavedTaskList() throws IOException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return FileReadWrite.loadFromSavedFile();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 44
    }
  },
  {
    "path": "src/main/java/IOHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe IOHandler class makes sense of user input and acts on it.\u003c/p\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class IOHandler {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    String[] replyArr;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    String reply \u003d sc.nextLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    TaskManager taskManager \u003d new TaskManager(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    TaskSaveAndLoadManager taskSaveAndLoadManager \u003d new TaskSaveAndLoadManager();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    UI ui \u003d new UI();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private DateAndTime handleTime(String timeFormat) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (!timeFormat.contains(\" \")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(timeFormat);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return new DateAndTime(localDate);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            String[] split \u003d timeFormat.split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            LocalTime localTime \u003d LocalTime.parse(split[0].trim());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(split[1].trim());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return new DateAndTime(localDate, localTime);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private String[] splitReply() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        // index 4 is excluded"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (reply.length() \u003e\u003d 4) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (reply.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                replyArr \u003d reply.split(\" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            } else if (reply.contains(\"/\")){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                replyArr \u003d reply.split(\"/\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                replyArr \u003d reply.split(\" \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            // printMessage(new UnexpectedInputException().toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            replyArr \u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return replyArr;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private void handleUserInput()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String fullReply;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ArrayList\u003cString\u003e botReplyHeading \u003d ui.botReplyHeading(reply);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (reply.equals(\"list\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            String botReply \u003d botReplyHeading.get(0);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            String resultList \u003d ui.formatBotReplyBody(taskManager.convertTaskListToString(taskManager.getTaskList()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            fullReply \u003d botReply + resultList;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else if (replyArr !\u003d null \u0026\u0026 replyArr[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(replyArr[1]) - 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            taskManager.markTaskAsDone(taskIndex);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            String botReply \u003d botReplyHeading.get(0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            String taskDone \u003d ui.formatBotReplyBody(taskManager.getTask(taskIndex).toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            fullReply \u003d botReply + taskDone;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else if (replyArr !\u003d null \u0026\u0026 replyArr[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(replyArr[1]) - 1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            Task cacheTask \u003d taskManager.getTask(taskIndex);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            taskManager.removeTask(taskIndex);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            String botReply \u003d botReplyHeading.get(0);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            String taskDone \u003d ui.formatBotReplyBody(cacheTask.toString());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            fullReply \u003d botReply + taskDone;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else if (replyArr !\u003d null \u0026\u0026 replyArr[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            ArrayList\u003cTask\u003e foundTasks \u003d taskManager.findTaskThatHasKeyword(replyArr[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            String botReply \u003d \"\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (foundTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                botReply \u003d botReplyHeading.get(0);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                botReply \u003d botReplyHeading.get(1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            String resultList \u003d ui.formatBotReplyBody(taskManager.convertTaskListToString(foundTasks));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            fullReply \u003d botReply + resultList;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        // adding task to the list"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            Task newTask \u003d null;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (reply.contains(\"todo\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                reply \u003d reply.replace(\"todo \", \"\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                newTask \u003d new ToDoTask(reply, false);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            else if (reply.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                reply \u003d reply.replace(\"deadline \", \"\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                reply \u003d reply.replace(\"/by\", \"/\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                String[] tempArr \u003d splitReply();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                newTask \u003d new DeadlineTask(tempArr[0], false, handleTime(tempArr[1].trim()));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            else if (reply.contains(\"event\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                reply \u003d reply.replace(\"event \", \"\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                reply \u003d reply.replace(\"/at\", \"/\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                String[] tempArr \u003d splitReply();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                newTask \u003d new EventTask(tempArr[0], false, handleTime(tempArr[1].trim()));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            taskManager.addTask(newTask);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            String botReply \u003d botReplyHeading.get(0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            assert newTask !\u003d null;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            String addedTask \u003d ui.formatBotReplyBody(newTask.toString() + \"\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            String totalTask \u003d ui.formatBotReplyBody(\"Now you have a grand total of \" + taskManager.getTotalNoOfTasks() + \" tasks!\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            fullReply \u003d botReply + addedTask + totalTask;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ui.printMessage(fullReply);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void handleInput() throws IOException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        taskSaveAndLoadManager.saveTaskManager(taskManager);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (taskSaveAndLoadManager.loadTaskManager() !\u003d null) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            taskManager \u003d taskSaveAndLoadManager.loadTaskManager();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        while (!reply.equals(\"bye\"))"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            replyArr \u003d splitReply();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            DukeException exception \u003d DukeExceptionHandler.checkForException(reply);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (exception !\u003d null) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                ui.printMessage(exception.toString());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            reply \u003d sc.nextLine();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        taskSaveAndLoadManager.saveTaskManager(taskManager);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String byeMessage \u003d \"That\u0027s all? Sure. See you again (hopefully LOL).\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ui.printMessage(byeMessage);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 132
    }
  },
  {
    "path": "src/main/java/InputType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public enum  InputType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    LIST"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 8
    }
  },
  {
    "path": "src/main/java/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class MissingDescriptionException extends MissingElementException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public MissingDescriptionException(InputType type) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        super(\"The description of \" + type.toString().toLowerCase() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 5
    }
  },
  {
    "path": "src/main/java/MissingElementException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class MissingElementException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public MissingElementException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 5
    }
  },
  {
    "path": "src/main/java/MissingTaskIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class MissingTaskIndexException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public MissingTaskIndexException(InputType inputType) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        super(inputType.toString().toLowerCase() + \" what?\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 5
    }
  },
  {
    "path": "src/main/java/NoTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class NoTimeException extends MissingElementException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public NoTimeException(String message, TaskType type) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        super(message + \"The time of a \" + type.toString().toLowerCase() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe Task class defines the behaviour of a task.\u003c/p\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    protected final String taskDescription;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Creates a Task object that has a description and status of whether the task is done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param taskDescription A String that represents the description of the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param isDone A boolean that shows the status of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public Task(String taskDescription, boolean isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void setTaskAsDone()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Returns a tick or cross symbol to indicate the task\u0027s status:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * \u003cli\u003eIf the task is done, returns a tick.\u003c/li\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * \u003cli\u003eIf the task is not done, returns a cross.\u003c/li\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @return A String that represents the symbol"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public boolean getTaskStatus() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + taskDescription;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 45
    }
  },
  {
    "path": "src/main/java/TaskData.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe TaskData class is a data object that stores all information about a task.\u003c/p\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class TaskData {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private final String taskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private final String taskDescription;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private final int isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Creates a TaskData object that stores data for a deadline task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param taskType A String that represents task type"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param taskDescription A String that represents task description"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param isDone An int that represents the task status (0 is not done and 1 is done)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param date A String that represent the day the task to be done by"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public TaskData(String taskType, String taskDescription, int isDone, String date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.time \u003d date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Creates a TaskData object that stores data for a todo task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param taskType A String that represents task type"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param taskDescription A String that represents task description"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param isDone An int that represents the task status (0 is not done and 1 is done)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public TaskData(String taskType, String taskDescription, int isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Creates a TaskData object that stores data for an event task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param taskType A String that represents task type"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param taskDescription A String that represents task description"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param isDone An int that represents the task status (0 is not done and 1 is done)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param date A String that represents the day the event happens"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param time A String that represents the time the event happens"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public TaskData(String taskType, String taskDescription, int isDone, String date, String time) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public int getIsDone() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 72
    }
  },
  {
    "path": "src/main/java/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe TaskManager class stores a task list and manages commands relevant"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * to the task list: add, remove, mark as done, get,....\u003c/p\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Creates a TaskManager object that stores a taskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param taskList The task list stored"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public TaskManager(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Adds a task into the current task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param newTask The Task to add"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Removes a task of specified index."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param taskIndex The int that represents index of the task in the list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void removeTask(int taskIndex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        taskList.remove(taskIndex);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Marks a task of specified index as done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param index The int that represents index of the task in the list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void markTaskAsDone(int index) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        taskList.get(index).setTaskAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Gets a task of specified index."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param index The int that represents index of the task in the list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @return The Task that has the specified index"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Gets the total number of tasks in the task list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @return The int that represents total number of tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public int getTotalNoOfTasks() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Returns all the tasks in the task list that has a specified keyword."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param keyWord A String that represents the keyword"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @return A list of tasks that have the specified keyword"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public ArrayList\u003cTask\u003e findTaskThatHasKeyword(String keyWord) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ArrayList\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        for (Task task : this.taskList) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (task.getTaskDescription().contains(keyWord)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                res.add(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Converts a given task list into a formatted string representation."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param givenTaskList A list of task to be converted"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @return The string representation of the task list"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String convertTaskListToString(ArrayList\u003cTask\u003e givenTaskList) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        for (int i \u003d 0; i \u003c givenTaskList.size(); i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            String index \u003d (i + 1) + \". \";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            // remove the empty line created in the last task"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (i \u003d\u003d givenTaskList.size() - 1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                result \u003d result + index + givenTaskList.get(i).toString();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            result \u003d result + index + givenTaskList.get(i).toString() + \"\\n\" + \"      \";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 96
    }
  },
  {
    "path": "src/main/java/TaskManagerData.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe TaskManagerData class is a data object that stores info about the task list.\u003c/p\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class TaskManagerData {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private ArrayList\u003cTaskData\u003e taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public TaskManagerData() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public ArrayList\u003cTaskData\u003e getTaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 16
    }
  },
  {
    "path": "src/main/java/TaskSaveAndLoadManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe TaskSaveAndLoadManager class manages the logic to convert Java objects into data objects"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * and vice versa.\u003c/p\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class TaskSaveAndLoadManager {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Saves the task list with tasks, along with their descriptions as well as"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * their respective statuses and types."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param taskManager The TaskManager that stores the task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @throws IOException An exception thrown when IO operation fails"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void saveTaskManager(TaskManager taskManager) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        TaskManagerData taskManagerData \u003d new TaskManagerData();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        TaskData taskData \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        for (Task task: taskManager.getTaskList()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            boolean bool \u003d task.getTaskStatus();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            int boolInt;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (bool) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                boolInt \u003d 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                boolInt \u003d 0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            if (task instanceof ToDoTask) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                taskData \u003d new TaskData(\"todo\", task.getTaskDescription(),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                        boolInt, \"\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            } else if (task instanceof DeadlineTask) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                LocalDate date \u003d ((DeadlineTask) task).getTimeToBeDoneBy().getDate();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                taskData \u003d new TaskData(\"deadline\", task.getTaskDescription(),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                        boolInt, date.toString(), \"\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            } else if (task instanceof EventTask) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                LocalDate date \u003d ((EventTask) task).getEventTime().getDate();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                LocalTime time \u003d ((EventTask) task).getEventTime().getTime();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                taskData \u003d new TaskData(\"event\", task.getTaskDescription(),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                        boolInt, date.toString(), time.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            taskManagerData.getTaskList().add(taskData);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        FileReadWriteIO.saveTaskListData(taskManagerData);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Loads the task list with tasks, along with their descriptions as well as"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * their respective statuses and types since last save."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @return The TaskManager that stores the task list"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @throws IOException An exception thrown when IO operation fails"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public TaskManager loadTaskManager() throws IOException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        List\u003cString\u003e loadedData \u003d FileReadWriteIO.loadUngroupedSavedTaskList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        // loop through the loaded data strings, split each string by | and add to task list"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (loadedData !\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            for (String loadedDatum : loadedData) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                String[] tempArr \u003d loadedDatum.split(\" %% \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                TaskData taskData;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                // a todo item"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                if (tempArr.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                    taskData \u003d new TaskData(tempArr[0], tempArr[1], Integer.parseInt(tempArr[2]));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                // a deadline item"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                } else if (tempArr.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                    taskData \u003d new TaskData(tempArr[0], tempArr[1], Integer.parseInt(tempArr[2]), tempArr[3]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                    taskData \u003d new TaskData(tempArr[0], tempArr[1], Integer.parseInt(tempArr[2]), tempArr[3], tempArr[4]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                Task task \u003d loadTask(taskData);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return new TaskManager(taskList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private Task loadTask(TaskData taskData) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        isDone \u003d taskData.getIsDone() \u003d\u003d 1;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (taskData.getTaskType().equals(\"todo\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return new ToDoTask(taskData.getTaskDescription(), isDone);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else if (taskData.getTaskType().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            DateAndTime dt \u003d new DateAndTime(LocalDate.parse(taskData.getTime()));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return new DeadlineTask(taskData.getTaskDescription(), isDone, dt);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            DateAndTime dt \u003d new DateAndTime(LocalDate.parse(taskData.getDate()), LocalTime.parse(taskData.getTime()));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            return new EventTask(taskData.getTaskDescription(), isDone, dt);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 94
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    EVENT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 5
    }
  },
  {
    "path": "src/main/java/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe ToDoTask class defines the behavior of a todo task that only"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * has description and status.\u003c/p\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class ToDoTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public ToDoTask(String taskName, boolean isDone) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        super(taskName, isDone);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return \"[T] [\" + getStatusIcon() + \"] \" + taskDescription;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 14
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " * \u003cp\u003eThe UI class deals with interactions with the user.\u003c/p\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private String separationLine \u003d \"     _____________________________________________________\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private String indentation \u003d \"      \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private String topPartOfBotReplyMessage \u003d separationLine + indentation;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    private String botPartOfBotReplyMessage \u003d \"\\n\" + separationLine.substring(0, separationLine.length() - 1);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Prints a formatted message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param message A String that represents the message to print"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        System.out.println(topPartOfBotReplyMessage + message + botPartOfBotReplyMessage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Returns the a list that contains the bot\u0027s reply to different user inputs:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * \u003cli\u003eIf the user input is \"find\", returns a list of 2 strings, the first one is the"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * reply if nothing a found, the second one is the reply if at least 1 element is found.\u003c/li\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * \u003cli\u003eElse, returns a list of 1 string responding to the user input.\u003c/li\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param userInput A String to represent user input"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @return A list of 1 or 2 strings to represent the bot\u0027s reply to the respective input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public ArrayList\u003cString\u003e botReplyHeading(String userInput) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        ArrayList\u003cString\u003e botReply \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        botReply.add(\"\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        if (userInput.trim().equals(\"list\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "             botReply.set(0, \"Checking the whole list doesn\u0027t make you finish anything faster... \\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else if (userInput.trim().startsWith(\"done\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            botReply.set(0, \"Wah finally. Wondering how long more I need to wait... \\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else if (userInput.trim().startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            botReply.set(0, \"Good good... Okay removed! Looks more apt for a lazy ass like you. \\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else if (userInput.trim().startsWith(\"find\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            botReply.set(0,  \"Sorry can\u0027t find any tasks with such keyword.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            botReply.add(\"Found \u0027em. But at what cost... \\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "            botReply.set(0, \"Wow, another task. Added. You sure you can finish them all? \\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return botReply;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * Formats the body of the bot\u0027s reply."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @param body A String to represent the body of bot\u0027s reply"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     * @return A String to represent the formatted body"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public String formatBotReplyBody(String body) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        return indentation + body;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 54
    }
  },
  {
    "path": "src/main/java/UnexpectedInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class UnexpectedInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public UnexpectedInputException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        super(\"Sorry I don\u0027t specialise in gibberish.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 6
    }
  },
  {
    "path": "src/test/DateAndTimeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class DateAndTimeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void dateAndTime_correctlyFormattedToString_MMMdYYYY() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        assertEquals(\"Oct 20 2020\", new DateAndTime(LocalDate.parse(\"2020-10-20\")).toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 12
    }
  },
  {
    "path": "src/test/UITest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "public class UITest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    public void userInputList_botReplyHeadingIsCorrect() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "        assertEquals(\"Checking the whole list doesn\u0027t make you finish anything faster... \\n\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "                new UI().botReplyHeading(\"list\").get(0));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "kdsf"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "todo collect homework"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "event project meeting /at 19:00 2020-12-25"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "deadline CS2030 homework /by 2020-12-22"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lettuceman4"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "lettuceman4": 1,
      "-": 20
    }
  }
]
