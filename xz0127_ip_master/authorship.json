[
  {
    "path": "data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "D | 1 | return book | 2020-08-20 16:30"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": "E | 1 | project meeting | 2020-08-20 15:30"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": "E | 1 | meeting | 2020-08-20 18:30"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": "E | 0 | project meeting | 2020-09-30 17:00"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": "D | 0 | test | 2020-07-30 19:00"
      }
    ],
    "authorContributionMap": {
      "xz0127": 6
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import Duke.Tool.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import Duke.Task.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": " * Represent Duke, a task scheduling bot."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    private Command command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Construct a new Duke object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param filePath path of file storing the data."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        command \u003d new Command();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Execute the bot."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        parser.parse(storage, ui, taskList, command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.ui.sendBye();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    //run bot"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        new Duke(\"data/data.txt\").run();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 36,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Duke/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": " * Represent a deadline object with a deadline timing."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Construct a deadline object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param description title of the deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param by deadline timing."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param isDone status."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public Deadline(String description, LocalDateTime by, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM-dd-yyyy HH:mm\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by.format(format) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Represents the string written into data.txt."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @return A string written into the data.txt."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String toWrite() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return \"D | \" + (this.isDone ? \u00271\u0027 : \u00270\u0027) + \" | \" + this.taskDescription + \"| \" + this.by.toString().replace(\u0027T\u0027, \u0027 \u0027);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xz0127"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 38
    }
  },
  {
    "path": "src/main/java/Duke/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": " * Represent an event object with timing."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    protected LocalDateTime time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Construct an event object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param description title of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param time time of event happening time."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param isDone status."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public Event(String description, LocalDateTime time, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + time.format(format) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Represents the string written into data.txt."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @return A string written into the data.txt."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String toWrite() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return \"E | \" + (this.isDone ? \u00271\u0027 : \u00270\u0027)  + \" | \" + this.taskDescription + \"| \" + this.time.toString().replace(\u0027T\u0027, \u0027 \u0027);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xz0127"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 38
    }
  },
  {
    "path": "src/main/java/Duke/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": " * Represents an upcoming task in to-do list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    protected String taskDescription;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Construct a task item."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param taskDescription title of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param isDone status of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public Task(String taskDescription, boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return this.taskDescription;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Get the corresponding symbol based on the status of task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @return symbol corresponding to the status of task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Change the status of task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + this.getTaskDescription();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Represents the string written into data.txt."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @return A string written into the data.txt."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String toWrite() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return \"T | \" + (this.isDone ? \u00271\u0027 : \u00270\u0027)  + \" | \" + this.taskDescription;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xz0127"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 53
    }
  },
  {
    "path": "src/main/java/Duke/Task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": " * Represents the list containing all the tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    protected ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Construct a TaskList object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param taskList a list of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Count the number of tasks in the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @return number of tasks in the list in string format"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String countNum() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        int num \u003d this.taskList.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return \"    Now you have \" + num + \" tasks in the list.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Count the number of tasks in the list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @return number of tasks in the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Get a specific task from the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param num index."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @return task at index num"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public Task get(int num) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return taskList.get(num);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Remove a specific task from the list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param num index."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void remove(int num) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        taskList.remove(num);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Add a new To-do task to the list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param newToDo new to-do item."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void addToDo(Todo newToDo) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.taskList.add(newToDo);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Add a new deadline task to the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param newDdl new deadline."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void addDeadline(Deadline newDdl) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.taskList.add(newDdl);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Add a new event task to the list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param newEvent new event."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void addEvent(Event newEvent) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.taskList.add(newEvent);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xz0127"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 85
    }
  },
  {
    "path": "src/main/java/Duke/Task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": " * Represents a to-do item without timing"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Construct a to-do item."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param description title of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param isDone status."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Represents the string written into data.txt."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @return A string written into the data.txt."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String toWrite() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return super.toWrite();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xz0127"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 30
    }
  },
  {
    "path": "src/main/java/Duke/Tool/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "package Duke.Tool;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import Duke.Task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": " * Handles different command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Handles invalid user input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @throws DukeException exception indicating invalid input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void invalidInput() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Mark task as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param num index."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param taskList a list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @throws DukeException indicates that the task is not found."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void markAsDone(int num, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        if (num \u003e 0 \u0026\u0026 num \u003c\u003d taskList.getSize()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            taskList.get(num - 1).markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String msgForDone \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"    Nice! I \u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"       \" + taskList.get(num - 1).toString() + \"\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            System.out.println(msgForDone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            throw new DukeException("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    \"OOPS!!! The task is not found. Please try again.\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            );"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * List all the tasks in the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param taskList a list of tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void list(TaskList taskList) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String msgForList \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        msgForList +\u003d \"    Here are the tasks in your list: \\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            msgForList +\u003d \"    \" + (i + 1) + \". \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + taskList.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        msgForList +\u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        System.out.println(msgForList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Delete a task from the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param num index of the task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param taskList a list of tasks."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @throws DukeException indicates that the task is not found."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void delete(int num, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        if (num \u003e 0 \u0026\u0026 num \u003c\u003d taskList.getSize()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String msgForDelete \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"    Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"       \" + taskList.get(num - 1).toString() + \"\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            taskList.remove(num - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            msgForDelete +\u003d taskList.countNum() + \"\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            System.out.println(msgForDelete);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            throw new DukeException("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    \"OOPS!!! The task is not found. Please try again.\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            );"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Handles to-do task."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param instruction to-do instructions"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param taskList a list of tasks."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param ui handles system output."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @throws DukeException indicates that the description is empty."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void handleTodo(String instruction, TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        if (instruction.substring(4).isBlank()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String emoji \u003d Emoji.SMILE.toString();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String exceptionMsg \u003d \"OOPS!!! I\u0027m sorry, but the description cannot be empty. \\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"    You can do it by adding description after \u0027todo \u0027.\" + emoji ;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            throw new DukeException(exceptionMsg);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String toDoTitle \u003d instruction.substring(5);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        Todo newTodo \u003d new Todo(toDoTitle, false);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        taskList.addToDo(newTodo);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        ui.printAddedToDo(taskList, newTodo);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Handles deadline task."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param instruction deadline-instructions."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param taskList a list of tasks."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @throws DukeException indicates that the description or deadline timing is missing."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void handleDeadline(String instruction, TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        int index \u003d instruction.indexOf(\"/by\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        if (index \u003d\u003d 8) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String emoji \u003d Emoji.SMILE.toString();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String exceptionMsg \u003d \"OOPS!!! I\u0027m sorry, but the description cannot be empty. \\n\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"    You can do it by adding description after \u0027event \u0027.\" + emoji ;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            throw new DukeException(exceptionMsg);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        if (index !\u003d -1) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String by \u003d instruction.substring(index + 3);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String description \u003d instruction.substring(9, index);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            if (description.isBlank()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                String emoji \u003d Emoji.SMILE.toString();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                String exceptionMsg \u003d \"OOPS!!! I\u0027m sorry, but the description cannot be empty. \\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                        + \"    You can do it by adding description after \u0027deadline \u0027.\" + emoji ;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                throw new DukeException(exceptionMsg);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            } else if (by.isBlank()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                String emoji \u003d Emoji.SMILE.toString();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                String exceptionMsg \u003d \"OOPS!!! I\u0027m sorry, but the deadline cannot be empty. \\n\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                        + \"    You can do it by adding deadline after \u0027/by \u0027.\" + emoji ;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                throw new DukeException(exceptionMsg);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            Deadline deadline \u003d new Deadline(description, LocalDateTime.parse(by.substring(1), Parser.validFormat), false);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            taskList.addDeadline(deadline);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            ui.printAddedDdl(taskList, deadline);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String emoji \u003d Emoji.SMILE.toString();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String exceptionMsg \u003d \"OOPS!!! I\u0027m sorry, but you have to indicate the deadline. \\n\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"    You can do it by adding \u0027/by\u0027 after the description.\" + emoji ;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            throw new DukeException(exceptionMsg);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Handles event."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param instruction event-instruction."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param taskList a list of tasks."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param ui Handles system output."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @throws DukeException indicates that the timing or the description is missing."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void handleEvent(String instruction, TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        int index \u003d instruction.indexOf(\"/at\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        if (index \u003d\u003d 5) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String emoji \u003d Emoji.SMILE.toString();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String exceptionMsg \u003d \"OOPS!!! I\u0027m sorry, but the description cannot be empty. \\n\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"    You can do it by adding description after \u0027event \u0027.\" + emoji ;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            throw new DukeException(exceptionMsg);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        "
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        if (index !\u003d -1) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String time \u003d instruction.substring(index + 3);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String description \u003d instruction.substring(6, index);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            if (description.isBlank()) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                String emoji \u003d Emoji.SMILE.toString();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                String exceptionMsg \u003d \"OOPS!!! I\u0027m sorry, but the description cannot be empty. \\n\""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                        + \"    You can do it by adding description after \u0027event \u0027.\" + emoji ;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                throw new DukeException(exceptionMsg);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            } else if (time.isBlank()) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                String emoji \u003d Emoji.SMILE.toString();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                String exceptionMsg \u003d \"OOPS!!! I\u0027m sorry, but the time cannot be empty. \\n\""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                        + \"    You can do it by adding time after \u0027/at \u0027.\" + emoji ;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                throw new DukeException(exceptionMsg);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            Event event \u003d new Event(description, LocalDateTime.parse(time.substring(1), Parser.validFormat), false);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            taskList.addEvent(event);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            ui.printAddedEvent(taskList, event);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String emoji \u003d Emoji.SMILE.toString();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String exceptionMsg \u003d \"OOPS!!! I\u0027m sorry, but you have to indicate the time of the event. \\n\""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"    You can do it by adding \u0027/at\u0027 after the description.\" + emoji ;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            throw new DukeException(exceptionMsg);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Find a task by searching for a keyword."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param taskList a list of tasks."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param input find instructions."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @throws DukeException indicates that the instruction is empty."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void find(TaskList taskList, String input) throws DukeException {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        if (input.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String emoji \u003d Emoji.SMILE.toString();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String exceptionMsg \u003d \"OOPS!!! I\u0027m sorry, but the description cannot be empty. \\n\""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"    You can do it by adding description after \u0027find \u0027.\" + emoji ;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            throw new DukeException(exceptionMsg);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String query \u003d input.substring(5);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"    Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                if (taskList.get(i).getTaskDescription().contains(query)) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    count +\u003d 1;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    System.out.println(\"    \" + count + \".\" + taskList.get(i).toString());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    } "
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "xz0127"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 208
    }
  },
  {
    "path": "src/main/java/Duke/Tool/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "package Duke.Tool;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": " * Represents the exception thrown by Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Construct a Duke exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param message message of the exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Output exception as a string."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @return string representation of the exception."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String emoji \u003d Emoji.ERROR.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String msgForException \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    \" + emoji + this.getMessage() + \"\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return msgForException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xz0127"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 28
    }
  },
  {
    "path": "src/main/java/Duke/Tool/Emoji.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "package Duke.Tool;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": " * Represents emoji symbol class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": "public enum Emoji {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    CHICKEN(0x1F423),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    ERROR(0x1F616),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    SMILE(0x1F609);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    private final int code;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Construct an emoji object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param emoji unicode of the emoji."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    private Emoji(int emoji) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.code \u003d emoji;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return new String(Character.toChars(this.code));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xz0127"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 26
    }
  },
  {
    "path": "src/main/java/Duke/Tool/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "package Duke.Tool;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": " * Parse the user input into command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public static DateTimeFormatter validFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Parse the user input into different commands."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param storage class containing the data."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param ui handles system output."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param taskList a list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param command handles different commands."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void parse(Storage storage, Ui ui, TaskList taskList, Command command) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String instruction \u003d sc.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            int len \u003d instruction.length();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                if (instruction.equals(\"list\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    command.list(taskList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                } else if (instruction.equals(\"bye\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    storage.writeData(taskList.getList());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                } else if (len \u003e\u003d 5 \u0026\u0026 instruction.substring(0, 5).equals(\"done \")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    int num \u003d Integer.parseInt(instruction.substring(5));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    command.markAsDone(num, taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                } else if (len \u003e\u003d 7 \u0026\u0026 instruction.substring(0, 7).equals(\"delete \")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    int num \u003d Integer.parseInt(instruction.substring(7));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    command.delete(num, taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                } else if (len \u003e\u003d 4 \u0026\u0026 instruction.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    command.handleTodo(instruction, taskList, ui);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                } else if (len \u003e\u003d 4 \u0026\u0026 instruction.substring(0, 4).equals(\"find\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    command.find(taskList, instruction);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                } else if (len \u003e\u003d 8 \u0026\u0026 instruction.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    command.handleDeadline(instruction, taskList, ui);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                } else if (len \u003e\u003d 5 \u0026\u0026 instruction.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    command.handleEvent(instruction, taskList, ui);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    command.invalidInput();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                System.out.println(new DukeException(\"OOPS!!! I\u0027 m sorry, but you have to enter an integer.\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                System.out.println(ex);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xz0127"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 58
    }
  },
  {
    "path": "src/main/java/Duke/Tool/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "package Duke.Tool;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import Duke.Task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xz0127"
        },
        "content": " * Load and write data to data.txt."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Construct a storage class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param filePath path of the file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Find the index of nth occurrence of a string."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param str input string"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param target target string"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param n nth occurrence."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @return the index of nth occurrence of a string."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public static int ordinalIndexOf(String str, String target, int n) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        int pos \u003d str.indexOf(target);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        while (--n \u003e 0 \u0026\u0026 pos !\u003d -1)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            pos \u003d str.indexOf(target, pos + 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return pos;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Load the data from the file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @return a list of tasks containing all the data."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        DateTimeFormatter validFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            File data \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            Scanner sc \u003d new Scanner(data);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                String task \u003d sc.nextLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                char type \u003d task.charAt(0);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                char isDone \u003d task.charAt(4);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                boolean status \u003d isDone \u003d\u003d \u00271\u0027 ? true : false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                if (type \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    taskList.add(new Todo(task.substring(8), status));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                } else if (type \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    int pos \u003d ordinalIndexOf(task, \"|\", 3);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    String description \u003d task.substring(8, pos);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    String time \u003d task.substring(pos + 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    taskList.add(new Event(description, LocalDateTime.parse(time.substring(1), validFormat), status));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                } else if (type \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    int pos \u003d ordinalIndexOf(task, \"|\", 3);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    String description \u003d task.substring(8, pos);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    String by \u003d task.substring(pos + 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    taskList.add(new Deadline(description, LocalDateTime.parse(by.substring(1), validFormat), status));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            File dir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            File file \u003d new File(\"data/data.txt\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            if (!dir.exists()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                System.out.println(\"The folder is not created yet!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                dir.mkdir();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                System.out.println(\"Folder created\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            } else if (!file.exists()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                System.out.println(\"No file is found at path: \" + filePath);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    file.createNewFile();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    System.out.println(\"File created.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Write a list of tasks into the file."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param taskList a list of tasks."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void writeData(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            FileWriter myWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                myWriter.write(task.toWrite() + \"\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xz0127"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 108
    }
  },
  {
    "path": "src/main/java/Duke/Tool/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "package Duke.Tool;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import Duke.Task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": " * Handles system output."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Print welcome message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String emoji \u003d Emoji.CHICKEN.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String welcomeMessage \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    Hello! I\u0027m ByteMe \" + emoji + emoji + emoji + \"\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    What can I do for you? (Don\u0027t bite me!)\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        System.out.println(welcomeMessage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Print bye message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void sendBye() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String msgForBye \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    Bye. Hope to see you again soon! \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        System.out.println(msgForBye);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Output the number of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param i number of tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void sendCount(int i) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        System.out.println(\"    Now you have \" + i + \" tasks in the list.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Print the newly added to-do item."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param tl a list of tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param todo a to-do item."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void printAddedToDo(TaskList tl, Todo todo) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String msgForToDo \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    Got it. I \u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"      \" + todo.toString() + \"\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + tl.countNum() + \"\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        System.out.println(msgForToDo);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Print the newly added deadline item."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param tl a list of tasks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param ddl a deadline item."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void printAddedDdl(TaskList tl, Deadline ddl) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String msgForToDo \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    Got it. I \u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"      \" + ddl.toString() + \"\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + tl.countNum() + \"\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        System.out.println(msgForToDo);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Print the newly added event item."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param tl a list of tasks."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * @param event a event item."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void printAddedEvent(TaskList tl, Event event) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String msgForEvent \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    Got it. I \u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"      \" + event.toString() + \"\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + tl.countNum() + \"\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        System.out.println(msgForEvent);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     * Print loading error."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xz0127"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        System.out.println(\"Loading error!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xz0127"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 89
    }
  },
  {
    "path": "src/test/java/Duke/Task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import Duke.Tool.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void eventToWriteTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        DateTimeFormatter validFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        taskList.add(new Event(\"project meeting \", LocalDateTime.parse(\"2020-08-30 18:00\",  validFormat), false));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        TaskList tl \u003d new TaskList(taskList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String eventToWrite \u003d \"E | \" + \u00270\u0027 + \" | project meeting | 2020-08-30 18:00\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String actual \u003d tl.taskList.get(0).toWrite();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        assertEquals(eventToWrite, actual);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xz0127"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 23
    }
  },
  {
    "path": "src/test/java/Duke/Task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import Duke.Tool.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void getCountTest() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        TaskList tl \u003d new TaskList(taskList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String actualOutput \u003d tl.countNum();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String expected \u003d \"    Now you have 0 tasks in the list.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        assertEquals(expected, actualOutput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xz0127"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 27
    }
  },
  {
    "path": "src/test/java/Duke/Tool/CommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "package Duke.Tool;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import Duke.Task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import Duke.Task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": "public class CommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void deleteTest() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        DateTimeFormatter validFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        taskList.add(new Event(\"project meeting \", LocalDateTime.parse(\"2020-08-30 18:00\",  validFormat), false));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        TaskList tl \u003d new TaskList(taskList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        new Command().delete(1, tl);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        assertEquals(0, tl.getSize());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xz0127"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 23
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": "todo gym"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": "event consultation /at Wed 11am"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xz0127"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": "blah"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "xz0127": 16
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": "JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xz0127"
        },
        "content": "export JAVA_TOOL_OPTIONS"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xz0127"
        },
        "content": "# export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "xz0127": 5,
      "-": 38
    }
  }
]
