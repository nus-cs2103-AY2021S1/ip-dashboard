[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String DELIMITER \u003d \" /by \";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public static Deadline create(String args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        String[] argsList \u003d args.split(\" /by \");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        if (argsList.length \u003c 2) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throw new TaskException(\"Not enough arguments\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            return new Deadline(argsList[0], argsList[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        return printCompletionFlag() + \" | D | \" + description + \" | By: \" + deadline;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String DIVIDER \u003d \"-------------------------------------\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String HELLO_MESSAGE \u003d \"Greetings! I am Duke.\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String EXIT_MESSAGE \u003d \"Bye! See you around!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Hmm I didn\u0027t quite catch that.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static void printWithDivider(String text) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        System.out.println(DIVIDER + \"\\n\" + text + \"\\n\" + DIVIDER);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String EXIT_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String ADD_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String ADD_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String ADD_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String DELETE_TASK \u003d \"delete\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static DukeCommand getDukeCommand(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        // convert string command to command action"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        switch (input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            case LIST_COMMAND:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                return DukeCommand.LIST;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            case DELETE_TASK:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                return DukeCommand.DELETE;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            case DONE_COMMAND:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                return DukeCommand.DONE;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            case ADD_TODO:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                return DukeCommand.ADD_TODO;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            case ADD_EVENT:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                return DukeCommand.ADD_EVENT;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            case ADD_DEADLINE:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                return DukeCommand.ADD_DEADLINE;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                return DukeCommand.UNKNOWN;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static void processInput(String input) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        StringBuilder commandInput \u003d new StringBuilder();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        StringBuilder argsInput \u003d new StringBuilder();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        boolean commandFound \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        for (int i \u003d 0; i \u003c input.length(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            if (commandFound) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                argsInput.append(input.charAt(i));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            } else if (input.charAt(i) \u003d\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                commandFound \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                commandInput.append(input.charAt(i));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        String args \u003d argsInput.toString();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        DukeCommand command \u003d getDukeCommand(commandInput.toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    listTasks();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    completeTask(args);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                case ADD_TODO:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    addTodo(args);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                case ADD_EVENT:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    addEvent(args);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                case ADD_DEADLINE:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    addDeadline(args);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    deleteTask(args);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    throw new DukeUnknownCommandException(ERROR_MESSAGE + \"\\nWas the command valid?\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        } catch (DukeUnknownCommandException | DukeIncompleteCommandException | DukeInvalidArgumentException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            printWithDivider(e.getMessage());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static void listTasks() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        StringBuilder rv \u003d new StringBuilder(\"You have \" + taskList.size() + \" items.\\n\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            rv.append(\"\\n\").append(i + 1).append(\": \").append(taskList.get(i).toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        printWithDivider(rv.toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static void completeTask(String doneIndex)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            int index \u003d Integer.parseInt(doneIndex) - 1;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            Task task \u003d taskList.get(index).completeTask();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            printWithDivider(\"Nice! I\u0027ve marked this task as done:\\n\" + task.toString());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throw new DukeInvalidArgumentException(ERROR_MESSAGE + \"\\nDid you provide a valid index?\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static void addTodo(String description) throws DukeIncompleteCommandException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            taskList.add(todo);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            printWithDivider(\"Successfully added todo:\\n\" + todo.toString());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        } catch (TaskException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throw new DukeIncompleteCommandException(ERROR_MESSAGE"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    + \"\\nDid you provide any description for this todo task?\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static void addEvent(String args) throws DukeIncompleteCommandException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            Event event \u003d Event.create(args);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            taskList.add(event);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            printWithDivider(\"Successfully added event:\\n\" + event.toString());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        } catch (TaskException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throw new DukeIncompleteCommandException(ERROR_MESSAGE"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    + \"\\nDid you provide a date and description for this event?\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static void addDeadline(String args) throws DukeIncompleteCommandException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            Deadline deadline \u003d Deadline.create(args);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            taskList.add(deadline);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            printWithDivider(\"Successfully added deadline:\\n\" + deadline.toString());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        } catch (TaskException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throw new DukeIncompleteCommandException(ERROR_MESSAGE"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                    + \"\\nDid you provide a deadline and description for this deadline?\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static void deleteTask(String deleteIndex)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            int index \u003d Integer.parseInt(deleteIndex) - 1;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            Task task \u003d taskList.remove(index);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            printWithDivider(\"Noted. I\u0027ve deleted this task:\\n\" + task.toString());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throw new DukeInvalidArgumentException(ERROR_MESSAGE + \"\\nDid you provide a valid index?\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        printWithDivider(HELLO_MESSAGE);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            if (input.equals(EXIT_COMMAND)) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                printWithDivider(EXIT_MESSAGE);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "                processInput(input);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 164,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "public enum DukeCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    EXIT, LIST,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    DONE, DELETE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    ADD_TODO, ADD_EVENT, ADD_DEADLINE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    UNKNOWN;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 6
    }
  },
  {
    "path": "src/main/java/DukeIncompleteCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "public class DukeIncompleteCommandException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public DukeIncompleteCommandException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 5
    }
  },
  {
    "path": "src/main/java/DukeInvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "public class DukeInvalidArgumentException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public DukeInvalidArgumentException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 5
    }
  },
  {
    "path": "src/main/java/DukeUnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "public class DukeUnknownCommandException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public DukeUnknownCommandException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String DELIMITER \u003d \" /at \";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private String dateInfo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private Event(String description, String dateInfo) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        this.dateInfo \u003d dateInfo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public static Event create(String args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        String[] argsList \u003d args.split(DELIMITER);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        if (argsList.length \u003c 2) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throw new TaskException(\"Not enough arguments\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            return new Event(argsList[0], argsList[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        return printCompletionFlag() + \" | E | \" + description + \" | At: \" + dateInfo;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 23
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String COMPLETE \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    private static final String NOT_COMPLETE \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    protected boolean isComplete \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    protected Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "            throw new TaskException(\"Did you provide any description for this todo task?\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public Task completeTask() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        isComplete \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public Task resetTask() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        isComplete \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    protected String printCompletionFlag() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        String completionFlag \u003d isComplete ? COMPLETE : NOT_COMPLETE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        return \"[\" + completionFlag + \"]\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        return printCompletionFlag() + \" | \" + description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 34
    }
  },
  {
    "path": "src/main/java/TaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "public class TaskException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public TaskException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 5
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "        return printCompletionFlag() + \" | T | \" + description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "this should be rejected"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "todo test"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "event meeting /at Mon"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "event lunch with friends /at Mon 3 pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "event dinnering"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "event meeting /by Mon"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "deadline quiz1 /by Tues"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "deadline quiz2 submission /by Tues 2 pm"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "deadline quiz2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "deadline quiz1 /at Tues"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "delete 100"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 32
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "SET JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lowjiefeng1998"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "lowjiefeng1998": 3,
      "-": 20
    }
  }
]
