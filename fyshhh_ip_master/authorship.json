[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    id \"java-test-fixtures\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    mainClassName \u003d \"Main\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    archiveBaseName \u003d \"olivia\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 19,
      "-": 42
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "*Olivia* is an interactive chat bot geared towards helping you manage tasks that need to be done."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "*Olivia* provides a compromise between efficiency and elegance, by employing both a"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "**Command Line Interface** (CLI) and **Graphical User Interface** (GUI); however, she is geared"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "towards faster typists, and does not provide means of input beyond the command line."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "## Quick start"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "1. Ensure you have Java *11* or above installed in your Computer."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "1. Download the latest `Olivia.jar` from [here](https://github.com/fyshhh/ip/releases) and save it to"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "the folder you want to use as the **home folder** for *Olivia*."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "1. Double-click the file or run the command `java -jar Olivia.jar` to start the app. The GUI similar"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "   ![Ui](./Ui.png)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "1. Type the command in the command box and press Enter to execute it."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "   Some example commands you can try:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "   * **`list`** : Lists all contacts."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "   * **`event`**`meeting /at 12-12-2020 1212` : Adds an event named `meeting` to Olivia."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "   * **`delete`**`3` : Deletes the 3rd task shown in the current list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "   * **`bye`** : Exits the app."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "1. Type the command in the command box and press Enter to execute it. Refer to the [Features](#features)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "below for details of each command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "## Tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Tasks are grouped into three different types, all three having a compulsory description field. Tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "also have a state, where they are either completed or not. The nomenclature chosen for the tasks are"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "completely arbitrary and thus have no bearing on the actual performance of *Olivia*. Thus, users need"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "not feel pressured into creating the \"correct\" task type."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "### ToDo"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "ToDo represents a simple task that has no additional state."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "### Deadline"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Deadline represents a task with an additional time state, signifying when the deadline should be"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "completed by."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "### Event"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Event also represents a task with an additional time state, signifying when the event takes place."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "## Commands"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "**Notes about the command format:**\u003cbr\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "  e.g. in `event DESCRIPTION /at DATE`, `DESCRIPTION` and `DATE` are parameters"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "  which can be used as `event meeting /at 12-12-2020 1212`."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * Items in square brackets are optional.\u003cbr\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "* The date and time format is `DD-MM-YYYY HHmm`."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "### Adding a ToDo task - `todo`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Creates a ToDo task and adds it to Olivia."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Format: `todo DESCRIPTION`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Examples: "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "* `todo buy a birthday cake`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "### Adding a Deadline task - `deadline`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Creates a Deadline task and adds it to Olivia."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Format: `deadline DESCRIPTION /by DATE`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Examples: "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "* `deadline buy birthday present /by 12-12-2020 1212 `"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "### Adding an Event task - `event`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Creates an Event task and adds it to Olivia."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Format: `event n/DESCRIPTION /at EVENT`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Examples: "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "* `event birthday party /at 12-12-2020 1212`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "### Listing all tasks - `list`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Shows a list of all tasks currently stored in Olivia."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "### Deleting a task - `delete`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Deletes the specified task from Olivia."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "* Deletes the task at the specified `INDEX`."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "* The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "* The index must be a positive integer 1, 2, 3, …​"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Examples: "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "* `delete 2` deletes the second task in Olivia."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "### Marking a task as done - `done`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Marks the specified task as done in Olivia."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Format: `done INDEX`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "* Marks the task at the specified `INDEX` as done."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "* The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "* The index must be a positive integer 1, 2, 3, …​"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "* `done 2` marks the second task in Olivia as done."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "### Searching for a task - `find`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Finds tasks whose name matches the given keyword."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "* The search is case-sensitive. e.g `meeting` will not match `Meeting`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "* Only full words will be matched e.g. `meet` will not match `meeting`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "* `find meeting` returns `meeting` and `important meeting`."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "### Updating a task - `update`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Updates the specified task in Olivia."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Format: `update INDEX [/description DESCRIPTION] [/date DATE]`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "* Edits the task at the specified `INDEX`. The index refers to the index number shown"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "in the displayed task list. The index **must be a positive integer** 1, 2, 3, …​"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "* One of the optional fields must be provided."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "* Existing values will be updated to the input values."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "* `update 2 /description meal` updates the second task in Olivia\u0027s description to `meal`."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "### Exits the program - `bye`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "Format: `bye`"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 144,
      "-": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * The main entry point to the application."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * This is a workaround for the following error when OliviaGui is made the"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * entry point of the application:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " *     Error: JavaFX runtime components are missing, and are required to run this application"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * The reason is that OliviaGui extends Application. In that case, the"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * LauncherHelper will check for the javafx.graphics module to be present"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * find the javafx.graphics module, and so the launch is aborted."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * By having a separate main class (Main) that doesn\u0027t extend Application"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * to be the entry point of the application, we avoid this issue."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * Credit to AB3\u0027s Main.java."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        OliviaGui.main(args);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 26
    }
  },
  {
    "path": "src/main/java/Olivia.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.logic.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.logic.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.Wrapper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.util.OliviaException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * Olivia is a bot that functions as a user\u0027s task manager."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class Olivia {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private static final String FILEPATH \u003d \"./data/olivia.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private final Wrapper wrapper;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Constructor that creates a Olivia object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public Olivia() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Storage storage \u003d new Storage(FILEPATH);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        TaskList tasks \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            tasks \u003d TaskList.parse(storage.load());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            ui.showLoaded(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } catch (OliviaException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            this.wrapper \u003d new Wrapper(storage, tasks, ui);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            this.parser \u003d new Parser(wrapper);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Generates a welcome message for the user, where its content depends on"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * whether a text file can be found."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return output String containing the welcome message."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String welcome() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        String ret \u003d wrapper.getUi().welcome();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            TaskList tasks \u003d TaskList.parse(wrapper.getStorage().load());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            ret +\u003d wrapper.getUi().showLoaded(tasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } catch (OliviaException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            ret +\u003d wrapper.getUi().showError(e);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Checks if Olivia should terminate."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a boolean determining if Olivia should terminate."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public boolean shouldExit() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return wrapper.isShouldExit();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public Parser getParser() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return this.parser;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public Storage getStorage() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return this.wrapper.getStorage();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return this.wrapper.getTaskList();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return this.wrapper.getUi();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 79,
      "-": 1
    }
  },
  {
    "path": "src/main/java/OliviaGui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "// Credit: Chan Jun Da"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.logic.Parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.ui.DialogBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.ui.ViewPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * OliviaGui handles the frontend of the bot."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class OliviaGui extends Application {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/gowon.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private final Image oliviaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/olivia.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private Olivia olivia;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Adds a DialogBox containing the introductory message to the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private void displayIntro() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                DialogBox.getOliviaDialog(olivia.welcome(), new ImageView(oliviaImage)));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Handles the user\u0027s input to Olivia, adding DialogBoxes containing the input"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * as well as Olivia\u0027s return."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        String userText \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Parser parser \u003d olivia.getParser();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        String oliviaText \u003d parser.parse(userInput.getText());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(userImage)),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                DialogBox.getOliviaDialog(oliviaText, new ImageView(oliviaImage))"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (olivia.shouldExit()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            Stage stage \u003d (Stage) userInput.getScene().getWindow();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            stage.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        scrollPane \u003d new ViewPane();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        stage.setTitle(\"Olivia\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        stage.setMinHeight(650.0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        stage.setMinWidth(420.0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        mainLayout.setPrefSize(420.0, 650.0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        userInput.setPrefWidth(345.0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        sendButton.setOnMouseClicked(event -\u003e handleUserInput());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        userInput.setOnAction(event -\u003e handleUserInput());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        dialogContainer.heightProperty().addListener(observable -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        olivia \u003d new Olivia();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        displayIntro();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Application.launch(args);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 117
    }
  },
  {
    "path": "src/main/java/olivia/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.function.BiFunction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.Wrapper;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * Command interface that is implemented by all other Commands. Handles commands by taking"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * in a Wrapper, which wraps the Storage, TaskList and Ui classes, and a List of Strings,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * which represents the further arguments of the command, if applicable. Returns a String"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * representing the message that should be displayed to the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public interface Command extends BiFunction\u003cWrapper, List\u003cString\u003e, String\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    String apply(Wrapper wrapper, List\u003cString\u003e input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 19
    }
  },
  {
    "path": "src/main/java/olivia/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.logic.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.Wrapper;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * DeadlineCommand class that represents a Deadline task being added to the"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * TaskList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class DeadlineCommand implements Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Creates and stores a Deadline object in the TaskList if the input is valid."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param wrapper contains Olivia\u0027s Storage, TaskList and Ui objects."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param input list that contains the input arguments for the command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return output String to the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String apply(Wrapper wrapper, List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Storage storage \u003d wrapper.getStorage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        TaskList tasks \u003d wrapper.getTaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Ui ui \u003d wrapper.getUi();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        StringBuilder description \u003d new StringBuilder();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        StringBuilder time \u003d new StringBuilder();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (input.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"A deadline requires a description and a time!\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        while (!input.get(i).equals(\"/by\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            description.append(input.get(i++)).append(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            if (i \u003d\u003d input.size()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                return \"deadline requires the use of \\\"/by\\\"!\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"The description of a deadline cannot be empty!\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        while (++i \u003c input.size()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            time.append(input.get(i)).append(\" \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (time.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"The time of a deadline cannot be empty!\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        description.deleteCharAt(description.length() - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        time.deleteCharAt(time.length() - 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            task \u003d new Deadline(description.toString(), time.toString(), false);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            tasks.addTask(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return ui.showAdd(tasks, task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"Error: Please use the following format instead:\\ndd-MM-yyyy HHmm\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 66
    }
  },
  {
    "path": "src/main/java/olivia/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.logic.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.Wrapper;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String apply(Wrapper wrapper, List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Storage storage \u003d wrapper.getStorage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        TaskList tasks \u003d wrapper.getTaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Ui ui \u003d wrapper.getUi();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (input.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"Please select a task to mark as completed!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            index \u003d Integer.parseInt(input.get(0));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"Please choose an integer value!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"Please choose an integer greater than 0!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } else if (index \u003e tasks.size()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"Your task list is not that long yet!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Task task \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        tasks.deleteTask(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return ui.showDelete(tasks, task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 38
    }
  },
  {
    "path": "src/main/java/olivia/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.logic.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.Wrapper;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * DoneCommand class that represents a task being marked as completed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Marks a task indicated by the given index in the TaskList as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param wrapper contains Olivia\u0027s Storage, TaskList and Ui objects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param input list that contains the input arguments for the command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return output String to the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String apply(Wrapper wrapper, List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Storage storage \u003d wrapper.getStorage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        TaskList tasks \u003d wrapper.getTaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Ui ui \u003d wrapper.getUi();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (input.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"Please select a task to mark as completed!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            index \u003d Integer.parseInt(input.get(0));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"Please choose an integer value!\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"Please choose an integer greater than 0!\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } else if (index \u003e tasks.size()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"Your task list is not that long yet!\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (tasks.getTask(index).isComplete()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"That task has already been completed!\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        tasks.completeTask(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return ui.showDone(tasks.getTask(index));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 50
    }
  },
  {
    "path": "src/main/java/olivia/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.logic.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.Wrapper;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * EventCommand class that represents an Event task being added to the"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * TaskList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class EventCommand implements Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Creates and stores an Event object in the TaskList if the input is valid."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param wrapper contains Olivia\u0027s Storage, TaskList and Ui objects."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param input list that contains the input arguments for the command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return output String to the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String apply(Wrapper wrapper, List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Storage storage \u003d wrapper.getStorage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        TaskList tasks \u003d wrapper.getTaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Ui ui \u003d wrapper.getUi();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        StringBuilder description \u003d new StringBuilder();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        StringBuilder time \u003d new StringBuilder();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (input.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"An event requires a description and a time!\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        while (!input.get(i).equals(\"/at\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            description.append(input.get(i++)).append(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            if (i \u003d\u003d input.size()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                return \"event requires the use of \\\"/at\\\"!\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"The description of an event cannot be empty!\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        while (++i \u003c input.size()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            time.append(input.get(i)).append(\" \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (time.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"The time of an event cannot be empty!\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        description.deleteCharAt(description.length() - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        time.deleteCharAt(time.length() - 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            task \u003d new Event(description.toString(), time.toString(), false);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            tasks.addTask(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return ui.showAdd(tasks, task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"Error: Please use the following format instead:\\ndd-MM-yyyy HHmm\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 66
    }
  },
  {
    "path": "src/main/java/olivia/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.Wrapper;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * ExitCommand class that terminates the current instance of Olivia."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class ExitCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Terminates the current instance of Olivia by indicating to the"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Wrapper that an ExitCommand has been sent."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param wrapper contains Olivia\u0027s Storage, TaskList and Ui objects."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param input list that contains the input arguments for the command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *              should be empty in this case."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return output String to the user; empty in this case."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String apply(Wrapper wrapper, List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        wrapper.exit();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 27
    }
  },
  {
    "path": "src/main/java/olivia/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.Wrapper;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * FindCommand class that searches for tasks containing the keyword, compiling it"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * and returning it as a list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Searches for tasks that contains the input keyword, then returns them in a list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param wrapper contains Olivia\u0027s Storage, TaskList and Ui objects."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param input list that contains the input arguments for the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return output String to the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String apply(Wrapper wrapper, List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        TaskList tasks \u003d wrapper.getTaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Ui ui \u003d wrapper.getUi();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (input.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"Please use a keyword you\u0027d like to search with!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (input.size() \u003e 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"Please use only one keyword!\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        List\u003cTask\u003e matches \u003d tasks.search(input.get(0));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return ui.showFind(matches);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 38
    }
  },
  {
    "path": "src/main/java/olivia/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.Wrapper;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * ListCommand class that lists the tasks in Olivia\u0027s TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Lists the tasks in Olivia\u0027s TaskList numerically."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param wrapper contains Olivia\u0027s Storage, TaskList and Ui objects."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param input list that contains the input arguments for the command;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *              should be empty in this case."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return output String to the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String apply(Wrapper wrapper, List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        TaskList tasks \u003d wrapper.getTaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Ui ui \u003d wrapper.getUi();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return ui.showList(tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 30
    }
  },
  {
    "path": "src/main/java/olivia/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.logic.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.Wrapper;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.task.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * ToDoCommand class that represents a Deadline task being added to the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class ToDoCommand implements Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Creates and stores a ToDo object in the TaskList if the input is valid."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param wrapper contains Olivia\u0027s Storage, TaskList and Ui objects."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param input list that contains the input arguments for the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return output String to the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String apply(Wrapper wrapper, List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Storage storage \u003d wrapper.getStorage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        TaskList tasks \u003d wrapper.getTaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Ui ui \u003d wrapper.getUi();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        StringBuilder description \u003d new StringBuilder();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (input.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"The description of a todo cannot be empty!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        for (String s : input) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            description.append(s).append(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        description.deleteCharAt(description.length() - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Task task \u003d new ToDo(description.toString(), false);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return ui.showAdd(tasks, task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 45
    }
  },
  {
    "path": "src/main/java/olivia/command/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.logic.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.Wrapper;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.task.ToDo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * UpdateCommand class that represents one of a task\u0027s fields being updated."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class UpdateCommand implements Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Updates one of the fields of the task indicated by the given index"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * in the TaskList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param wrapper contains Olivia\u0027s Storage, TaskList and Ui objects."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param input list that contains the input arguments for the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return output String to the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String apply(Wrapper wrapper, List\u003cString\u003e input) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Storage storage \u003d wrapper.getStorage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        TaskList tasks \u003d wrapper.getTaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Ui ui \u003d wrapper.getUi();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (input.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"Please select a task to update!\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            index \u003d Integer.parseInt(input.get(0));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"Please choose an integer value!\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"Please choose an integer greater than 0!\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } else if (index \u003e tasks.size()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"Your task list is not that long yet!\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        StringBuilder updatedText \u003d new StringBuilder();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Task task \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        input.remove(0);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (input.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"You can\u0027t update a task with an empty description!\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } else if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            for (String s : input) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                updatedText.append(s).append(\" \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            updatedText.deleteCharAt(updatedText.length() - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            task.update(updatedText.toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            String specifier \u003d input.remove(0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            if (specifier.equals(\"/description\") || specifier.equals(\"/time\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                for (String s : input) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    updatedText.append(s).append(\" \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                updatedText.deleteCharAt(updatedText.length() - 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                deadline.update(updatedText.toString(), specifier);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            String specifier \u003d input.remove(0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            if (specifier.equals(\"/description\") || specifier.equals(\"/time\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                for (String s : input) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    updatedText.append(s).append(\" \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                updatedText.deleteCharAt(updatedText.length() - 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                event.update(updatedText.toString(), specifier);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return ui.showUpdate(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 83
    }
  },
  {
    "path": "src/main/java/olivia/logic/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.command.DeadlineCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.command.DeleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.command.DoneCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.command.EventCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.command.ExitCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.command.FindCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.command.ListCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.command.ToDoCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.command.UpdateCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.Wrapper;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * Parser class that parses the user input, finds the corresponding"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * command, and returns an output String to be printed by the GUI."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /** Hashmap that maps an input string to a Command object */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public static final Map\u003cString, Command\u003e COMMANDS \u003d Map.of("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            \"bye\", new ExitCommand(),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            \"done\", new DoneCommand(),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            \"find\", new FindCommand(),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            \"list\", new ListCommand(),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            \"todo\", new ToDoCommand(),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            \"event\", new EventCommand(),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            \"delete\", new DeleteCommand(),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            \"update\", new UpdateCommand(),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            \"deadline\", new DeadlineCommand()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    );"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /** Wrapper that contains Olivia\u0027s Storage, TaskList and Ui */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private final Wrapper wrapper;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Constructor that creates a Parser object with Olivia\u0027s current Wrapper.."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param wrapper contains Olivia\u0027s Storage, TaskList and Ui objects."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public Parser(Wrapper wrapper) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.wrapper \u003d wrapper;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Parses the input String from the user and activates the corresponding command."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param fullCommand input String from the user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return output String to the user."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String parse(String fullCommand) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        String[] parsedString \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        String command \u003d parsedString[0];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (Optional.ofNullable(COMMANDS.get(command)).isEmpty()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return \"I\u0027m sorry, I don\u0027t know what that means...\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        List\u003cString\u003e inputs \u003d new ArrayList\u003c\u003e(List.of(parsedString));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        inputs.remove(0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return COMMANDS.get(command).apply(this.wrapper, inputs);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 69
    }
  },
  {
    "path": "src/main/java/olivia/logic/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.util.OliviaException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * Storage class that handles the reading and writing process from a designated text file,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * referred to as a save file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /** Filepath of save file. */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Constructor that creates a Storage object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param filePath the filepath task sessions will be saved in"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Reads the save file and returns the List of Tasks in it. Throws a DukeException"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * if the file is not found and proceeds to create one, or if a file cannot be created."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a List of Tasks in the save file"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @throws OliviaException thrown if a save file is not found or cannot be created"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public List\u003cTask\u003e load() throws OliviaException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        var list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(this.filePath));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            br.lines().forEach(str -\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    list.add(Task.parse(str));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                } catch (OliviaException de) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    System.out.println(\"    Error: \" + de.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            });"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            new File(\"./data\").mkdirs();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                new File(\"./data/olivia.txt\").createNewFile();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            } catch (IOException ioe) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new OliviaException("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        \"Sorry, the file couldn\u0027t be created!\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                                + \"Please try again.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            throw new OliviaException("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    \"    No save file found in [root]/data/olivia.txt.\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            + \"    A file has been created by default.\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            + \"    If you\u0027d like to import one, simply copy the file\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                            + \"    over to the above location and rerun me!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Writes the current TaskList to a save file."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param tasks TaskList containing Tasks to write."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        assert (tasks !\u003d null);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        String toWrite \u003d tasks.stream()"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                .map(Task::toSave)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                .reduce((x, y) -\u003e x + \"\\n\" + y)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                .orElse(\"\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"./data/olivia.txt\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            fw.write(toWrite);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } catch (IOException ignored) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 93
    }
  },
  {
    "path": "src/main/java/olivia/resource/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.resource;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * TaskList class that stores the Tasks in the Duke object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Overloaded constructor that creates an empty TaskList object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Overloaded constructor that takes in a List of Tasks and creates a TaskList object"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * and populates it with the Tasks in the List."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param tasks a List containing Tasks to store in the TaskList"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Adds a Task to the TaskList."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param task the Task to be added."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        assert (task !\u003d null);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Completes a Task in the TaskList."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param index the index of the Task to be completed."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void completeTask(int index) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.tasks.get(index - 1).complete();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Deletes a Task in the TaskList."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param index the index of the Task to be deleted."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.tasks.remove(index - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Retrieves a Task in the TaskList."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param index the index of the Task to be retrieved."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return the Task retrieved at the associated index."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return this.tasks.get(index - 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Parses a given List of Tasks, returning a TaskList containing the Tasks found."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param tasks the List of Tasks to parse"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a TaskList object containing the Tasks in the List"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public static TaskList parse(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return new TaskList(tasks);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a List of Tasks with descriptions that match the given keyword."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param keyword a String representing the keyword to search for"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a List of Tasks with descriptions that match the given keyword"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public List\u003cTask\u003e search(String keyword) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return tasks.stream()"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                .filter(t -\u003e Arrays.asList(t.getDescription().split(\" \"))"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                        .contains(keyword))"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a Stream of the Tasks in the TaskList."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a Stream of the Tasks in the TaskList"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public Stream\u003cTask\u003e stream() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return this.tasks.stream();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns the number of Tasks in the TaskList."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return the number of Tasks in the TaskList"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 125
    }
  },
  {
    "path": "src/main/java/olivia/resource/Wrapper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.resource;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.logic.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * Wrapper class that stores Olivia\u0027s Storage, TaskList and Ui objects,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * as well as a boolean to check if ExitCommand has been called."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class Wrapper {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private boolean shouldExit \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Constructor that creates a Wrapper object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param storage Olivia\u0027s Storage object; controls the logic behind"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *                writing and reading from text file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param taskList Olivia\u0027s TaskList object; manages the tasks in the"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *                 list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param ui Olivia\u0027s Ui object; manages the text to be returned to"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *           the GUI."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public Wrapper(Storage storage, TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public Storage getStorage() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return this.storage;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return this.ui;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Sets the shouldExit boolean to true to indicate that ExitCommand"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * has been called."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.shouldExit \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public boolean isShouldExit() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return this.shouldExit;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 59
    }
  },
  {
    "path": "src/main/java/olivia/task/DatedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * DatedTask class that represents a Task with a Date."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public abstract class DatedTask extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /** Constant Strings to check which field to change */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private static final String DESCRIPTION \u003d \"/description\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private static final String TIME \u003d \"/time\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    protected LocalDateTime time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Constructor that creates a DatedTask object that has a description of the"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * task, a tag representing the type of task, a time representing the date of the task,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * and whether the task has been completed. Protected so only subclasses of DatedTask"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * can access and create a DatedTask object, to prevent any instances from being"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * directly created."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param description a String representing the description of the task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param tag a String representing the type of task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param time a LocalDateTime representing the date and time of the task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param isDone a boolean representing whether the task has been completed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    protected DatedTask(String description, String tag, String time, boolean isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        super(description, \"E\", isDone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.time \u003d LocalDateTime.parse(time,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Updates the description or the time of the task to the given String, depending"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * on the field selected."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param str a String representing the description or time of the task to update to."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param field a String representing the field to update."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void update(String str, String field) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        switch (field) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        case DESCRIPTION:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            super.update(str);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        case TIME:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            this.time \u003d LocalDateTime.parse(str,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 58
    }
  },
  {
    "path": "src/main/java/olivia/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * Deadline class that represents a Task with a deadline. Extends from the Task class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class Deadline extends DatedTask {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Constructor that creates a Deadline object that has a description of the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * task, the date and time of the deadline, and whether the task has been"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * completed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param description a String representing the description of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param deadline a LocalDateTime representing the date and time of the deadline"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param isDone a boolean representing whether the task has been completed"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @throws DateTimeParseException exception thrown if input date was not"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *                                correctly formatted"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public Deadline(String description, String deadline, boolean isDone)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            throws DateTimeParseException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        super(description, \"D\", deadline, isDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a String formatted to how an Deadline should be saved in the associated"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * save file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a formatted String to be written to the save file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return String.format(\"%s | %s\", super.toSave(),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                this.time.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return String.format(\"%s (by: %s)\", super.toString(),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                this.time.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\")));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 48
    }
  },
  {
    "path": "src/main/java/olivia/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * Event class that represents a Task that is an event. Extends from the Task class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class Event extends DatedTask {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Constructor that creates an Event object that has a description of the"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * task, the date and time of the event, and whether the task has been"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * completed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param description a String representing the description of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param time a LocalDateTime representing the date and time of the event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param isDone a boolean representing whether the task has been completed"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @throws DateTimeParseException exception thrown if input date was not"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *                                correctly formatted"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public Event(String description, String time, boolean isDone)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            throws DateTimeParseException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        super(description, \"E\", time, isDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a String formatted to how an Event should be saved in the associated"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * save file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a formatted String to be written to the save file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return String.format(\"%s | %s\", super.toSave(),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                this.time.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return String.format(\"%s (at: %s)\", super.toString(),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                this.time.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\")));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 48
    }
  },
  {
    "path": "src/main/java/olivia/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.util.OliviaException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * Task class that represents a task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    protected String tag;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Constructor that creates a Task object that has a description of the"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * task, a tag representing the type of task, and whether the task has been"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * completed. Protected so only subclasses of Task can access and create a"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Task object, to prevent any instances from being directly created."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param description a String representing the description of the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param tag a String representing the type of task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param isDone a boolean representing whether the task has been completed"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    protected Task(String description, String tag, boolean isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Marks the task as complete by changing the isDone boolean to true."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void complete() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public boolean isComplete() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Parses a string that has been validated to contain the necessary information,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * then returning a Task matching the information. Throws an exception if the tag"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * given is incorrect, or if too few arguments are given."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param str a String containing the necessary information to create a Task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a Task object with the information stated in the String"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @throws OliviaException thrown if the tag given is incorrect, or if too few arguments"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *                       are given"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public static Task parse(String str) throws OliviaException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        String[] input \u003d str.split(Pattern.quote(\" | \"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            boolean isDone \u003d input[1].equals(\"1\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            switch (input[0]) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                return new ToDo(input[2], isDone);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                return new Deadline(input[2], input[3], isDone);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                return new Event(input[2], input[3], isDone);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                throw new OliviaException(\"One or more Tasks are wrongly tagged!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException aiooe) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            throw new OliviaException(\"One or more Tasks have too few arguments!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Updates the description of the task to the given String."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param str a String representing the description of the task to update to."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void update(String str) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.description \u003d str;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a String formatted to how a Task should be saved in the associated"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * save file."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a formatted String to be written to the save file"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return String.format(\"%s | %s | %s\", this.tag, isDone ? \"1\" : \"0\", this.description);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return String.format(\"[%s][%s] %s\", this.tag, this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 107
    }
  },
  {
    "path": "src/main/java/olivia/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * ToDo class that represents a Task that has to be done. Extends from the Task class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Constructor that creates a ToDo object that has a description of the"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * task and whether the task has been completed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param description a String representing the description of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param isDone a boolean representing whether the task has been completed"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        super(description, \"T\", isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 21
    }
  },
  {
    "path": "src/main/java/olivia/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "// Credit: Chan Jun Da"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * DialogBox class that represents the messages sent by and to the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /** default spacing between dialog and text box */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private static final double SPACING \u003d 10;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Constructor that creates a DialogBox object, with a text message depending on"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * the input, an image of the sender of the message, and a boolean that determines"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * if the text box should be oriented leftwards or rightwards."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param text a String representing the message to be shown on the text box."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param imageview an ImageView representing a picture of the sender of the message."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param left a boolean representing if the text box should be oriented leftwards."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private DialogBox(String text, ImageView imageview, boolean left) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        TextBox output \u003d left"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                ? TextBox.leftwardTextBox(text)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                : TextBox.rightwardTextBox(text);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        imageview.setClip(new Circle(50, 50, 50));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        imageview.setFitWidth(100.0);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        imageview.setFitHeight(100.0);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        getChildren().addAll(output, imageview);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        setSpacing(SPACING);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Flips the alignment of the DialogBox, moving it such that it better reflects a"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * two-way dialogue."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a flipped DialogBox."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private DialogBox flip() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a DialogBox that formats the user\u0027s message and picture into a text message."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param message a String representing the user\u0027s message."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param iv an ImageView representing the user\u0027s picture."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a DialogBox with the user\u0027s message and picture in the format of a text message."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public static DialogBox getUserDialog(String message, ImageView iv) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return new DialogBox(message, iv, false);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a DialogBox that formats Olivia\u0027s message and picture into a text message."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param message a String representing the Olivia\u0027s message."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param iv an ImageView representing the Olivia\u0027s picture."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a DialogBox with the Olivia\u0027s message and picture in the format of a text message."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public static DialogBox getOliviaDialog(String message, ImageView iv) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return new DialogBox(message, iv, true).flip();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 81
    }
  },
  {
    "path": "src/main/java/olivia/ui/TextBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "// Credit: Chan Jun Da"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.shape.Rectangle;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.shape.SVGPath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * A JavaFX node representing a text box as is usually seen in apps like Telegram and Messenger."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class TextBox extends VBox {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /** default radius of round corners in text box */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private static final double CORNER_RADIUS \u003d 10;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /** default top/bottom padding */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private static final double LABEL_PADDING_VERTICAL \u003d 5;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /** default left-right padding */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private static final double LABEL_PADDING_HORIZONTAL \u003d 10;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /** SVG path for left triangle */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private static final String PATH_LEFT_TRIANGLE \u003d \"M0,0 L10,10 L10,0 L0,0\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /** SVG path for right triangle */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private static final String PATH_RIGHT_TRIANGLE \u003d \"M0,0 L-10,10 L-10,0 L0,0\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /** vertical gap between text box peak and circle image peak */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private static final double BUFFER_TOP \u003d 10;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /** leftward box colour */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private static final Color LEFTWARD_COLOR \u003d Color.GAINSBORO;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /** rightward box colour */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private static final Color RIGHTWARD_COLOR \u003d Color.DARKSEAGREEN;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Constructs a text box with the relevant text placed in a chat bubble."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * The text box can be constructed to be leftward or rightward facing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param text text to be placed in the text box."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param left boolean for whether the text box should be left facing (or right otherwise)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private TextBox(String text, boolean left) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Label textLabel \u003d new Label(text);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        textLabel.setWrapText(true);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        textLabel.setBackground(getDefaultBackground(left));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        textLabel.setPadding(getDefaultPadding());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        //Adds a small triangle to the appropriate side to mimic a text box"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        HBox hBox \u003d new HBox();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        SVGPath lowerTriangle \u003d new SVGPath();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (left) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            lowerTriangle.setContent(PATH_LEFT_TRIANGLE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            lowerTriangle.setFill(LEFTWARD_COLOR);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            hBox.getChildren().addAll(lowerTriangle, textLabel);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            lowerTriangle.setContent(PATH_RIGHT_TRIANGLE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            lowerTriangle.setFill(RIGHTWARD_COLOR);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            hBox.getChildren().addAll(textLabel, lowerTriangle);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        hBox.setSpacing(-1); //forces both shapes to overlap with each other"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        Rectangle verticalGap \u003d new Rectangle(0, BUFFER_TOP);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        getChildren().addAll(verticalGap, hBox);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /** Returns a background to fill up the text box with a colour and shape */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private Background getDefaultBackground(boolean left) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        CornerRadii cornerRadii \u003d left"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                ? new CornerRadii(0, CORNER_RADIUS,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                CORNER_RADIUS, CORNER_RADIUS, false)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                : new CornerRadii(CORNER_RADIUS, 0,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                CORNER_RADIUS, CORNER_RADIUS, false);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        BackgroundFill backgroundFill \u003d new BackgroundFill("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                left ? LEFTWARD_COLOR : RIGHTWARD_COLOR,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                cornerRadii,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                new Insets(0));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return new Background(backgroundFill);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /** Returns an Insets object which represents the padding of the text in the label */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    private Insets getDefaultPadding() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return new Insets(LABEL_PADDING_VERTICAL, LABEL_PADDING_HORIZONTAL,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                LABEL_PADDING_VERTICAL, LABEL_PADDING_HORIZONTAL);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a JavaFX text box node with the contained text and leftward facing."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param text text to be contained within the text box."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a JavaFX node of a text box with the contained text."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public static TextBox leftwardTextBox(String text) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return new TextBox(text, true);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a JavaFX text box node with the contained text and rightward facing."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param text text to be contained within the text box."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a JavaFX node of a text box with the contained text."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public static TextBox rightwardTextBox(String text) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return new TextBox(text, false);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 110
    }
  },
  {
    "path": "src/main/java/olivia/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.resource.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.util.OliviaException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * Ui class that handles the user interaction component of the bot."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a String that represents if the given save file has loaded successfully"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * and the tasks found in the save file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param tasks a TaskList containing the tasks in the save file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a String that represents the tasks in the TaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String showLoaded(TaskList tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        StringBuilder ret \u003d new StringBuilder(\"Your current tasks are: \\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            ret.append(\"... empty! Good work!\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            while (tasks.size() \u003e i) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                ret.append(String.format(\"%d. %s\\n\", ++i, tasks.getTask(i).toString()));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return ret.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a String that represents if a Task has successfully been added to the"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * TaskList and the current number of Tasks in it."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param tasks the TaskList associated with the current Duke object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param task the Task that was added to the TaskList."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a String with the added Task and the current number of Tasks in the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String showAdd(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return String.format(\"Noted. I\u0027ve added this task:\\n%s\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                + \"You now have %d %s in your list.\", task.toString(),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                tasks.size(), tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a String that represents if a Task has been marked as complete."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param task the Task that was marked as complete."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a String denoting that the specified Task has been marked."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String showDone(Task task) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return String.format(\"Nice! I\u0027ve marked this task as done:\\n%s\\n\","
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                task.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a String that represents if a Task has successfully been deleted"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * from the TaskList and the current number of Tasks in it."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param tasks the TaskList associated with the current Duke object."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param task the Task that was deleted from the TaskList."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a String denoting that the specified Task has been removed."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String showDelete(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return String.format(\"Noted. I\u0027ve removed this task:\\n%s\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                + \"You now have %d %s in your list.\", task.toString(),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "                tasks.size(), tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a String that represents if a DukeException has been caught,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * printing the corresponding error message."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param e a DukeException containing the error message."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a String with the error message."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String showError(OliviaException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return String.format(\"%s\\n\", e.getMessage());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a String that represents list of matching Tasks given a keyword"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * to search for."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param list a list of matching Tasks."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a String of the list of tasks."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String showFind(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        StringBuilder ret \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        while (list.size() \u003e i) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            ret.append(String.format(\"%d. %s\\n\", ++i, list.get(i - 1).toString()));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return ret.toString();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a String that represents the current Tasks found in the TaskList."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param list the TaskList associated with the current Duke object."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a String of the list of tasks."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String showList(TaskList list) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        StringBuilder ret \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        while (list.size() \u003e i) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "            ret.append(String.format(\"%d. %s\\n\", ++i, list.getTask(i).toString()));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return ret.toString();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String showUpdate(Task task) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return String.format(\"I have updated this task:\\n%s\", task.toString());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Returns a String that represents a welcome message for the user."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @return a String of the welcome message."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public String welcome() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        return \"Hello! I\u0027m Olivia!\\nI am an interactive bot that helps you tracks the tasks you need to do.\\n\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 137
    }
  },
  {
    "path": "src/main/java/olivia/ui/ViewPane.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * ViewPane class that represents that background of the chat interface."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class ViewPane extends ScrollPane {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Constructor that creates a ViewPane object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public ViewPane() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.setPrefSize(420, 585);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.setVvalue(1.0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        this.setFitToWidth(true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 25
    }
  },
  {
    "path": "src/main/java/olivia/util/OliviaException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " * OliviaException class that represents Exceptions specific to Olivia."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class OliviaException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * Constructor that creates an OliviaException."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     * @param error a String containing the error message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public OliviaException(String error) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 17
    }
  },
  {
    "path": "src/test/java/olivia/resource/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "package olivia.resource;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "import olivia.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void taskList_addTask_taskAdded() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        var list \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        list.addTask(new ToDo(\"placeholder\", false));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        assertEquals(list.size(), 1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        assertEquals(list.getTask(1).toString(), \"[T][\\u2718] placeholder\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void taskList_completeTask_taskCompleted() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        var list \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        list.addTask(new ToDo(\"placeholder\", false));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        list.completeTask(1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        assertEquals(list.getTask(1).toString(), \"[T][\\u2713] placeholder\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    public void taskList_deleteTask_taskDeleted() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        var list \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        list.addTask(new ToDo(\"placeholder\", false));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        list.deleteTask(1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "        assertEquals(list.size(), 0);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fyshhh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 36
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fyshhh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "fyshhh": 10
    }
  }
]
