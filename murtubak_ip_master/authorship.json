[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "# Duke.DukeTest.Duke.DukeTest project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.DukeTest.Duke.DukeTest.java` file, right-click it, and choose `Run Duke.DukeTest.Duke.DukeTest.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "murtubak": 2,
      "-": 24
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "[T] [✓]asdasdqwefafzxfc"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": "[D] [✓]321 by:20/02/2020 2359"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "[E] [✗]323132132 at:20/11/2020 2359"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "[T] [✗]return book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "[D] [✓]return book by:20/02/2020 2359"
      }
    ],
    "authorContributionMap": {
      "murtubak": 5
    }
  },
  {
    "path": "src/main/java/Command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        ui.showAdded(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        ui.showNumberInList(taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        storage.updateStorage(taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 25
    }
  },
  {
    "path": "src/main/java/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public Task task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 14
    }
  },
  {
    "path": "src/main/java/Command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    int taskPosition;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public DeleteCommand(int position) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        this.taskPosition \u003d position;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        if (taskPosition \u003c taskList.getTaskList().size() \u0026\u0026 taskPosition \u003e\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            taskList.getTaskList().remove(taskPosition);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            storage.updateStorage(taskList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            ui.showDeleted(taskList.getTaskList().get(taskPosition));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            throw new DukeException(\"☹ OOPS !!! ¡Esta tarea aún no existe!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 30
    }
  },
  {
    "path": "src/main/java/Command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private int taskPosition;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public DoneCommand(int position) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        this.taskPosition \u003d position;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        if (taskPosition \u003c taskList.getTaskList().size() \u0026\u0026 taskPosition \u003e\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            taskList.getTaskList().get(taskPosition).completeTask();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            storage.updateStorage(taskList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            ui.showDone(taskList.getTaskList().get(taskPosition));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            throw new DukeException(\"☹ OOPS !!! ¡Esta tarea aún no existe!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 30
    }
  },
  {
    "path": "src/main/java/Command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 16
    }
  },
  {
    "path": "src/main/java/Command/IncorrectCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public IncorrectCommand(String errorMessage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        ui.showError(errorMessage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 23
    }
  },
  {
    "path": "src/main/java/Command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        if (taskList.getTaskList().isEmpty()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            throw new DukeException(\"☹ OOPS !!! La lista está vacía. ¡Agregue una nueva tarea!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        ui.showList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            System.out.println((i + 1) + \". \" + taskList.getTaskList().get(i).toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 25
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        tasks \u003d new TaskList(storage.load(ui));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        new Duke(\"D:/uni/CS2103T/Duke(iP)/ip/data/tasks.txt\").run();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 35
    }
  },
  {
    "path": "src/main/java/Duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 8
    }
  },
  {
    "path": "src/main/java/Duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static String ACTION_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static String TERMINATION \u003d \"bye\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static String TASK_COMPLETED \u003d \"done\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static String TASK_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static String TASK_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static String TASK_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static String DELETE_EVENT \u003d \"delete\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static String DEADLINE_DATE \u003d \"/by\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static String EVENT_DATE \u003d \"/at\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static DateTimeFormatter SAVE_READ_DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    enum typeOfTask {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        DONE,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        DEADLINE,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        TODO,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        EVENT,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        DELETE"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        String shortCommand;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        String restOfCommand;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        if (fullCommand.contains(\" \")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            shortCommand \u003d fullCommand.substring(0, fullCommand.indexOf(\u0027 \u0027));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            restOfCommand \u003d fullCommand.substring(shortCommand.length() + 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            shortCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            restOfCommand \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        switch (shortCommand) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            case ACTION_LIST:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            case TERMINATION:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                if (restOfCommand.isEmpty()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    return new ExitCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    return new IncorrectCommand(\"OOPS !!! Lo siento, pero no sé qué significa eso :-(\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            case TASK_COMPLETED:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                return handle(restOfCommand, typeOfTask.DONE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            case TASK_DEADLINE:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                return handle(restOfCommand, typeOfTask.DEADLINE);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            case TASK_TODO:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                return handle(restOfCommand, typeOfTask.TODO);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            case TASK_EVENT:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                return handle(restOfCommand, typeOfTask.EVENT);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            case DELETE_EVENT:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                return handle(restOfCommand, typeOfTask.DELETE);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                return new IncorrectCommand(\"OOPS !!! Lo siento, pero no sé qué significa eso :-(\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private static Command handle(String restOfCommand, typeOfTask typeOfTask) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        if (restOfCommand.isEmpty()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            return new IncorrectCommand(\"☹ OOPS !!! La descripción de una tarea no puede estar vacía.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        switch (typeOfTask) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                int positionDone;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    positionDone \u003d Integer.parseInt(restOfCommand);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    return new IncorrectCommand(\"☹ OOPS !!! Incapaz de completar\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                positionDone \u003d positionDone - 1;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                return new DoneCommand(positionDone);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    positionDone \u003d Integer.parseInt(restOfCommand);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    return new IncorrectCommand(\"☹ OOPS !!! Incapaz de completar\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                positionDone \u003d positionDone - 1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                return new DeleteCommand(positionDone);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                return new AddCommand(new Todo(restOfCommand));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                if (!restOfCommand.contains(DEADLINE_DATE)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    return new IncorrectCommand(\"☹ OOPS !!! Debe establecer una fecha límite para esta tarea.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                int byPosition \u003d restOfCommand.indexOf(DEADLINE_DATE);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                String taskDescription \u003d restOfCommand.substring(0, byPosition);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                String dateDescription \u003d restOfCommand.substring(byPosition + 4);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                LocalDateTime date;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    date \u003d LocalDateTime.parse(dateDescription, SAVE_READ_DATETIME_FORMAT);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    return new IncorrectCommand(\"☹ OOPS !!! Formato de fecha y hora incorrecto. Formatee como dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                Deadline newDeadline \u003d new Deadline(taskDescription);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                newDeadline.setTime(date);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                return new AddCommand(newDeadline);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                if (!restOfCommand.contains(EVENT_DATE)) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    return new IncorrectCommand(\"☹ OOPS !!! Debe establecer la hora del evento para esta tarea.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                int atPosition \u003d restOfCommand.indexOf(EVENT_DATE);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                taskDescription \u003d restOfCommand.substring(0, atPosition);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                dateDescription \u003d restOfCommand.substring(atPosition + 4);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    date \u003d LocalDateTime.parse(dateDescription, SAVE_READ_DATETIME_FORMAT);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    return new IncorrectCommand(\"☹ OOPS !!! Formato de fecha y hora incorrecto. Formatee como dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                Event newEvent \u003d new Event(taskDescription);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                newEvent.setTime(date);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                return new AddCommand(newEvent);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 128
    }
  },
  {
    "path": "src/main/java/Duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    File dukeFile;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static DateTimeFormatter SAVE_READ_DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        dukeFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        if (!dukeFile.exists()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                File dukeParent \u003d new File(dukeFile.getParent());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                if (!dukeParent.exists()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    dukeParent.mkdirs();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                dukeFile.createNewFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                System.out.println(e.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public ArrayList\u003cTask\u003e load(Ui ui) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            Scanner sc1 \u003d new Scanner(dukeFile);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            while(sc1.hasNext()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                String loadedInput \u003d sc1.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                if (loadedInput.substring(0, 3).equals(\"[T]\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    Todo newTodo \u003d new Todo(loadedInput.substring(7));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    if (loadedInput.substring(4, 7).equals(\"[✓]\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        newTodo.completeTask();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    listOfTasks.add(newTodo);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                } else if (loadedInput.substring(0, 3).equals(\"[D]\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    int byPosition \u003d loadedInput.indexOf(\"by:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    Deadline newDeadline \u003d new Deadline("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            loadedInput.substring(7, byPosition));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    if (loadedInput.substring(4, 7).equals(\"[✓]\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        newDeadline.completeTask();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    LocalDateTime date \u003d LocalDateTime.parse(loadedInput.substring(byPosition + 3), SAVE_READ_DATETIME_FORMAT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    newDeadline.setTime(date);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    listOfTasks.add(newDeadline);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                } else if (loadedInput.substring(0, 3).equals(\"[E]\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    int atPosition \u003d loadedInput.indexOf(\"at:\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    Event newEvent \u003d new Event("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            loadedInput.substring(7, atPosition));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    if (loadedInput.substring(4, 7).equals(\"[✓]\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        newEvent.completeTask();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    LocalDateTime date \u003d LocalDateTime.parse(loadedInput.substring(atPosition + 3), SAVE_READ_DATETIME_FORMAT);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    newEvent.setTime(date);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    listOfTasks.add(newEvent);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            ui.showError(e.toString());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void updateStorage(TaskList taskList) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            FileWriter dukeFileWriter \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                dukeFileWriter.write(taskList.getTaskList().get(i).saveFormat() + \"\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            dukeFileWriter.close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            System.out.println(e.toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 89
    }
  },
  {
    "path": "src/main/java/Duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 24
    }
  },
  {
    "path": "src/main/java/Duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static String GREETING_MESSAGE \u003d \"Buenos Dias! Soy Duke.Duke, como estas mi amigo?\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        System.out.println(GREETING_MESSAGE);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void showList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        System.out.println(\"Estas son las tareas de su lista:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void showAdded(Task task) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        System.out.println(\"Entendido. He agregado esta tarea:\\n\" + task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void showDone(Task task) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        System.out.println(\"Agradable! He marcado esta tarea como hecha:\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void showDeleted(Task task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        System.out.println(\"Célebre. He eliminado esta tarea:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        System.out.println(\"Adios, amigos!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void showNumberInList(TaskList taskList) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        System.out.println(\"Ahora tienes \"  + taskList.getTaskList().size() +  \" tareas en la lista.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 51
    }
  },
  {
    "path": "src/main/java/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static DateTimeFormatter NEW_DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mma\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static DateTimeFormatter SAVE_READ_DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public Deadline(String taskDescription) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        super(taskDescription);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void setTime(LocalDateTime givenDate) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        date \u003d givenDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        String base \u003d \"[D] \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        if (taskCompleted) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            base \u003d base + \"[✓]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            base \u003d base + \"[✗]\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        base \u003d base + taskDescription + \"by:\" + date.format(SAVE_READ_DATETIME_FORMAT);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        return base;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        String base \u003d \"[D] \";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        if (taskCompleted) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            base \u003d base + \"[✓]\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            base \u003d base + \"[✗]\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        base \u003d base + taskDescription + \"(by:\" + date.format(NEW_DATETIME_FORMAT) + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        return base;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 42
    }
  },
  {
    "path": "src/main/java/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static DateTimeFormatter SAVE_READ_DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static DateTimeFormatter NEW_DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mma\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public Event(String taskDescription) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        super(taskDescription);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void setTime(LocalDateTime givenDate) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        date \u003d givenDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        String base \u003d \"[E] \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        if (taskCompleted) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            base \u003d base + \"[✓]\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            base \u003d base + \"[✗]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        base \u003d base + taskDescription + \"at:\" + date.format(SAVE_READ_DATETIME_FORMAT);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        return base;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        String base \u003d \"[E] \";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        if (taskCompleted) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            base \u003d base + \"[✓]\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            base \u003d base + \"[✗]\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        base \u003d base + taskDescription + \"(at:\" + date.format(NEW_DATETIME_FORMAT) + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        return base;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 40
    }
  },
  {
    "path": "src/main/java/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    protected int position;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    protected String taskDescription;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    protected boolean taskCompleted;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    protected LocalDateTime date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public Task(String taskDescription) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        taskCompleted \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public abstract String saveFormat();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void setPosition(int position) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        this.position \u003d position;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        taskCompleted \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 29
    }
  },
  {
    "path": "src/main/java/Task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public Todo(String taskDescription) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        super(taskDescription);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        String base \u003d \"[T] \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        if (taskCompleted) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            base \u003d base + \"[✓]\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            base \u003d base + \"[✗]\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        base \u003d base + taskDescription;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        return base;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        String base \u003d \"[T] \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        if (taskCompleted) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            base \u003d base + \"[✓]\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            base \u003d base + \"[✗]\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        base \u003d base + taskDescription;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        return base;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 31
    }
  },
  {
    "path": "src/test/java/Duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    LocalDateTime dateTime \u003d LocalDateTime.parse(\"2020-02-20T23:59\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    Deadline unfinishedDeadline \u003d new Deadline(\"return book \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    Deadline doneDeadline \u003d new Deadline(\"return 2 books \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void testSaveFormat() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        unfinishedDeadline.setTime(dateTime);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        doneDeadline.setTime(dateTime);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        doneDeadline.completeTask();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        assertEquals(\"[D] [✗]return book by:20/02/2020 2359\", unfinishedDeadline.saveFormat());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        assertEquals(\"[D] [✓]return 2 books by:20/02/2020 2359\", doneDeadline.saveFormat());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        unfinishedDeadline.setTime(dateTime);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        doneDeadline.setTime(dateTime);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        doneDeadline.completeTask();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        assertEquals(\"[D] [✗]return book (by:Feb 20 2020 23:59PM)\", unfinishedDeadline.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        assertEquals(\"[D] [✓]return 2 books (by:Feb 20 2020 23:59PM)\", doneDeadline.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 33
    }
  },
  {
    "path": "src/test/java/Duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    LocalDateTime dateTime \u003d LocalDateTime.parse(\"2020-02-20T23:59\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    Event unfinishedEvent \u003d new Event(\"return book \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    Event doneEvent \u003d new Event(\"return 2 books \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void testSaveFormat() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        unfinishedEvent.setTime(dateTime);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        doneEvent.setTime(dateTime);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        doneEvent.completeTask();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        assertEquals(\"[E] [✗]return book at:20/02/2020 2359\", unfinishedEvent.saveFormat());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        assertEquals(\"[E] [✓]return 2 books at:20/02/2020 2359\", doneEvent.saveFormat());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        unfinishedEvent.setTime(dateTime);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        doneEvent.setTime(dateTime);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        doneEvent.completeTask();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        assertEquals(\"[E] [✗]return book (at:Feb 20 2020 23:59PM)\", unfinishedEvent.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        assertEquals(\"[E] [✓]return 2 books (at:Feb 20 2020 23:59PM)\", doneEvent.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 33
    }
  },
  {
    "path": "src/test/java/Duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void testTaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        Event unfinishedEvent \u003d new Event(\"return book \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        Deadline unfinishedDeadline \u003d new Deadline(\"return book \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        Todo unfinishedTodo \u003d new Todo(\"return book\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2020-02-20T23:59\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        unfinishedDeadline.setTime(dateTime);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        unfinishedEvent.setTime(dateTime);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        ArrayList\u003cTask\u003e testTaskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        testTaskList.add(unfinishedDeadline);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        testTaskList.add(unfinishedEvent);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        testTaskList.add(unfinishedTodo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        assertEquals(\"[D] [✗]return book (by:Feb 20 2020 23:59PM)\", testTaskList.get(0).toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        assertEquals(\"[E] [✗]return book (at:Feb 20 2020 23:59PM)\", testTaskList.get(1).toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        assertEquals( \"[T] [✗]return book\", testTaskList.get(2).toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 34
    }
  },
  {
    "path": "src/test/java/Duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    Todo unfinishedTodo \u003d new Todo(\"return book\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    Todo doneTodo \u003d new Todo(\"return 2 books\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void testSaveFormat() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        doneTodo.completeTask();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        assertEquals(\"[T] [✗]return book\", unfinishedTodo.saveFormat());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        assertEquals(\"[T] [✓]return 2 books\", doneTodo.saveFormat());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        doneTodo.completeTask();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        assertEquals(\"[T] [✗]return book\", unfinishedTodo.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        assertEquals(\"[T] [✓]return 2 books\", doneTodo.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 26
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "del D:\\uni\\CS2103T\\Duke(iP)\\ip\\text-ui-test\\data\\tasks.txt"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin  D:\\uni\\CS2103T\\Duke(iP)\\ip\\src\\main\\java\\Task\\* D:\\uni\\CS2103T\\Duke(iP)\\ip\\src\\main\\java\\Duke\\* D:\\uni\\CS2103T\\Duke(iP)\\ip\\src\\main\\java\\Command\\*"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": "java -classpath D:\\uni\\CS2103T\\Duke(iP)\\ip\\bin\\Duke Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "murtubak": 3,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.DukeTest.Duke.DukeTest.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "java -classpath ../bin Duke.DukeTest.Duke.DukeTest \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "murtubak": 2,
      "-": 36
    }
  }
]
