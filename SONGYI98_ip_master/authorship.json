[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "T / 0 / buy bread"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "T / 1 / borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "D / 0 / return book / 01 Sep 2020, 06:00 PM"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "T / 0 / join sports club"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 4
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Represents a personal assistant chatbot to help a person keep track of various things."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.storage \u003d new Storage(\"../data\", \"../data/duke.txt\", this.ui, taskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.parser \u003d new Parser(this.storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Runs Duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.storage.checkSaveFile();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.ui.printIntroduction();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.readInputs();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Reads the inputs from the user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void readInputs() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            String nextInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                this.parser.processInput(nextInput);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                this.ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // Exit the program if user says bye"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (nextInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 54,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Encapsulates the exception when a parser receives an invalid input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 11
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.util.DateTimeHandler;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Encapsulates the handling of user\u0027s input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Parser(Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.ui \u003d this.storage.getUi();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.taskList \u003d this.storage.getTaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Processes the input fed to Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param input Input string."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeException If input is invalid."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void processInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.ui.printMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.ui.printTaskList(this.taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            deleteTask(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            markTaskAsDone(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else if (input.contains(\"get\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            printTasksFromDate(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else if (input.contains(\"todo\") || input.contains(\"event\") || input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            createTask(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means. \\u2639\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Returns a footer containing the number of tasks in the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Footer string containing the number of tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String numOfTasksFooter() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        int numOfTasks \u003d this.taskList.getNumOfTasks();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (numOfTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"Now you have \" + numOfTasks + \" task in the list.\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"Now you have \" + numOfTasks + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Deletes a task specified by the user."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param input Input string indicating which task\u0027s index to be deleted."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeException If input is invalid."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void deleteTask(String input) throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            int number \u003d Integer.parseInt(input.substring(7));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            int index \u003d number - 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Task task \u003d this.taskList.getTask(index);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.taskList.deleteTask(index);    // delete task from the list"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.storage.writeToSaveFile();    // edit the data in storage"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            String confirmationMessage \u003d \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    + task.toString()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    + \"\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    + this.numOfTasksFooter();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.ui.printMessage(confirmationMessage);    // print delete confirmation message"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeException(\"Which task do you want to delete?\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeException(\"Enter the index of the task to be deleted.\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param input Input string describing which task\u0027s index is done."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeException If input is invalid."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void markTaskAsDone(String input) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            int number \u003d Integer.parseInt(input.substring(5));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Task task \u003d this.taskList.getTask(number - 1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.storage.writeToSaveFile();    // write task\u0027s data to storage"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            String confirmationMessage \u003d \"Nice! I\u0027ve marked this as done:\\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    + task.toString()"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    + \"\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.ui.printMessage(confirmationMessage);    // print mark task as done confirmation message"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeException(\"Which task have you done?\\n\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeException(\"Enter the index of the task done.\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Prints the tasks with the date required by the user."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param input Date of tasks required."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeException If input is invalid."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void printTasksFromDate(String input) throws DukeException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            String requiredDate \u003d DateTimeHandler.parseDate(input.substring(4));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            boolean hasRequiredTasks \u003d false;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            StringBuilder requiredTasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            int number \u003d 0;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            for (int i \u003d 0; i \u003c this.taskList.getNumOfTasks(); i++) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                String taskString \u003d this.taskList.getTask(i).toString();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                if (taskString.contains(requiredDate)) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    hasRequiredTasks \u003d true;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    number++;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    requiredTasks.append(number).append(\". \").append(taskString).append(\"\\n\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (hasRequiredTasks) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                String taskMessage \u003d \"Here are the task(s) from \" + requiredDate + \":\\n\" + requiredTasks;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                this.ui.printMessage(taskMessage);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                this.ui.printMessage(\"You have no tasks from \" + requiredDate + \".\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeException(\"Enter the date you want to get tasks from.\\n\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a task."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Either a todo, an event or a deadline."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param input Input string describing a task."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeException If input is invalid."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void createTask(String input) throws DukeException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String taskString;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (input.contains(\"todo\")) {    // todo"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                taskString \u003d input.substring(5);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                task \u003d new Todo(taskString);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            } else if (input.contains(\"event\")) {    // event"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                taskString \u003d input.substring(6);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                String[] arr \u003d taskString.split(\" /at \", 2);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                if (arr.length \u003c 2 || arr[1].equals(\"\")) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    throw new DukeException(\"Enter the date and time of the event after \\\"/at\\\".\\n\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                task \u003d new Event(arr[0], arr[1]);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            } else {    // deadline"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                taskString \u003d input.substring(9);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                String[] arr \u003d taskString.split(\" /by \", 2);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                if (arr.length \u003c 2 || arr[1].equals(\"\")) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    throw new DukeException(\"Enter the date and time of the deadline after \\\"/by\\\".\\n\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                task \u003d new Deadline(arr[0], arr[1]);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            String typeOfTask \u003d input.contains(\"todo\")"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    ? \"a todo\""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    : input.contains(\"event\")"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    ? \"an event\""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    : \"a deadline\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeException(\"The description of \" + typeOfTask + \" cannot be empty.\\n\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.taskList.addTask(task);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.storage.writeToSaveFile();    // write task\u0027s data to storage"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String confirmationMessage \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                + task.toString()"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                + numOfTasksFooter();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.ui.printMessage(confirmationMessage);    // print create task confirmation message"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 190
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Encapsulates the loading of tasks from a text file and storing of tasks in that text file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * The text file is located in the data directory of the root folder."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final File directory;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final File textFile;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Storage(String directoryPath, String textFilePath, Ui ui, TaskList taskList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.directory \u003d new File(directoryPath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.textFile \u003d new File(textFilePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Checks if duke.txt file exists in the data directory of the root folder."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * If it exists, load the data into Duke."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * If it does not exist, create one."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void checkSaveFile() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (directory.exists()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (textFile.exists()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                readTextFile();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                createTextFile();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            createDataDirectory();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            createTextFile();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a data directory in the root folder."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void createDataDirectory() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        boolean hasCreatedDir \u003d directory.mkdir();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (hasCreatedDir) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.ui.printMessage(\"A data directory has been created in the root folder.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.ui.printWarning(\"Failed to create a data directory.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates duke.txt in the data directory of the root folder."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void createTextFile() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String failMessage \u003d \"Failed to create duke.txt.\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            boolean hasCreatedFile \u003d textFile.createNewFile();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (hasCreatedFile) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                this.ui.printMessage(\"duke.txt has been created in the data directory of the root folder.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                this.ui.printWarning(failMessage);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.ui.printWarning(failMessage);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Reads duke.txt and adds tasks into the task list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void readTextFile() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(textFile));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                String[] arr \u003d line.split(\" / \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                boolean isDone \u003d Integer.parseInt(arr[1]) !\u003d 0;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                if (arr[0].equals(\"T\")) {    // Todo"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    task \u003d new Todo(arr[2], isDone);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                } else if (arr[0].equals(\"E\")) {    // Event"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    task \u003d new Event(arr[2], isDone, arr[3]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                } else {    // Deadline"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    task \u003d new Deadline(arr[2], isDone, arr[3]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                this.taskList.addTask(task);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                line \u003d reader.readLine();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.ui.printWarning(\"Failed to read duke.txt.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Writes tasks\u0027 data to duke.txt."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void writeToSaveFile() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        StringBuilder data \u003d new StringBuilder();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        for (Task task: this.taskList.getTaskList()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            data.append(task.getData()).append(\"\\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(textFile));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            writer.write(data.toString());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.ui.printWarning(\"Failed to write data to duke.txt.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 134
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets the number of tasks in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Number of tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public int getNumOfTasks() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets a task from the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param i Index of task stored in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Task from index i of the list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.tasks.get(i);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets the task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Task list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param task Task to add to the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Deletes a task from the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param i Index of task stored in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void deleteTask(int i) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.tasks.remove(i);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 63
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Handles interactions with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Prints Duke\u0027s introduction message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void printIntroduction() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String divider \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String welcome \u003d \"Hello! I\u0027m Duke.\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        System.out.println(divider + logo + welcome + divider);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Prints message."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param message Message."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Prints a warning message."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param warningMessage Warning message."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void printWarning(String warningMessage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        System.out.println(\"WARNING: \" + warningMessage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Prints an error message."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param errorMessage Error message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void printError(String errorMessage) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        System.out.println(\"ERROR: \" + errorMessage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Prints the entire list of tasks."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void printTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        int numOfTasks \u003d taskList.getNumOfTasks();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (numOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            System.out.println(\"There are no tasks in your list.\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (numOfTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                System.out.println(\"This is the only task in your list:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                System.out.println(\"Here are the \" + numOfTasks + \" tasks in your list:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            for (int i \u003d 0; i \u003c numOfTasks; i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                int number \u003d i + 1;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                System.out.println(number + \". \" + taskList.getTask(i).toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 76
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.util.DateTimeHandler;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Represents a deadline as a task with a date and time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final String dateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.dateTime \u003d DateTimeHandler.parseDateTime(by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Deadline(String description, boolean isDone, String dateTime) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return \"D / \" + super.getData() + \" / \" + this.getDateTime();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.getDateTime() + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 36
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.util.DateTimeHandler;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Represents an event as a task with a date and time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final String dateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.dateTime \u003d DateTimeHandler.parseDateTime(at);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Event(String description, boolean isDone, String dateTime) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return \"E / \" + super.getData() + \" / \" + this.getDateTime();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.getDateTime() + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 36
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Encapsulates a task with a description and a completion status."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Returns the status of the task using UTF-8 encoding."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Either a tick or a cross symbol."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Status icon."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets the data from the task to be saved in duke.txt."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String representing the data of the task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        int statusNumber \u003d this.getStatusIcon().equals(\"\\u2713\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                ? 1"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                : 0;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return statusNumber + \" / \" + this.getDescription();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 58
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Represents a todo as a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return \"T / \" + super.getData();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 25
    }
  },
  {
    "path": "src/main/java/duke/util/DateTimeHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Encapsulates the handling of dates and times."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class DateTimeHandler {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Parses and formats the date string."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param date Unformatted date string."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Date string in the format of \"dd MMM YYYY\"."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeException If date input is invalid."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public static String parseDate(String date) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // Parse input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            LocalDate inputDate \u003d LocalDate.parse(date, inputFormatter);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // Produce formatted output"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return inputDate.format(outputFormatter);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeException(\"Enter the date as \\\"dd-MM-yyyy\\\".\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Parses and formats the date and time string."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param dateTime Unformatted date and time string."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Date and time string in the format of \"dd MMM YYYY, hh:ss\"."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeException If date and time input is invalid."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public static String parseDateTime(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // Parse input"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            LocalDateTime inputDateTime \u003d LocalDateTime.parse(dateTime, inputFormatter);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // Produce formatted output"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, hh:ss a\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return inputDateTime.format(outputFormatter);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeException(\"Enter the date and time as \\\"dd-MM-yyyy HHmm\\\".\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 56
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void beforeEachTestMethod() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.parser \u003d new Parser(new Storage(\"../data\", \"../data/duke.txt\", new Ui(), new TaskList()));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void processInput_unknownCommand_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e this.parser.processInput(\"bye bye\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void processInput_invalidDeleteCommand_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e this.parser.processInput(\"delete\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e this.parser.processInput(\"delete a\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void processInput_invalidDoneCommand_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e this.parser.processInput(\"done\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e this.parser.processInput(\"done a\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void processInput_invalidGetCommand_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e this.parser.processInput(\"get\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e this.parser.processInput(\"get a\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e this.parser.processInput(\"get 01/09/2020\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void processInput_invalidTodoCommand_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e this.parser.processInput(\"todo\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void processInput_invalidEventCommand_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e this.parser.processInput(\"event project meeting\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e this.parser.processInput(\"event project meeting\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e this.parser.processInput(\"event project meeting /at\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e this.parser.processInput(\"event project meeting /at 01/09/2020\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e this.parser.processInput(\"event project meeting /by 01/09/2020 0800\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void processInput_invalidDeadlineCommand_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e this.parser.processInput(\"return book\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e this.parser.processInput(\"return book\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e this.parser.processInput(\"return book /by\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e this.parser.processInput(\"return book /by 01/09/2020\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e this.parser.processInput(\"return book /at 01/09/2020 1800\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 62
    }
  },
  {
    "path": "src/test/java/duke/util/DateTimeHandlerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class DateTimeHandlerTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void dateFormat_validInput_correctDateFormat() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Assertions.assertEquals(\"01 Sep 2020\", DateTimeHandler.parseDate(\"1-9-2020\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Assertions.assertEquals(\"01 Sep 2020\", DateTimeHandler.parseDate(\"01-09-2020\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void dateFormat_invalidInput_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e DateTimeHandler.parseDate(\"1/9/2020\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e DateTimeHandler.parseDate(\"01/09/2020\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void dateTimeFormat_validInput_correctDateTimeFormat() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Assertions.assertEquals(\"01 Sep 2020, 08:00 AM\", DateTimeHandler.parseDateTime(\"1-9-2020 0800\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Assertions.assertEquals(\"01 Sep 2020, 06:00 PM\", DateTimeHandler.parseDateTime(\"01-09-2020 1800\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void dateTimeFormat_invalidInput_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e DateTimeHandler.parseDateTime(\"1/9/2020 1800\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e DateTimeHandler.parseDateTime(\"01-09-2020 6pm\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 40
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "done"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "done a"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "deadline return book /by"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "deadline return book /by 01/09/2020 6pm"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "deadline return book /by 01/09/2020 1800"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "deadline return book /by 01-09-2020 1800"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "event project meeting /by"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "event project meeting /by 1-9-2020 0800"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "event project meeting /at 1-9-2020 0800"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "get"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "get 1/9/2020"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "get 1-9-2020"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "delete"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "delete a"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "get 1-9-2020"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "blah"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "bye"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "blah"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 31
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 3,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 3,
      "-": 37
    }
  }
]
