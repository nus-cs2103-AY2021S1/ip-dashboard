[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    private String action;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    private boolean end;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public Command(String task, String action) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        this.end \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        this.action \u003d action;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) throws IOException, DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if(action \u003d\u003d null){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            ui.showInvalidCommand();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else if (action.equals(\"bye\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            this.end \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            ui.showEnd();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            ui.close();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else if (action.equals(\"list\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            ui.showList(taskList.getList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else if (action.indexOf(\"done\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            String[] split \u003d action.split(\"done \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                Integer taskNumber \u003d Integer.parseInt(split[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                taskList.checkOff(taskNumber);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            } catch (NumberFormatException err) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                System.out.println(\"Please input a valid number\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else if (action.equals(\"delete\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            taskList.delete(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else if (action.equals(\"todo\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            taskList.addToDo(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            ui.showAdded();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else if (action.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            taskList.addDeadline(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            ui.showAdded();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else if (action.equals(\"event\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            taskList.addEvent(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            ui.showAdded();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            ui.showInvalidCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public boolean isEnd(){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        return this.end;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 52
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    private LocalDate dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public Deadline(String taskName, String date) throws DukeInvalidDateException, DukeInvalidTaskException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if(!date.equals(null) \u0026\u0026 !date.equals(\" \")){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            this.date \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                this.dateTime \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            } catch (DateTimeParseException err) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                System.out.println(\"for dates, please input the date in yyyy-mm-dd format\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            throw new DukeInvalidDateException();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if (dateTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            return dateTime.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String finished \u003d this.done ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String toReturn \u003d dateTime \u003d\u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                            ? \"[D]\" + \"[\" + finished + \"] \" + taskName + \" (by: \" + date +\")\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                            : \"[D]\" + \"[\" + finished + \"] \" + taskName + \" (by: \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                                + dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) +\")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 42
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import main.java.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    final static String UNDERSCORE \u003d \"____________________________________________________________ \\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public Duke (String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            taskList \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            parser \u003d new Parser();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } catch (FileNotFoundException err){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            System.out.println(\"File not found in filepath provided\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void run(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        ui.welcomeMessage(taskList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        ui.start();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        boolean isEnd \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        while (!isEnd) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                String input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                Command nextCommand \u003d parser.interpret(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                nextCommand.execute(taskList, ui);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                isEnd \u003d nextCommand.isEnd();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    };"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        new Duke(\"./src/main/java/data/duke.txt\").run();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 44,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 7
    }
  },
  {
    "path": "src/main/java/DukeInvalidDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class DukeInvalidDateException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public DukeInvalidDateException(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        super(\"Date is invalid, date cannot be left blank :(\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 7
    }
  },
  {
    "path": "src/main/java/DukeInvalidDayException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class DukeInvalidDayException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public DukeInvalidDayException(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        super(\"Day of event is invalid :(, please do not leave it as empty\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 7
    }
  },
  {
    "path": "src/main/java/DukeInvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class DukeInvalidTaskException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public DukeInvalidTaskException(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        super(\"Task is invalid, description cannot be empty :(\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    private String day;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    private LocalDate dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public Event(String taskName, String day) throws DukeInvalidDayException, DukeInvalidTaskException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if(!day.equals(null) \u0026\u0026 !day.equals(\" \")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            this.day \u003d day;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                this.dateTime \u003d LocalDate.parse(day);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            } catch (DateTimeParseException err) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                System.out.println(\"for dates, please input the date in yyyy-mm-dd format\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            throw new DukeInvalidDayException();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if (dateTime !\u003d null){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            return dateTime.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            return day;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String finished \u003d this.done ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String toReturn \u003d dateTime \u003d\u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                            ? \"[E]\" + \"[\" + finished + \"] \" + taskName + \" (at: \" + day + \")\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                            : \"[E]\" + \"[\" + finished + \"] \" + taskName + \" (at: \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                                + dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 42
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public Parser () {}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public Command interpret (String line) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if (line.indexOf(\"todo\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            return new Command(line, \"todo\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else if (line.indexOf(\"delete\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            return new Command(line, \"delete\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else if (line.indexOf(\"deadline\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            return new Command(line, \"deadline\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else if (line.indexOf(\"event\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            return new Command(line, \"event\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else if (line.indexOf(\"done\") \u003d\u003d 0 || line.equals(\"bye\") || line.equals(\"list\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            return new Command(line, line);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            return new Command(line, null);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 22
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    private File dataFile;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    private final String FILE_PATH;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public Storage(String filepath){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        this.FILE_PATH \u003d filepath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        dataFile \u003d new File(filepath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            if (dataFile.createNewFile()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                System.out.println(\"data file has been created\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } catch (IOException err) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            System.out.println(\"error opening file\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void appendFile (String task) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            FileWriter fw \u003d new FileWriter(FILE_PATH, true);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            fw.write(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } catch (IOException err) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            System.out.println(\"error writing \" + task + \" to file storage\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void overwriteFile (ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            FileWriter fw \u003d new FileWriter(FILE_PATH);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                Task currentTask \u003d list.get(i);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                String done \u003d currentTask.isDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                if (currentTask instanceof Event) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    fw.write(\"E | \" + done + \" | \" + currentTask.getTaskName() + \" | \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                            + ((Event) currentTask).getDate() + \"\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                } else if (currentTask instanceof Deadline) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    fw.write(\"D | \" + done + \" | \" + currentTask.getTaskName() + \" | \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                            + ((Deadline) currentTask).getDate() + \"\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                } else if (currentTask instanceof Todo) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    fw.write(\"T | \" + done + \" | \" + currentTask.getTaskName() + \"\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } catch (IOException err) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            System.out.println(\"error overwriting file.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        ArrayList\u003cTask\u003e toReturn \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        Scanner reader \u003d new Scanner(dataFile);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        while (reader.hasNext()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            String currentTask \u003d reader.nextLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            String[] splits \u003d currentTask.split(\" \\\\| \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            boolean done \u003d Integer.parseInt(splits[1]) \u003d\u003d 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            String type \u003d splits[0];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            String task \u003d splits[2];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                case (\"T\"):"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    Task todoTask \u003d new Todo(task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    if (done) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                        todoTask.checkOff();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    toReturn.add(todoTask);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                case (\"D\"):"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    String date \u003d splits[3];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    Deadline deadlineTask \u003d new Deadline(task, date);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    if (done) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                        deadlineTask.checkOff();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    toReturn.add(deadlineTask);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                case (\"E\"):"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    String day \u003d splits[3];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    Event eventTask \u003d new Event(task, day);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    if (done) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                        eventTask.checkOff();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    toReturn.add(eventTask);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 96
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    protected Boolean done;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public Task(String taskName) throws DukeInvalidTaskException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if (!taskName.equals(null) \u0026\u0026 !taskName.equals(\" \")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            this.done \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            throw new DukeInvalidTaskException();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void checkOff() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public Boolean isDone(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public String getTaskName(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        return this.taskName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String finished \u003d this.done ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String toReturn \u003d \"[\" + finished + \"]\" + taskName;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 34
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    private ArrayList\u003cTask\u003e todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    final static String UNDERSCORE \u003d \"____________________________________________________________ \\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public TaskList(Storage storage) throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        this.todo \u003d storage.load();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void delete(String line) throws DukeException, IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String[] splits \u003d line.split(\"delete \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            if(splits.length \u003e 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(splits[1]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                if (taskNumber - 1 \u003e\u003d todo.size() || taskNumber - 1 \u003c 0 || todo.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    throw new DukeException(\"Invalid task number\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    int size \u003d todo.size() - 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    System.out.println(UNDERSCORE + \"Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                            + todo.get(taskNumber - 1) + \"\\n\" + \"Now you have \" + size + \" task in the list \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                            + UNDERSCORE"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    todo.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    //                update storage file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    storage.overwriteFile(todo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                throw new DukeException(\"Please key in the task number to be marked done\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } catch (NumberFormatException err) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            System.out.println(\"please input a valid number\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void addEvent (String line) throws DukeInvalidDayException, DukeInvalidTaskException, IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String[] splits \u003d line.split(\"event |/at \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if (splits.length \u003e 2){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            Event task \u003d new Event(splits[1], splits[2]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            todo.add(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            System.out.println(UNDERSCORE + \"Got it. I\u0027ve added this to task: \\n\" + task + \"\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    + \"Now you have \" + todo.size() + \" tasks in the list \\n\" + UNDERSCORE"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            String textToAppend \u003d \"\\nE | 0 | \" + splits[1] + \" | \" + splits[2];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            storage.appendFile(textToAppend);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else if (splits.length \u003e 1){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            throw new DukeInvalidDayException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            throw new DukeInvalidTaskException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void addDeadline (String line) throws DukeInvalidDateException, DukeInvalidTaskException, IOException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String[] splits \u003d line.split(\"deadline |/by \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if (splits.length \u003e 2) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            Deadline task \u003d new Deadline(splits[1], splits[2]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            todo.add(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            System.out.println(UNDERSCORE + \"Got it. I\u0027ve added this to task: \\n\" + task + \"\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    + \"Now you have \" + todo.size() + \" tasks in the list \\n\" + UNDERSCORE"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            );"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            String textToAppend \u003d \"\\nD | 0 | \" + splits[1] + \" | \" + splits[2];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            storage.appendFile(textToAppend);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else if (splits.length \u003e 1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            throw new DukeInvalidDateException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            throw new DukeInvalidTaskException();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void addToDo (String line) throws DukeInvalidTaskException, IOException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String[] splits \u003d line.split(\"todo \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if(splits.length \u003e 1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            Todo task \u003d new Todo(splits[1]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            todo.add(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            System.out.println(UNDERSCORE + \"Got it. I\u0027ve added this to task: \\n\" + task + \"\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    + \"Now you have \" + todo.size() + \" tasks in the list \\n\" + UNDERSCORE"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            );"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            String textToAppend \u003d \"\\nT | 0 | \" + splits[1];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            storage.appendFile(textToAppend);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            throw new DukeInvalidTaskException();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void checkOff (Integer taskNumber) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        todo.get(taskNumber - 1).checkOff();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        System.out.println(UNDERSCORE + \"Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                todo.get(taskNumber - 1) + \"\\n\" + UNDERSCORE"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        storage.overwriteFile(todo);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        return this.todo;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 102
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public Todo(String taskName) throws DukeInvalidTaskException{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String finished \u003d this.done ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        return \"[T]\" + \"[\" + finished + \"] \" + taskName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 13
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.awt.desktop.SystemSleepEvent;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    private Scanner input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    private final static String UNDERSCORE \u003d \"____________________________________________________________ \\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public Ui() { }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void welcomeMessage(TaskList list) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        System.out.println(\"____________________________________________________________ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                + \"Hello! Welcome to Duke, your personal task manager! \\nWhat can I do for you?\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if (list.getList().size() \u003e 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            System.out.println(\"You have outstanding tasks. Type \u0027list\u0027 to view your current tasks.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        System.out.println(\"____________________________________________________________ \\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void showAdded () {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        System.out.println(\"Okay! I\u0027ve added it to the list.\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                \" To view your current tasks, type \u0027list\u0027\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void showList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        System.out.println(UNDERSCORE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if(list.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            System.out.println(\"you do not have any tasks yet\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                int number \u003d i + 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                System.out.println(\" \" + number + \".\" + list.get(i));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        System.out.println(UNDERSCORE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void showInvalidCommand() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        System.out.println(\"I\u0027m sorry I don\u0027t understand :(\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if(input.hasNextLine()){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            return input.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void showEnd() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        System.out.println(UNDERSCORE + \" Bye. Hope to see you again soon!\" + \"\\n\" + UNDERSCORE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void close(){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        input.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void showError(Exception err) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 68
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import main.java.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import main.java.DukeInvalidDateException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import main.java.DukeInvalidTaskException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import main.java.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void Test(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            Deadline task \u003d new Deadline(\"hi\", \"2020-01-01\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            String expected \u003d \"[D][✗] hi (by: Jan 1 2020)\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            assertEquals(expected, task.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } catch (DukeInvalidTaskException | DukeInvalidDateException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void Test2(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            Deadline task \u003d new Deadline(\"hi\", \"01\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            String expected \u003d \"[D][✗] hi (by: 01)\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            assertEquals(expected, task.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } catch (DukeInvalidTaskException | DukeInvalidDateException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 31
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import main.java.DukeInvalidTaskException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import main.java.Todo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void Test(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            Todo task \u003d new Todo(\"hi\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            String expected \u003d \"[T]\" + \"[✗] hi\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            assertEquals(expected, task.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } catch (DukeInvalidTaskException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "todo work"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "todo return books"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "deadline this friday /by sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    PAUSE"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 5,
      "-": 20
    }
  }
]
