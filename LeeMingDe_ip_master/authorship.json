[
  {
    "path": "src/main/java/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "public class Commands {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    private boolean shouldBreak \u003d true;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    enum Input {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        LIST, BYE, DONE, TODO, DEADLINE, EVENT, DELETE"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        this.greet();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        Storage.getPreviousTask(taskList);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        String inputs \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        while (shouldBreak) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            String[] inputArray \u003d inputs.split(\" \", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                if (find(inputArray[0])) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    switch (Input.valueOf(inputArray[0].toUpperCase())) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    case LIST:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        this.lst();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        inputs \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    case BYE:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        System.out.println(\"~ \\n I will be back \\n~ \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        shouldBreak \u003d !shouldBreak;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    case DONE:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        markDone(inputArray);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        inputs \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    case TODO:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        addTodo(inputArray);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        inputs \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        addDeadline(inputArray);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        inputs \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        addEvent(inputArray);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        inputs \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    case DELETE:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        deleteItem(inputArray);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        inputs \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    throw new DukeException(\"~\\n ERROR... INPUT NOT RECOGNIZED. \\n PLEASE TRY AGAIN \\n~\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            } catch (DukeException dukeException) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                System.out.println(dukeException.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                inputs \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        Storage.writeToFile(taskList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    private void markDone(String[] inputs) throws DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        if (inputs.length \u003e 1 \u0026\u0026 Character.isDigit(inputs[1].charAt(0))) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            int taskNumber \u003d Character.getNumericValue(inputs[1].charAt(0)) - 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            if (!taskList.isEmpty() \u0026\u0026 taskNumber \u003c taskList.size()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                taskList.get(taskNumber).doneTask();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                System.out.println(\"~ \\n Nice! Target Eliminated: \\n   \""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        + taskList.get(taskNumber).toString() + \"\\n~\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                throw new DukeException(\"~\\n ERROR... TASK NOT FOUND. \\n PLEASE TRY AGAIN \\n~\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            throw new DukeException(\"~\\n ERROR... NON-INTEGER RECOGNIZED OR TASK NUMBER NOT INPUTTED. \\n \" +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    \"PLEASE TRY AGAIN \\n~\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    private void greet() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        System.out.println(\"~ \\n Hello I\u0027m the Terminator \\n What can I do for you? \\n~\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    private void lst() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        System.out.println(\"~ \\n Here are targets in your kill list: \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        if (!taskList.isEmpty()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                int count \u003d i + 1;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                System.out.println(String.format(\"   %d. \", count) + taskList.get(i).toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        System.out.println(\"\\n~ \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    private void addTodo(String[] inputs) throws DukeException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        if (inputs.length \u003e 1) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            System.out.println(\"~ \\n Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            ToDo toDo \u003d new ToDo(inputs[1]);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            taskList.add(toDo);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            System.out.println(String.format(\"   %s \\n Now you have %d tasks in the list. \\n~\","
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    toDo, taskList.size()));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            throw new DukeException(\"~\\n ERROR... TODO DESCRIPTION EMPTY. \\n PLEASE TRY AGAIN \\n~\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    private void addDeadline(String[] inputs) throws DukeException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        if (inputs.length \u003e 1) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            String[] stringArray \u003d inputs[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            if (stringArray.length \u003e 1 \u0026\u0026 stringArray[1].split(\" \", 2).length \u003e 1) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                String day \u003d stringArray[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                System.out.println(\"~ \\n Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                Deadline deadline \u003d new Deadline(stringArray[0], day.trim());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                taskList.add(deadline);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                System.out.println(String.format(\"   %s \\n Now you have %d tasks in the list. \\n~\","
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        deadline, taskList.size()));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                throw new DukeException(\"~\\n ERROR... DEADLINE DATE EMPTY. \\n PLEASE TRY AGAIN \\n~\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            throw new DukeException(\"~\\n ERROR... DEADLINE DESCRIPTION EMPTY . \\n PLEASE TRY AGAIN \\n~\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    private void addEvent(String[] inputs) throws DukeException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        if (inputs.length \u003e 1) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            String[] stringArray \u003d inputs[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            if (stringArray.length \u003e 1 \u0026\u0026 stringArray[1].split(\" \", 2).length \u003e 1) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                String at \u003d stringArray[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                System.out.println(\"~ \\n Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                Event event \u003d new Event(stringArray[0], at);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                taskList.add(event);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                System.out.println(String.format(\"   %s \\n Now you have %d tasks in the list. \\n~\","
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        event, taskList.size()));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                throw new DukeException(\"~\\n ERROR... EVENT DATE EMPTY. \\n PLEASE TRY AGAIN \\n~\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            throw new DukeException(\"~\\n ERROR... EVENT DESCRIPTION EMPTY. \\n PLEASE TRY AGAIN \\n~\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    private void deleteItem(String[] inputs) throws DukeException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        if (inputs.length \u003e 1 \u0026\u0026 Character.isDigit(inputs[1].charAt(0))) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            int taskNumber \u003d Character.getNumericValue(inputs[1].charAt(0)) - 1;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            if (!taskList.isEmpty() \u0026\u0026 taskNumber \u003c taskList.size()) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                Task removedTask \u003d taskList.remove(taskNumber);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                System.out.println( String.format(\"~ \\n Noted. Target Scraped: \\n   %s \\n \" +"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        \"Now you have %d tasks in the list. \\n~\", removedTask.toString(), taskList.size()));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                throw new DukeException(\"~\\n ERROR... TASK NOT FOUND. \\n PLEASE TRY AGAIN \\n~\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            throw new DukeException(\"~\\n ERROR... NON-INTEGER RECOGNIZED OR TASK NUMBER NOT INPUTTED. \\n \" +"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    \"PLEASE TRY AGAIN \\n~\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    private static boolean find(String input) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        for (Input i : Input.values()) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            if (input.toUpperCase().equals(i.toString())) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeMingDe": 170
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    protected LocalDateTime localDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        this.date \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        by \u003d by.replace(\u0027/\u0027, \u0027-\u0027);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        this.localDateTime \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                \"[d-MM-yyyy HHmm][yyyy-MM-d HHmm]\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        return this.localDateTime.format(DateTimeFormatter.ofPattern(\"d-MM-yyyy HHmm\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                localDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm a\")) + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeMingDe": 32
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        Commands commands \u003d new Commands();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        commands.start();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeMingDe": 5,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeMingDe": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    public void setAt(String at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeMingDe": 24
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeMingDe": 4
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    public static ArrayList\u003cTask\u003e getPreviousTask(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        java.nio.file.Path directory \u003d java.nio.file.Paths.get(\"data\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            if (!Files.exists(directory)) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                Files.createDirectory(directory);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                java.nio.file.Path path \u003d java.nio.file.Paths.get(\"data\").resolve(\"duke.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                if (!Files.exists(path)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    File file \u003d new File(path.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    file.createNewFile();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                File file \u003d new File(path.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                while (sc.hasNext()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    String[] task \u003d sc.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    switch (task[0].trim()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        ToDo todo \u003d new ToDo(task[2].trim());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        if (task[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                            todo.doneTask();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        taskList.add(todo);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        Deadline deadline \u003d new Deadline(task[2].trim(), task[3].trim());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        if (task[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                            deadline.doneTask();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        taskList.add(deadline);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        Event event \u003d new Event(task[2].trim(), task[3].trim());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        if (task[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                            event.doneTask();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        taskList.add(event);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    public static void writeToFile(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        java.nio.file.Path path \u003d java.nio.file.Paths.get(\"data\").resolve(\"duke.txt\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            String content \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            FileWriter fw \u003d new FileWriter(path.toString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    String taskDetails \u003d String.format(\"T | %d | %s\", task.isDone ? 1 : 0, task.getDescription());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    content +\u003d taskDetails + \"\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    String taskDetails \u003d String.format(\"T | %d | %s |%s\","
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                            task.isDone ? 1 : 0, task.getDescription(), ((Deadline) task).getDate());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    content +\u003d taskDetails + \"\\n\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    String taskDetails \u003d String.format(\"T | %d | %s |%s\","
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                            task.isDone ? 1 : 0, task.getDescription(), ((Event) task).getAt());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                    content +\u003d taskDetails + \"\\n\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            fw.write(content);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeMingDe": 85
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    public void doneTask() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeMingDe": 32
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeMingDe": 5
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LeeMingDe": 15
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeMingDe": 4
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "add book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "LeeMingDe": 3
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "set PATH\u003d%PATH%;C:\\Program Files\\Java\\jdk-11.0.8\\bin"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "SET MY_PATH\u003dC:\\Users\\Lee\\Dropbox\\Y2S1\\CS2103T\\Duke"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "if not exist \"%MY_PATH%\\bin\" mkdir \"%MY_PATH%\\bin\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "javac  -cp \"%MY_PATH%\\src\\main\\java\" -Xlint:none -d \"%MY_PATH%\\bin\" \"%MY_PATH%\\src\\main\\java\\*.java\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "java -classpath \"%MY_PATH%\\bin\" main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeMingDe"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "LeeMingDe": 10,
      "-": 16
    }
  }
]
