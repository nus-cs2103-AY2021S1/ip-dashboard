[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 45,
      "kimberlyohq": 16
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "T | 1 | borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "T | 1 | return book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "T | 1 | watch a movie"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "D | 0 | finish level-8 | 23-08-2020 12:00"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "D | 0 | add-tags | 23-08-2020 12:00"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "D | 1 | finish A-More-OOP | 25-08-2020 14:00"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "D | 0 | finish A-Package | 25-08-2020 15:00"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "T | 1 | Finish A-Gradle"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "T | 1 | Finish A-Checkstyle"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 9
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " * Entry point of Duke chatbot."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " * Initializes the chatbot and starts interaction with user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private static final String DATA_PATHNAME \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Constructs a new instance of a Duke object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        storage \u003d new Storage(DATA_PATHNAME);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Runs the program until termination."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            return ui.printReply(e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Runs the Duke Chatbot."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "kimberlyohq": 64
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 9
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 31
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.exception.InvalidInputException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.exception.InvalidTaskTypeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param fullCommand Full user input string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @return The command to be executed based on user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @throws InvalidInputException If description is empty for adding new tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @throws InvalidCommandException If command is not defined."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @throws InvalidTaskTypeException if task is invalid."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    static Command parse (String fullCommand)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        throws InvalidInputException, InvalidCommandException, InvalidTaskTypeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        String[] commandArr \u003d fullCommand.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        switch(commandArr[0]) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            if (commandArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                throw new InvalidInputException(\"☹ OOPS!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            return prepareAdd(commandArr[0], commandArr[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            if (commandArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                throw new InvalidInputException(\"☹ OOPS!!! An index for a task needs to be provided\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            return prepareDelete(commandArr[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            if (commandArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                throw new InvalidInputException(\"☹ OOPS!!! An index for a task needs to be provided\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            return prepareDone(commandArr[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            return new FindCommand(commandArr[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            throw new InvalidCommandException(\"Invalid Command: \" + commandArr[0]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Parses argument in the context of adding a new task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param command Type of task added."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param taskDetails Details of task to be added."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @return The prepared command to add new task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @throws InvalidInputException If taskDetails is empty or lacking date or timing for Deadline and Event Task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @throws InvalidTaskTypeException If command is not deadline, todo, event."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    static Command prepareAdd(String command, String taskDetails)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        throws InvalidInputException, InvalidTaskTypeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        case \"todo\": {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            String task \u003d taskDetails.trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            if (task.isEmpty()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                throw new InvalidInputException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            return new AddCommand(task, null, TaskType.TODO);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        case \"deadline\": {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            String[] task \u003d taskDetails.trim().split(\" /by \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            if (task[0].isEmpty()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                throw new InvalidInputException(\"☹ OOPS!!! The description of a deadline task cannot be empty.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            if (task.length \u003c 2) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                throw new InvalidInputException(\"☹ OOPS!!! The deadline of a deadline task cannot be empty.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            return new AddCommand(task[0], task[1], TaskType.DEADLINE);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        case \"event\": {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            String[] task \u003d taskDetails.trim().split(\" /at \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            if (task[0].isEmpty()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                throw new InvalidInputException(\"☹ OOPS!!! The description of an event task cannot be empty.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            if (task.length \u003c 2) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                throw new InvalidInputException(\"☹ OOPS!!! The timing of an event task cannot be empty.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            return new AddCommand(task[0], task[1], TaskType.EVENT);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            throw new InvalidTaskTypeException(\"Invalid task type:\" + command);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Parses argument in the context of deleting a new task."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param index Index of task to be deleted."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @return Returns a prepared command to delete specified task."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    static Command prepareDelete(String index) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        int taskIndex \u003d Integer.valueOf(index);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return new DeleteCommand(taskIndex);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Parses argument in the context of marking a task as completed."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param index Index of task to be mark as done."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @return Returns a prepared command to mark task as completed."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    static Command prepareDone(String index) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        int taskIndex \u003d Integer.valueOf(index);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return new DoneCommand(taskIndex);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 120
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.exception.DukeStorageException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.task.DeadlineTask;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.task.EventTask;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.task.TodoTask;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " * Represents the file used to store task data."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Constructs a new instance of a Storage object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param filePath Location of file used to store task data."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    Storage(String filePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            Path file \u003d Paths.get(this.filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            if (!Files.exists(file)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                // Check if directory exists"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                Path directoryPath \u003d Paths.get(\"data/\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                if (!Files.exists(directoryPath)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    Files.createDirectory(directoryPath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                Files.createFile(file);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            System.out.println(exception.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    String convertTaskToText (Task task) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        if (task instanceof TodoTask) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            return \"T\" + \" | \" + (task.getIsDone() ? \"1\" : \"0\") + \" | \" + task.getDescription();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        } else if (task instanceof DeadlineTask) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            return \"D\" + \" | \" + (task.getIsDone() ? \"1\" : \"0\") + \" | \" + task.getDescription() + \" | \""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    + ((DeadlineTask) task).getDeadline().format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            return \"E\" + \" | \" + (task.getIsDone() ? \"1\" : \"0\") + \" | \" + task.getDescription() + \" | \""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    + ((EventTask) task).getTiming().format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Saves the tasks data to storage file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param tasks List of tasks to be saved."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @throws DukeStorageException If there is error saving tasks to file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public void writeToFile(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        FileWriter fw;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            List\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                fileContent.add(convertTaskToText(task));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            Files.write(Paths.get(filePath), fileContent);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            throw new DukeStorageException(\"Error saving task to file\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Loads the local tasks data in storage file, then returns it."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @return Returns local tasks data in storage file as TaskList."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @throws DukeStorageException If storage file is not found."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        File localTasks \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            // Create Scanner using file as source"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            Scanner sc \u003d new Scanner(localTasks);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                String[] details \u003d sc.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                switch (details[0]) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    TodoTask todoTask \u003d new TodoTask(details[2]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    if (details[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        todoTask.markAsDone();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    tasks.add(todoTask);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    DeadlineTask deadlineTask \u003d new DeadlineTask(details[2], details[3]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    if (details[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        deadlineTask.markAsDone();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    tasks.add(deadlineTask);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    EventTask eventTask \u003d new EventTask(details[2], details[3]);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    if (details[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        eventTask.markAsDone();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    tasks.add(eventTask);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    throw new DukeException(\"Invalid Task Type\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            throw new DukeStorageException(\"File not found\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 129
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.exception.InvalidTaskTypeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.task.DeadlineTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.task.EventTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.task.TodoTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " * Represents the list of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Constructs a new instance of TaskList with attributes defined in parameters."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param tasks List of tasks in local storage file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Constructs a new instance of TaskList with an empty TaskList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Find tasks matching keyword."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param keyword Keyword of task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @return Returns a list of tasks that matches keyword."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public List\u003cTask\u003e findTasks(String keyword) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        List\u003cTask\u003e searchResults \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                searchResults.add(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return searchResults;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Adds a new task to TaskList."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param task Description of task to be added."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param date Date for deadline and event tasks."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param taskType Type of tasks to be added."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @throws DukeException If taskType is not defined."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public void addTask(String task, String date, TaskType taskType) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            t \u003d new TodoTask(task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            t \u003d new DeadlineTask(task, date);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            t \u003d new EventTask(task, date);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            throw new InvalidTaskTypeException(\"Invalid Task Type\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Deletes a task in TaskList."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param index Index of task to be deleted."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @throws InvalidIndexException If index \u003c 1 or index \u003e\u003d tasks.size()."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public void deleteTask(int index) throws InvalidIndexException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        if (index \u003e tasks.size() || index \u003c 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            throw new InvalidIndexException(\"☹ OOPS!!! There is no such task.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        tasks.remove(index - 1);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Marks a task in TaskList as done."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param index Index of task to be marked as done."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @throws InvalidIndexException If index \u003c 1 or index \u003e\u003d tasks.size()."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public void completeTask(int index) throws InvalidIndexException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        if (index \u003e tasks.size() || index \u003c 1) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            throw new InvalidIndexException(\"☹ OOPS!!! There is no such task.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        Task completedTask \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        completedTask.markAsDone();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Retrieves a task in TaskList."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param index Index of task to be retrieved."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @return Task"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public Task get(int index) throws InvalidIndexException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        if (index \u003e\u003d tasks.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            throw new InvalidIndexException(\"☹ OOPS!!! There is no such task.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 130
    }
  },
  {
    "path": "src/main/java/duke/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 7
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "/** Represents Ui of application that is responsible for interactions with user. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Constructs a new instance of a Ui object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Generates and print welcome message when Duke is initialized."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    void showWelcome() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Generates and print exit message when user exits Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String exit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Prints all the tasks in current task list when user inputs \"list\" command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param tasks TaskList of current user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String listTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        if (tasks.size() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            String message \u003d \"Sorry, your task list is empty.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            System.out.println(message);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        String message \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            String task \u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                task \u003d i + \". \" + tasks.get(i - 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            } catch (InvalidIndexException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                showError(e.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            message +\u003d task + \"\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Prints tasks matching find keyword after Find command is executed."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param tasks Tasks that matches the Find command keyword."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String printSearchResults(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        if (tasks.size() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            String message \u003d \"Sorry, there are no matching tasks with that keyword\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            System.out.println(message);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            String result \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                String task \u003d i + \". \" + tasks.get(i - 1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                result +\u003d task + \"\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            System.out.println(result);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Prints message when user\u0027s command has been executed."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param message Message to be print."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String printReply(String message) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Read the input entered by user."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @return Returns user\u0027s input as String value."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    String readCommand() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    };"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        System.out.println(\"Error loading data\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public Scanner getScanner() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return this.scanner;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 109
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.TaskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "/***"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " * Adds a task to Tasklist."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Message to be printed when AddCommand is executed successfully."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Got it. I\u0027ve added this task:\\n%s\\n%s\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private TaskType type;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Constructs a new instance of an AddCommand."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param description Description of task to be added."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param date Date of deadline or event task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param type Type of task to be added."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public AddCommand(String description, String date, TaskType type) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Executes the add command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param taskList TaskList associated with command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param ui Ui associated with command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param storage Storage associated with command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @throws DukeException If there is error during execution of command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        taskList.addTask(description, date, type);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        storage.writeToFile(taskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return ui.printReply(String.format(MESSAGE_SUCCESS, taskList.get(taskList.size() - 1), taskList));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Indicates whether Duke chatbot is still running."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String date() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 67
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param taskList TaskList associated with command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param ui Ui associated with command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param storage Storage associated with command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @throws DukeException If there is error during execution of command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Indicates whether Duke chatbot is still running."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @return Boolean to determine state of Duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 28
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " * Deletes a task from Tasklist."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Message to be printed when DeleteCommand is executed successfully."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Noted. I\u0027ve removed this task:\\n%s\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Constructs a new instance of a DeleteCommand."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param index Index of task to be deleted."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Executes the delete command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param taskList TaskList associated with command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param ui Ui associated with command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param storage Storage associated with command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @throws DukeException If there is error during execution of command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        Task deletedTask \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        taskList.deleteTask(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        storage.writeToFile(taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return ui.printReply(String.format(MESSAGE_SUCCESS, deletedTask));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Indicates whether Duke chatbot is still running."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return this.index;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 54
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " * Marks a task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Message to be printed when DoneCommand is executed successfully."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Nice! I\u0027ve marked this task as done:\\n%s\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Constructs a new instance of a DoneCommand."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param index Index of task to be mark as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Executes the delete command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param taskList TaskList associated with command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param ui Ui associated with command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param storage Storage associated with command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @throws DukeException If there is error during execution of command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        Task completedTask \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        taskList.completeTask(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        storage.writeToFile(taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return ui.printReply(String.format(MESSAGE_SUCCESS, completedTask));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Indicates whether Duke chatbot is still running."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return this.index;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 54
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Executes the exit command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param taskList TaskList associated with command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param ui Ui associated with command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param storage Storage associated with command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @throws DukeException If there is error during execution of command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return ui.exit();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Indicates whether Duke chatbot is still running."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 29
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Executes the find command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param taskList TaskList associated with command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param ui Ui associated with command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param storage Storage associated with command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @throws DukeException If there is error during execution of command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        List\u003cTask\u003e searchResults \u003d taskList.findTasks(keyword);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return ui.printSearchResults(searchResults);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String getKeyword() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return this.keyword;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 38
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " * Lists the tasks in TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Executes the list command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param taskList TaskList associated with command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param ui Ui associated with command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param storage Storage associated with command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @throws DukeException If there is error during execution of command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return ui.listTasks(taskList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Indicates whether Duke chatbot is still running."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 31
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeStorageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class DukeStorageException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public DukeStorageException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public InvalidIndexException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public InvalidInputException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidTaskTypeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class InvalidTaskTypeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public InvalidTaskTypeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 7
    }
  },
  {
    "path": "src/main/java/duke/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Deadline of task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private LocalDateTime deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Constructs a new instance of an DeadlineTask."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param description Description of deadline task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param deadline Deadline of deadline task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @throws DukeException If deadline is not in the form of \"dd-MM-yyyy HH:mm\"."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public DeadlineTask(String description, String deadline) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            this.deadline \u003d LocalDateTime.parse(deadline, formatter);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        } catch (DateTimeParseException exception) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            System.out.println(deadline);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            throw new DukeException(\"Error! Invalid date format, Please enter the date in the format dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public LocalDateTime getDeadline() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return this.deadline;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + description + \" (by: \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                + deadline.format(DateTimeFormatter.ofPattern(\"d MMM yyyy, hh:mm a\")) + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 46
    }
  },
  {
    "path": "src/main/java/duke/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " * Represents an event task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Date of event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private LocalDateTime timing;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Constructs a new instance of an EventTask."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param description Description of event task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param timing Timing of event task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @throws DukeException If timing is not in the form of \"dd-MM-yyyy HH:mm\"."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public EventTask(String description, String timing) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            this.timing \u003d LocalDateTime.parse(timing, formatter);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        } catch (DateTimeParseException exception) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            throw new DukeException(\"Error! Invalid date format, Please enter the date in the format dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public LocalDateTime getTiming() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return this.timing;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + description + \" (by: \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                + timing.format(DateTimeFormatter.ofPattern(\"d MMM yyyy, hh:mm a\")) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 45
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " * Represents a Task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /** Description of task. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /** Status of task. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Constructs a new instance of a Task with attributes defined in parameters."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Retrieves the status icon of task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @return A string value of status icon."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Marks the task as completed."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 50
    }
  },
  {
    "path": "src/main/java/duke/task/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " * Represents a TodoTask."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Constructs a new instance of a TodoTask."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * @param description Description of task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 19
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 63
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public void setDuke(Duke duke) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 52
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 19
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public void getTaskSize_success() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        String expected \u003d \"Now you have 0 tasks in the list.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        assertEquals(expected, taskList.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public void deleteTask_invalidIndex_exception() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            taskList.deleteTask(0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        } catch (InvalidIndexException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            assertEquals(\"☹ OOPS!!! There is no such task.\", e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 26
    }
  },
  {
    "path": "src/test/java/duke/duketest/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke.duketest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public void initialiseDuke() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        assertEquals(\"Initialised\", \"Initialised\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 15
    }
  },
  {
    "path": "src/test/java/duke/tasktest/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "package duke.tasktest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import duke.task.TodoTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public void addTodoTask_success() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        TodoTask newTodoTask \u003d new TodoTask(\"description\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        String expected \u003d \"[T][✘] description\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        assertEquals(expected, newTodoTask.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public void markTodoTaskAsDone_success() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        TodoTask newTodoTask \u003d new TodoTask(\"description\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        newTodoTask.markAsDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        String expected \u003d \"[T][✓] description\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        assertEquals(expected, newTodoTask.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 26
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 8
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "kimberlyohq": 1
    }
  }
]
