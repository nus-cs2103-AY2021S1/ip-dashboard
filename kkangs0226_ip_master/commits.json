{
  "authorDailyContributionsMap": {
    "kkangs0226": [
      {
        "date": "2020-08-18",
        "commitResults": [
          {
            "hash": "469e0bdab069e14e092ff6f4e3f3ba34f320f03e",
            "messageTitle": "Add Level 1 features greet, echo, exit",
            "messageBody": "There is a basic greeting feature but no echo and exit features.\n\nA more personlized chat bot with a unique logo and tone will be more fun.\n\nLet\u0027s\n* add echo and exit features\n* change the logo and tone of the chat bot\n",
            "tags": [
              "Level-1"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 47,
                "deletions": 6
              }
            }
          },
          {
            "hash": "13587f27ab0a8415ca3e6be5201391b8f59cab59",
            "messageTitle": "Add Level 2 features add, list",
            "messageBody": "The chat bot can only echo commands, is unable to store user input.\n\nAdding add and list feature would allow chat bot to store user input\nand display past input of user on demand, engaging user.\n\nLet\u0027s\n* implement add and list feature\n",
            "tags": [
              "Level-2"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 23,
                "deletions": 3
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-20",
        "commitResults": [
          {
            "hash": "593a729a8ddfc46566bef9d831477c8a0072d32e",
            "messageTitle": "Add Level 3 feature \u0027mark as done\u0027",
            "messageBody": "User can only add tasks but cannot mark a task as done.\n\nAdding this future allows users to give \u0027done\u0027 command which\nmakes chat bot more useful to users when keeping track of their\ntasks.\n\nLet\u0027s\n* add \u0027mark as done\u0027 feature\n* add error catching methods to show error message when done command\n  is executed with out of bounds index or a non-integer\n",
            "tags": [
              "Level-3"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 77,
                "deletions": 7
              }
            }
          },
          {
            "hash": "32ffe6e29473f24944da6c7c60cdb9f8cb77ce81",
            "messageTitle": "Add Level 4 features todos, events, dealines",
            "messageBody": "User can only add one type of task, and cannot differentiate between\ndifferent types of tasks in their list.\n\nAdding child classes to Task - Todo, Event, Deadline would help user\nadd different types of tasks to their list. Printing the number of\ntasks in the user\u0027s list after addition of every task will also improve\nuser experience.\n\nLet\u0027s\n* implement child classes of Task - Todo, Event, Deadline\n* add a method to print the  number of tasks in the message after adding\n  every task to the list\n",
            "tags": [
              "Level-4"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 121,
                "deletions": 31
              }
            }
          },
          {
            "hash": "93da97d3ae8808a06cf8b0be6ccfaa9f68a532e8",
            "messageTitle": "Add Automated Text UI Testing",
            "messageBody": "Chat bot has no automated testing function and requires testing through\nindividual commands.\n\nAdding automated testing function would allow faster and more efficient\ntesting of the chat bot.\n\nLet\u0027s\n* add automated text UI testing to the program using I/O redirection\ntechnique\n",
            "tags": [
              "A-TextUiTesting"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 5,
                "deletions": 0
              },
              "sh": {
                "insertions": 2,
                "deletions": 2
              }
            }
          },
          {
            "hash": "5e8b48186ca5a8c3aa1d6fe0e5b667f24cb56eea",
            "messageTitle": "Add Level 5 feature error handling",
            "messageBody": "Chat bot is unable to handle invalid user input and throws exception,\nwhich affects user experience.\n\nImplementing a DukeException to handle invalid input would improve user\nexperience as customisation of error messages is possible.\n\nLet\u0027s\n* create a DukeException class to deal with invalid input\n* handle invalid done command with out of bounds index\n* handle invalid task command\n* handle empty todo command\n",
            "tags": [
              "Level-5"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 3,
                "deletions": 5
              },
              "java": {
                "insertions": 2,
                "deletions": 0
              }
            }
          },
          {
            "hash": "7597fb4d8a0f397872bd865139109f961c96cc87",
            "messageTitle": "Add Level 6 feature delete",
            "messageBody": "Chat bot only allows for adding tasks but does not support deletion\nof tasks.\n\nAdding a delete feature to the chat bot would make it more useful\nto users.\n\nLet\u0027s\n* add a new delete method to handle delete command\n* add a new delete message to print to user when a task is deleted\n",
            "tags": [
              "Level-6"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 11,
                "deletions": 3
              },
              "java": {
                "insertions": 79,
                "deletions": 43
              }
            }
          },
          {
            "hash": "23e6f22f392e3041fce9e34b0e64491496fb463d",
            "messageTitle": "Implement enums for commands",
            "messageBody": "Code in main Duke class is long because of multiple boolean methods to check\ntype of command.\n\nUsing enums will shorten code and make it more readable.\n\nLet\u0027s\n* implement InputCommands enum to represent command type\n",
            "tags": [
              "A-Enums"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 54,
                "deletions": 58
              }
            }
          }
        ]
      }
    ]
  },
  "authorFileTypeContributionMap": {
    "kkangs0226": {
      "java": 261,
      "md": 0,
      "fxml": 0,
      "sh": 2,
      "bat": 0,
      "gradle": 0,
      "txt": 11
    }
  },
  "authorContributionVariance": {
    "kkangs0226": 30122.98
  },
  "authorDisplayNameMap": {
    "kkangs0226": "KANG.. MIN"
  }
}
