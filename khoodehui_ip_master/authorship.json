[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khoodehui": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    private static ArrayList\u003cTask\u003e todoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        sayHi();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        while(sc.hasNext()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "            processInput(input);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    private static void sayHi() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        String logo \u003d \",--.                           ,--. \\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                \"|  |-.  ,---. ,--.--. ,---.  ,-|  | \\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                \"| .-. \u0027| .-. ||  .--\u0027| .-. :\u0027 .-. | \\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                \"| `-\u0027 |\u0027 \u0027-\u0027 \u0027|  |   \\\\   --.\\\\ `-\u0027 | \\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                \" `---\u0027  `---\u0027 `--\u0027    `----\u0027 `---\u0027  \\n\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        StringBuilder message \u003d new StringBuilder(\"Hi I\u0027m\\n\").append(logo).append(\"Please give me something to do.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        botOutput(message);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    private static void processInput(String input) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        String[] inputArr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        Operation op;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "            op \u003d Operation.valueOf(inputArr[0].toUpperCase()); //type of operation"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "            op \u003d Operation.INVALID;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "            switch (op) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                case BYE:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    handleBye();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    handleList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                case DONE: {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    int taskId \u003d Integer.parseInt(inputArr[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    handleDone(taskId);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                case EVENT: {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    if (inputArr.length \u003c 2) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                        throw new DukeException(\"You have to tell me what\u0027s your task!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    String taskBody \u003d inputArr[1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    handleAddTask(op, taskBody);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    if (inputArr.length \u003c 2) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                        throw new DukeException(\"You have to tell me what to delete!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    int taskId \u003d Integer.parseInt(inputArr[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    if (taskId \u003e todoList.size()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                        throw new DukeException(\"There\u0027s no task with this ID!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    handleDelete(taskId);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                case INVALID:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    throw new DukeException(\"Sorry I don\u0027t know what this means!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "            botOutput(e.getMessage());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    private static void handleBye() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        botOutput(\"Come back soon!! I\u0027m always bored...\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    private static void handleList() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        StringBuilder message \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        for (int i \u003d 0; i \u003c todoList.size(); i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "            message.append(i + 1) .append(\". \").append(todoList.get(i));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "            if (i !\u003d todoList.size() - 1) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                message.append(\"\\n\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        botOutput(message);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    private static void handleAddTask(Operation op, String taskBody) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        switch(op) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "            case TODO: {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                task \u003d new ToDo(taskBody);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "            case DEADLINE: {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                String[] taskBodyArr \u003d taskBody.split(\" /by \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                if (taskBodyArr.length \u003c 2) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    throw new DukeException(\"You need to tell me when this task is due!\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                task \u003d new Deadline(taskBodyArr[0], taskBodyArr[1]);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "            case EVENT: {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                String[] taskBodyArr \u003d taskBody.split(\" /at \");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                if (taskBodyArr.length \u003c 2) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                    throw new DukeException(\"You need to tell me when this event is happening!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                task \u003d new Event(taskBodyArr[0], taskBodyArr[1]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        todoList.add(task);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        StringBuilder message \u003d new StringBuilder(\"Alright! I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        message.append(task);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        message.append(\"\\nNow you have \").append(todoList.size()).append(\" task(s) in your list.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        botOutput(message);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    private static void handleDone(int taskId) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        Task task \u003d todoList.get(taskId - 1);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        StringBuilder message \u003d new StringBuilder(\"Nice! I\u0027ve marked this task as done:\\n\").append(task);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        botOutput(message);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    private static void handleDelete(int taskId) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        Task task \u003d todoList.get(taskId - 1);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        todoList.remove(task);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        StringBuilder message \u003d new StringBuilder(\"Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        message.append(task);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        message.append(\"\\nNow you have \").append(todoList.size()).append(\" task(s) in the list.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        botOutput(message);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    private static void botOutput(String message) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        String divider \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    private static void botOutput(StringBuilder message) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        botOutput(message.toString());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khoodehui": 150,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khoodehui": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khoodehui": 13
    }
  },
  {
    "path": "src/main/java/Operation.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "public enum Operation {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    TODO, DEADLINE, EVENT, LIST, DONE, DELETE, BYE, INVALID;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khoodehui": 3
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khoodehui": 22
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoodehui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khoodehui": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "khoodehui": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khoodehui"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "khoodehui": 1,
      "-": 36
    }
  }
]
