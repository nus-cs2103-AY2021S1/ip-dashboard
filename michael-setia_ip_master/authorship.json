[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"    String javaFxVersion \u003d \u002711.0.1\u0027"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"michael-setia"},"content":"    mainClassName \u003d \"duke.main.Duke\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"michael-setia"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"michael-setia":17,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"![Popii Logo](images/Popii Logo.png)"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":"**Popii** is a desktop app for managing tasks such as todo, deadline, and events."},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"It is optimized for use via a Command Line Interface(CLI) while at the same"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"time still keeping the benefits of a Graphical User Interface (GUI). If you"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"like typing, Popii can get your task management done quicker than traditional"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"GUI apps."},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"- Getting started"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"- Features"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"  - Adding a task"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"    - Adding a todo: `todo`"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"    - Adding a deadline: `deadline`"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"    - Adding an event: `event`"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"  - Listing all tasks: `list`"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"  - Finding a task: `find`"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"  - Marking a task as done: `done`"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"  - Deleting a task: `delete`"},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"  - Exiting the program: `bye`"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"  - Saving the data"},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"- FAQ"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"- Command summary"},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"## Getting started"},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"1. Ensure that you have Java `11` or above installed in your PC."},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"2. Download the latest `popii.jar` from [here](https://github.com/michael-setia/ip/releases/tag/v0.1)."},{"lineNumber":30,"author":{"gitId":"michael-setia"},"content":"3. Copy the file to the folder that you want to use as the *home folder* for your Popii."},{"lineNumber":31,"author":{"gitId":"michael-setia"},"content":"4. Double-click the file to start the app. The GUI similar to image below should appear in a few seconds."},{"lineNumber":32,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":33,"author":{"gitId":"michael-setia"},"content":"![Sample GUI](images/SampleUi.png)"},{"lineNumber":34,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":35,"author":{"gitId":"michael-setia"},"content":"5. Type the command in the *Input here!* box and press Enter or click the *Ask Popii* button."},{"lineNumber":36,"author":{"gitId":"michael-setia"},"content":"   Some example commands you can try:"},{"lineNumber":37,"author":{"gitId":"michael-setia"},"content":"   - `todo read manga` : Adds a task with *read manga* as its description."},{"lineNumber":38,"author":{"gitId":"michael-setia"},"content":"   - `list` : Displays all the tasks that you have in your list."},{"lineNumber":39,"author":{"gitId":"michael-setia"},"content":"   - `done 1` : Marks task number 1 as done."},{"lineNumber":40,"author":{"gitId":"michael-setia"},"content":"   - `find laundry` : Finds all tasks based on their description using the keyword *laundry*."},{"lineNumber":41,"author":{"gitId":"michael-setia"},"content":"6. Refer to the [Features](https://michael-setia.github.io/ip/#features) below for more details of each command.  "},{"lineNumber":42,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"michael-setia"},"content":"Notes about the command format:"},{"lineNumber":46,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":47,"author":{"gitId":"michael-setia"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user."},{"lineNumber":48,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":49,"author":{"gitId":"michael-setia"},"content":"## Adding a task"},{"lineNumber":50,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":51,"author":{"gitId":"michael-setia"},"content":"There are 3 types of task that can be added to the list:"},{"lineNumber":52,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":53,"author":{"gitId":"michael-setia"},"content":"- **todo** is a task that that has no exact timing."},{"lineNumber":54,"author":{"gitId":"michael-setia"},"content":"- **deadline** is a task that must be done by a specific date."},{"lineNumber":55,"author":{"gitId":"michael-setia"},"content":"- **event** is a task that must be done at certain date."},{"lineNumber":56,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":57,"author":{"gitId":"michael-setia"},"content":"#### Adding a todo : `todo`"},{"lineNumber":58,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":59,"author":{"gitId":"michael-setia"},"content":"Adds a todo task to the list.  "},{"lineNumber":60,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":61,"author":{"gitId":"michael-setia"},"content":"Format: `todo DESCRIPTION`  "},{"lineNumber":62,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":63,"author":{"gitId":"michael-setia"},"content":"Examples:"},{"lineNumber":64,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":65,"author":{"gitId":"michael-setia"},"content":"- `todo do laundry`"},{"lineNumber":66,"author":{"gitId":"michael-setia"},"content":"- `todo watch episode 8 of NGE`"},{"lineNumber":67,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":68,"author":{"gitId":"michael-setia"},"content":"#### Adding a deadline : `deadline`"},{"lineNumber":69,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":70,"author":{"gitId":"michael-setia"},"content":"Adds a deadline task to the list.  "},{"lineNumber":71,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":72,"author":{"gitId":"michael-setia"},"content":"Format: `deadline DESCRIPTION /by YYYY-MM-DD`  "},{"lineNumber":73,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":74,"author":{"gitId":"michael-setia"},"content":"Examples:"},{"lineNumber":75,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":76,"author":{"gitId":"michael-setia"},"content":"- `deadline CS2105 assignment 1 /by 2020-09-10`"},{"lineNumber":77,"author":{"gitId":"michael-setia"},"content":"- `deadline submit CS2100 lab report 4 /by 2020-09-17`"},{"lineNumber":78,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":79,"author":{"gitId":"michael-setia"},"content":"#### Adding an event : `event`"},{"lineNumber":80,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":81,"author":{"gitId":"michael-setia"},"content":"Adds an event task to the list.  "},{"lineNumber":82,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":83,"author":{"gitId":"michael-setia"},"content":"Format: `event DESCRIPTION /at YYYY-MM-DD`  "},{"lineNumber":84,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":85,"author":{"gitId":"michael-setia"},"content":"Examples:"},{"lineNumber":86,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":87,"author":{"gitId":"michael-setia"},"content":"- `event project meeting /at 2020-09-19`"},{"lineNumber":88,"author":{"gitId":"michael-setia"},"content":"- `event programming workshop /at 2020-12-01`"},{"lineNumber":89,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":90,"author":{"gitId":"michael-setia"},"content":"### Listing all tasks : `list`"},{"lineNumber":91,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":92,"author":{"gitId":"michael-setia"},"content":"Displays all tasks in the list.  "},{"lineNumber":93,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":94,"author":{"gitId":"michael-setia"},"content":"Format: `list`"},{"lineNumber":95,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":96,"author":{"gitId":"michael-setia"},"content":"- Each task has a number as an identifier."},{"lineNumber":97,"author":{"gitId":"michael-setia"},"content":"- You can use this task number for other command."},{"lineNumber":98,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":99,"author":{"gitId":"michael-setia"},"content":"### Finding a task : `find`"},{"lineNumber":100,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":101,"author":{"gitId":"michael-setia"},"content":"Finds all tasks that have description which contains the keyword as its prefix.  "},{"lineNumber":102,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":103,"author":{"gitId":"michael-setia"},"content":"Format: `find KEYWORD`"},{"lineNumber":104,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":105,"author":{"gitId":"michael-setia"},"content":"- Only the first word of KEYWORD will be considered when searching for a particular task."},{"lineNumber":106,"author":{"gitId":"michael-setia"},"content":"  "},{"lineNumber":107,"author":{"gitId":"michael-setia"},"content":"Examples:"},{"lineNumber":108,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":109,"author":{"gitId":"michael-setia"},"content":"- `find homework` displays a task with description \"math homework 2\"."},{"lineNumber":110,"author":{"gitId":"michael-setia"},"content":"- `find call` displays a task with description \"call alice\""},{"lineNumber":111,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":112,"author":{"gitId":"michael-setia"},"content":"### Marking a task as done : `done`"},{"lineNumber":113,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":114,"author":{"gitId":"michael-setia"},"content":"Marks a task as done.  "},{"lineNumber":115,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":116,"author":{"gitId":"michael-setia"},"content":"Format: `done TASK_NUMBER`"},{"lineNumber":117,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":118,"author":{"gitId":"michael-setia"},"content":"- Refer from the latest list to get the `TASK_NUMBER`."},{"lineNumber":119,"author":{"gitId":"michael-setia"},"content":"- Task that is marked as done will have the symbol `V` when displayed."},{"lineNumber":120,"author":{"gitId":"michael-setia"},"content":"  "},{"lineNumber":121,"author":{"gitId":"michael-setia"},"content":"Examples:"},{"lineNumber":122,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":123,"author":{"gitId":"michael-setia"},"content":"- `done 3` marks the 3rd task in the list as done."},{"lineNumber":124,"author":{"gitId":"michael-setia"},"content":"- `done 5` marks the 5th task in the list as done."},{"lineNumber":125,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":126,"author":{"gitId":"michael-setia"},"content":"### Deleting a task : `delete`"},{"lineNumber":127,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":128,"author":{"gitId":"michael-setia"},"content":"Deleting a task: `delete`  "},{"lineNumber":129,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":130,"author":{"gitId":"michael-setia"},"content":"Format: `delete TASK_NUMBER`"},{"lineNumber":131,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":132,"author":{"gitId":"michael-setia"},"content":"- Refer from the latest list to get the `TASK_NUMBER`."},{"lineNumber":133,"author":{"gitId":"michael-setia"},"content":"- Deleting a task will change the task number of all tasks that comes after the deleted task."},{"lineNumber":134,"author":{"gitId":"michael-setia"},"content":"  "},{"lineNumber":135,"author":{"gitId":"michael-setia"},"content":"Examples:"},{"lineNumber":136,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":137,"author":{"gitId":"michael-setia"},"content":"- `delete 1` deletes the 1st task in the list."},{"lineNumber":138,"author":{"gitId":"michael-setia"},"content":"- `delete 10` deletes the 10th task in the list."},{"lineNumber":139,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":140,"author":{"gitId":"michael-setia"},"content":"### Exiting the program : `bye`"},{"lineNumber":141,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":142,"author":{"gitId":"michael-setia"},"content":"Exits the program and says bye to Popii.  "},{"lineNumber":143,"author":{"gitId":"michael-setia"},"content":"Format: `bye`"},{"lineNumber":144,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":145,"author":{"gitId":"michael-setia"},"content":"### Saving the data"},{"lineNumber":146,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":147,"author":{"gitId":"michael-setia"},"content":"Popii automatically saves the list in the hard disk or solid state drive after any command that changes the "},{"lineNumber":148,"author":{"gitId":"michael-setia"},"content":"data."},{"lineNumber":149,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":150,"author":{"gitId":"michael-setia"},"content":"## FAQ"},{"lineNumber":151,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":152,"author":{"gitId":"michael-setia"},"content":"Q : Where is the list stored?  "},{"lineNumber":153,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":154,"author":{"gitId":"michael-setia"},"content":"A : Popii stores the list in a file named `tasks.txt` under the folder `data`."},{"lineNumber":155,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":156,"author":{"gitId":"michael-setia"},"content":"Q : Where is the `data` folder?  "},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"michael-setia"},"content":"A : It should be under the home folder that you choose to place the .jar file i.e. it should be in the same directory as the .jar file."},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"michael-setia"},"content":"Q : Can I edit the `tasks.txt` file?  "},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"michael-setia"},"content":"A : You can edit it as long you understand the format. However, it is not recommended since one little mistake can cause error to the program."},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"michael-setia"},"content":"Q : How do I transfer my data to other PC?  "},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"michael-setia"},"content":"A : Move the folder `data` to the new PC and place it in the same directory as the .jar file."},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"michael-setia"},"content":"## Command Summary"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"michael-setia"},"content":"Command | Format | Examples"},{"lineNumber":171,"author":{"gitId":"michael-setia"},"content":"------- | ------ | --------"},{"lineNumber":172,"author":{"gitId":"michael-setia"},"content":"`todo` | `todo DESCRIPTION` | `todo read chapter 7`"},{"lineNumber":173,"author":{"gitId":"michael-setia"},"content":"`deadline` | `deadline DESCRIPTION /by YYYY-MM-DD` | `deadline team project /by 2020-11-15`"},{"lineNumber":174,"author":{"gitId":"michael-setia"},"content":"`event` | `event DESCRIPTION /at YYYY-MM-DD` | `event episode 11 discussion /at 2021-01-02`"},{"lineNumber":175,"author":{"gitId":"michael-setia"},"content":"`list` | `list` | "},{"lineNumber":176,"author":{"gitId":"michael-setia"},"content":"`find` | `find KEYWORD` | `find cook`"},{"lineNumber":177,"author":{"gitId":"michael-setia"},"content":"`done` | `done TASK_NUMBER` | `done 12`"},{"lineNumber":178,"author":{"gitId":"michael-setia"},"content":"`delete` | `delete TASK_NUMBER` | `delete 3`"},{"lineNumber":179,"author":{"gitId":"michael-setia"},"content":"`bye` | `bye` | "}],"authorContributionMap":{"michael-setia":168,"-":11}},{"path":"src/main/java/duke/Ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":" * containing text from the speaker."},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"public class DialogBox extends HBox {"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"    /** Label of the dialog. **/"},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":"    /** Image that will be displayed in the dialog. **/"},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":"    private ImageView displayPicture;"},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"michael-setia"},"content":"     * Constructs a DialogBox."},{"lineNumber":31,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"michael-setia"},"content":"     * @param type Type of the DialogBox."},{"lineNumber":33,"author":{"gitId":"michael-setia"},"content":"     * @param text Text inside the dialog."},{"lineNumber":34,"author":{"gitId":"michael-setia"},"content":"     * @param img Image of the user profile."},{"lineNumber":35,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"michael-setia"},"content":"    private DialogBox(String type, String text, Image img) {"},{"lineNumber":37,"author":{"gitId":"michael-setia"},"content":"        String dialogBoxPath \u003d \"/view/UserDialogBox.fxml\";"},{"lineNumber":38,"author":{"gitId":"michael-setia"},"content":"        if (type.equals(\"duke\")) {"},{"lineNumber":39,"author":{"gitId":"michael-setia"},"content":"            dialogBoxPath \u003d \"/view/DukeDialogBox.fxml\";"},{"lineNumber":40,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"michael-setia"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"michael-setia"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(dialogBoxPath));"},{"lineNumber":43,"author":{"gitId":"michael-setia"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":44,"author":{"gitId":"michael-setia"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":45,"author":{"gitId":"michael-setia"},"content":"            fxmlLoader.load();"},{"lineNumber":46,"author":{"gitId":"michael-setia"},"content":"        } catch (IOException e) {"},{"lineNumber":47,"author":{"gitId":"michael-setia"},"content":"            e.printStackTrace();"},{"lineNumber":48,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"michael-setia"},"content":"        dialog.setText(text);"},{"lineNumber":50,"author":{"gitId":"michael-setia"},"content":"        displayPicture.setImage(img);"},{"lineNumber":51,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":53,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"michael-setia"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":55,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"michael-setia"},"content":"    private void flip() {"},{"lineNumber":57,"author":{"gitId":"michael-setia"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":58,"author":{"gitId":"michael-setia"},"content":"        Collections.reverse(tmp);"},{"lineNumber":59,"author":{"gitId":"michael-setia"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":60,"author":{"gitId":"michael-setia"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":61,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":63,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"michael-setia"},"content":"     * Gets dialog box for the user."},{"lineNumber":65,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"michael-setia"},"content":"     * @param text Text inside the dialog."},{"lineNumber":67,"author":{"gitId":"michael-setia"},"content":"     * @param img Image of the user profile."},{"lineNumber":68,"author":{"gitId":"michael-setia"},"content":"     * @return A DialogBox."},{"lineNumber":69,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"michael-setia"},"content":"    @FXML"},{"lineNumber":71,"author":{"gitId":"michael-setia"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":72,"author":{"gitId":"michael-setia"},"content":"        return new DialogBox(\"user\", text, img);"},{"lineNumber":73,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":75,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"michael-setia"},"content":"     * Gets dialog box for Duke."},{"lineNumber":77,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"michael-setia"},"content":"     * @param text Text inside the dialog."},{"lineNumber":79,"author":{"gitId":"michael-setia"},"content":"     * @param img Image of the user profile."},{"lineNumber":80,"author":{"gitId":"michael-setia"},"content":"     * @return A DialogBox."},{"lineNumber":81,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"michael-setia"},"content":"    @FXML"},{"lineNumber":83,"author":{"gitId":"michael-setia"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":84,"author":{"gitId":"michael-setia"},"content":"        var db \u003d new DialogBox(\"duke\", text, img);"},{"lineNumber":85,"author":{"gitId":"michael-setia"},"content":"        db.flip();"},{"lineNumber":86,"author":{"gitId":"michael-setia"},"content":"        return db;"},{"lineNumber":87,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":88}},{"path":"src/main/java/duke/Ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":"import duke.main.Duke;"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":" * A GUI for Duke using FXML."},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"public class Main extends Application {"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"    /** Duke to run the program. **/"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"    public void start(Stage stage) {"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"        Image applicationIcon \u003d new Image(this.getClass().getResourceAsStream(\"/images/Application Icon.png\"));"},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":"            stage.setScene(scene);"},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"            stage.setTitle(\"Popii | Your Personal Task Manager | V0.2\");"},{"lineNumber":30,"author":{"gitId":"michael-setia"},"content":"            stage.getIcons().add(applicationIcon);"},{"lineNumber":31,"author":{"gitId":"michael-setia"},"content":"            stage.show();"},{"lineNumber":32,"author":{"gitId":"michael-setia"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().showGreetingMessage();"},{"lineNumber":33,"author":{"gitId":"michael-setia"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"michael-setia"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":37}},{"path":"src/main/java/duke/Ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import duke.main.Duke;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"    /** Scroll pane. **/"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"    /** Container for the DialogBox. **/"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"    private VBox dialogContainer;"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"    /** User input. **/"},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"    private TextField userInput;"},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":"    /** Send button. **/"},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":"    private Button sendButton;"},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"    /** Duke for this MainWindow. **/"},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"    private Duke duke;"},{"lineNumber":30,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":31,"author":{"gitId":"michael-setia"},"content":"    /** Profile image of the user, **/"},{"lineNumber":32,"author":{"gitId":"michael-setia"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/You.png\"));"},{"lineNumber":33,"author":{"gitId":"michael-setia"},"content":"    /** Profile image of Duke. **/"},{"lineNumber":34,"author":{"gitId":"michael-setia"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Popii.png\"));"},{"lineNumber":35,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":36,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"michael-setia"},"content":"     * Initializes the MainWindow."},{"lineNumber":38,"author":{"gitId":"michael-setia"},"content":"     **/"},{"lineNumber":39,"author":{"gitId":"michael-setia"},"content":"    @FXML"},{"lineNumber":40,"author":{"gitId":"michael-setia"},"content":"    public void initialize() {"},{"lineNumber":41,"author":{"gitId":"michael-setia"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":42,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":44,"author":{"gitId":"michael-setia"},"content":"    /** Sets Duke"},{"lineNumber":45,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"michael-setia"},"content":"     * @param duke Duke that wants to be used for the this MainWindow."},{"lineNumber":47,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"michael-setia"},"content":"    public void setDuke(Duke duke) {"},{"lineNumber":49,"author":{"gitId":"michael-setia"},"content":"        this.duke \u003d duke;"},{"lineNumber":50,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":52,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"michael-setia"},"content":"     * Creates two dialog boxes, one for Duke and the other for the user."},{"lineNumber":54,"author":{"gitId":"michael-setia"},"content":"     * The content is based on the command and the response from the Duke."},{"lineNumber":55,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"michael-setia"},"content":"    @FXML"},{"lineNumber":57,"author":{"gitId":"michael-setia"},"content":"    private void handleUserInput() {"},{"lineNumber":58,"author":{"gitId":"michael-setia"},"content":"        String[] input \u003d userInput.getText().split(\" \");"},{"lineNumber":59,"author":{"gitId":"michael-setia"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":60,"author":{"gitId":"michael-setia"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":61,"author":{"gitId":"michael-setia"},"content":"            DialogBox.getUserDialog(userInput.getText(), userImage),"},{"lineNumber":62,"author":{"gitId":"michael-setia"},"content":"            DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":63,"author":{"gitId":"michael-setia"},"content":"        );"},{"lineNumber":64,"author":{"gitId":"michael-setia"},"content":"        userInput.clear();"},{"lineNumber":65,"author":{"gitId":"michael-setia"},"content":"        if (duke.getStatus()) {"},{"lineNumber":66,"author":{"gitId":"michael-setia"},"content":"            duke.close();"},{"lineNumber":67,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":70,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"michael-setia"},"content":"     * Shows the greeting message in a DialogBox."},{"lineNumber":72,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"michael-setia"},"content":"    public void showGreetingMessage() {"},{"lineNumber":74,"author":{"gitId":"michael-setia"},"content":"        String greetingMessage \u003d duke.getGreetingMessage();"},{"lineNumber":75,"author":{"gitId":"michael-setia"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greetingMessage, dukeImage));"},{"lineNumber":76,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":77}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import duke.main.TaskList;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":" * ByeCommand is a Command to shut down Duke."},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"public class ByeCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"     * Says bye to the user."},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"     * @param tasks The related TaskList."},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"    public void perform(TaskList tasks) {"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"        // Nothing to perform since this is a termination command."},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"     * Gets the reply after performing the Command."},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"     * @return A reply as a String based on the perform method."},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"     **/"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":"    public String getReply() {"},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"        return \" Bye! Hope to see you again in the future!\";"},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"michael-setia"},"content":"     * Checks if this is a termination Command."},{"lineNumber":31,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"michael-setia"},"content":"     * @return True."},{"lineNumber":33,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"michael-setia"},"content":"    public boolean isExit() {"},{"lineNumber":36,"author":{"gitId":"michael-setia"},"content":"        return true;"},{"lineNumber":37,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":38}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import duke.main.TaskList;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":"/** Command is used to perform a or a number of operations on the given TaskList or just simply"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":" *  prints messages to the user."},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"public abstract class Command {"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"     * Performs the desired operations."},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"     * @param tasks The related TaskList."},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"    public abstract void perform(TaskList tasks);"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"     * Gets the reply after performing the Command."},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"     * @return A reply as a String based on the perform method."},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"     **/"},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"    public abstract String getReply();"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"     * Checks if this Command is a termination Command."},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"     * @return True if this Command is a termination Command, otherwise false."},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"    public abstract boolean isExit();"},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":29}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import duke.main.TaskList;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"import duke.task.Deadline;"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":" * DeadlineCommand is Command to add a Deadline to the related TaskList."},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"    /** The Deadline that wants to be added to the TaskList. */"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"    private Deadline deadline;"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    /** TaskList that is related to this command. **/"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    private TaskList tasks;"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"     * Constructs a DeadlineCommand."},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"     * @param description The description of the Deadline to be added to the TaskList."},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"     * @param date The date of the Deadline to be added to the TaskList."},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"    public DeadlineCommand(String description, String date) {"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"        this.deadline \u003d new Deadline(description, date);"},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"     * Adds the Deadline to the related TaskList."},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"     * @param t The related TaskList."},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"michael-setia"},"content":"    public void perform(TaskList t) {"},{"lineNumber":32,"author":{"gitId":"michael-setia"},"content":"        tasks \u003d t;"},{"lineNumber":33,"author":{"gitId":"michael-setia"},"content":"        int a \u003d tasks.getSize();"},{"lineNumber":34,"author":{"gitId":"michael-setia"},"content":"        tasks.add(deadline);"},{"lineNumber":35,"author":{"gitId":"michael-setia"},"content":"        assert tasks.getSize() \u003d\u003d a + 1;"},{"lineNumber":36,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":38,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"michael-setia"},"content":"     * Gets the reply after performing the Command."},{"lineNumber":40,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"michael-setia"},"content":"     * @return A reply as a String based on the perform method."},{"lineNumber":42,"author":{"gitId":"michael-setia"},"content":"     **/"},{"lineNumber":43,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"michael-setia"},"content":"    public String getReply() {"},{"lineNumber":45,"author":{"gitId":"michael-setia"},"content":"        return \" Okay! I have added this task:\" + \"\\n\" + \"   \""},{"lineNumber":46,"author":{"gitId":"michael-setia"},"content":"                + deadline.toString() + \"\\n\" + \" Now you have \" + tasks.getSize() + (tasks.getSize() \u003e 1 ? \" tasks.\""},{"lineNumber":47,"author":{"gitId":"michael-setia"},"content":"                : \" task.\");"},{"lineNumber":48,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":50,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"michael-setia"},"content":"     * Checks if this is a termination Command."},{"lineNumber":52,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"michael-setia"},"content":"     * @return False."},{"lineNumber":54,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"michael-setia"},"content":"    public boolean isExit() {"},{"lineNumber":57,"author":{"gitId":"michael-setia"},"content":"        return false;"},{"lineNumber":58,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":59}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import duke.main.TaskList;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":" * DeleteCommand is a Command to delete a Task from the related TaskList."},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"    /** The index of the Task that wants to be marked as done. */"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"    private int taskNumber;"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    /** TaskList that is related to this command. **/"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    private TaskList tasks;"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"    /** Task that is related to this command. **/"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"    private Task task;"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"     * Constructs a DeleteCommand."},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"     * @param taskNumber Index of Task that wants to be deleted."},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"    public DeleteCommand(int taskNumber) {"},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"        this.taskNumber \u003d taskNumber;"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":"     * Deletes a Task from the related TaskList based on the given index."},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"     * @param t The related TaskList."},{"lineNumber":30,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"michael-setia"},"content":"    public void perform(TaskList t) {"},{"lineNumber":33,"author":{"gitId":"michael-setia"},"content":"        tasks \u003d t;"},{"lineNumber":34,"author":{"gitId":"michael-setia"},"content":"        task \u003d t.get(taskNumber);"},{"lineNumber":35,"author":{"gitId":"michael-setia"},"content":"        int a \u003d tasks.getSize();"},{"lineNumber":36,"author":{"gitId":"michael-setia"},"content":"        tasks.delete(taskNumber);"},{"lineNumber":37,"author":{"gitId":"michael-setia"},"content":"        assert tasks.getSize() \u003d\u003d a - 1;"},{"lineNumber":38,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":40,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"michael-setia"},"content":"     * Gets the reply after performing the Command."},{"lineNumber":42,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"michael-setia"},"content":"     * @return A reply as a String based on the perform method."},{"lineNumber":44,"author":{"gitId":"michael-setia"},"content":"     **/"},{"lineNumber":45,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"michael-setia"},"content":"    public String getReply() {"},{"lineNumber":47,"author":{"gitId":"michael-setia"},"content":"        return \" Okie! I have deleted this task: \" + \"\\n\""},{"lineNumber":48,"author":{"gitId":"michael-setia"},"content":"            + \"   \" + task.toString() + \"\\n\" + \" Now you have \" + tasks.getSize() + (tasks.getSize() \u003e 1"},{"lineNumber":49,"author":{"gitId":"michael-setia"},"content":"            ? \" tasks.\" : \" task.\");"},{"lineNumber":50,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":52,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"michael-setia"},"content":"     * Checks if this is a termination Command."},{"lineNumber":54,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"michael-setia"},"content":"     * @return False."},{"lineNumber":56,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"michael-setia"},"content":"    public boolean isExit() {"},{"lineNumber":59,"author":{"gitId":"michael-setia"},"content":"        return false;"},{"lineNumber":60,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":61}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import duke.main.TaskList;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":" * DoneCommand is a Command to mark as done a Task in the related TaskList based on the given index."},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"public class DoneCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"    /** The index of the Task that wants to be marked as done. */"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"    private int taskNumber;"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    /** TaskList that is related to this command. **/"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    private TaskList tasks;"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"    /** Task that is related to this command. **/"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"    private Task task;"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"     * Constructs a DoneCommand."},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"     * @param taskNumber The index of the Task that wants to be marked as done."},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"    public DoneCommand(int taskNumber) {"},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"        this.taskNumber \u003d taskNumber;"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":"     * Marks as done the Task in the TaskList based on the given index."},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"     * @param t The related TaskList."},{"lineNumber":30,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"michael-setia"},"content":"    public void perform(TaskList t) {"},{"lineNumber":33,"author":{"gitId":"michael-setia"},"content":"        tasks \u003d t;"},{"lineNumber":34,"author":{"gitId":"michael-setia"},"content":"        task \u003d tasks.get(taskNumber);"},{"lineNumber":35,"author":{"gitId":"michael-setia"},"content":"        task.markAsDone();"},{"lineNumber":36,"author":{"gitId":"michael-setia"},"content":"        assert task.isDone();"},{"lineNumber":37,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":39,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"michael-setia"},"content":"     * Gets the reply after performing the Command."},{"lineNumber":41,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"michael-setia"},"content":"     * @return A reply as a String based on the perform method."},{"lineNumber":43,"author":{"gitId":"michael-setia"},"content":"     **/"},{"lineNumber":44,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"michael-setia"},"content":"    public String getReply() {"},{"lineNumber":46,"author":{"gitId":"michael-setia"},"content":"        return \" Yay! I have marked this task as done: \" + \"\\n\""},{"lineNumber":47,"author":{"gitId":"michael-setia"},"content":"            + \"   \" + task.toString();"},{"lineNumber":48,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":50,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"michael-setia"},"content":"     * Checks if this is a termination Command."},{"lineNumber":52,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"michael-setia"},"content":"     * @return False."},{"lineNumber":54,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"michael-setia"},"content":"    public boolean isExit() {"},{"lineNumber":57,"author":{"gitId":"michael-setia"},"content":"        return false;"},{"lineNumber":58,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":59}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import duke.main.TaskList;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":" * EventCommand is Command to add an Event to the related TaskList."},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"public class EventCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"    /** The Event that wants to be added to the TaskList. */"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"    private Event event;"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    /** TaskList that is related to this command. **/"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    private TaskList tasks;"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"     * Constructs an EventCommand."},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"     * @param taskDescription The description of the Event."},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"     * @param date The date of the Event."},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"    public EventCommand(String taskDescription, String date) {"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"        this.event \u003d new Event(taskDescription, date);"},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"     * Adds the Event to the related TaskList."},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":"     * @param t The related TaskList."},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"michael-setia"},"content":"    public void perform(TaskList t) {"},{"lineNumber":31,"author":{"gitId":"michael-setia"},"content":"        tasks \u003d t;"},{"lineNumber":32,"author":{"gitId":"michael-setia"},"content":"        int a \u003d tasks.getSize();"},{"lineNumber":33,"author":{"gitId":"michael-setia"},"content":"        tasks.add(event);"},{"lineNumber":34,"author":{"gitId":"michael-setia"},"content":"        assert tasks.getSize() \u003d\u003d a + 1;"},{"lineNumber":35,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":37,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"michael-setia"},"content":"     * Gets the reply after performing the Command."},{"lineNumber":39,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"michael-setia"},"content":"     * @return A reply as a String based on the perform method."},{"lineNumber":41,"author":{"gitId":"michael-setia"},"content":"     **/"},{"lineNumber":42,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"michael-setia"},"content":"    public String getReply() {"},{"lineNumber":44,"author":{"gitId":"michael-setia"},"content":"        return \" Okay! I have added this task:\" + \"\\n\" + \"   \""},{"lineNumber":45,"author":{"gitId":"michael-setia"},"content":"            + event.toString() + \"\\n\" + \" Now you have \" + tasks.getSize() + (tasks.getSize() \u003e 1 ? \" tasks.\""},{"lineNumber":46,"author":{"gitId":"michael-setia"},"content":"            : \" task.\");"},{"lineNumber":47,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":49,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"michael-setia"},"content":"     * Checks if this is a termination Command."},{"lineNumber":51,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"michael-setia"},"content":"     * @return False."},{"lineNumber":53,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"michael-setia"},"content":"    public boolean isExit() {"},{"lineNumber":56,"author":{"gitId":"michael-setia"},"content":"        return false;"},{"lineNumber":57,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":58}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import duke.main.TaskList;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":" * FindCommand is a Command to find a specific Task based on the given keyword."},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":" * Currently, it only supports to search Task based on its description by partial word"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":" * and is not able to find a Task that contains the keyword as a substring."},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"public class FindCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    /** Keyword for finding the Task. **/"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    private String keyword;"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"    /** TaskList that is related to this command. **/"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"    private TaskList tasks;"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"     * Constructs a FindCommand."},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"     * @param keyword The keyword to find the Task."},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"     * Finds a Task based on the description with the given keyword."},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"michael-setia"},"content":"     * @param t The related TaskList."},{"lineNumber":31,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"michael-setia"},"content":"    public void perform(TaskList t) {"},{"lineNumber":34,"author":{"gitId":"michael-setia"},"content":"        for (int i \u003d 1; i \u003c\u003d t.getSize(); i++) {"},{"lineNumber":35,"author":{"gitId":"michael-setia"},"content":"            Task task \u003d t.get(i);"},{"lineNumber":36,"author":{"gitId":"michael-setia"},"content":"            String description \u003d task.getInfo()[1];"},{"lineNumber":37,"author":{"gitId":"michael-setia"},"content":"            if (contain(keyword, description)) {"},{"lineNumber":38,"author":{"gitId":"michael-setia"},"content":"                tasks.add(task);"},{"lineNumber":39,"author":{"gitId":"michael-setia"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":43,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"michael-setia"},"content":"     * Checks if a String is contained in another String."},{"lineNumber":45,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"michael-setia"},"content":"     * @param a First String."},{"lineNumber":47,"author":{"gitId":"michael-setia"},"content":"     * @param b Second String that wants to be checked."},{"lineNumber":48,"author":{"gitId":"michael-setia"},"content":"     * @return true if String a is contained in String b, otherwise false."},{"lineNumber":49,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"michael-setia"},"content":"    private boolean contain(String a, String b) {"},{"lineNumber":51,"author":{"gitId":"michael-setia"},"content":"        boolean hasSameWord \u003d false;"},{"lineNumber":52,"author":{"gitId":"michael-setia"},"content":"        String[] arrayB \u003d b.split(\" \");"},{"lineNumber":53,"author":{"gitId":"michael-setia"},"content":"        for (String s : arrayB) {"},{"lineNumber":54,"author":{"gitId":"michael-setia"},"content":"            if (isPrefixOf(a, s)) {"},{"lineNumber":55,"author":{"gitId":"michael-setia"},"content":"                hasSameWord \u003d true;"},{"lineNumber":56,"author":{"gitId":"michael-setia"},"content":"                break;"},{"lineNumber":57,"author":{"gitId":"michael-setia"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"michael-setia"},"content":"        return hasSameWord;"},{"lineNumber":60,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":62,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"michael-setia"},"content":"     * Checks if a String is a prefix of another String."},{"lineNumber":64,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"michael-setia"},"content":"     * @param a First String as the prefix."},{"lineNumber":66,"author":{"gitId":"michael-setia"},"content":"     * @param b Second String that wants to be checked."},{"lineNumber":67,"author":{"gitId":"michael-setia"},"content":"     * @return true if a is prefix of b."},{"lineNumber":68,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"michael-setia"},"content":"    private boolean isPrefixOf(String a, String b) {"},{"lineNumber":70,"author":{"gitId":"michael-setia"},"content":"        if (b.length() \u003c a.length()) {"},{"lineNumber":71,"author":{"gitId":"michael-setia"},"content":"            return false;"},{"lineNumber":72,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":74,"author":{"gitId":"michael-setia"},"content":"        char[] arrayA \u003d a.toCharArray();"},{"lineNumber":75,"author":{"gitId":"michael-setia"},"content":"        char[] arrayB \u003d b.toCharArray();"},{"lineNumber":76,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":77,"author":{"gitId":"michael-setia"},"content":"        for (int i \u003d 0; i \u003c arrayA.length; i++) {"},{"lineNumber":78,"author":{"gitId":"michael-setia"},"content":"            if (arrayA[i] !\u003d arrayB[i]) {"},{"lineNumber":79,"author":{"gitId":"michael-setia"},"content":"                return false;"},{"lineNumber":80,"author":{"gitId":"michael-setia"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"michael-setia"},"content":"        return true;"},{"lineNumber":83,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":85,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"michael-setia"},"content":"     * Gets the reply after performing the Command."},{"lineNumber":87,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"michael-setia"},"content":"     * @return A reply as a String based on the perform method."},{"lineNumber":89,"author":{"gitId":"michael-setia"},"content":"     **/"},{"lineNumber":90,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":91,"author":{"gitId":"michael-setia"},"content":"    public String getReply() {"},{"lineNumber":92,"author":{"gitId":"michael-setia"},"content":"        String reply;"},{"lineNumber":93,"author":{"gitId":"michael-setia"},"content":"        if (tasks.getSize() \u003e 0) {"},{"lineNumber":94,"author":{"gitId":"michael-setia"},"content":"            reply \u003d \" Here are the matching tasks in your list:\";"},{"lineNumber":95,"author":{"gitId":"michael-setia"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {"},{"lineNumber":96,"author":{"gitId":"michael-setia"},"content":"                Task t \u003d tasks.get(i);"},{"lineNumber":97,"author":{"gitId":"michael-setia"},"content":"                reply +\u003d \"\\n\" + \" \" + (i) + \".\" + t.toString();"},{"lineNumber":98,"author":{"gitId":"michael-setia"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"michael-setia"},"content":"            return reply;"},{"lineNumber":100,"author":{"gitId":"michael-setia"},"content":"        } else {"},{"lineNumber":101,"author":{"gitId":"michael-setia"},"content":"            return \" There are no tasks that match the keyword.\";"},{"lineNumber":102,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":105,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"michael-setia"},"content":"     * Checks if this is a termination Command."},{"lineNumber":107,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":108,"author":{"gitId":"michael-setia"},"content":"     * @return False."},{"lineNumber":109,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":111,"author":{"gitId":"michael-setia"},"content":"    public boolean isExit() {"},{"lineNumber":112,"author":{"gitId":"michael-setia"},"content":"        return false;"},{"lineNumber":113,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":114}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import duke.main.TaskList;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":" * ListCommand is Command to list all the Task that the user have stored in the related TaskList."},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"public class ListCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"    /** TaskList that is related to this command **/"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"    private TaskList tasks;"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"     * Lists all the task in the related TaskList."},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"     * @param t The related TaskList."},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"    public void perform(TaskList t) {"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"        tasks \u003d t;"},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"     * Gets the reply after performing the Command."},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"     * @return A reply as a String based on the perform method."},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":"     **/"},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"    public String getReply() {"},{"lineNumber":30,"author":{"gitId":"michael-setia"},"content":"        String reply \u003d \" These are the tasks in your list:\";"},{"lineNumber":31,"author":{"gitId":"michael-setia"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {"},{"lineNumber":32,"author":{"gitId":"michael-setia"},"content":"            Task t \u003d tasks.get(i);"},{"lineNumber":33,"author":{"gitId":"michael-setia"},"content":"            reply +\u003d \"\\n\" + \" \" + i + \".\" + t.toString();"},{"lineNumber":34,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"michael-setia"},"content":"        return reply;"},{"lineNumber":36,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":38,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"michael-setia"},"content":"     * Checks if this is a termination Command."},{"lineNumber":40,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"michael-setia"},"content":"     * @return False."},{"lineNumber":42,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"michael-setia"},"content":"    public boolean isExit() {"},{"lineNumber":45,"author":{"gitId":"michael-setia"},"content":"        return false;"},{"lineNumber":46,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":47}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import duke.main.TaskList;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"import duke.task.Todo;"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":" * TodoCommand is Command to add a Todo to the related TaskList."},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"public class TodoCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"    /** The Todo that wants to be added to the related TaskList. **/"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"    private Todo todo;"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    /** TaskList that is related to this command **/"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    private TaskList tasks;"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"     * Constructs a TodoCommand."},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"     * @param description The description of the Todo."},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"    public TodoCommand(String description) {"},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"        this.todo \u003d new Todo(description);"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":"     * Adds the Todo to the related TaskList."},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":"     * @param t The related TaskList."},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"michael-setia"},"content":"    public void perform(TaskList t) {"},{"lineNumber":31,"author":{"gitId":"michael-setia"},"content":"        tasks \u003d t;"},{"lineNumber":32,"author":{"gitId":"michael-setia"},"content":"        int a \u003d tasks.getSize();"},{"lineNumber":33,"author":{"gitId":"michael-setia"},"content":"        tasks.add(todo);"},{"lineNumber":34,"author":{"gitId":"michael-setia"},"content":"        assert tasks.getSize() \u003d\u003d a + 1;"},{"lineNumber":35,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":37,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"michael-setia"},"content":"     * Gets the reply after performing the Command."},{"lineNumber":39,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"michael-setia"},"content":"     * @return A reply as a String based on the perform method."},{"lineNumber":41,"author":{"gitId":"michael-setia"},"content":"     **/"},{"lineNumber":42,"author":{"gitId":"michael-setia"},"content":"    public String getReply() {"},{"lineNumber":43,"author":{"gitId":"michael-setia"},"content":"        return \" Okay! I have added this task:\" + \"\\n\" + \"   \""},{"lineNumber":44,"author":{"gitId":"michael-setia"},"content":"            + todo.toString() + \"\\n\" + \" Now you have \" + tasks.getSize() + (tasks.getSize() \u003e 1 ? \" tasks.\""},{"lineNumber":45,"author":{"gitId":"michael-setia"},"content":"            : \" task.\");"},{"lineNumber":46,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":48,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"michael-setia"},"content":"     * Checks if this is a termination Command."},{"lineNumber":50,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"michael-setia"},"content":"     * @return False."},{"lineNumber":52,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"michael-setia"},"content":"    public boolean isExit() {"},{"lineNumber":55,"author":{"gitId":"michael-setia"},"content":"        return false;"},{"lineNumber":56,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":57}},{"path":"src/main/java/duke/exception/CannotCreateFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":" * Exception that occurs when it is impossible to create a file on the desired directory. One possible"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":" * cause if the permission setting on that directory is not properly configured."},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":" **/"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"public class CannotCreateFileException extends StorageException {"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"     * Returns String message of this Exception."},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"     * @return String message of this Exception."},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"    public String getMessage() {"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"        return \"  Cannot create storage file! List will not be saved until the \""},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"            + \"file is created\";"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":18}},{"path":"src/main/java/duke/exception/CannotMakeDirectoryException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":" * Exception that occurs when it is impossible to create the desired directory. One possible"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":" * cause if the permission setting on that directory is not properly configured."},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"public class CannotMakeDirectoryException extends StorageException {"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"     * Returns String message of this Exception."},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"     * @return String message of this Exception."},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"    public String getMessage() {"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"        return \"  Cannot create directory for storage file! List will not\" + \"\\n\""},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"            + \"be saved until the directory and the file are created.\";"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":18}},{"path":"src/main/java/duke/exception/DeadlineIncompleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":" * Exception that occurs when the user does not specify anything about the Deadline."},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"public class DeadlineIncompleteException extends InvalidInputException {"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"     * Returns String message of this Exception."},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"     * @return String message of this Exception."},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"        return \" Oh no! Please specify the description of a deadline.\";"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":16}},{"path":"src/main/java/duke/exception/DeadlineMissingDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":" * Exception that occurs when the user does not specify the date the Deadline."},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"public class DeadlineMissingDateException extends InvalidInputException {"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"     * Returns String message of this Exception."},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"     * @return String message of this Exception."},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"        return \" Oh no! Please specify the date of the Deadline.\";"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":16}},{"path":"src/main/java/duke/exception/DeleteIncompleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":" * Exception that occurs when the user does not specify which Task to be deleted."},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"public class DeleteIncompleteException extends InvalidInputException {"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"     * Returns String message of this Exception."},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"     * @return String message of this Exception."},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"        return \" Oh no! Please specify which task to be deleted.\";"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":16}},{"path":"src/main/java/duke/exception/DeleteOutOfListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":" * Exception that occurs when the user input an invalid number for the file that wants to be deleted."},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"public class DeleteOutOfListException extends InvalidInputException {"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"     * Returns String message of this Exception."},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"     * @return String message of this Exception."},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"        return \" Oh no! Task number cannot be zero or negative\""},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"                + \"\\n\" + \" Please refer to your task list to find the\""},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"                + \"\\n\" + \" appropriate task number :)\";"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":18}},{"path":"src/main/java/duke/exception/DoneIncompleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":" * Exception that occurs when the user does not specify which Task to be marked as done."},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"public class DoneIncompleteException extends InvalidInputException {"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"     * Returns String message of this Exception."},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"     * @return String message of this Exception."},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"        return \" Oh no! Please specify which task to be marked as done.\";"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":16}},{"path":"src/main/java/duke/exception/DoneOutOfListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":" * Exception that occurs when the user input an invalid number for the file that wants to be marked as done."},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"public class DoneOutOfListException extends InvalidInputException {"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"     * Returns String message of this Exception."},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"     * @return String message of this Exception."},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"        return \" Oh no! Task number cannot be zero or negative\""},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"                + \"\\n\" + \" Please refer to your task list to find the\""},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"                + \"\\n\" + \" appropriate task number :)\";"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":18}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"/** Parent class for exception in Duke. */"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"public class DukeException extends Exception {"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":6}},{"path":"src/main/java/duke/exception/EventIncompleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":" * Exception that occurs when the user does not specify anything about the Event."},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"public class EventIncompleteException extends InvalidInputException {"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"     * Returns String message of this Exception."},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"     * @return String message of this Exception."},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"        return \" Oh no! Please specify the description of an event.\";"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":16}},{"path":"src/main/java/duke/exception/EventMissingDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":" * Exception that occurs when the user does not specify the date the Event."},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"public class EventMissingDateException extends InvalidInputException {"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"     * Returns String message of this Exception."},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"     * @return String message of this Exception."},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"        return \" Oh no! Please specify the date of the Event.\";"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":16}},{"path":"src/main/java/duke/exception/FindIncompleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"public class FindIncompleteException extends InvalidInputException {"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":"     * Returns String message of this Exception."},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"     * @return String message of this Exception."},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"    public String getMessage() {"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"        return \" Oh no! Please specify a keyword of the task that you \""},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"                + \"\\n\" + \" want to find.\";"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":14}},{"path":"src/main/java/duke/exception/InvalidFormatFromHardDiskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"/** Exception that occurs when the data from the file from the hard disk has an invalid format. **/"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"public class InvalidFormatFromHardDiskException extends StorageException {"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"     * Returns String message of this Exception."},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"     * @return String message of this Exception."},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"    public String getMessage() {"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"        return \"  Invalid format file from hard disk!\";"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":14}},{"path":"src/main/java/duke/exception/InvalidFormatTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":" * Exception that occurs when the user does not specify the task number as an integer."},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"public class InvalidFormatTaskNumberException extends InvalidInputException {"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"     * Returns String message of this Exception."},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"     * @return String message of this Exception."},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"        return \" Oh no! Task number must be an integer\""},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"            + \"\\n\" + \" Please refer to your task list to find the\""},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"            + \"\\n\" + \" appropriate task number :)\";"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":18}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"/** Parent class for exception that is related to invalid user input. **/"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"public class InvalidInputException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":5}},{"path":"src/main/java/duke/exception/InvalidTaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"/** Exception that occurs when the task type is not valid. **/"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"public class InvalidTaskTypeException extends StorageException {"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"     * Returns String message of this Exception."},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"     * @return String message of this Exception."},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"    public String getMessage() {"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"        return \"  Oops, invalid task type detected!\";"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":14}},{"path":"src/main/java/duke/exception/NoInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":" * Exception that occurs when the user does not input anything (only hit enter)."},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"public class NoInputException extends InvalidInputException {"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"     * Returns String message of this Exception."},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"     * @return String message of this Exception."},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"        return \" Sorry, no input was detected :(\";"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":16}},{"path":"src/main/java/duke/exception/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"/** Parent class for exception that is related to storing, reading, and writing file from/to hard disk. **/"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"public class StorageException extends DukeException {"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":5}},{"path":"src/main/java/duke/exception/TodoIncompleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":" * Exception that occurs when the user does not specify anything about the Todo."},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"public class TodoIncompleteException extends InvalidInputException {"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"     * Returns String message of this Exception."},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"     * @return String message of this Exception."},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"        return \" Oh no! Please specify the description of a Todo.\";"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":16}},{"path":"src/main/java/duke/exception/UnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":" * Exception that occurs when the user inputs an invalid command that Duke does not understand."},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"public class UnknownInputException extends InvalidInputException {"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"     * Returns String message of this Exception."},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"     * @return String message of this Exception."},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    public String getMessage() {"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"        return \" Oh no! Sorry, but I do not know what that means :(\";"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":16}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"import java.util.Date;"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"import java.util.Timer;"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"import java.util.TimerTask;"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"import duke.command.Command;"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"import duke.exception.DukeException;"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"import duke.exception.StorageException;"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"import duke.ui.Main;"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"import javafx.application.Application;"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":" * Duke is a chatbot that can help us manage and store our various kinds of Task."},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"     * Boolean to check if the system should terminate."},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"     **/"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"    private boolean shouldExit;"},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"     * TaskList to store Tasks."},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"    private TaskList tasks;"},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"     * Storage to store data to hard disk"},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"michael-setia"},"content":"    private final Storage storage;"},{"lineNumber":31,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":32,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"michael-setia"},"content":"     * Constructs a Duke."},{"lineNumber":34,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"michael-setia"},"content":"    public Duke() {"},{"lineNumber":36,"author":{"gitId":"michael-setia"},"content":"        shouldExit \u003d false;"},{"lineNumber":37,"author":{"gitId":"michael-setia"},"content":"        storage \u003d new Storage();"},{"lineNumber":38,"author":{"gitId":"michael-setia"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":39,"author":{"gitId":"michael-setia"},"content":"        // Add data from file from hard disk."},{"lineNumber":40,"author":{"gitId":"michael-setia"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"michael-setia"},"content":"            tasks \u003d storage.readFromHardDisk();"},{"lineNumber":42,"author":{"gitId":"michael-setia"},"content":"        } catch (StorageException | IOException e) {"},{"lineNumber":43,"author":{"gitId":"michael-setia"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":44,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":47,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"michael-setia"},"content":"     * Runs Duke with Graphical User Interface (GUI)."},{"lineNumber":49,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"michael-setia"},"content":"    public void run() {"},{"lineNumber":51,"author":{"gitId":"michael-setia"},"content":"        // Launch GUI."},{"lineNumber":52,"author":{"gitId":"michael-setia"},"content":"        Application.launch(Main.class, \"\");"},{"lineNumber":53,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":55,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"michael-setia"},"content":"     * Gets status if Duke should terminate."},{"lineNumber":57,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"michael-setia"},"content":"     * @return true if Duke should terminate, otherwise false."},{"lineNumber":59,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"michael-setia"},"content":"    public boolean getStatus() {"},{"lineNumber":61,"author":{"gitId":"michael-setia"},"content":"        return shouldExit;"},{"lineNumber":62,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":64,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"michael-setia"},"content":"     * Gets response from the command based on the user input."},{"lineNumber":66,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"michael-setia"},"content":"     * @param input The user input."},{"lineNumber":68,"author":{"gitId":"michael-setia"},"content":"     * @return Reply from the command as a String to be displayed in the dialog box."},{"lineNumber":69,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"michael-setia"},"content":"    public String getResponse(String[] input) {"},{"lineNumber":71,"author":{"gitId":"michael-setia"},"content":"        try {"},{"lineNumber":72,"author":{"gitId":"michael-setia"},"content":"            Command command \u003d Parser.parse(input);"},{"lineNumber":73,"author":{"gitId":"michael-setia"},"content":"            command.perform(tasks);"},{"lineNumber":74,"author":{"gitId":"michael-setia"},"content":"            storage.writeToHardDisk(tasks);"},{"lineNumber":75,"author":{"gitId":"michael-setia"},"content":"            shouldExit \u003d command.isExit();"},{"lineNumber":76,"author":{"gitId":"michael-setia"},"content":"            return command.getReply();"},{"lineNumber":77,"author":{"gitId":"michael-setia"},"content":"        } catch (DukeException | IOException e) {"},{"lineNumber":78,"author":{"gitId":"michael-setia"},"content":"            return e.getMessage();"},{"lineNumber":79,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":82,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"michael-setia"},"content":"     * Gets the greeting message for the user."},{"lineNumber":84,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"michael-setia"},"content":"     * @return Greeting message as a String."},{"lineNumber":86,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"michael-setia"},"content":"    public String getGreetingMessage() {"},{"lineNumber":88,"author":{"gitId":"michael-setia"},"content":"        return \"Hello there! My name is Popii!. I\u0027m your virtual task manager chatbot.\""},{"lineNumber":89,"author":{"gitId":"michael-setia"},"content":"            + \" How can I help you?\";"},{"lineNumber":90,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":92,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"michael-setia"},"content":"     * Closes the program after 1 second."},{"lineNumber":94,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"michael-setia"},"content":"    public void close() {"},{"lineNumber":96,"author":{"gitId":"michael-setia"},"content":"        Timer timer \u003d new Timer();"},{"lineNumber":97,"author":{"gitId":"michael-setia"},"content":"        TimerTask exit \u003d new TimerTask() {"},{"lineNumber":98,"author":{"gitId":"michael-setia"},"content":"            @Override"},{"lineNumber":99,"author":{"gitId":"michael-setia"},"content":"            public void run() {"},{"lineNumber":100,"author":{"gitId":"michael-setia"},"content":"                System.exit(0);"},{"lineNumber":101,"author":{"gitId":"michael-setia"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"michael-setia"},"content":"        };"},{"lineNumber":103,"author":{"gitId":"michael-setia"},"content":"        long time \u003d System.currentTimeMillis() + 500;"},{"lineNumber":104,"author":{"gitId":"michael-setia"},"content":"        timer.schedule(exit, new Date(time));"},{"lineNumber":105,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":107,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"michael-setia"},"content":"     * Main method of duke."},{"lineNumber":109,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":110,"author":{"gitId":"michael-setia"},"content":"     * @param args Arguments."},{"lineNumber":111,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"michael-setia"},"content":"    public static void main(String[] args) {"},{"lineNumber":113,"author":{"gitId":"michael-setia"},"content":"        Duke duke \u003d new Duke();"},{"lineNumber":114,"author":{"gitId":"michael-setia"},"content":"        // uncomment to run Duke with CLI"},{"lineNumber":115,"author":{"gitId":"michael-setia"},"content":"        // duke.runWithCli();"},{"lineNumber":116,"author":{"gitId":"michael-setia"},"content":"        duke.run();"},{"lineNumber":117,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":119,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":120,"author":{"gitId":"michael-setia"},"content":"     * Runs Duke with Command Line Input (CLI)."},{"lineNumber":121,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"michael-setia"},"content":"    private void runWithCli() {"},{"lineNumber":123,"author":{"gitId":"michael-setia"},"content":"        System.out.println(\"Hello Programmer! How can I help you?\");"},{"lineNumber":124,"author":{"gitId":"michael-setia"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":125,"author":{"gitId":"michael-setia"},"content":"        while (!shouldExit) {"},{"lineNumber":126,"author":{"gitId":"michael-setia"},"content":"            System.out.println(getResponse(sc.nextLine().split(\" \")));"},{"lineNumber":127,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}"},{"lineNumber":130,"author":{"gitId":"michael-setia"},"content":""}],"authorContributionMap":{"michael-setia":128,"-":2}},{"path":"src/main/java/duke/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"import duke.command.ByeCommand;"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"import duke.command.Command;"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"import duke.command.DoneCommand;"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"import duke.command.EventCommand;"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"import duke.command.FindCommand;"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"import duke.command.ListCommand;"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"import duke.command.TodoCommand;"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"import duke.exception.DeadlineIncompleteException;"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"import duke.exception.DeadlineMissingDateException;"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"import duke.exception.DeleteIncompleteException;"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"import duke.exception.DeleteOutOfListException;"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"import duke.exception.DoneIncompleteException;"},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"import duke.exception.DoneOutOfListException;"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"import duke.exception.DukeException;"},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"import duke.exception.EventIncompleteException;"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"import duke.exception.EventMissingDateException;"},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":"import duke.exception.FindIncompleteException;"},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"import duke.exception.InvalidFormatTaskNumberException;"},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":"import duke.exception.InvalidInputException;"},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"import duke.exception.NoInputException;"},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"import duke.exception.TodoIncompleteException;"},{"lineNumber":30,"author":{"gitId":"michael-setia"},"content":"import duke.exception.UnknownInputException;"},{"lineNumber":31,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":32,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":33,"author":{"gitId":"michael-setia"},"content":" * Parser is used to make sense the input from the user and convert it to executable command."},{"lineNumber":34,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":35,"author":{"gitId":"michael-setia"},"content":"public class Parser {"},{"lineNumber":36,"author":{"gitId":"michael-setia"},"content":"    /** Array that stores valid commands as String. **/"},{"lineNumber":37,"author":{"gitId":"michael-setia"},"content":"    private static final String[] COMMANDS \u003d {\"list\", \"done\", \"deadline\", \"event\", \"todo\", \"delete\", \"bye\", \"find\"};"},{"lineNumber":38,"author":{"gitId":"michael-setia"},"content":"    /** ArrayList that stores valid commands as String. **/"},{"lineNumber":39,"author":{"gitId":"michael-setia"},"content":"    private static final ArrayList\u003cString\u003e VALID_COMMANDS \u003d new ArrayList\u003c\u003e(Arrays.asList(COMMANDS));"},{"lineNumber":40,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":41,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"michael-setia"},"content":"     * Checks the validity of a command."},{"lineNumber":43,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"michael-setia"},"content":"     * @param command Command as a String."},{"lineNumber":45,"author":{"gitId":"michael-setia"},"content":"     * @return true if the command is not valid, false otherwise."},{"lineNumber":46,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"michael-setia"},"content":"    private static boolean isNotValidCommand(String command) {"},{"lineNumber":48,"author":{"gitId":"michael-setia"},"content":"        return !VALID_COMMANDS.contains(command);"},{"lineNumber":49,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":51,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"michael-setia"},"content":"     * Checks the validity of a task number."},{"lineNumber":53,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"michael-setia"},"content":"     * @param taskNumber The task number as integer."},{"lineNumber":55,"author":{"gitId":"michael-setia"},"content":"     * @return true if the task number is zero or negative, otherwise false."},{"lineNumber":56,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"michael-setia"},"content":"    private static boolean isNotValidTaskNumber(int taskNumber) {"},{"lineNumber":58,"author":{"gitId":"michael-setia"},"content":"        return taskNumber \u003c\u003d 0;"},{"lineNumber":59,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":61,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"michael-setia"},"content":"     * Checks the correctness of the input by the user."},{"lineNumber":63,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"michael-setia"},"content":"     * @param input The input from the user."},{"lineNumber":65,"author":{"gitId":"michael-setia"},"content":"     * @throws InvalidInputException If user\u0027s input is invalid."},{"lineNumber":66,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"michael-setia"},"content":"    public static void checkInput(String... input) throws InvalidInputException {"},{"lineNumber":68,"author":{"gitId":"michael-setia"},"content":"        checkInvalidCommand(input);"},{"lineNumber":69,"author":{"gitId":"michael-setia"},"content":"        checkIncompleteCommand(input);"},{"lineNumber":70,"author":{"gitId":"michael-setia"},"content":"        checkInvalidTaskNumber(input);"},{"lineNumber":71,"author":{"gitId":"michael-setia"},"content":"        checkMissingDate(input);"},{"lineNumber":72,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":74,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"michael-setia"},"content":"     * Check for empty or invalid command name from the user input."},{"lineNumber":76,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"michael-setia"},"content":"     * @param input The input from the user."},{"lineNumber":78,"author":{"gitId":"michael-setia"},"content":"     * @throws NoInputException If the input is empty or just whitespace."},{"lineNumber":79,"author":{"gitId":"michael-setia"},"content":"     * @throws UnknownInputException If the parser does not know the input."},{"lineNumber":80,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"michael-setia"},"content":"    private static void checkInvalidCommand(String[] input) throws NoInputException, UnknownInputException {"},{"lineNumber":82,"author":{"gitId":"michael-setia"},"content":"        // Check for empty input."},{"lineNumber":83,"author":{"gitId":"michael-setia"},"content":"        if (input.length \u003d\u003d 0) {"},{"lineNumber":84,"author":{"gitId":"michael-setia"},"content":"            throw new NoInputException();"},{"lineNumber":85,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":87,"author":{"gitId":"michael-setia"},"content":"        // Store the first word from the input which should be the command type."},{"lineNumber":88,"author":{"gitId":"michael-setia"},"content":"        String command \u003d input[0];"},{"lineNumber":89,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":90,"author":{"gitId":"michael-setia"},"content":"        // Check for empty input."},{"lineNumber":91,"author":{"gitId":"michael-setia"},"content":"        if (command.equals(\"\")) {"},{"lineNumber":92,"author":{"gitId":"michael-setia"},"content":"            throw new NoInputException();"},{"lineNumber":93,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":95,"author":{"gitId":"michael-setia"},"content":"        // Check for invalid command."},{"lineNumber":96,"author":{"gitId":"michael-setia"},"content":"        if (isNotValidCommand(command)) {"},{"lineNumber":97,"author":{"gitId":"michael-setia"},"content":"            throw new UnknownInputException();"},{"lineNumber":98,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":101,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"michael-setia"},"content":"     * Checks for incomplete input."},{"lineNumber":103,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":104,"author":{"gitId":"michael-setia"},"content":"     * @param input The input from the user."},{"lineNumber":105,"author":{"gitId":"michael-setia"},"content":"     * @throws DoneIncompleteException If user only specifies \"done\"."},{"lineNumber":106,"author":{"gitId":"michael-setia"},"content":"     * @throws DeadlineIncompleteException If user only specifies \"deadline\"."},{"lineNumber":107,"author":{"gitId":"michael-setia"},"content":"     * @throws EventIncompleteException If user only specifies \"event\"."},{"lineNumber":108,"author":{"gitId":"michael-setia"},"content":"     * @throws TodoIncompleteException If user only specifies \"todo\"."},{"lineNumber":109,"author":{"gitId":"michael-setia"},"content":"     * @throws DeleteIncompleteException If user only specifies \"delete\"."},{"lineNumber":110,"author":{"gitId":"michael-setia"},"content":"     * @throws FindIncompleteException If user only specifies \"find\"."},{"lineNumber":111,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"michael-setia"},"content":"    private static void checkIncompleteCommand(String[] input) throws DoneIncompleteException,"},{"lineNumber":113,"author":{"gitId":"michael-setia"},"content":"            DeadlineIncompleteException, EventIncompleteException, TodoIncompleteException,"},{"lineNumber":114,"author":{"gitId":"michael-setia"},"content":"                    DeleteIncompleteException, FindIncompleteException {"},{"lineNumber":115,"author":{"gitId":"michael-setia"},"content":"        // Store the first word from the input which should be the command type."},{"lineNumber":116,"author":{"gitId":"michael-setia"},"content":"        String command \u003d input[0];"},{"lineNumber":117,"author":{"gitId":"michael-setia"},"content":"        // Check for incomplete command."},{"lineNumber":118,"author":{"gitId":"michael-setia"},"content":"        if (input.length \u003d\u003d 1) {"},{"lineNumber":119,"author":{"gitId":"michael-setia"},"content":"            switch (command) {"},{"lineNumber":120,"author":{"gitId":"michael-setia"},"content":"            case \"done\":"},{"lineNumber":121,"author":{"gitId":"michael-setia"},"content":"                throw new DoneIncompleteException();"},{"lineNumber":122,"author":{"gitId":"michael-setia"},"content":"            case \"deadline\":"},{"lineNumber":123,"author":{"gitId":"michael-setia"},"content":"                throw new DeadlineIncompleteException();"},{"lineNumber":124,"author":{"gitId":"michael-setia"},"content":"            case \"event\":"},{"lineNumber":125,"author":{"gitId":"michael-setia"},"content":"                throw new EventIncompleteException();"},{"lineNumber":126,"author":{"gitId":"michael-setia"},"content":"            case \"todo\":"},{"lineNumber":127,"author":{"gitId":"michael-setia"},"content":"                throw new TodoIncompleteException();"},{"lineNumber":128,"author":{"gitId":"michael-setia"},"content":"            case \"delete\":"},{"lineNumber":129,"author":{"gitId":"michael-setia"},"content":"                throw new DeleteIncompleteException();"},{"lineNumber":130,"author":{"gitId":"michael-setia"},"content":"            case \"find\":"},{"lineNumber":131,"author":{"gitId":"michael-setia"},"content":"                throw new FindIncompleteException();"},{"lineNumber":132,"author":{"gitId":"michael-setia"},"content":"            default:"},{"lineNumber":133,"author":{"gitId":"michael-setia"},"content":"                break;"},{"lineNumber":134,"author":{"gitId":"michael-setia"},"content":"            }"},{"lineNumber":135,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":138,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":139,"author":{"gitId":"michael-setia"},"content":"     * Checks for invalid task number."},{"lineNumber":140,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":141,"author":{"gitId":"michael-setia"},"content":"     * @param input The input from the user."},{"lineNumber":142,"author":{"gitId":"michael-setia"},"content":"     * @throws InvalidFormatTaskNumberException If the task number is not an integer."},{"lineNumber":143,"author":{"gitId":"michael-setia"},"content":"     * @throws DoneOutOfListException If the task number is zero or negative."},{"lineNumber":144,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":145,"author":{"gitId":"michael-setia"},"content":"    private static void checkInvalidTaskNumber(String[] input) throws InvalidFormatTaskNumberException,"},{"lineNumber":146,"author":{"gitId":"michael-setia"},"content":"        DoneOutOfListException, DeleteOutOfListException {"},{"lineNumber":147,"author":{"gitId":"michael-setia"},"content":"        // Store the first word from the input which should be the command type."},{"lineNumber":148,"author":{"gitId":"michael-setia"},"content":"        String command \u003d input[0];"},{"lineNumber":149,"author":{"gitId":"michael-setia"},"content":"        // Check for invalid task number."},{"lineNumber":150,"author":{"gitId":"michael-setia"},"content":"        if (command.equals(\"done\")) {"},{"lineNumber":151,"author":{"gitId":"michael-setia"},"content":"            try {"},{"lineNumber":152,"author":{"gitId":"michael-setia"},"content":"                Integer.parseInt(input[1]);"},{"lineNumber":153,"author":{"gitId":"michael-setia"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":154,"author":{"gitId":"michael-setia"},"content":"                throw new InvalidFormatTaskNumberException();"},{"lineNumber":155,"author":{"gitId":"michael-setia"},"content":"            }"},{"lineNumber":156,"author":{"gitId":"michael-setia"},"content":"            int taskNumber \u003d Integer.parseInt(input[1]);"},{"lineNumber":157,"author":{"gitId":"michael-setia"},"content":"            if (isNotValidTaskNumber(taskNumber)) {"},{"lineNumber":158,"author":{"gitId":"michael-setia"},"content":"                throw new DoneOutOfListException();"},{"lineNumber":159,"author":{"gitId":"michael-setia"},"content":"            }"},{"lineNumber":160,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":162,"author":{"gitId":"michael-setia"},"content":"        // Check for invalid task number."},{"lineNumber":163,"author":{"gitId":"michael-setia"},"content":"        if (command.equals(\"delete\")) {"},{"lineNumber":164,"author":{"gitId":"michael-setia"},"content":"            try {"},{"lineNumber":165,"author":{"gitId":"michael-setia"},"content":"                Integer.parseInt(input[1]);"},{"lineNumber":166,"author":{"gitId":"michael-setia"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":167,"author":{"gitId":"michael-setia"},"content":"                throw new InvalidFormatTaskNumberException();"},{"lineNumber":168,"author":{"gitId":"michael-setia"},"content":"            }"},{"lineNumber":169,"author":{"gitId":"michael-setia"},"content":"            int taskNumber \u003d Integer.parseInt(input[1]);"},{"lineNumber":170,"author":{"gitId":"michael-setia"},"content":"            if (isNotValidTaskNumber(taskNumber)) {"},{"lineNumber":171,"author":{"gitId":"michael-setia"},"content":"                throw new DeleteOutOfListException();"},{"lineNumber":172,"author":{"gitId":"michael-setia"},"content":"            }"},{"lineNumber":173,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":176,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":177,"author":{"gitId":"michael-setia"},"content":"     * Checks for missing dates."},{"lineNumber":178,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":179,"author":{"gitId":"michael-setia"},"content":"     * @param input The input from the user."},{"lineNumber":180,"author":{"gitId":"michael-setia"},"content":"     * @throws InvalidInputException If the user does not input the date of the task."},{"lineNumber":181,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":182,"author":{"gitId":"michael-setia"},"content":"    private static void checkMissingDate(String[] input) throws InvalidInputException {"},{"lineNumber":183,"author":{"gitId":"michael-setia"},"content":"        // Store the first word from the input which should be the command type."},{"lineNumber":184,"author":{"gitId":"michael-setia"},"content":"        String command \u003d input[0];"},{"lineNumber":185,"author":{"gitId":"michael-setia"},"content":"        // Check for missing date."},{"lineNumber":186,"author":{"gitId":"michael-setia"},"content":"        if (command.equals(\"deadline\")) {"},{"lineNumber":187,"author":{"gitId":"michael-setia"},"content":"            for (String s : input) {"},{"lineNumber":188,"author":{"gitId":"michael-setia"},"content":"                if (s.equals(\"/by\")) {"},{"lineNumber":189,"author":{"gitId":"michael-setia"},"content":"                    return;"},{"lineNumber":190,"author":{"gitId":"michael-setia"},"content":"                }"},{"lineNumber":191,"author":{"gitId":"michael-setia"},"content":"            }"},{"lineNumber":192,"author":{"gitId":"michael-setia"},"content":"            throw new DeadlineMissingDateException();"},{"lineNumber":193,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":194,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":195,"author":{"gitId":"michael-setia"},"content":"        // Check for missing date."},{"lineNumber":196,"author":{"gitId":"michael-setia"},"content":"        if (command.equals(\"event\")) {"},{"lineNumber":197,"author":{"gitId":"michael-setia"},"content":"            for (String s : input) {"},{"lineNumber":198,"author":{"gitId":"michael-setia"},"content":"                if (s.equals(\"/at\")) {"},{"lineNumber":199,"author":{"gitId":"michael-setia"},"content":"                    return;"},{"lineNumber":200,"author":{"gitId":"michael-setia"},"content":"                }"},{"lineNumber":201,"author":{"gitId":"michael-setia"},"content":"            }"},{"lineNumber":202,"author":{"gitId":"michael-setia"},"content":"            throw new EventMissingDateException();"},{"lineNumber":203,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":206,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":207,"author":{"gitId":"michael-setia"},"content":"     * Parses input that starts with \"bye\"."},{"lineNumber":208,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":209,"author":{"gitId":"michael-setia"},"content":"     * @return A ByeCommand."},{"lineNumber":210,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":211,"author":{"gitId":"michael-setia"},"content":"    private static Command parseInputThatStartWithBye() {"},{"lineNumber":212,"author":{"gitId":"michael-setia"},"content":"        return new ByeCommand();"},{"lineNumber":213,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":214,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":215,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":216,"author":{"gitId":"michael-setia"},"content":"     * Parses input that starts with \"list\"."},{"lineNumber":217,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":218,"author":{"gitId":"michael-setia"},"content":"     * @return A ListCommand."},{"lineNumber":219,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":220,"author":{"gitId":"michael-setia"},"content":"    private static Command parseInputThatStartWithList() {"},{"lineNumber":221,"author":{"gitId":"michael-setia"},"content":"        return new ListCommand();"},{"lineNumber":222,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":224,"author":{"gitId":"michael-setia"},"content":"    /** Parses input that starts with \"find\"."},{"lineNumber":225,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":226,"author":{"gitId":"michael-setia"},"content":"     * @param input The user input as array String."},{"lineNumber":227,"author":{"gitId":"michael-setia"},"content":"     * @return A FindCommand."},{"lineNumber":228,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":229,"author":{"gitId":"michael-setia"},"content":"    private static Command parseInputThatStartWithFind(String[] input) {"},{"lineNumber":230,"author":{"gitId":"michael-setia"},"content":"        return new FindCommand(input[1]);"},{"lineNumber":231,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":233,"author":{"gitId":"michael-setia"},"content":"    /** Parses input that starts with \"done\""},{"lineNumber":234,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":235,"author":{"gitId":"michael-setia"},"content":"     * @param input The user input as array String."},{"lineNumber":236,"author":{"gitId":"michael-setia"},"content":"     * @return A DoneCommand."},{"lineNumber":237,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":238,"author":{"gitId":"michael-setia"},"content":"    private static Command parseInputThatStartWithDone(String[] input) {"},{"lineNumber":239,"author":{"gitId":"michael-setia"},"content":"        int taskNumber \u003d Integer.parseInt(input[1]);"},{"lineNumber":240,"author":{"gitId":"michael-setia"},"content":"        return new DoneCommand(taskNumber);"},{"lineNumber":241,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":242,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":243,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":244,"author":{"gitId":"michael-setia"},"content":"     * Parses input that starts with \"delete\"."},{"lineNumber":245,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":246,"author":{"gitId":"michael-setia"},"content":"     * @param input The user input as array String."},{"lineNumber":247,"author":{"gitId":"michael-setia"},"content":"     * @return A DeleteCommand."},{"lineNumber":248,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":249,"author":{"gitId":"michael-setia"},"content":"    private static Command parseInputThatStartWithDelete(String[] input) {"},{"lineNumber":250,"author":{"gitId":"michael-setia"},"content":"        int taskNumber \u003d Integer.parseInt(input[1]);"},{"lineNumber":251,"author":{"gitId":"michael-setia"},"content":"        return new DeleteCommand(taskNumber);"},{"lineNumber":252,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":253,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":254,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":255,"author":{"gitId":"michael-setia"},"content":"     * Parses input that starts with \"todo\"."},{"lineNumber":256,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":257,"author":{"gitId":"michael-setia"},"content":"     * @param input The user input as array String."},{"lineNumber":258,"author":{"gitId":"michael-setia"},"content":"     * @return A TodoCommand."},{"lineNumber":259,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":260,"author":{"gitId":"michael-setia"},"content":"    private static Command parseInputThatStartWithTodo(String[] input) {"},{"lineNumber":261,"author":{"gitId":"michael-setia"},"content":"        String description \u003d extractDescription(input, \"\");"},{"lineNumber":262,"author":{"gitId":"michael-setia"},"content":"        return new TodoCommand(description);"},{"lineNumber":263,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":264,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":265,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":266,"author":{"gitId":"michael-setia"},"content":"     * Parses input that starts with \"deadline\"."},{"lineNumber":267,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":268,"author":{"gitId":"michael-setia"},"content":"     * @param input The user input as array String."},{"lineNumber":269,"author":{"gitId":"michael-setia"},"content":"     * @return A DeadlineCommand."},{"lineNumber":270,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":271,"author":{"gitId":"michael-setia"},"content":"    private static Command parseInputThatStartWithDeadline(String[] input) {"},{"lineNumber":272,"author":{"gitId":"michael-setia"},"content":"        String description \u003d extractDescription(input, \"/by\");"},{"lineNumber":273,"author":{"gitId":"michael-setia"},"content":"        String date \u003d extractDate(input, \"/by\");"},{"lineNumber":274,"author":{"gitId":"michael-setia"},"content":"        return new DeadlineCommand(description, date);"},{"lineNumber":275,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":276,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":277,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":278,"author":{"gitId":"michael-setia"},"content":"     * Parses input that starts with \"event\"."},{"lineNumber":279,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":280,"author":{"gitId":"michael-setia"},"content":"     * @param input The user input as array String."},{"lineNumber":281,"author":{"gitId":"michael-setia"},"content":"     * @return An EventCommand."},{"lineNumber":282,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":283,"author":{"gitId":"michael-setia"},"content":"    private static Command parseInputThatStartWithEvent(String[] input) {"},{"lineNumber":284,"author":{"gitId":"michael-setia"},"content":"        String description \u003d extractDescription(input, \"/at\");"},{"lineNumber":285,"author":{"gitId":"michael-setia"},"content":"        String date \u003d extractDate(input, \"/at\");"},{"lineNumber":286,"author":{"gitId":"michael-setia"},"content":"        return new EventCommand(description, date);"},{"lineNumber":287,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":288,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":289,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":290,"author":{"gitId":"michael-setia"},"content":"     * Extracts the description of a task."},{"lineNumber":291,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":292,"author":{"gitId":"michael-setia"},"content":"     * @param input The user input as array String."},{"lineNumber":293,"author":{"gitId":"michael-setia"},"content":"     * @param stop String to indicate the end of the the description."},{"lineNumber":294,"author":{"gitId":"michael-setia"},"content":"     * @return The description of a task as a String."},{"lineNumber":295,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":296,"author":{"gitId":"michael-setia"},"content":"    private static String extractDescription(String[] input, String stop) {"},{"lineNumber":297,"author":{"gitId":"michael-setia"},"content":"        StringBuilder description \u003d new StringBuilder();"},{"lineNumber":298,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":299,"author":{"gitId":"michael-setia"},"content":"        for (int i \u003d 1; i \u003c input.length; i++) {"},{"lineNumber":300,"author":{"gitId":"michael-setia"},"content":"            String s \u003d input[i];"},{"lineNumber":301,"author":{"gitId":"michael-setia"},"content":"            // Stop building description when limit is encountered."},{"lineNumber":302,"author":{"gitId":"michael-setia"},"content":"            if (s.equals(stop)) {"},{"lineNumber":303,"author":{"gitId":"michael-setia"},"content":"                break;"},{"lineNumber":304,"author":{"gitId":"michael-setia"},"content":"            }"},{"lineNumber":305,"author":{"gitId":"michael-setia"},"content":"            // Append a whitespace after each word."},{"lineNumber":306,"author":{"gitId":"michael-setia"},"content":"            if (description.length() \u003e 0) {"},{"lineNumber":307,"author":{"gitId":"michael-setia"},"content":"                description.append(\" \");"},{"lineNumber":308,"author":{"gitId":"michael-setia"},"content":"            }"},{"lineNumber":309,"author":{"gitId":"michael-setia"},"content":"            description.append(s);"},{"lineNumber":310,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":311,"author":{"gitId":"michael-setia"},"content":"        return description.toString();"},{"lineNumber":312,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":313,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":314,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":315,"author":{"gitId":"michael-setia"},"content":"     * Extracts the date of a task."},{"lineNumber":316,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":317,"author":{"gitId":"michael-setia"},"content":"     * @param input The user input as array String."},{"lineNumber":318,"author":{"gitId":"michael-setia"},"content":"     * @param start String to indicate the start of the date."},{"lineNumber":319,"author":{"gitId":"michael-setia"},"content":"     * @return The date of a task as a String."},{"lineNumber":320,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":321,"author":{"gitId":"michael-setia"},"content":"    private static String extractDate(String[] input, String start) {"},{"lineNumber":322,"author":{"gitId":"michael-setia"},"content":"        boolean shouldTake \u003d false;"},{"lineNumber":323,"author":{"gitId":"michael-setia"},"content":"        StringBuilder date \u003d new StringBuilder();"},{"lineNumber":324,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":325,"author":{"gitId":"michael-setia"},"content":"        for (int i \u003d 1; i \u003c input.length; i++) {"},{"lineNumber":326,"author":{"gitId":"michael-setia"},"content":"            String s \u003d input[i];"},{"lineNumber":327,"author":{"gitId":"michael-setia"},"content":"            // Start building date when limit is encountered."},{"lineNumber":328,"author":{"gitId":"michael-setia"},"content":"            if (s.equals(start)) {"},{"lineNumber":329,"author":{"gitId":"michael-setia"},"content":"                shouldTake \u003d true;"},{"lineNumber":330,"author":{"gitId":"michael-setia"},"content":"                continue;"},{"lineNumber":331,"author":{"gitId":"michael-setia"},"content":"            }"},{"lineNumber":332,"author":{"gitId":"michael-setia"},"content":"            if (shouldTake) {"},{"lineNumber":333,"author":{"gitId":"michael-setia"},"content":"                date.append(s);"},{"lineNumber":334,"author":{"gitId":"michael-setia"},"content":"            }"},{"lineNumber":335,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":336,"author":{"gitId":"michael-setia"},"content":"        return date.toString();"},{"lineNumber":337,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":338,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":339,"author":{"gitId":"michael-setia"},"content":"     * Translates user input into executable Command."},{"lineNumber":340,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":341,"author":{"gitId":"michael-setia"},"content":"     * @param input The input from the user."},{"lineNumber":342,"author":{"gitId":"michael-setia"},"content":"     * @return Command that will be executed."},{"lineNumber":343,"author":{"gitId":"michael-setia"},"content":"     * @throws DukeException If user input is invalid."},{"lineNumber":344,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":345,"author":{"gitId":"michael-setia"},"content":"    public static Command parse(String ... input) throws DukeException {"},{"lineNumber":346,"author":{"gitId":"michael-setia"},"content":"        // Check command input"},{"lineNumber":347,"author":{"gitId":"michael-setia"},"content":"        checkInput(input);"},{"lineNumber":348,"author":{"gitId":"michael-setia"},"content":"        assert input.length \u003e 0;"},{"lineNumber":349,"author":{"gitId":"michael-setia"},"content":"        String commandType \u003d input[0];"},{"lineNumber":350,"author":{"gitId":"michael-setia"},"content":"        switch (commandType) {"},{"lineNumber":351,"author":{"gitId":"michael-setia"},"content":"        case \"bye\":"},{"lineNumber":352,"author":{"gitId":"michael-setia"},"content":"            return parseInputThatStartWithBye();"},{"lineNumber":353,"author":{"gitId":"michael-setia"},"content":"        case \"list\":"},{"lineNumber":354,"author":{"gitId":"michael-setia"},"content":"            return parseInputThatStartWithList();"},{"lineNumber":355,"author":{"gitId":"michael-setia"},"content":"        case \"find\": {"},{"lineNumber":356,"author":{"gitId":"michael-setia"},"content":"            return parseInputThatStartWithFind(input);"},{"lineNumber":357,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":358,"author":{"gitId":"michael-setia"},"content":"        case \"done\": {"},{"lineNumber":359,"author":{"gitId":"michael-setia"},"content":"            return parseInputThatStartWithDone(input);"},{"lineNumber":360,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":361,"author":{"gitId":"michael-setia"},"content":"        case \"delete\": {"},{"lineNumber":362,"author":{"gitId":"michael-setia"},"content":"            return parseInputThatStartWithDelete(input);"},{"lineNumber":363,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":364,"author":{"gitId":"michael-setia"},"content":"        case \"todo\": {"},{"lineNumber":365,"author":{"gitId":"michael-setia"},"content":"            return parseInputThatStartWithTodo(input);"},{"lineNumber":366,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":367,"author":{"gitId":"michael-setia"},"content":"        case \"deadline\": {"},{"lineNumber":368,"author":{"gitId":"michael-setia"},"content":"            return parseInputThatStartWithDeadline(input);"},{"lineNumber":369,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":370,"author":{"gitId":"michael-setia"},"content":"        case \"event\": {"},{"lineNumber":371,"author":{"gitId":"michael-setia"},"content":"            return parseInputThatStartWithEvent(input);"},{"lineNumber":372,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":373,"author":{"gitId":"michael-setia"},"content":"        default: {"},{"lineNumber":374,"author":{"gitId":"michael-setia"},"content":"            throw new UnknownInputException();"},{"lineNumber":375,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":376,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":377,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":378,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":378}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"import java.nio.file.Files;"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"import java.nio.file.Path;"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"import java.nio.file.Paths;"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"import duke.exception.CannotCreateFileException;"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"import duke.exception.CannotMakeDirectoryException;"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"import duke.exception.InvalidFormatFromHardDiskException;"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"import duke.exception.InvalidTaskTypeException;"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"import duke.task.Deadline;"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"import duke.task.Event;"},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"import duke.task.Task;"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"import duke.task.Todo;"},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":" * Storage is used to store Tasks to the hard disk from a TaskList. It can"},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":" * also be used to read file to input data to a TaskList."},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"public class Storage {"},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"    /** Root of the directory. **/"},{"lineNumber":30,"author":{"gitId":"michael-setia"},"content":"    private static final String ROOT_DIRECTORY \u003d System.getProperty(\"user.dir\");"},{"lineNumber":31,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":32,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"michael-setia"},"content":"     * Converts a String from hard disk into a Task."},{"lineNumber":34,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"michael-setia"},"content":"     * @param s String from the hard disk."},{"lineNumber":36,"author":{"gitId":"michael-setia"},"content":"     * @return A Task based on the given String."},{"lineNumber":37,"author":{"gitId":"michael-setia"},"content":"     * @throws InvalidFormatFromHardDiskException If the input from the file has an invalid format."},{"lineNumber":38,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"michael-setia"},"content":"    private Task convertFromHardDisk(String s) throws InvalidFormatFromHardDiskException {"},{"lineNumber":40,"author":{"gitId":"michael-setia"},"content":"        String[] data \u003d s.split(\" / \");"},{"lineNumber":41,"author":{"gitId":"michael-setia"},"content":"        assert data.length \u003e 0;"},{"lineNumber":42,"author":{"gitId":"michael-setia"},"content":"        String taskType \u003d data[0];"},{"lineNumber":43,"author":{"gitId":"michael-setia"},"content":"        boolean isDone \u003d data[1].equals(\"1\");"},{"lineNumber":44,"author":{"gitId":"michael-setia"},"content":"        String description \u003d data[2];"},{"lineNumber":45,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":46,"author":{"gitId":"michael-setia"},"content":"        Task task;"},{"lineNumber":47,"author":{"gitId":"michael-setia"},"content":"        switch (taskType) {"},{"lineNumber":48,"author":{"gitId":"michael-setia"},"content":"        case \"T\":"},{"lineNumber":49,"author":{"gitId":"michael-setia"},"content":"            assert data.length \u003d\u003d 3;"},{"lineNumber":50,"author":{"gitId":"michael-setia"},"content":"            task \u003d new Todo(description);"},{"lineNumber":51,"author":{"gitId":"michael-setia"},"content":"            break;"},{"lineNumber":52,"author":{"gitId":"michael-setia"},"content":"        case \"D\": {"},{"lineNumber":53,"author":{"gitId":"michael-setia"},"content":"            assert data.length \u003d\u003d 4;"},{"lineNumber":54,"author":{"gitId":"michael-setia"},"content":"            String date \u003d data[3];"},{"lineNumber":55,"author":{"gitId":"michael-setia"},"content":"            task \u003d new Deadline(description, date);"},{"lineNumber":56,"author":{"gitId":"michael-setia"},"content":"            break;"},{"lineNumber":57,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"michael-setia"},"content":"        case \"E\": {"},{"lineNumber":59,"author":{"gitId":"michael-setia"},"content":"            assert data.length \u003d\u003d 4;"},{"lineNumber":60,"author":{"gitId":"michael-setia"},"content":"            String date \u003d data[3];"},{"lineNumber":61,"author":{"gitId":"michael-setia"},"content":"            task \u003d new Event(description, date);"},{"lineNumber":62,"author":{"gitId":"michael-setia"},"content":"            break;"},{"lineNumber":63,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"michael-setia"},"content":"        default:"},{"lineNumber":65,"author":{"gitId":"michael-setia"},"content":"            throw new InvalidFormatFromHardDiskException();"},{"lineNumber":66,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":68,"author":{"gitId":"michael-setia"},"content":"        if (isDone) {"},{"lineNumber":69,"author":{"gitId":"michael-setia"},"content":"            task.markAsDone();"},{"lineNumber":70,"author":{"gitId":"michael-setia"},"content":"            assert task.isDone();"},{"lineNumber":71,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"michael-setia"},"content":"        return task;"},{"lineNumber":73,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":75,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"michael-setia"},"content":"     * Converts a Task into a String that can be stored in the hard disk."},{"lineNumber":77,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"michael-setia"},"content":"     * @param task The Task to be converted to String."},{"lineNumber":79,"author":{"gitId":"michael-setia"},"content":"     * @return A String representation of the given Task that can be stored in the hard disk."},{"lineNumber":80,"author":{"gitId":"michael-setia"},"content":"     * @throws InvalidTaskTypeException If the type of task in the file is invalid."},{"lineNumber":81,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"michael-setia"},"content":"    String convertToHardDisk(Task task) throws InvalidTaskTypeException {"},{"lineNumber":83,"author":{"gitId":"michael-setia"},"content":"        String[] info \u003d task.getInfo();"},{"lineNumber":84,"author":{"gitId":"michael-setia"},"content":"        assert info.length \u003e 0;"},{"lineNumber":85,"author":{"gitId":"michael-setia"},"content":"        String taskType \u003d info[0];"},{"lineNumber":86,"author":{"gitId":"michael-setia"},"content":"        String description \u003d info[1];"},{"lineNumber":87,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":88,"author":{"gitId":"michael-setia"},"content":"        String isDone \u003d task.isDone() ? \"1\" : \"0\";"},{"lineNumber":89,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":90,"author":{"gitId":"michael-setia"},"content":"        switch(taskType) {"},{"lineNumber":91,"author":{"gitId":"michael-setia"},"content":"        case \"T\":"},{"lineNumber":92,"author":{"gitId":"michael-setia"},"content":"            assert info.length \u003d\u003d 2;"},{"lineNumber":93,"author":{"gitId":"michael-setia"},"content":"            return taskType + \" / \" + isDone + \" / \" + description;"},{"lineNumber":94,"author":{"gitId":"michael-setia"},"content":"        case \"D\":"},{"lineNumber":95,"author":{"gitId":"michael-setia"},"content":"        case \"E\":"},{"lineNumber":96,"author":{"gitId":"michael-setia"},"content":"            assert info.length \u003d\u003d 3;"},{"lineNumber":97,"author":{"gitId":"michael-setia"},"content":"            return taskType + \" / \" + isDone + \" / \" + description + \" / \" + info[2];"},{"lineNumber":98,"author":{"gitId":"michael-setia"},"content":"        default:"},{"lineNumber":99,"author":{"gitId":"michael-setia"},"content":"            throw new InvalidTaskTypeException();"},{"lineNumber":100,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":103,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"michael-setia"},"content":"     * Makes directory to store the file if the directory has not been made."},{"lineNumber":105,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"michael-setia"},"content":"     * @throws CannotMakeDirectoryException If the directory cannot be made."},{"lineNumber":107,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"michael-setia"},"content":"    private void makeDirectory() throws CannotMakeDirectoryException {"},{"lineNumber":109,"author":{"gitId":"michael-setia"},"content":"        // Check directory existence."},{"lineNumber":110,"author":{"gitId":"michael-setia"},"content":"        Path path \u003d Paths.get(ROOT_DIRECTORY, \"data\");"},{"lineNumber":111,"author":{"gitId":"michael-setia"},"content":"        boolean directoryAlreadyExist \u003d Files.exists(path);"},{"lineNumber":112,"author":{"gitId":"michael-setia"},"content":"        if (directoryAlreadyExist) {"},{"lineNumber":113,"author":{"gitId":"michael-setia"},"content":"            return;"},{"lineNumber":114,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":116,"author":{"gitId":"michael-setia"},"content":"        // Make directory if needed."},{"lineNumber":117,"author":{"gitId":"michael-setia"},"content":"        File temp \u003d new File(path.toString());"},{"lineNumber":118,"author":{"gitId":"michael-setia"},"content":"        boolean directoryIsNotCreated \u003d !temp.mkdir();"},{"lineNumber":119,"author":{"gitId":"michael-setia"},"content":"        if (directoryIsNotCreated) {"},{"lineNumber":120,"author":{"gitId":"michael-setia"},"content":"            throw new CannotMakeDirectoryException();"},{"lineNumber":121,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":124,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"michael-setia"},"content":"     * Creates file based on the path from the file object."},{"lineNumber":126,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":127,"author":{"gitId":"michael-setia"},"content":"     * @param file File object that represent the file."},{"lineNumber":128,"author":{"gitId":"michael-setia"},"content":"     * @throws IOException If the input is invalid."},{"lineNumber":129,"author":{"gitId":"michael-setia"},"content":"     * @throws CannotCreateFileException If the file cannot be created."},{"lineNumber":130,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"michael-setia"},"content":"    private void createFile(File file) throws IOException, CannotCreateFileException {"},{"lineNumber":132,"author":{"gitId":"michael-setia"},"content":"        // Check if existence of file."},{"lineNumber":133,"author":{"gitId":"michael-setia"},"content":"        boolean fileAlreadyExist \u003d file.exists();"},{"lineNumber":134,"author":{"gitId":"michael-setia"},"content":"        if (fileAlreadyExist) {"},{"lineNumber":135,"author":{"gitId":"michael-setia"},"content":"            return;"},{"lineNumber":136,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":138,"author":{"gitId":"michael-setia"},"content":"        // Create file if needed."},{"lineNumber":139,"author":{"gitId":"michael-setia"},"content":"        boolean fileIsNotCreated \u003d !file.createNewFile();"},{"lineNumber":140,"author":{"gitId":"michael-setia"},"content":"        if (fileIsNotCreated) {"},{"lineNumber":141,"author":{"gitId":"michael-setia"},"content":"            throw new CannotCreateFileException();"},{"lineNumber":142,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":145,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":146,"author":{"gitId":"michael-setia"},"content":"     * Returns the file object based on the desired directory."},{"lineNumber":147,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":148,"author":{"gitId":"michael-setia"},"content":"     * @return A File object."},{"lineNumber":149,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"michael-setia"},"content":"    private File getFileObject() {"},{"lineNumber":151,"author":{"gitId":"michael-setia"},"content":"        Path path \u003d Paths.get(ROOT_DIRECTORY, \"data\", \"task.txt\");"},{"lineNumber":152,"author":{"gitId":"michael-setia"},"content":"        return new File(path.toString());"},{"lineNumber":153,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":155,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"michael-setia"},"content":"     * Converts data from file into a TaskList."},{"lineNumber":157,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":158,"author":{"gitId":"michael-setia"},"content":"     * @param file File object that represent the file."},{"lineNumber":159,"author":{"gitId":"michael-setia"},"content":"     * @return A TaskList based on the data from the file."},{"lineNumber":160,"author":{"gitId":"michael-setia"},"content":"     * @throws FileNotFoundException If the file does not exist."},{"lineNumber":161,"author":{"gitId":"michael-setia"},"content":"     * @throws InvalidFormatFromHardDiskException If the input from the file has an invalid format."},{"lineNumber":162,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"michael-setia"},"content":"    private TaskList convertFileToTaskList(File file) throws FileNotFoundException,"},{"lineNumber":164,"author":{"gitId":"michael-setia"},"content":"            InvalidFormatFromHardDiskException {"},{"lineNumber":165,"author":{"gitId":"michael-setia"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":166,"author":{"gitId":"michael-setia"},"content":"        Scanner sc \u003d new Scanner(file);"},{"lineNumber":167,"author":{"gitId":"michael-setia"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":168,"author":{"gitId":"michael-setia"},"content":"            String s \u003d sc.nextLine();"},{"lineNumber":169,"author":{"gitId":"michael-setia"},"content":"            Task t \u003d convertFromHardDisk(s);"},{"lineNumber":170,"author":{"gitId":"michael-setia"},"content":"            taskList.add(t);"},{"lineNumber":171,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"michael-setia"},"content":"        return taskList;"},{"lineNumber":173,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":175,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":176,"author":{"gitId":"michael-setia"},"content":"     * Reads all data from hard disk, then convert all the data into Tasks."},{"lineNumber":177,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":178,"author":{"gitId":"michael-setia"},"content":"     * @return A TaskList that contains all the Tasks from the hard disk."},{"lineNumber":179,"author":{"gitId":"michael-setia"},"content":"     * @throws CannotMakeDirectoryException If the directory cannot be made."},{"lineNumber":180,"author":{"gitId":"michael-setia"},"content":"     * @throws IOException If the input is invalid."},{"lineNumber":181,"author":{"gitId":"michael-setia"},"content":"     * @throws InvalidFormatFromHardDiskException If the input from the file has an invalid format."},{"lineNumber":182,"author":{"gitId":"michael-setia"},"content":"     * @throws CannotCreateFileException If the file cannot be created."},{"lineNumber":183,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":184,"author":{"gitId":"michael-setia"},"content":"    public TaskList readFromHardDisk() throws CannotMakeDirectoryException, IOException,"},{"lineNumber":185,"author":{"gitId":"michael-setia"},"content":"            InvalidFormatFromHardDiskException, CannotCreateFileException {"},{"lineNumber":186,"author":{"gitId":"michael-setia"},"content":"        File file \u003d getFileObject();"},{"lineNumber":187,"author":{"gitId":"michael-setia"},"content":"        makeDirectory();"},{"lineNumber":188,"author":{"gitId":"michael-setia"},"content":"        createFile(file);"},{"lineNumber":189,"author":{"gitId":"michael-setia"},"content":"        return convertFileToTaskList(file);"},{"lineNumber":190,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":192,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":193,"author":{"gitId":"michael-setia"},"content":"     * Converts a TaskList into a single String."},{"lineNumber":194,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":195,"author":{"gitId":"michael-setia"},"content":"     * @param taskList TaskList that wants to be converted."},{"lineNumber":196,"author":{"gitId":"michael-setia"},"content":"     * @return A String that contains tasks from the given TaskList."},{"lineNumber":197,"author":{"gitId":"michael-setia"},"content":"     * @throws InvalidTaskTypeException If the type of task in the file is invalid."},{"lineNumber":198,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":199,"author":{"gitId":"michael-setia"},"content":"    private String convertTaskListToSingleString(TaskList taskList) throws InvalidTaskTypeException {"},{"lineNumber":200,"author":{"gitId":"michael-setia"},"content":"        StringBuilder text \u003d new StringBuilder();"},{"lineNumber":201,"author":{"gitId":"michael-setia"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {"},{"lineNumber":202,"author":{"gitId":"michael-setia"},"content":"            Task t \u003d taskList.get(i);"},{"lineNumber":203,"author":{"gitId":"michael-setia"},"content":"            text.append(convertToHardDisk(t)).append(\"\\n\");"},{"lineNumber":204,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"michael-setia"},"content":"        return text.toString();"},{"lineNumber":206,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":208,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":209,"author":{"gitId":"michael-setia"},"content":"     * Writes all Tasks from a TaskList to hard disk."},{"lineNumber":210,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":211,"author":{"gitId":"michael-setia"},"content":"     * @param taskList Tasklist that wants to be stored in the hard disk."},{"lineNumber":212,"author":{"gitId":"michael-setia"},"content":"     * @throws InvalidTaskTypeException If the type of task in the file is invalid."},{"lineNumber":213,"author":{"gitId":"michael-setia"},"content":"     * @throws IOException If the input is invalid."},{"lineNumber":214,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":215,"author":{"gitId":"michael-setia"},"content":"    public void writeToHardDisk(TaskList taskList) throws InvalidTaskTypeException, IOException {"},{"lineNumber":216,"author":{"gitId":"michael-setia"},"content":"        FileWriter fw \u003d new FileWriter(getFileObject().toString());"},{"lineNumber":217,"author":{"gitId":"michael-setia"},"content":"        fw.write(convertTaskListToSingleString(taskList));"},{"lineNumber":218,"author":{"gitId":"michael-setia"},"content":"        fw.close();"},{"lineNumber":219,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":220,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":220}},{"path":"src/main/java/duke/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":" * TaskList is a container for Task. It has query, delete, and add function."},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"    /** List to store the Tasks. */"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    protected ArrayList\u003cTask\u003e taskList;"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"     * Constructs an empty TaskList."},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"    public TaskList() {"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"     * Constructs a TaskList based on the given data."},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"     * @param data List of Task that wants to be added to this TaskList."},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"    public TaskList(ArrayList\u003cTask\u003e data) {"},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":"        this.taskList \u003d data;"},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":30,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"michael-setia"},"content":"     * Adds a Task to this TaskList."},{"lineNumber":32,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"michael-setia"},"content":"     * @param task Task to be added."},{"lineNumber":34,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"michael-setia"},"content":"    public void add(Task task) {"},{"lineNumber":36,"author":{"gitId":"michael-setia"},"content":"        taskList.add(task);"},{"lineNumber":37,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":39,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"michael-setia"},"content":"     * Deletes a Task in this TaskList based on the given index."},{"lineNumber":41,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"michael-setia"},"content":"     * @param taskNumber The desired task number to be deleted."},{"lineNumber":43,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"michael-setia"},"content":"    public void delete(int taskNumber) {"},{"lineNumber":45,"author":{"gitId":"michael-setia"},"content":"        taskList.remove(taskNumber - 1);"},{"lineNumber":46,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":48,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"michael-setia"},"content":"     * Gets the Task based on the given index."},{"lineNumber":50,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"michael-setia"},"content":"     * @param taskNumber The desired task number."},{"lineNumber":52,"author":{"gitId":"michael-setia"},"content":"     * @return The desired Task based on the given task number."},{"lineNumber":53,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"michael-setia"},"content":"    public Task get(int taskNumber) {"},{"lineNumber":55,"author":{"gitId":"michael-setia"},"content":"        return taskList.get(taskNumber - 1);"},{"lineNumber":56,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":58,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"michael-setia"},"content":"     * Returns the size of this TaskList."},{"lineNumber":60,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"michael-setia"},"content":"     * @return The size of this TaskList in integer form."},{"lineNumber":62,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"michael-setia"},"content":"    public int getSize() {"},{"lineNumber":64,"author":{"gitId":"michael-setia"},"content":"        return taskList.size();"},{"lineNumber":65,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":66}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":" * Deadline is a sub-class of Task. Deadline is a task with a deadline date which"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":" * means this Task has to be done before the deadline date."},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"    /** Date as LocalDate. */"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    protected LocalDate date;"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    /** Date as String. */"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"    protected String date2;"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"     * Constructs a Deadline."},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"     * @param description The description of the Deadline."},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"     * @param date The deadline date of the deadline."},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"    public Deadline(String description, String date) {"},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"        super(description);"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"        this.date \u003d LocalDate.parse(date);"},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":"        this.date2 \u003d date;"},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"     * Gets the information about this Deadline except its status."},{"lineNumber":30,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"michael-setia"},"content":"     * @return a String array that contains symbol type for Event (\"E\"), description, and date."},{"lineNumber":32,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"michael-setia"},"content":"    public String[] getInfo() {"},{"lineNumber":35,"author":{"gitId":"michael-setia"},"content":"        return new String[] {\"D\", description, date2};"},{"lineNumber":36,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":38,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"michael-setia"},"content":"     * Returns String representation of this Deadline."},{"lineNumber":40,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"michael-setia"},"content":"     * @return String that represent this Deadline."},{"lineNumber":42,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"michael-setia"},"content":"    public String toString() {"},{"lineNumber":45,"author":{"gitId":"michael-setia"},"content":"        String dateString \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":46,"author":{"gitId":"michael-setia"},"content":"        return \" [D]\" + super.toString() + \" (by: \" + dateString + \")\";"},{"lineNumber":47,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":48}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":" * Event is sub-class of Task. Event is a task that have time when it will take place."},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"     * Date as LocalDate."},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    protected LocalDate date;"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"     * Constructs an Event."},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"     * @param description Description of the Event"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"     * @param date Date of the Event."},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"    public Event(String description, String date) {"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"        super(description);"},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"        this.date \u003d LocalDate.parse(date);"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":"     * Gets the Date of this Event."},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"     * @return Date of this Event in LocalDate form."},{"lineNumber":30,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"michael-setia"},"content":"    public LocalDate getDate() {"},{"lineNumber":32,"author":{"gitId":"michael-setia"},"content":"        return date;"},{"lineNumber":33,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":35,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"michael-setia"},"content":"     * Gets the information about this Event except its status (done or not done)."},{"lineNumber":37,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"michael-setia"},"content":"     * @return a String array that contains symbol type for Event (\"E\"), description, and date."},{"lineNumber":39,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"michael-setia"},"content":"    public String[] getInfo() {"},{"lineNumber":42,"author":{"gitId":"michael-setia"},"content":"        return new String[] {\"E\", description, date.toString()};"},{"lineNumber":43,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":45,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"michael-setia"},"content":"     * Returns String representation of this Event."},{"lineNumber":47,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"michael-setia"},"content":"     * @return String that represents this Event."},{"lineNumber":49,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"michael-setia"},"content":"    public String toString() {"},{"lineNumber":52,"author":{"gitId":"michael-setia"},"content":"        String d \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":53,"author":{"gitId":"michael-setia"},"content":"        return \" [E]\" + super.toString() + \" (at: \" + d + \")\";"},{"lineNumber":54,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":55}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":" * Task is used to store information about the Task that must done."},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":" * It can also tell us if it has been done or not."},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"public class Task {"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"    /** Description of Task. */"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"    /** Status of Task. */"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"    protected boolean isDone;"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"     * Constructs a Task."},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"     * @param description Description of the Task."},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"    public Task(String description) {"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"        this.description \u003d description;"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"        this.isDone \u003d false;"},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"     * Checks if this Task is done or not."},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"     * @return true if this Task is done, otherwise false."},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"    public boolean isDone() {"},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"        return isDone;"},{"lineNumber":30,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":32,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"michael-setia"},"content":"     * Marks this task as done."},{"lineNumber":34,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"michael-setia"},"content":"    public void markAsDone() {"},{"lineNumber":36,"author":{"gitId":"michael-setia"},"content":"        this.isDone \u003d true;"},{"lineNumber":37,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":39,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"michael-setia"},"content":"     * Returns the indicator based on the status of the task."},{"lineNumber":41,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"michael-setia"},"content":"     * @return a \"V\" if it is done, otherwise \"X\""},{"lineNumber":43,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"michael-setia"},"content":"    public String getIcon() {"},{"lineNumber":45,"author":{"gitId":"michael-setia"},"content":"        if (isDone) {"},{"lineNumber":46,"author":{"gitId":"michael-setia"},"content":"            return \"V\";"},{"lineNumber":47,"author":{"gitId":"michael-setia"},"content":"        } else {"},{"lineNumber":48,"author":{"gitId":"michael-setia"},"content":"            return \"X\";"},{"lineNumber":49,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":52,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"michael-setia"},"content":"     * Gets information about this task except the status of this task (done or not done)."},{"lineNumber":54,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"michael-setia"},"content":"     * @return a String array that contains the description of this Task."},{"lineNumber":56,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"michael-setia"},"content":"    public String[] getInfo() {"},{"lineNumber":58,"author":{"gitId":"michael-setia"},"content":"        return new String[] {description};"},{"lineNumber":59,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":61,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"michael-setia"},"content":"     * Returns String representation of this Task."},{"lineNumber":63,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"michael-setia"},"content":"     * @return String that represent this Task."},{"lineNumber":65,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"michael-setia"},"content":"    public String toString() {"},{"lineNumber":68,"author":{"gitId":"michael-setia"},"content":"        return \"[\" + getIcon() + \"] \" + description;"},{"lineNumber":69,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":70}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":" * Todo is a sub-class of Task. Todo is a Task without time information."},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":" * Can be used to store daily activity that is not crucial and non-formal"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":" * but is targetted to be done."},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":" */"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"public class Todo extends Task {"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"     * Constructs a Todo."},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"     * @param description Description of the Todo."},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"    public Todo(String description) {"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"     * Gets information about this Todo except its status (done or not done)."},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"     * @return a String array that contains symbol type for Todo (\"T\") and description."},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"    public String[] getInfo() {"},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":"        return new String[] {\"T\", description};"},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"     * Returns String representation of Todo."},{"lineNumber":30,"author":{"gitId":"michael-setia"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"michael-setia"},"content":"     * @return String that represent this Todo."},{"lineNumber":32,"author":{"gitId":"michael-setia"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"michael-setia"},"content":"    // Return the type icon"},{"lineNumber":34,"author":{"gitId":"michael-setia"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"michael-setia"},"content":"        return \" [T]\" + super.toString();"},{"lineNumber":36,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":37}},{"path":"src/main/resources/view/DukeDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" scaleShape\u003d\"false\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-border-radius: 5; -fx-label-padding: 5; -fx-background-radius: 5; -fx-background-color: skyblue;\" text\u003d\"Label\" textAlignment\u003d\"JUSTIFY\" textFill\u003d\"#0013bf\" wrapText\u003d\"true\"\u003e"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"         \u003cfont\u003e"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"12.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"         \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"    \u003c/children\u003e"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"    \u003cpadding\u003e"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"    \u003c/padding\u003e"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"michael-setia":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"\u003c?import javafx.scene.effect.Blend?\u003e"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: darkblue;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    \u003cchildren\u003e"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"321.0\" layoutY\u003d\"564.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"27.0\" prefWidth\u003d\"73.0\" style\u003d\"-fx-background-color: blue; -fx-background-radius: 10px;\" text\u003d\"Ask Popii\" textFill\u003d\"WHITE\"\u003e"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"         \u003cfont\u003e"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"            \u003cFont name\u003d\"Carlito\" size\u003d\"14.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"         \u003c/font\u003e\u003c/Button\u003e"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"5.0\" layoutY\u003d\"6.0\" prefHeight\u003d\"552.0\" prefWidth\u003d\"389.0\" style\u003d\"-fx-border-radius: 10px;\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"            \u003ccontent\u003e"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"TOP_RIGHT\" prefHeight\u003d\"549.0\" prefWidth\u003d\"387.0\" style\u003d\"-fx-background-color: cornsilk; -fx-background-radius: 20px;\" /\u003e"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"            \u003c/content\u003e"},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"8.0\" layoutY\u003d\"564.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"28.0\" prefWidth\u003d\"305.0\" promptText\u003d\"Input here!\" style\u003d\"-fx-background-color: aliceblue; -fx-background-radius: 10px;\"\u003e"},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"         \u003ceffect\u003e"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"            \u003cBlend /\u003e"},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":"         \u003c/effect\u003e"},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"      \u003c/TextField\u003e"},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":"    \u003c/children\u003e"},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"michael-setia":28}},{"path":"src/main/resources/view/UserDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" scaleShape\u003d\"false\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-border-radius: 5; -fx-label-padding: 5; -fx-background-radius: 5; -fx-background-color: yellow;\" text\u003d\"Label\" textAlignment\u003d\"JUSTIFY\" textFill\u003d\"#a21c02\" wrapText\u003d\"true\"\u003e"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"         \u003cfont\u003e"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"12.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"         \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"    \u003c/children\u003e"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"    \u003cpadding\u003e"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"    \u003c/padding\u003e"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"michael-setia":20}},{"path":"src/test/java/duke/main/DeadlineStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":"public class DeadlineStub extends Deadline {"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"    public DeadlineStub() {"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"        super(\"no description\", \"2000-05-05\");"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    public boolean isDone() {"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"        return false;"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"    public String[] getInfo() {"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"        return new String[] {\"D\", \"finish assignment\", \"2021-02-03\"};"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":20}},{"path":"src/test/java/duke/main/EventStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import duke.task.Event;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":"public class EventStub extends Event {"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"    public EventStub() {"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"        super(\"no description\", \"2000-05-05\");"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    public boolean isDone() {"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"        return true;"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"    public String[] getInfo() {"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"        return new String[] {\"E\", \"read manga\", \"2021-01-03\"};"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":20}},{"path":"src/test/java/duke/main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"public class ParserTest {"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    public void checkInput_doneIncomplete_exceptionThrown() {"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"            Parser.checkInput(\"done\");"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"            fail();"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"        } catch (DukeException e) {"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"            assertEquals(\" Oh no! Please specify which task to be marked as done.\", e.getMessage());"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"    public void checkInput_deleteIncomplete_exceptionThrown() {"},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"            Parser.checkInput(\"delete\");"},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":"            fail();"},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"        } catch (DukeException e) {"},{"lineNumber":27,"author":{"gitId":"michael-setia"},"content":"            assertEquals(\" Oh no! Please specify which task to be deleted.\", e.getMessage());"},{"lineNumber":28,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":31,"author":{"gitId":"michael-setia"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"michael-setia"},"content":"    public void checkInput_deadlineIncomplete_exceptionThrown() {"},{"lineNumber":33,"author":{"gitId":"michael-setia"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"michael-setia"},"content":"            Parser.checkInput(\"deadline\");"},{"lineNumber":35,"author":{"gitId":"michael-setia"},"content":"            fail();"},{"lineNumber":36,"author":{"gitId":"michael-setia"},"content":"        } catch (DukeException e) {"},{"lineNumber":37,"author":{"gitId":"michael-setia"},"content":"            assertEquals(\" Oh no! Please specify the description of a deadline.\", e.getMessage());"},{"lineNumber":38,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":41,"author":{"gitId":"michael-setia"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"michael-setia"},"content":"    public void checkInput_eventIncomplete_exceptionThrown() {"},{"lineNumber":43,"author":{"gitId":"michael-setia"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"michael-setia"},"content":"            Parser.checkInput(\"event\");"},{"lineNumber":45,"author":{"gitId":"michael-setia"},"content":"            fail();"},{"lineNumber":46,"author":{"gitId":"michael-setia"},"content":"        } catch (DukeException e) {"},{"lineNumber":47,"author":{"gitId":"michael-setia"},"content":"            assertEquals(\" Oh no! Please specify the description of an event.\", e.getMessage());"},{"lineNumber":48,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":51,"author":{"gitId":"michael-setia"},"content":"    @Test"},{"lineNumber":52,"author":{"gitId":"michael-setia"},"content":"    public void checkInput_todoIncomplete_exceptionThrown() {"},{"lineNumber":53,"author":{"gitId":"michael-setia"},"content":"        try {"},{"lineNumber":54,"author":{"gitId":"michael-setia"},"content":"            Parser.checkInput(\"todo\");"},{"lineNumber":55,"author":{"gitId":"michael-setia"},"content":"            fail();"},{"lineNumber":56,"author":{"gitId":"michael-setia"},"content":"        } catch (DukeException e) {"},{"lineNumber":57,"author":{"gitId":"michael-setia"},"content":"            assertEquals(\" Oh no! Please specify the description of a Todo.\", e.getMessage());"},{"lineNumber":58,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":61,"author":{"gitId":"michael-setia"},"content":"    @Test"},{"lineNumber":62,"author":{"gitId":"michael-setia"},"content":"    public void checkInput_noInput_exceptionThrown() {"},{"lineNumber":63,"author":{"gitId":"michael-setia"},"content":"        try {"},{"lineNumber":64,"author":{"gitId":"michael-setia"},"content":"            Parser.checkInput(\"\");"},{"lineNumber":65,"author":{"gitId":"michael-setia"},"content":"            fail();"},{"lineNumber":66,"author":{"gitId":"michael-setia"},"content":"        } catch (DukeException e) {"},{"lineNumber":67,"author":{"gitId":"michael-setia"},"content":"            assertEquals(\" Sorry, no input was detected :(\", e.getMessage());"},{"lineNumber":68,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":71,"author":{"gitId":"michael-setia"},"content":"    @Test"},{"lineNumber":72,"author":{"gitId":"michael-setia"},"content":"    public void checkInput_unknownInput_exceptionThrown() {"},{"lineNumber":73,"author":{"gitId":"michael-setia"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"michael-setia"},"content":"            Parser.checkInput(\"halo\");"},{"lineNumber":75,"author":{"gitId":"michael-setia"},"content":"            fail();"},{"lineNumber":76,"author":{"gitId":"michael-setia"},"content":"        } catch (DukeException e) {"},{"lineNumber":77,"author":{"gitId":"michael-setia"},"content":"            assertEquals(\" Oh no! Sorry, but I do not know what that means :(\", e.getMessage());"},{"lineNumber":78,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":81,"author":{"gitId":"michael-setia"},"content":"    @Test"},{"lineNumber":82,"author":{"gitId":"michael-setia"},"content":"    public void checkInput_deleteOutOfList_exceptionThrown() {"},{"lineNumber":83,"author":{"gitId":"michael-setia"},"content":"        try {"},{"lineNumber":84,"author":{"gitId":"michael-setia"},"content":"            Parser.checkInput(\"delete\", \"-1\");"},{"lineNumber":85,"author":{"gitId":"michael-setia"},"content":"            fail();"},{"lineNumber":86,"author":{"gitId":"michael-setia"},"content":"        } catch (DukeException e) {"},{"lineNumber":87,"author":{"gitId":"michael-setia"},"content":"            String s \u003d \" Oh no! Task number cannot be zero or negative\""},{"lineNumber":88,"author":{"gitId":"michael-setia"},"content":"                    + \"\\n\" + \" Please refer to your task list to find the\""},{"lineNumber":89,"author":{"gitId":"michael-setia"},"content":"                    + \"\\n\" + \" appropriate task number :)\";"},{"lineNumber":90,"author":{"gitId":"michael-setia"},"content":"            assertEquals(s, e.getMessage());"},{"lineNumber":91,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":94,"author":{"gitId":"michael-setia"},"content":"    @Test"},{"lineNumber":95,"author":{"gitId":"michael-setia"},"content":"    public void checkInput_doneOutOfList_exceptionThrown() {"},{"lineNumber":96,"author":{"gitId":"michael-setia"},"content":"        try {"},{"lineNumber":97,"author":{"gitId":"michael-setia"},"content":"            Parser.checkInput(\"done\", \"-1\");"},{"lineNumber":98,"author":{"gitId":"michael-setia"},"content":"            fail();"},{"lineNumber":99,"author":{"gitId":"michael-setia"},"content":"        } catch (DukeException e) {"},{"lineNumber":100,"author":{"gitId":"michael-setia"},"content":"            String s \u003d \" Oh no! Task number cannot be zero or negative\""},{"lineNumber":101,"author":{"gitId":"michael-setia"},"content":"                + \"\\n\" + \" Please refer to your task list to find the\""},{"lineNumber":102,"author":{"gitId":"michael-setia"},"content":"                + \"\\n\" + \" appropriate task number :)\";"},{"lineNumber":103,"author":{"gitId":"michael-setia"},"content":"            assertEquals(s, e.getMessage());"},{"lineNumber":104,"author":{"gitId":"michael-setia"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":106}},{"path":"src/test/java/duke/main/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import duke.exception.InvalidTaskTypeException;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"public class StorageTest {"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"    public void testConvertFromHardisk() throws InvalidTaskTypeException {"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"        assertEquals(\"E / 1 / read manga / 2021-01-03\", storage.convertToHardDisk(new EventStub()));"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"        assertEquals(\"T / 1 / wash dishes\", storage.convertToHardDisk(new TodoStub()));"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"        assertEquals(\"D / 0 / finish assignment / 2021-02-03\", storage.convertToHardDisk(new DeadlineStub()));"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":17}},{"path":"src/test/java/duke/main/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"public class TaskListTest {"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"   @Test"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"   public void testSize() {"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"       TaskList tasks \u003d new TaskList();"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"       tasks.add(new EventStub());"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"       tasks.add(new TodoStub());"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"       tasks.add(new DeadlineStub());"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"       assertEquals(3, tasks.getSize());"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"   }"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"    public void testDelete() {"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"        tasks.add(new EventStub());"},{"lineNumber":22,"author":{"gitId":"michael-setia"},"content":"        tasks.add(new TodoStub());"},{"lineNumber":23,"author":{"gitId":"michael-setia"},"content":"        tasks.delete(1);"},{"lineNumber":24,"author":{"gitId":"michael-setia"},"content":"        assertEquals(1, tasks.getSize());"},{"lineNumber":25,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":26}},{"path":"src/test/java/duke/main/TodoStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"package duke.main;"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"import duke.task.Todo;"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":"public class TodoStub extends Todo {"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"    public TodoStub() {"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"        super(\"no description\");"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"    public boolean isDone() {"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"        return true;"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":""},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"    public String[] getInfo() {"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"        return new String[] {\"T\", \"wash dishes\"};"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"}"}],"authorContributionMap":{"michael-setia":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"michael-setia"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"michael-setia"},"content":"deadline watch anime /by Sunday"},{"lineNumber":3,"author":{"gitId":"michael-setia"},"content":"event project meeting /at Tue 3-5PM"},{"lineNumber":4,"author":{"gitId":"michael-setia"},"content":"list"},{"lineNumber":5,"author":{"gitId":"michael-setia"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"michael-setia"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"michael-setia"},"content":"done 3"},{"lineNumber":8,"author":{"gitId":"michael-setia"},"content":"list"},{"lineNumber":9,"author":{"gitId":"michael-setia"},"content":"done"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"todo"},{"lineNumber":11,"author":{"gitId":"michael-setia"},"content":"deadline"},{"lineNumber":12,"author":{"gitId":"michael-setia"},"content":"event"},{"lineNumber":13,"author":{"gitId":"michael-setia"},"content":"done 0"},{"lineNumber":14,"author":{"gitId":"michael-setia"},"content":"done -1"},{"lineNumber":15,"author":{"gitId":"michael-setia"},"content":"delete 1"},{"lineNumber":16,"author":{"gitId":"michael-setia"},"content":"delete 2"},{"lineNumber":17,"author":{"gitId":"michael-setia"},"content":"list"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"delete"},{"lineNumber":19,"author":{"gitId":"michael-setia"},"content":"delete 0"},{"lineNumber":20,"author":{"gitId":"michael-setia"},"content":"delete -1"},{"lineNumber":21,"author":{"gitId":"michael-setia"},"content":"bye"}],"authorContributionMap":{"michael-setia":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"michael-setia"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"michael-setia"},"content":"java -classpath ..\\bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"michael-setia":2,"-":19}}]
