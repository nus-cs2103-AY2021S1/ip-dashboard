[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    DONE, LIST, DELETE, EXIT, TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 3
    }
  },
  {
    "path": "src/main/java/DateAndTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class DateAndTime {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private final LocalTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public DateAndTime(String date, String time) throws InvalidDateTimeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            this.time \u003d LocalTime.parse(time);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            System.out.print(\"lol\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            throw new InvalidDateTimeException();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return this.date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return this.time.format(DateTimeFormatter.ofPattern(\"HH:mm\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return this.date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL).withLocale(Locale.UK))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                + \" \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                + this.time.format(DateTimeFormatter.ofPattern(\"hh:mma\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 37
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private final DateAndTime datetime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public Deadline(String description, String date, String time) throws InvalidDateTimeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.datetime \u003d new DateAndTime(date, time);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return checkDone()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                ? \"D//1//\" + getDescription() + \"//\" + this.datetime.getDate() + \"//\" + this.datetime.getTime()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                : \"D//0//\" + getDescription() + \"//\" + this.datetime.getDate() + \"//\" + this.datetime.getTime();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.datetime + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 21
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": " * Duke class that contains the main logic for the chat bot DUKE."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private String output;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private boolean exited;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     * File path of saved text file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    // If testing using runtest.sh, use pathname \"../data/duke.txt\", else use \"/data/duke.txt\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public static final String FILEPATH \u003d System.getProperty(\"user.dir\").endsWith(\"text-ui-test\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            ? \"../data/duke.txt\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            : \"data/duke.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     * UI line divider"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public static final String lineDivider \u003d \"----------------------------------------\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     * Introduction message"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public static final String GREET \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            \" ____        _        \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    + lineDivider"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    + \"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public static final String FAREWELL \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private Duke() throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        ArrayList\u003cTask\u003e tempList;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.storage \u003d new Storage(FILEPATH);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.output \u003d GREET;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            tempList \u003d storage.getList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        } catch (FileNotFoundException | InvalidDateTimeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            System.out.println(\"New list initialized.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            tempList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.list \u003d tempList;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.exited \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private Duke(String output, ArrayList\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.storage \u003d new Storage(FILEPATH);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.output \u003d output;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.exited \u003d false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private Duke(String output, ArrayList\u003cTask\u003e list, boolean exited) throws IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.storage \u003d new Storage(FILEPATH);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.output \u003d output;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.exited \u003d exited;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private void updateStorage() throws IOException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        storage.updateFile(this.list);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private String setDate(String date) throws InvalidDateTimeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        String[] dateArray \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        // date needs to be in format YYYY/MM/DD"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        if (date.length() !\u003d 10 || dateArray.length !\u003d 3) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            throw new InvalidDateTimeException();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return dateArray[0] + \"-\" + dateArray[1] + \"-\" + dateArray[2];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private String setTime(String time) throws InvalidDateTimeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        if (time.length() !\u003d 4) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            throw new InvalidDateTimeException();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return time.substring(0, 2) + \":\" + time.substring(2);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private String addMessage(Task t) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                + t.toString()"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                + \"\\nNow you have \""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                + this.list.size()"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private String addTodo(String description) throws IOException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        ToDo todo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.list.add(todo);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        updateStorage();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return addMessage(todo);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private String addDeadline(String description, String datetime) throws InvalidDateTimeException, IOException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        String[] datetimeArray \u003d datetime.split(\" \");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        if (datetimeArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            throw new InvalidDateTimeException();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        String date \u003d setDate(datetimeArray[0]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        String time \u003d setTime(datetimeArray[1]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        System.out.println(date + \" and \" + time);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, date, time);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.list.add(deadline);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        updateStorage();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return addMessage(deadline);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private String addEvent(String description, String datetime) throws InvalidDateTimeException, IOException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        String[] datetimeArray \u003d datetime.split(\" \");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        if (datetimeArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            throw new InvalidDateTimeException();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        String date \u003d setDate(datetimeArray[0]);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        String time \u003d setTime(datetimeArray[1]);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        Event event \u003d new Event(description, date, time);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.list.add(event);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        updateStorage();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return addMessage(event);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private String showList() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        StringBuffer lst \u003d new StringBuffer();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        lst.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        int listSize \u003d this.list.size();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        for (int i \u003d 0; i \u003c listSize; i++) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            lst.append((i + 1) + \". \" + this.list.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return lst.toString();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private String doneTask(int num) throws InvalidDoneInputException, IOException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        if (num \u003e this.list.size() || num \u003c\u003d 0) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            throw new InvalidDoneInputException();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        int index \u003d num - 1;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.list.get(index).markAsDone();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        updateStorage();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                + this.list.get(index).toString() + \"\\n\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private String deleteTask(int num) throws InvalidDeleteInputException, IOException {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        if (num \u003e this.list.size() || num \u003c\u003d 0) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            throw new InvalidDeleteInputException();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        int index \u003d num - 1;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        String taskInfo \u003d this.list.get(index).toString();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.list.remove(index);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        updateStorage();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                + taskInfo"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                + \"\\nNow you have \""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                + this.list.size()"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private Duke execute(Command c) throws IOException{"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        switch (c) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                return new Duke(showList(), this.list);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            case EXIT:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                return new Duke(FAREWELL, this.list, true);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                return this;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private Duke execute(Command c, String input) throws DukeException, IOException {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        switch (c) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    int num \u003d Integer.parseInt(input.substring(4).replaceAll(\"\\\\s+\", \"\"));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    String outputDone \u003d doneTask(num);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    return new Duke(outputDone, this.list);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                } catch (InvalidDoneInputException e) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    throw e;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    throw new InvalidDoneInputException();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    int num \u003d Integer.parseInt(input.substring(6).replaceAll(\"\\\\s+\", \"\"));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    String outputDelete \u003d deleteTask(num);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    return new Duke(outputDelete, this.list);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                } catch (InvalidDeleteInputException e) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    throw e;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    throw new InvalidDeleteInputException();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                if (input.split(\" \").length \u003c 2) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    throw new InvalidTodoInputException();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                String outputTodo \u003d addTodo(input.substring(5));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                return new Duke(outputTodo, this.list);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                if (input.length() \u003c 9) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    throw new NullDeadlineInputException();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                String deadlineTask \u003d input.substring(9);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                String[] deadlineTaskArray \u003d deadlineTask.split(\" /by \");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                if (deadlineTaskArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    throw new InvalidDeadlineInputException();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                String deadlineDescription \u003d deadlineTaskArray[0];"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                String by \u003d deadlineTaskArray[1];"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                String outputDeadline \u003d addDeadline(deadlineDescription, by);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                return new Duke(outputDeadline, this.list);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    throw new NullEventInputException();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                String eventTask \u003d input.substring(6);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                String[] eventTaskArray \u003d eventTask.split(\" /at \");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                if (eventTaskArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    throw new InvalidEventInputException();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                String eventDescription \u003d eventTaskArray[0];"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                String at \u003d eventTaskArray[1];"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                String outputEvent \u003d addEvent(eventDescription, at);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                return new Duke(outputEvent, this.list);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                return this;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public String getOutput() {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return lineDivider + this.output + lineDivider;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public boolean getExited() {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return this.exited;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public Duke processCommand(String input) throws DukeException, IOException {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                return execute(Command.LIST);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                return execute(Command.EXIT);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            } else if (input.length() \u003e\u003d 4 \u0026\u0026 input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                return execute(Command.DONE, input);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                return execute(Command.DELETE, input);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            } else if (input.length() \u003e\u003d 4 \u0026\u0026 input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                return execute(Command.TODO, input);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            } else if (input.length() \u003e\u003d 8 \u0026\u0026 input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                return execute(Command.DEADLINE, input);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            } else if (input.length() \u003e\u003d 5 \u0026\u0026 input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                return execute(Command.EVENT, input);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                throw new InvalidInputException();"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     * Main logic for the chat bot"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     * @param args User input"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            System.out.println(duke.getOutput());"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            while(!duke.getExited()) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    String msg \u003d sc.nextLine();"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    duke \u003d duke.processCommand(msg);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    System.out.println(duke.getOutput());"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    System.out.println(e.toString());"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    System.out.println(\"File not found.\");"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 300,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public DukeException(String err) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private final DateAndTime datetime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public Event(String description, String date, String time) throws InvalidDateTimeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.datetime \u003d new DateAndTime(date, time);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return checkDone()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                ? \"E//1//\" + getDescription() + \"//\" + this.datetime.getDate() + \"//\" + this.datetime.getTime()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                : \"E//0//\" + getDescription() + \"//\" + this.datetime.getDate() + \"//\" + this.datetime.getTime();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.datetime + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 21
    }
  },
  {
    "path": "src/main/java/InvalidDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class InvalidDateTimeException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public InvalidDateTimeException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(\"Invalid Date and Time input.\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                + \" Follow this format: \\\"YYYY/MM/DD HHmm\\\"\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 7
    }
  },
  {
    "path": "src/main/java/InvalidDeadlineInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class InvalidDeadlineInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public InvalidDeadlineInputException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(\"OOPS!!! Invalid input after deadline command. (Example input: deadline return book /by Sunday)\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 6
    }
  },
  {
    "path": "src/main/java/InvalidDeleteInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class InvalidDeleteInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public InvalidDeleteInputException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(\"OOPS!!! Invalid input after delete command. Keep index within list range. (Example format: delete 1)\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 6
    }
  },
  {
    "path": "src/main/java/InvalidDoneInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class InvalidDoneInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public InvalidDoneInputException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(\"OOPS!!! Invalid input after done command. Keep index within list range. (Example format: done 1)\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 6
    }
  },
  {
    "path": "src/main/java/InvalidEventInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class InvalidEventInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public InvalidEventInputException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(\"OOPS!!! Invalid input after event command. (Example input: event project meeting /at Mon 2-4pm)\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 6
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public InvalidInputException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 6
    }
  },
  {
    "path": "src/main/java/InvalidTodoInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class InvalidTodoInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public InvalidTodoInputException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 6
    }
  },
  {
    "path": "src/main/java/NullDeadlineInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class NullDeadlineInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public NullDeadlineInputException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 6
    }
  },
  {
    "path": "src/main/java/NullEventInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class NullEventInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public NullEventInputException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 6
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": " *  Storage class handles saving and loading tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private final String path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    private final File file;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     * Creates storage"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     * @param filePath  Directory path of saved file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        File tempFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        if (!tempFile.exists()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            tempFile.createNewFile();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.file \u003d tempFile;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.path \u003d filePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    // Format of task in file is \"D/0/return book/June 6th\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    // where \"0\" means undone while \"1\" means done"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() throws FileNotFoundException, InvalidDateTimeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        Scanner sc \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            String[] split \u003d line.split(\"//\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            if (split[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                String description \u003d split[2];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                ToDo todo \u003d new ToDo(description);;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                if (split[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    todo.markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                list.add(todo);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            } else if (split[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                String description \u003d split[2];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                String date \u003d split[3];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                String time \u003d split[4];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                Deadline deadline \u003d new Deadline(description, date, time);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                if (split[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    deadline.markAsDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                list.add(deadline);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            } else if (split[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                String description \u003d split[2];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                String date \u003d split[3];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                String time \u003d split[4];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                Event event \u003d new Event(description, date, time);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                if (split[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                    event.markAsDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                list.add(event);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public void updateFile(ArrayList\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.path);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "            text +\u003d task.toData() + System.lineSeparator();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        fw.write(text);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 82
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return (isDone ? \"Y\" : \"X\"); //return tick or cross symbols"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public boolean checkDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public String toData () {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return checkDone()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                ? \"T//1//\" + getDescription()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "                : \"T//0//\" + getDescription();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return \u0027[\u0027 + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 37
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "todo task1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "todo task2"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "deadline task3 /by Sunday"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "event task4 /at Mon 2-4pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "asdg"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChenXJ98"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ChenXJ98": 1,
      "-": 37
    }
  }
]
