[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public enum Command{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    INIT,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    FIND,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    INVALID;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static private String originalCommand \u003d \"\"; //originalCommand stores the original command (case sensitive)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static private String action \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static private String taskContent \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    Command(){}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "//    Command(String command){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "//        this.command \u003d command.toUpperCase();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "//        this.originalCommand \u003d command;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static String echo(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return originalCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static String getTaskContent(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return taskContent;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static String getAction() { return action; }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Returns a Command object that enumerate original command"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param command a string that contains the command"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @return enumerated command"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static Command getCommand(String command){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        taskContent \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        action \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        originalCommand \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        originalCommand \u003d command;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        String[] splitedCommand \u003d command.split(\" \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        action \u003d splitedCommand[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        if (splitedCommand.length \u003e 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            taskContent \u003d String.join(\"\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    Arrays.copyOfRange(splitedCommand,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                                1,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                                splitedCommand.length)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            return Command.valueOf(action.toUpperCase());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            return Command.INVALID;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 61
    }
  },
  {
    "path": "src/main/java/CommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class CommandException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public CommandException(String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 5
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class DeadlineTask extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private String taskType \u003d \"D\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private final String[] formatStyle \u003d {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"dd/MM/yyyy\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"dd.MM.yyyy\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"ddLLL,yyyy\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"ddLLLyyyy\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"yyyy-MM-dd\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"dd/MM/yyyyHHmm\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"dd.MM.yyyyHHmm\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"ddLLL,yyyyHHmm\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"ddLLLyyyyHHmm\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"yyyy-MM-ddHHmm\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"dd/MM/yyyyHH:mm\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"dd.MM.yyyyHH:MM\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"ddLLL,yyyyHH:mm\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"ddLLLyyyyHH:mm\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"yyyy-MM-ddHH:mm\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    };"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    DeadlineTask(String taskContent, String time) throws ParseErrorException{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        super(taskContent);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        time \u003d time.replaceAll(\"\\\\s\",\"\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        boolean success \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        for (String pattern: formatStyle){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                this.dateTime \u003d LocalDateTime.parse(time, formatter);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                success\u003dtrue;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            } catch (DateTimeParseException e){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        if (!success)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw new ParseErrorException(\"Please check your format again.\\n You are suggested to use \\\"yyyy-MM-dd HH:mm\\\"\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public LocalDateTime getDateTime(){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return super.toString()+\" (by: \" + this.dateTime + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 56
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    Parser parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        parser \u003d new Parser(tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public void run(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        ui.read(parser);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        storage.save(tasks.getTodoList());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        String filePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Duke duke \u003d new Duke(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 21,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 5
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class EmptyDescriptionException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public EmptyDescriptionException(String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        super(\"The description of \u0027\" + message + \"\u0027 should not be empty.\\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                +\"Please re-enter your command.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 6
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class EventTask extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private String taskType \u003d \"E\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private LocalDateTime fromDateTime, toDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private final String[] formatStyle \u003d {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"dd/MM/yyyy\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"dd.MM.yyyy\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"ddLLL,yyyy\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"ddLLLyyyy\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"yyyy-MM-dd\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"dd/MM/yyyyHHmm\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"dd.MM.yyyyHHmm\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"ddLLL,yyyyHHmm\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"ddLLLyyyyHHmm\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"yyyy-MM-ddHHmm\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"dd/MM/yyyyHH:mm\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"dd.MM.yyyyHH:MM\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"ddLLL,yyyyHH:mm\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"ddLLLyyyyHH:mm\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            \"yyyy-MM-ddHH:mm\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    };"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    EventTask(String taskContent, String time) throws ParseErrorException{"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        super(taskContent);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        boolean success \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        if (!time.contains(\"/to\"))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw new ParseErrorException(\"The format of time should be \\\"TIME /to TIME\\\"\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        String fromTime \u003d time.split(\"/to\")[0].replaceAll(\"\\\\s\",\"\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        String toTime \u003d time.split(\"/to\")[1].replaceAll(\"\\\\s\",\"\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        for (String pattern: formatStyle){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                this.fromDateTime \u003d LocalDateTime.parse(fromTime, formatter);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                success\u003dtrue;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            } catch (DateTimeParseException e){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        if (!success)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw new ParseErrorException(\"Please check your format again.\\n You are suggested to use \\\"yyyy-MM-dd HH:mm\\\"\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        for (String pattern: formatStyle){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                this.toDateTime \u003d LocalDateTime.parse(toTime, formatter);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                success\u003dtrue;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            } catch (DateTimeParseException e){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        if (!success)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw new ParseErrorException(\"Please check your format again.\\n You are suggested to use \\\"yyyy-MM-dd HH:mm\\\"\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public LocalDateTime getFromDateTime(){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.fromDateTime;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public LocalDateTime getToDateTime(){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.toDateTime;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return super.toString()+\" (at: \" + this.fromDateTime.toString()+ \" - \" + this.toDateTime.toString() + \")\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 79
    }
  },
  {
    "path": "src/main/java/ParseErrorException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class ParseErrorException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        public ParseErrorException(String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 5
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public Parser(TaskList taskList){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Run commands and seperate them according to types"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param command the command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @throws DukeException an DukeException that stores the information to be printed"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @throws Exception"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public void runCommand(Command command) throws DukeException, Exception{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        ArrayList\u003cTask\u003e allTasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            case BYE:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                Ui.print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                Ui.printList(taskList.getTodoList());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                task \u003d parseTodoTask(command.getTaskContent());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                Ui.printTodoTask(task.toString(), taskList.getSize(), taskList.getUndoneCount());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                task \u003d parseDeadlineTask(command.getTaskContent());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                Ui.printDeadlineTask(task.toString(), taskList.getSize(), taskList.getUndoneCount());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                task \u003d parseEventTask(command.getTaskContent());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                Ui.printEventTask(task.toString(), taskList.getSize(), taskList.getUndoneCount());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                task \u003d parseDone(command.getTaskContent());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                Ui.printDelete(task, taskList.getUndoneCount());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                task \u003d parseDelete(command.getTaskContent());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                Ui.printDelete(task, taskList.getUndoneCount());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            case FIND:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                allTasks \u003d parseFind(command.getTaskContent());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                Ui.printFind(allTasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            case INVALID:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                throw new CommandException(command.echo() + \" is an invalid command.\\n\"+"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        \"please try another one.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                throw new DukeException(\"This default situation should not happen.\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        + \"Please contact the idiot programmer.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Parse the content of TodoTask and pass parsed content to taskList"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param content content of parsed event"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @return a Task object"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @throws EmptyDescriptionException"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public Task parseTodoTask(String content) throws EmptyDescriptionException{"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        if (content.length() \u003d\u003d 0)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw new EmptyDescriptionException(\"TODO\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return taskList.addTodoTask(content);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Parse the content of DeadlineTask and pass parsed content to taskList"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param content content of parsed event"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @return a Task object"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @throws EmptyDescriptionException"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @throws ParseErrorException"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @throws WrongDescriptionException"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public Task parseDeadlineTask(String content) throws EmptyDescriptionException, ParseErrorException, WrongDescriptionException{"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        if (content.length() \u003c\u003d 0)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw new EmptyDescriptionException(\"DEADLINE\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            String[] splitedContent \u003d content.split(\"/by\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            return taskList.addDeadlineTask(splitedContent[0], splitedContent[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        } catch (ParseErrorException e){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw new WrongDescriptionException(\"The format of \u0027DEADLINE\u0027 is:\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    + \"\u003e deadline TASK /by TIME\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    + \"Please re-enter your command.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Parse the content of EventTask and pass parsed content to taskList"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param content content of parsed task"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @return a Task object"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @throws EmptyDescriptionException"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @throws ParseErrorException"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @throws WrongDescriptionException"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public Task parseEventTask(String content) throws EmptyDescriptionException, ParseErrorException, WrongDescriptionException{"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        if (content.length() \u003c\u003d 0)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw new EmptyDescriptionException(\"EVENT\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            String[] splitedContent \u003d content.split(\"/at\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            return taskList.addEventTask(splitedContent[0], splitedContent[1]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        } catch (ParseErrorException e){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw new WrongDescriptionException(\"The format of \u0027EVENT\u0027 is:\\n\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    + \"\u003e event TASK /at TIME /to TIME\\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    + \"Please re-enter your command.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Parse the content of a Delete command and ask taskList to delete it."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param content content of parsed command"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @return a Task object indicates the requested task"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @throws WrongDescriptionException"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @throws EmptyDescriptionException"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public Task parseDone(String content) throws DukeException, WrongDescriptionException, EmptyDescriptionException{"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            if (content.length() \u003c 1)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                throw new EmptyDescriptionException(\"DONE\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            int index \u003d Integer.parseInt(content) - 1;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            return taskList.doneTask(index);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        } catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw new DukeException(\"Sorry, I can\u0027t do that for you.\\n\"+"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    \"You only have \" + String.format(\"%d\",taskList.getSize()) + \" tasks on your list.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw new WrongDescriptionException(\"The description of \u0027DONE\u0027 should be an integer.\\n\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    + \"Please re-enter your command.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Parse the content of a Done command and ask taskList to finish it."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param content content of parsed command"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @return a Task object indicates the requested task"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @throws WrongDescriptionException"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @throws EmptyDescriptionException"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public Task parseDelete(String content) throws DukeException, WrongDescriptionException, EmptyDescriptionException{"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            if (content.length() \u003c 1)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                throw new EmptyDescriptionException(\"DELETE\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            int index \u003d Integer.parseInt(content) - 1;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            return taskList.deleteTask(index);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        } catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw new DukeException(\"Sorry, I can\u0027t do that for you.\\n\"+"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    \"You only have \" + String.format(\"%d\",taskList.getSize()) + \" tasks on your list.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            throw new WrongDescriptionException(\"The description of \u0027DELETE\u0027 should be an integer.\\n\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    + \"Please re-enter your command.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public ArrayList\u003cTask\u003e parseFind(String content){"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return taskList.findTask(content);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 168
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private String filePath \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private File taskFile;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        taskFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        if (!taskFile.exists())"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            taskFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                taskFile.createNewFile();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            catch (IOException e2){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                System.out.println(\"Sorry, an error occurs while loading.\"+"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        \" Please contact developers\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public ArrayList\u003cTask\u003e load(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            Scanner sc \u003d new Scanner(taskFile);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                String[] line \u003d sc.nextLine().split(\"|\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                String taskType \u003d line[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                Boolean taskState;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                Task t \u003d new Task();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                if (line[1].compareTo(\"1\")\u003d\u003d0)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    taskState \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                else"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    taskState \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        t \u003d new TodoTask(line[2]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        t \u003d new EventTask(line[2], line[3]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        t \u003d new DeadlineTask(line[2], line[3]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                taskList.add(t);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        } catch (FileNotFoundException e){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            System.out.println(\"Sorry, DUKE can\u0027t find saved todo list.\"+"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    \" Please contact developers.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        } catch (ParseErrorException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            System.out.println(\"This ParseErrorException should not happen\"+"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    \" Please contact developers\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            FileWriter fw \u003d new FileWriter(taskFile);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            for (Task t : taskList) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                switch (t.getTaskType()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        if (t.checkDone())"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                            fw.write(\"T|1|\"+t.getContent());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        else"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                            fw.write(\"T|0|\"+t.getContent());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        if (t.checkDone())"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                            fw.write(\"D|1|\"+t.getContent()+\"|\"+t.getDateTime().toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        else"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                            fw.write(\"D|0|\"+t.getContent()+\"|\"+t.getDateTime().toString());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        if (t.checkDone())"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                            fw.write(\"E|1|\"+t.getContent()+\"|\"+t.getDateTime().toString());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        else"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                            fw.write(\"E|0|\"+t.getContent()+\"|\"+t.getDateTime().toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        System.out.println(\"Whoops, this should not happen\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                fw.write(\"\\n\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        catch (IOException e){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                System.out.println(\"Whoops, an error occurs while saving.\"+"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        \" Please contact developers\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 102
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private String content;        // stores the name of this task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private Boolean closed \u003d false;     //indicates the status of this task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private String taskType \u003d \"\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private LocalDateTime fromDateTime, toDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    Task(){}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    Task(String taskName){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        this.content \u003d taskName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    Task(String taskName, boolean taskStatus){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        this.content \u003d taskName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        this.closed \u003d taskStatus;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Returns the current status of this task and close current task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @return status of current task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public Boolean closeTask(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        this.closed \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.closed;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @return status of current task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public Boolean checkDone(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.closed;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public LocalDateTime getDateTime(){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public LocalDateTime getFromDateTime() { return this.fromDateTime; }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public LocalDateTime getToDateTime() { return this.toDateTime; }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public String getContent(){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.content;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.content;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 57
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private ArrayList\u003cTask\u003e todoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public TaskList (ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        todoList \u003d taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return todoList.size();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Returns the number of unfinished tasks in the todoList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @return number of unfinished tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public int getUndoneCount() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        int undoneCount \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        for (Task t:todoList){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            if (!t.checkDone())"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                undoneCount++;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return undoneCount;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Create a new TodoTask, add it to the totoList and returns it."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param taskContent content of TodoTask"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @return a newly created Task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public Task addTodoTask(String taskContent) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Task task \u003d new TodoTask(taskContent);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        this.todoList.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Create a new DeadlineTask, add it to the totoList and returns it."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param taskContent content of DeadlineTask"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param time deadline of DeadlineTask"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @return a newly created Task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @throws ParseErrorException"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public Task addDeadlineTask(String taskContent, String time) throws ParseErrorException{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Task task \u003d new DeadlineTask(taskContent, time);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        this.todoList.add(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Create a new EventTask, add it to the totoList and returns it."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param taskContent content of EventTask"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param time deadline of EventTask"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @return a newly created Task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @throws ParseErrorException"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public Task addEventTask(String taskContent, String time) throws ParseErrorException{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Task task \u003d new EventTask(taskContent, time);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        this.todoList.add(task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Change a task from undone to done"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param index index of the requested task"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @return the task that was changed"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @throws IndexOutOfBoundsException"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public Task doneTask(int index) throws IndexOutOfBoundsException{"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Task task \u003d todoList.get(index);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        task.closeTask();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Delete a task of index from todoList"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param index ndex of the requested task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @return the task that need to be deleted"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @throws IndexOutOfBoundsException"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public Task deleteTask(int index) throws IndexOutOfBoundsException{"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Task task \u003d todoList.get(index);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        todoList.remove(index);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public ArrayList\u003cTask\u003e findTask(String content) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        ArrayList\u003cTask\u003e allMatches \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        for (Task task:todoList) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            if (task.getContent().contains(content))"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                allMatches.add(task);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return allMatches;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public ArrayList\u003cTask\u003e getTodoList() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return todoList;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public Task get(int index){"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return todoList.get(index);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 106
    }
  },
  {
    "path": "src/main/java/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class TodoTask extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private String taskType \u003d \"T\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    TodoTask(String taskContent){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        super(taskContent);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 11
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": " * Represents a user interface and is in charge of printing contents to screen"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    private void welcome(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        String logo \u003d   \"_|_|_|_|_|    _|_|                _|_|_|      _|_|     _|  \\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        \"    _|      _|    _|              _|    _|  _|    _|   _|  \\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        \"    _|      _|    _|  _|_|_|_|_|  _|    _|  _|    _|   _|  \\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        \"    _|      _|    _|              _|    _|  _|    _|       \\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                        \"    _|        _|_|                _|_|_|      _|_|     _|  \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        System.out.println(\"This is a Duke Project.\\n\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        System.out.println(\"What you are going to do today?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**Reads incoming commands and use a parser to pase it."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param parser a parser used to parse incoming commands"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @return the User interface itself"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public Ui read(Parser parser){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        welcome();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Command command \u003d Command.INIT;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        while (command !\u003d Command.BYE){      //when last command was bye"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            command \u003d Command.getCommand(sc.nextLine());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                parser.runCommand(command);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            } catch (Exception e){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                showExceptionContent(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Prints all the tasks stored in memory"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param todoList a list contains all the tasks"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static public void printList(ArrayList\u003cTask\u003e todoList){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        for (int i \u003d 0; i \u003c todoList.size(); i++){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            Task task \u003d todoList.get(i);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            if (task.checkDone())"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                print(i+1 + \".[\"+task.getTaskType()+\"][X] \" + task.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            else"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                print(i+1 + \".[\"+task.getTaskType()+\"][ ] \" + task.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static public void print(String str){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        for (String s:str.split(\"\\n\"))"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            System.out.println(\"    \" + s);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public void showExceptionContent(String err){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        print(err);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Print TodoTasks to screen"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param taskContent content of todo task"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param size total number of tasks left in the list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param undoneCount number of tasks in the list that has not been done."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static public void printTodoTask(String taskContent, int size, int undoneCount){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Ui.print(\"The following task has been added to your list:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Ui.print(\"  [T][ ] \" + taskContent);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Ui.print(String.format(\"Now you have %d tasks in your list.\", size));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Ui.print(String.format(\"There are %d tasks waiting to be done.\", undoneCount));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Print DeadlineTasks to screen"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param taskContent content of deadline task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param size total number of tasks left in the list"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param undoneCount number of tasks in the list that has not been done."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static public void printDeadlineTask(String taskContent, int size, int undoneCount){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Ui.print(\"The following task has been added to your list:\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Ui.print(\"  [D][ ] \" + taskContent);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Ui.print(String.format(\"Now you have %d tasks in your list.\", size));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Ui.print(String.format(\"There are %d tasks waiting to be done.\", undoneCount));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Print EventTasks to screen"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param taskContent content of event task"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param size total number of tasks left in the list"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param undoneCount number of tasks in the list that has not been done."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static public void printEventTask(String taskContent, int size, int undoneCount){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Ui.print(\"The following task has been added to your list:\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Ui.print(\"  [E][ ] \" + taskContent);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Ui.print(String.format(\"Now you have %d tasks in your list.\", size));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Ui.print(String.format(\"There are %d tasks waiting to be done.\", undoneCount));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Inform the used a task is deleted and print the information on screen"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param task the deleted task"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param undoneCount number of tasks in the list that has not been done."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static public void printDelete(Task task, int undoneCount) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Ui.print(\"Nice! I\u0027ve deleted following task:\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        if (task.checkDone())"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            Ui.print(\"  [\"+task.getTaskType()+\"][X] \" + task.toString());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        else"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            Ui.print(\"  [\"+task.getTaskType()+\"][ ] \" + task.toString());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Ui.print(String.format(\"Now you have %d tasks waiting to be done.\", undoneCount));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * Inform the used a task is done and print the information on screen"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param task the finished task"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     * @param undoneCount number of tasks in the list that has not been done."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static public void printDone(Task task, int undoneCount) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Ui.print(\"Nice! I\u0027ve marked following task as done:\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        if (task.checkDone())"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            Ui.print(\"  [\"+task.getTaskType()+\"][X] \" + task.toString());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        else"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            Ui.print(\"  [\"+task.getTaskType()+\"][ ] \" + task.toString());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Ui.print(String.format(\"Now you have %d tasks waiting to be done.\", undoneCount));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    static public void printFind(ArrayList\u003cTask\u003e allMatches){"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        Ui.print(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        for (int i \u003d 0; i \u003c allMatches.size(); i++){"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            Task task \u003d allMatches.get(i);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            if (task.checkDone())"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                Ui.print(String.format(\"%d.[\", i+1)+task.getTaskType()+\"][X] \" + task.toString());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "            else"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "                Ui.print(String.format(\"%d.[\", i+1)+task.getTaskType()+\"][ ] \" + task.toString());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 148
    }
  },
  {
    "path": "src/main/java/WrongDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class WrongDescriptionException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public WrongDescriptionException(String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 5
    }
  },
  {
    "path": "src/test/java/DeadlineTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "class DeadlineTaskTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 4
    }
  },
  {
    "path": "src/test/java/EventTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "public class EventTaskTest{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    public void getFromDateTimeTest() throws ParseErrorException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "        assertEquals(\"2020-01-01\", new EventTask(\"Hello\", \"2020-01-01\"));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "todo t1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "todo t2"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "deadline d1 /by 02/01/2020 13:00"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "deadline d2 /by 2020-01-01 13:00"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "event e1 /at 01 Jan, 2020 13:00 /to 02/01/2020 13:00"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "hello"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "deadline 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "event 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "delete"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "event t5 /at 1 Jan, 2020 13:00 /to 2/1/2020, 2020 13:00"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "SET MY_PATH\u003dC:\\Users\\cs623\\Docs\\GitHub\\ip"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "if not exist \"%MY_PATH%\\bin\" mkdir \"%MY_PATH%\\bin\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "javac  -cp \"%MY_PATH%\\src\\main\\java\" -Xlint:none -d \"%MY_PATH%\\bin\" \"%MY_PATH%\\src\\main\\java\\Duke.java\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raymond0212"
        },
        "content": "FC /w ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Raymond0212": 5,
      "-": 18
    }
  }
]
