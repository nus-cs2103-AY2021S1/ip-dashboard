[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiabs"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiabs"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    public Deadline(String desc, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiabs"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by:\" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chiabs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chiabs": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiabs"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiabs"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiabs"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiabs"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Jia Le :)\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        System.out.println(\"How may I be of assistance to you?\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chiabs"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    public static int compDel(String str, int numTask) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        String[] words \u003d str.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        int len \u003d words.length;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        if (len \u003d\u003d 2) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chiabs"
        },
        "content": "            String num \u003d words[1];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chiabs"
        },
        "content": "            boolean result \u003d num.matches(\".*\\\\d.*\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chiabs"
        },
        "content": "            if (result) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                int index \u003d Integer.parseInt(num) - 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                if (index \u003e\u003d numTask || index \u003c 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    throw new DukeException(\"OOPS!!! Out of bounds of the list of tasks.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                return index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chiabs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        throw new DukeException(\"OOPS!!! Invalid task provided.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chiabs"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    public static Task taskClassify(String str) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        String[] words \u003d str.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        int len \u003d words.length;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chiabs"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        if (words[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chiabs"
        },
        "content": "            if (len \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chiabs"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                String desc \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                for (int i \u003d 1; i \u003c len; i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    desc +\u003d \" \" + words[i];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                return new ToDo(desc);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chiabs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        } else if (words[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chiabs"
        },
        "content": "            if (len \u003d\u003d 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chiabs"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                String desc \u003d \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                String time \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                int count \u003d 0;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                for (int i \u003d 1; i \u003c len; i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    if (words[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        count \u003d i + 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    desc +\u003d \" \" + words[i];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                if (count \u003d\u003d 0 || count \u003d\u003d len) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The date/time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                for (int j \u003d count; j \u003c len; j++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    time +\u003d \" \" + words[j];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                return new Deadline(desc, time);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chiabs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        } else if (words[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chiabs"
        },
        "content": "            if (len \u003d\u003d 1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chiabs"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                String desc \u003d \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                String time \u003d \"\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                int count \u003d 0;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                for (int i \u003d 1; i \u003c len; i++) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    if (words[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        count \u003d i + 1;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    desc +\u003d \" \" + words[i];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                if (count \u003d\u003d 0 || count \u003d\u003d len) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The date/time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                for (int j \u003d count; j \u003c len; j++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    time +\u003d \" \" + words[j];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                return new Event(desc, time);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chiabs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chiabs"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chiabs"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chiabs"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    public static void echo(){"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chiabs"
        },
        "content": "            String line \u003dscanner.nextLine();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chiabs"
        },
        "content": "            if (line.equals(\"bye\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                System.out.println(\"Bye! Hope to see you again ;)\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chiabs"
        },
        "content": "            } else if (line.equals(\"list\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                int count \u003d 1;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                for (Task task : list) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    System.out.println(count + \".\" + task.toString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chiabs"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                String[] words \u003d line.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                if (words[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        int index \u003d compDel(line, list.size());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        list.get(index).done();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        System.out.println(list.get(index).toString());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                } else if (words[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        int index \u003d compDel(line, list.size());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        Task task \u003d list.get(index);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        list.remove(index);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        System.out.println(task.toString());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        Task task \u003d taskClassify(line);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        list.add(task);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        System.out.println(\"  \" + task.toString());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chiabs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chiabs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chiabs"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        echo();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chiabs": 143,
      "-": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiabs"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiabs"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    public Event(String desc, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiabs"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at:\" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chiabs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chiabs": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiabs"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    protected String desc;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chiabs"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    public Task(String desc) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chiabs"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chiabs"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chiabs"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + this.desc;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chiabs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chiabs": 22
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chiabs"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    public ToDo(String desc) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chiabs"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chiabs"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chiabs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chiabs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chiabs": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chiabs"
        },
        "content": "javac  -cp \"C:\\Users\\Jia Le\\Desktop\\CS2103W2\\src\" -Xlint:none -d ..\\bin \"C:\\Users\\Jia Le\\Desktop\\CS2103W2\\src\\main\\java\\Duke.java\" \"C:\\Users\\Jia Le\\Desktop\\CS2103W2\\src\\main\\java\\Task.java\" \"C:\\Users\\Jia Le\\Desktop\\CS2103W2\\src\\main\\java\\ToDo.java\" \"C:\\Users\\Jia Le\\Desktop\\CS2103W2\\src\\main\\java\\Event.java\" \"C:\\Users\\Jia Le\\Desktop\\CS2103W2\\src\\main\\java\\Deadline.java\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chiabs"
        },
        "content": "\"C:\\Program Files\\Java\\jdk-13.0.1\\bin\\java\" -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "chiabs": 2,
      "-": 16
    }
  }
]
