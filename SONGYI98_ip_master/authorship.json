[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 9,
      "-": 44
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "T / 0 / buy bread"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "T / 1 / borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "D / 0 / return book / 01 Sep 2020, 06:00 PM"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "T / 0 / join sports club"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 4
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Represents all the possible commands that Duke understands."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    BYE, LIST,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    DELETE, DONE, GET, FIND,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    TODO, EVENT, DEADLINE"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 10
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Represents a personal assistant chatbot to help a person keep track of various things."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** UI for Duke to display messages. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Parser for Duke to parse inputs. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates an instance of Duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param hasGui If there is a GUI or not."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Duke(boolean hasGui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.ui \u003d new Ui(hasGui);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Storage storage \u003d new Storage(\"../data\", \"../data/duke.txt\", this.ui, taskList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        storage.checkSavedFile();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.parser \u003d new Parser(storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Main entry point for a CLI-based Duke."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param args Command line arguments."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Duke duke \u003d new Duke(false);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        duke.runDukeForCli();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Retrieves a response for the GUI."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param input Input string."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Result of feeding Parser the input."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getResponseForGui(String input) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return this.parser.processInput(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (DukeInputException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return this.ui.displayError(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Runs Duke for the CLI."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void runDukeForCli() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.ui.displayIntroduction();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.readInputs();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Reads the inputs from the user."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void readInputs() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            String nextInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                this.parser.processInput(nextInput);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            } catch (DukeInputException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                this.ui.displayError(e.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // Exit the program if user says bye"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (nextInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 80,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/DukeInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Encapsulates the exception when a parser receives an invalid input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class DukeInputException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates an exception for Duke-related errors."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param message Message from Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public DukeInputException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 16
    }
  },
  {
    "path": "src/main/java/duke/Executor.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.util.DateTimeHandler;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Encapsulates the execution of user\u0027s command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Executor {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Storage for executor to write data to. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** UI for executor to display messages. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Task list for executor to add/edit/delete tasks. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a new executor from a storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param storage Storage of Duke\u0027s data."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Executor(Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.ui \u003d this.storage.getUi();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.taskList \u003d this.storage.getTaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Executes a command based on the user action."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param command Command type."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param userAction String indicating the user action."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing the result of the execution."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If user action is wrongly formatted."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String executeCommand(Command command, String userAction) throws DukeInputException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return this.ui.displayMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return this.ui.displayTaskList(this.taskList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return deleteTask(userAction);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return markTaskAsDone(userAction);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case GET:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return displayTasksFromDate(userAction);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return findTasks(userAction);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return createTodo(userAction);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return createEvent(userAction);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return createDeadline(userAction);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Returns a footer containing the number of tasks in the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Footer string containing the number of tasks."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String getNumOfTasksFooter() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        int numOfTasks \u003d this.taskList.getNumOfTasks();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (numOfTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"Now you have \" + numOfTasks + \" task in the list.\\n\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"Now you have \" + numOfTasks + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Deletes a task specified by the user."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param indexString String indicating which task\u0027s index to be deleted."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing the result of deleting a task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If index is not a number String or exceeds the task list size."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String deleteTask(String indexString) throws DukeInputException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            int index \u003d Integer.parseInt(indexString) - 1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // Check if index is within the task list size"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (index \u003e\u003d 0 \u0026\u0026 index \u003c this.taskList.getNumOfTasks()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                Task task \u003d this.taskList.getTask(index);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                this.taskList.deleteTask(index); // delete task from the list"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                this.storage.writeToSaveFile(); // edit the data in storage"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                String confirmationMessage \u003d \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                        + task.toString()"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                        + \"\\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                        + this.getNumOfTasksFooter();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                return this.ui.displayMessage(confirmationMessage); // print delete confirmation message"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                throw new DukeInputException(\"The index is not within the range of the list.\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(\"Include the index of the task to be deleted.\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param indexString String indicating which task\u0027s index is done."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing the result of marking a task as done."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If index is not a number String or exceeds the task list size."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String markTaskAsDone(String indexString) throws DukeInputException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            int index \u003d Integer.parseInt(indexString) - 1;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // Check if index is within the task list size"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (index \u003e\u003d 0 \u0026\u0026 index \u003c this.taskList.getNumOfTasks()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                Task task \u003d this.taskList.getTask(index);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                this.storage.writeToSaveFile(); // write task\u0027s data to storage"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                String confirmationMessage \u003d \"Nice! I\u0027ve marked this as done:\\n\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                        + task.toString()"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                        + \"\\n\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                return this.ui.displayMessage(confirmationMessage); // print mark task as done confirmation message"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                throw new DukeInputException(\"The index is not within the range of the list.\\n\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(\"Include the index of the task done.\\n\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Displays the tasks with the date required by the user."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param dateString String describing the date of tasks required."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing all the tasks from a date."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If date String is wrongly formatted."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String displayTasksFromDate(String dateString) throws DukeInputException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String requiredDate \u003d DateTimeHandler.parseDate(dateString);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        boolean hasRequiredTasks \u003d false;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        StringBuilder requiredTasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        int number \u003d 0;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        for (int i \u003d 0; i \u003c this.taskList.getNumOfTasks(); i++) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            String taskString \u003d this.taskList.getTask(i).toString();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (taskString.contains(requiredDate)) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                hasRequiredTasks \u003d true;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                number++;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                requiredTasks.append(number).append(\". \").append(taskString).append(\"\\n\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (hasRequiredTasks) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            String taskMessage \u003d \"Here are the task(s) from \" + requiredDate + \":\\n\" + requiredTasks;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return this.ui.displayMessage(taskMessage);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return this.ui.displayMessage(\"You have no tasks from \" + requiredDate + \".\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Finds the tasks with the given keyword."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param keyword String describing the keyword to search for."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing the result of searching a keyword."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String findTasks(String keyword) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        boolean hasRelevantTasks \u003d false;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        StringBuilder relevantTasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        // Add tasks with keyword contained in the description"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        int number \u003d 0;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        for (int i \u003d 0; i \u003c this.taskList.getNumOfTasks(); i++) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Task task \u003d this.taskList.getTask(i);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            String taskDescription \u003d task.getDescription();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (taskDescription.contains(keyword)) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                hasRelevantTasks \u003d true;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                number++;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                relevantTasks.append(number).append(\". \").append(task.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        // Print message according to whether any relevant tasks have been found"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (hasRelevantTasks) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            String taskMessage \u003d \"Here are the matching task(s) in your list:\\n\" + relevantTasks;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return this.ui.displayMessage(taskMessage);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return this.ui.displayMessage(\"You have no matching tasks for the keyword: \\\"\" + keyword + \"\\\".\\n\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a todo which is added to the task list."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the todo."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing the result of creating a todo."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String createTodo(String description) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Task task \u003d new Todo(description);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.addTask(task);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates an event which is added to the task list."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing the result of creating an event."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If the description is wrongly formatted."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String createEvent(String description) throws DukeInputException {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String[] arr \u003d description.split(\" /at \", 2);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (arr.length \u003c 2 || arr[1].equals(\"\")) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(\"Include the date and time of the event after \\\"/at\\\".\\n\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Task task \u003d new Event(arr[0], arr[1]);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.addTask(task);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a deadline which is added to the task list."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the deadline."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing the result of creating a deadline."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If the description is wrongly formatted."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String createDeadline(String description) throws DukeInputException {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String[] arr \u003d description.split(\" /by \", 2);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (arr.length \u003c 2 || arr[1].equals(\"\")) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(\"Include the date and time of the deadline after \\\"/by\\\".\\n\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Task task \u003d new Deadline(arr[0], arr[1]);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.addTask(task);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Either a todo, event or deadline task."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param task Task to be added to the task list."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing the result of adding a task."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String addTask(Task task) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.taskList.addTask(task);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.storage.writeToSaveFile(); // write task\u0027s data to storage"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String confirmationMessage \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                + task.toString()"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                + getNumOfTasksFooter();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.ui.displayMessage(confirmationMessage); // print create task confirmation message"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 258
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Encapsulates the parsing of user\u0027s input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a parser with a storage for reading and writing data."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param storage Storage for reading and writing data."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Parser(Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Processes the user input fed to Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * A user input consists of a user command and a user action."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * User command is always the first word of the user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * For example, when a user inputs \"todo buy apple\", the user command is \u0027todo\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * and the user action is \u0027buy apple\u0027."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param userInput User input string."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing the result of the processing."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If user command is invalid or user action is missing."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String processInput(String userInput) throws DukeInputException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        // Split the user input into user command and user action"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String[] splitInput \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        // Extract command type"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String userCommand \u003d splitInput[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Command command \u003d this.extractCommandType(userCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            String userAction \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // Extract user action if command is not BYE or LIST"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // BYE and LIST commands have no user action"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (!userInput.equals(\"bye\") \u0026\u0026 !userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                userAction \u003d splitInput[1];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                // Check if user action is present for BYE and LIST commands"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                if (command \u003d\u003d Command.BYE) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    throw new DukeInputException(\"Do you mean \\\"bye\\\"?\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                if (command \u003d\u003d Command.LIST) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    throw new DukeInputException(\"Do you mean \\\"list\\\"?\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // Execute the command type with user action"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Executor executor \u003d new Executor(this.storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return executor.executeCommand(command, userAction);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            handleMissingUserAction(command);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Extracts the command type from a string."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param userCommand String indicating the user command."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Command type."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If user command is invalid."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private Command extractCommandType(String userCommand) throws DukeInputException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        switch (userCommand) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Command.BYE;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Command.LIST;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Command.DELETE;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Command.DONE;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"get\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Command.GET;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Command.FIND;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Command.TODO;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Command.EVENT;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return Command.DEADLINE;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        default: // Unknown command"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(\"I\u0027m sorry, but I don\u0027t know what that means. \\u2639\\n\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Handles missing user action."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param command Command type."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If user action is missing."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void handleMissingUserAction(Command command) throws DukeInputException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(\"Which task do you want to delete?\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(\"Which task have you done?\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case GET:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(\"Include the date you want to get tasks from.\\n\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(\"Include a search term.\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(\"The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(\"The description of an event cannot be empty.\\n\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(\"The description of a deadline cannot be empty.\\n\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 122
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Encapsulates the loading of tasks from a text file and storing of tasks in that text file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * The text file is located in the data directory of the root folder."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Directory file. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final File directory;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Text file. */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final File textFile;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** UI for storage to display messages. */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Task list for storage to access. */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a storage for Duke\u0027s tasks data."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param directoryPath Path of the directory."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param textFilePath Path of the text file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param ui UI."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Storage(String directoryPath, String textFilePath, Ui ui, TaskList taskList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.directory \u003d new File(directoryPath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.textFile \u003d new File(textFilePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets the UI."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return UI."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets the list of tasks."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Checks if duke.txt file exists in the data directory of the root folder."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * If it exists, load the data into Duke."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * If it does not exist, create one."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void checkSavedFile() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (directory.exists()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (textFile.exists()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                readTextFile();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                createTextFile();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            createDataDirectory();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            createTextFile();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a data directory in the root folder."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void createDataDirectory() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        boolean hasCreatedDir \u003d directory.mkdir();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (hasCreatedDir) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.ui.displayMessage(\"A data directory has been created in the root folder.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.ui.displayWarning(\"Failed to create a data directory.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates duke.txt in the data directory of the root folder."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void createTextFile() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String failMessage \u003d \"Failed to create duke.txt.\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            boolean hasCreatedFile \u003d textFile.createNewFile();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (hasCreatedFile) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                this.ui.displayMessage(\"duke.txt has been created in the data directory of the root folder.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                this.ui.displayWarning(failMessage);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.ui.displayWarning(failMessage);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Reads duke.txt and adds tasks into the task list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void readTextFile() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(textFile));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                String[] arr \u003d line.split(\" / \");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                boolean isDone \u003d Integer.parseInt(arr[1]) !\u003d 0;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                if (arr[0].equals(\"T\")) { // Todo"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    task \u003d new Todo(arr[2], isDone);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                } else if (arr[0].equals(\"E\")) { // Event"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    task \u003d new Event(arr[2], isDone, arr[3]);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                } else { // Deadline"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    task \u003d new Deadline(arr[2], isDone, arr[3]);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                this.taskList.addTask(task);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                line \u003d reader.readLine();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.ui.displayWarning(\"Failed to read duke.txt.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Writes tasks\u0027 data to duke.txt."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void writeToSaveFile() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        StringBuilder data \u003d new StringBuilder();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        for (Task task : this.taskList.getTaskList()) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            data.append(task.getData()).append(\"\\n\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(textFile));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            writer.write(data.toString());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            this.ui.displayWarning(\"Failed to write data to duke.txt.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 159
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Array list of tasks. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a new and empty task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets the number of tasks in the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Number of tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public int getNumOfTasks() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets a task from the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param index Index of task stored in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Task from index i of the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets the task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Task list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param task Task to add to the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Deletes a task from the list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param index Index of task stored in the list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.tasks.remove(index);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 67
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Handles interactions with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Checks if there is a GUI. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final boolean hasGui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a UI and checks the presence of GUI."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param hasGui If there is a GUI or not."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Ui(boolean hasGui) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.hasGui \u003d hasGui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Displays Duke\u0027s introduction message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void displayIntroduction() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String divider \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String welcome \u003d \"Hello! I\u0027m Duke.\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        System.out.println(divider + logo + welcome + divider);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Displays a message."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param message Message."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Message to be displayed if GUI is used."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String displayMessage(String message) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (hasGui) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            System.out.println(message);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Displays a warning message."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param message Warning message."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Warning message to be displayed if GUI is used."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String displayWarning(String message) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String warningMessage \u003d \"WARNING: \" + message;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (hasGui) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return warningMessage;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            System.out.println(warningMessage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Displays an error message."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Error message to be displayed if GUI is used."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String displayError(String message) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String errorMessage \u003d \"ERROR: \" + message;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (hasGui) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return errorMessage;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            System.out.println(errorMessage);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Displays the entire list of tasks."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Task list to be displayed if GUI is used."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String displayTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        int numOfTasks \u003d taskList.getNumOfTasks();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        StringBuilder messageBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (numOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            messageBuilder.append(\"There are no tasks in your list.\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            if (numOfTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                messageBuilder.append(\"This is the only task in your list:\\n\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                messageBuilder.append(\"Here are the \").append(numOfTasks).append(\" tasks in your list:\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            for (int i \u003d 0; i \u003c numOfTasks; i++) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                int number \u003d i + 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                messageBuilder.append(number).append(\". \").append(taskList.getTask(i).toString());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                messageBuilder.append(\"\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String message \u003d messageBuilder.toString();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        if (hasGui) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            System.out.println(message);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 114
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * and a label containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a dialog box with a text and an image."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param text Text."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param img Image."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.dialog.setText(text);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.displayPicture.setImage(img);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets a user dialog box."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param text Text."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param img Image."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Dialog box with the user\u0027s image and text."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets a Duke dialog box."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param text Text."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param img Image."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Dialog box with Duke\u0027s image and text."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 81
    }
  },
  {
    "path": "src/main/java/duke/gui/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Main entry point for a GUI-based Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param args Command line arguments."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 18
    }
  },
  {
    "path": "src/main/java/duke/gui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Represents the bridge between the logic in Duke and the GUI in MainWindow."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Logic for Duke to run. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Duke duke \u003d new Duke(true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDukeGui(this);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets a response from the input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param input Input string"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String describing the response to the input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.duke.getResponseForGui(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 43
    }
  },
  {
    "path": "src/main/java/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Controller for MainWindow. Provides the layout for other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** GUI for Duke. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private Main dukeGui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Sets GUI for Duke."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param dukeGui GUI for Duke."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void setDukeGui(Main dukeGui) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.dukeGui \u003d dukeGui;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Appends them to the dialog container."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Clears the user input after processing."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private void updateDialogContainer() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        // Initialize labels"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String userText \u003d this.userInput.getText();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        String dukeText \u003d this.dukeGui.getResponse(userText);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        // Add children to dialog container"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DialogBox.getUserDialog(userText, this.userImage),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, this.dukeImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        // Clear text field"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.userInput.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 65
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.DukeInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.util.DateTimeHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Represents a deadline as a task with a date and time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Date and time of the deadline. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final String dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a new deadline from a description and a date and time String."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param dateTime Due date and time of the deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If the date and time input is invalid."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Deadline(String description, String dateTime) throws DukeInputException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.dateTime \u003d DateTimeHandler.parseDateTime(dateTime);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a new deadline from a description, completion status and a date and time String."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the deadline."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param isDone Completion status of the deadline."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param dateTime Due date and time of the deadline properly formatted."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Deadline(String description, boolean isDone, String dateTime) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets the date and time of the deadline."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Date and time of the deadline."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return \"D / \" + super.getData() + \" / \" + this.getDateTime();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.getDateTime() + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 56
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.DukeInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.util.DateTimeHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Represents an event as a task with a date and time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Date and time of the event. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final String dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a new event from a description and a date and time String."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param dateTime Date and time of the event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If the date and time input is invalid."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Event(String description, String dateTime) throws DukeInputException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.dateTime \u003d DateTimeHandler.parseDateTime(dateTime);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a new event from a description, completion status and a date and time String."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param isDone Completion status of the event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param dateTime Date and time of the event."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Event(String description, boolean isDone, String dateTime) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets the date and time of the event."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Date and time of the event."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return \"E / \" + super.getData() + \" / \" + this.getDateTime();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.getDateTime() + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 56
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Encapsulates a task with a description and a completion status."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Description of the task. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /** Completion status of the task. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a new task from a description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a new task from a description and completion status."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param isDone Completion status of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets the description of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Description of the task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Returns the status of the task using UTF-8 encoding."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Either a tick or a cross symbol."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Status icon."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Gets data from the task to be saved in storage."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return String representing the data of the task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        int statusNumber \u003d this.getStatusIcon().equals(\"\\u2713\")"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                ? 1"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                : 0;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return statusNumber + \" / \" + this.getDescription();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 77
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Represents a todo as a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a todo from a description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the todo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Creates a todo from a description and completion status."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param description Description of the todo."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param isDone Completion status of the todo."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return \"T / \" + super.getData();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 36
    }
  },
  {
    "path": "src/main/java/duke/util/DateTimeHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.DukeInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " * Encapsulates the handling of dates and times."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class DateTimeHandler {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Parses and formats the date string."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param date Unformatted date string."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Date string in the format of \"dd MMM YYYY\"."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If date input is invalid."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public static String parseDate(String date) throws DukeInputException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // Parse input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            LocalDate inputDate \u003d LocalDate.parse(date, inputFormatter);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // Produce formatted output"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return inputDate.format(outputFormatter);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(\"Enter the date as \\\"dd-MM-yyyy\\\".\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * Parses and formats the date and time string."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @param dateTime Unformatted date and time string."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @return Date and time string in the format of \"dd MMM YYYY, hh:ss\"."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     * @throws DukeInputException If date and time input is invalid."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public static String parseDateTime(String dateTime) throws DukeInputException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // Parse input"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            LocalDateTime inputDateTime \u003d LocalDateTime.parse(dateTime, inputFormatter);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            // Produce formatted output"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, hh:ss a\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            return inputDateTime.format(outputFormatter);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            throw new DukeInputException(\"Enter the date and time as \\\"dd-MM-yyyy HHmm\\\".\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 56
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            fx:controller\u003d\"duke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#updateDialogContainer\" prefHeight\u003d\"41.0\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                   prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                onAction\u003d\"#updateDialogContainer\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                    vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 23
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void beforeEachTestMethod() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Storage storage \u003d new Storage(\"../data\", \"../data/duke.txt\", new Ui(false), new TaskList());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        this.parser \u003d new Parser(storage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void testByeCommand_extraUserInput_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e this.parser.processInput(\"bye bye\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void testListCommand_extraUserInput_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e this.parser.processInput(\"list 1\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void testDeleteCommand_invalidFormat_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e this.parser.processInput(\"delete\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e this.parser.processInput(\"delete a\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void testDoneCommand_invalidFormat_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e this.parser.processInput(\"done\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e this.parser.processInput(\"done a\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void testGetCommand_invalidFormat_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e this.parser.processInput(\"get\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e this.parser.processInput(\"get a\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e this.parser.processInput(\"get 01/09/2020\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void testTodoCommand_invalidFormat_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e this.parser.processInput(\"todo\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void testEventCommand_invalidFormat_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DukeInputException.class, () -\u003e this.parser.processInput(\"event project meeting\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DukeInputException.class, () -\u003e this.parser.processInput(\"event project meeting\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DukeInputException.class, () -\u003e this.parser.processInput(\"event project meeting /at\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DukeInputException.class, () -\u003e this.parser.processInput(\"event project meeting /at 01/09/2020\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DukeInputException.class, () -\u003e this.parser.processInput(\"event project meeting /by 01/09/2020 0800\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void testDeadlineCommand_invalidFormat_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DukeInputException.class, () -\u003e this.parser.processInput(\"return book\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows("
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DukeInputException.class, () -\u003e this.parser.processInput(\"return book\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DukeInputException.class, () -\u003e this.parser.processInput(\"return book /by\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DukeInputException.class, () -\u003e this.parser.processInput(\"return book /by 01/09/2020\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows("
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "                DukeInputException.class, () -\u003e this.parser.processInput(\"return book /at 01/09/2020 1800\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 78
    }
  },
  {
    "path": "src/test/java/duke/util/DateTimeHandlerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import duke.DukeInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "public class DateTimeHandlerTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void dateFormat_validInput_correctDateFormat() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Assertions.assertEquals(\"01 Sep 2020\", DateTimeHandler.parseDate(\"1-9-2020\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Assertions.assertEquals(\"01 Sep 2020\", DateTimeHandler.parseDate(\"01-09-2020\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (DukeInputException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void dateFormat_invalidFormat_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e DateTimeHandler.parseDate(\"1/9/2020\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e DateTimeHandler.parseDate(\"01/09/2020\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void dateTimeFormat_validInput_correctDateTimeFormat() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Assertions.assertEquals(\"01 Sep 2020, 08:00 AM\", DateTimeHandler.parseDateTime(\"1-9-2020 0800\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Assertions.assertEquals(\"01 Sep 2020, 06:00 PM\", DateTimeHandler.parseDateTime(\"01-09-2020 1800\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        } catch (DukeInputException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    public void dateTimeFormat_invalidFormat_dukeExceptionThrown() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e DateTimeHandler.parseDateTime(\"1/9/2020 1800\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "        Assertions.assertThrows(DukeInputException.class, () -\u003e DateTimeHandler.parseDateTime(\"01-09-2020 6pm\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 40
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "list a"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "done"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "done a"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "deadline return book /by"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "deadline return book /by 01/09/2020 6pm"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "deadline return book /by 01/09/2020 1800"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "deadline return book /by 01-09-2020 1800"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "event project meeting /by"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "event project meeting /by 1-9-2020 0800"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "event project meeting /at 1-9-2020 0800"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "get"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "get 1/9/2020"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "get 1-9-2020"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "find"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "find z"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "find book"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "delete"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "delete a"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "get 1-9-2020"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "blah"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "bye a"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "bye"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "blah"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 38
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\util\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 4,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/task/*.java ../src/main/java/duke/util/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SONGYI98"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "SONGYI98": 4,
      "-": 36
    }
  }
]
