[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "## Testing"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "```shell script"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "cd text-ui-test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "# chmod +x # Only needed first time"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "./runtest.sh"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 8,
      "-": 26
    }
  },
  {
    "path": "src/main/java/CommandInvalidArgumentFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "// Thrown if the arguments are wrong format"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class CommandInvalidArgumentFormatException extends RuntimeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 3
    }
  },
  {
    "path": "src/main/java/CommandMissingArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": " * Thrown if command missing arguments"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class CommandMissingArgumentException extends RuntimeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 5
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public DeadlineTask("
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            Boolean isDone,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            String name,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            String time"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    ) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        super(isDone, name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), time);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 16
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        String welcomeGraphic \u003d \"                      .,,uod8B8bou,,.\\n\" +"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"              ..,uod8BBBBBBBBBBBBBBBBRPFT?l!i:.\\n\" +"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"         ,\u003dm8BBBBBBBBBBBBBBBRPFT?!||||||||||||||\\n\" +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"         !...:!TVBBBRPFT||||||||||!!^^\\\"\\\"\u0027   ||||\\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"         !.......:!?|||||!!^^\\\"\\\"\u0027            ||||\\n\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"         !.........||||                     ||||\\n\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"         !.........||||       Welcome!      ||||\\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"         !.........||||                     ||||\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"         !.........||||      I am your      ||||\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"         !.........||||  personal assistant ||||\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"         !.........||||       Zachary       ||||\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"         `.........||||                    ,||||\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"          .;.......||||               _.-!!|||||\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"   .,uodWBBBBb.....||||       _.-!!|||||||||!:\u0027\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"!YBBBBBBBBBBBBBBb..!|||:..-!!|||||||!iof68BBBBBb....\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"!..YBBBBBBBBBBBBBBb!!||||||||!iof68BBBBBBRPFT?!::   `.\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"!....YBBBBBBBBBBBBBBbaaitf68BBBBBBRPFT?!:::::::::     `.\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"!......YBBBBBBBBBBBBBBBBBBBRPFT?!::::::;:!^\\\"`;:::       `.\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"!........YBBBBBBBBBBRPFT?!::::::::::^\u0027\u0027...::::::;         iBBbo.\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"`..........YBRPFT?!::::::::::::::::::::::::;iof68bo.      WBBBBbo.\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"  `..........:::::::::::::::::::::::;iof688888888888b.     `YBBBP^\u0027\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"    `........::::::::::::::::;iof688888888888888888888b.     `\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"      `......:::::::::;iof688888888888888888888888888888b.\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"        `....:::;iof688888888888888888888888888888888899fT!\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"          `..::!8888888888888888888888888888888899fT|!^\\\"\u0027\\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"            `\u0027 !!988888888888888888888888899fT|!^\\\"\u0027\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"                `!!8888888888888888899fT|!^\\\"\u0027\\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"                  `!988888888899fT|!^\\\"\u0027\\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                \"                    `!9899fT|!^\\\"\u0027\\n\\n\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        System.out.println(welcomeGraphic);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        PersonalAssistant pa \u003d new PersonalAssistant();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        pa.run();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 32,
      "-": 4
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public EventTask("
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            Boolean isDone,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            String name,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            String time"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    ) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        super(isDone, name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), time);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 16
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class InvalidCommandException extends RuntimeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 2
    }
  },
  {
    "path": "src/main/java/MissingTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class MissingTaskException extends RuntimeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 2
    }
  },
  {
    "path": "src/main/java/PersonalAssistant.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class PersonalAssistant {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private ArrayList\u003cTask\u003e store;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private Scanner reader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     * Initialize personal assistant with a store for user input"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public PersonalAssistant() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        store \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        reader \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        System.out.println(\"\u003e What can I do for you?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        getUserCommands();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     * Gets user input from STDIN, executes it"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public void getUserCommands() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            System.out.println(\"\\nEnter your command or \\\"bye\\\" to exit: \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            // Tokenize the input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            String input \u003d reader.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            String[] cmdTokens \u003d TokenParser.tokenize(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            // Handle inputs"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            this.execute(cmdTokens);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } catch (CommandMissingArgumentException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            System.out.println(\"Missing arguments!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } catch (CommandInvalidArgumentFormatException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            System.out.println(\"Invalid arguments!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } catch (MissingTaskException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            System.out.println(\"Missing task!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            this.getUserCommands();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     * Handle commands from users"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     * @param cmdTokens"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     * The command tokens from users"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public void execute(String[] cmdTokens) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        String cmd \u003d cmdTokens[0];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        switch (cmd) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "             * EXIT"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "             */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"bye\": {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                System.out.println(\"Goodbye!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "             * LIST TASKS"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "             */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"list\": {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                this.list();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                getUserCommands();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "             * UPDATE TASKS"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "             */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"done\": {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Handle incorrect argument lengths"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                if (cmdTokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                    throw new CommandMissingArgumentException();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                Integer taskIndex \u003d TokenParser.parseInt(cmdTokens[1]) - 1;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // If the task doesn\u0027t exist (It\u0027s index is missing)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                if (taskIndex \u003c 0 || taskIndex \u003e\u003d store.size()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                    throw new MissingTaskException();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                completeTask(taskIndex);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Get the next command"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                this.getUserCommands();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"delete\": {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Handle incorrect argument lengths"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                if (cmdTokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                    throw new CommandMissingArgumentException();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                Integer taskIndex \u003d TokenParser.parseInt(cmdTokens[1]) - 1;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // If the task doesn\u0027t exist (It\u0027s index is missing)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                if (taskIndex \u003c 0 || taskIndex \u003e\u003d store.size()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                    throw new MissingTaskException();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                deleteTask(taskIndex);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Get the next command"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                this.getUserCommands();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "             * TASK COMMANDS"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "             */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"todo\": {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Handle missing inputs"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                if (cmdTokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                    throw new CommandMissingArgumentException();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                String taskName \u003d cmdTokens[1];"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                if (taskName.equals(\"\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                    throw new CommandMissingArgumentException();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Create the task"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                Task task \u003d new TodoTask(false, taskName);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Store the task"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                addTask(task);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Get the next command"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                this.getUserCommands();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"deadline\": {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Handle missing inputs"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                if (cmdTokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                    throw new CommandMissingArgumentException();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Arguments"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                String[] arguments \u003d cmdTokens[1].split(\"/by\", 2);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                if (arguments.length \u003c\u003d 1"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        || arguments[0].equals(\"\")"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        || arguments[1].equals(\"\")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                    throw new CommandMissingArgumentException();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Otherwise create the task"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                Task task \u003d new DeadlineTask("
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        false,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        arguments[0],"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        arguments[1]"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                );"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Store the task"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                addTask(task);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Get the next command"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                this.getUserCommands();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            case \"event\": {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Handle missing inputs"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                if (cmdTokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                    throw new CommandMissingArgumentException();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Arguments"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                String[] arguments \u003d cmdTokens[1].split(\"/at\", 2);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                if (arguments.length \u003c\u003d 1"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        || arguments[0].equals(\"\")"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        || arguments[1].equals(\"\")) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                    throw new CommandMissingArgumentException();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Otherwise create the task"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                Task task \u003d new EventTask("
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        false,"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        arguments[0],"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                        arguments[1]"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                );"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Store the task"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                addTask(task);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                // Get the next command"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                this.getUserCommands();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                System.out.println(\"Invalid command\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "                this.getUserCommands();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        store.add(task);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        String message \u003d String.format(\"Added: %s\", task.toString());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public void completeTask(Integer taskIndex) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        // Set the task to done"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        Task task \u003d store.get(taskIndex);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        task.done();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        System.out.println(\"Task marked as complete:\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public void deleteTask(int taskIndex) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        // Set the task to done"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        Task task \u003d store.remove(taskIndex);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        System.out.println(\"Task deleted:\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        for (int i \u003d 0; i \u003c store.size(); i++) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            String listText \u003d String.format(\"%d. %s\", i + 1, store.get(i));"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            System.out.println(listText);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 235
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private Boolean isDone; // Whether a task is complete"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    private String name; // The task name"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public Task(Boolean isDone, String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        String taskString \u003d String.format(\"%s %s\", this.showStatus(), name);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return taskString;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String showStatus() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            return \"[✓]\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            return \"[✗]\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 31
    }
  },
  {
    "path": "src/main/java/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public TodoTask("
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            Boolean isDone,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            String name"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    ) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        super(isDone, name);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 13
    }
  },
  {
    "path": "src/main/java/TokenParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "public class TokenParser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public static Integer parseInt(String str) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            return Integer.parseInt(str);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            throw new CommandInvalidArgumentFormatException();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    public static String[] tokenize(String str) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "        return str.split(\" \", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "todo one"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "event x /at two"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "deadline y /by three"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "invalid command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "event x"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "deadline y"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kwannoel"
        },
        "content": "if ! javac -encoding utf8 -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "kwannoel": 1,
      "-": 37
    }
  }
]
