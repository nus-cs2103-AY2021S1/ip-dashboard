[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    archiveVersion \u003d \"0.2-Gui\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 18,
      "-": 44
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "T,1,teamproj"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "T,0,work"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "E,1,2101 meeting,2020-02-02"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "D,1,2101 slides,2020-02-03"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "T,0,stuff"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "T,0,more stuff"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 6
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "# CS Task Manager"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Proudly presented by the mighty Gilth Sebert."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "## What is this thingy?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "A task manager for all your CS work. Friendly GUI partnered with CLI as main form of interaction."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Made for them fast fingers."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "![screenshot](Ui.png)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "## What can it do?"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "### Add task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Add a new task to your list. Supported tasks: `Todo`, `Event`, `Deadline`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "### Mark as done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Marks a task as done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "### List"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Lists all your current tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "### Delete"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Delete a task that\u0027s in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "### Sort"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Sorts your tasks chronologically."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "## How do I use it?"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "### `todo` - Add a new todo task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Adds a new todo task to the list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Example: `todo CS2103T project`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Outcome: `new todo added`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "### `deadline` - Add a new deadline task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Adds a new deadline task to the list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Example: `dealine oral presentation /by 2020-01-02`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Outcome: `new deadline added`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "### `event` - Add a new event task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Adds a new event task to the list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Example: `event modrekt /by 2020-01-02`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Outcome: `new event added`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "### `list` - Lists all current tasks"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Displays all current tasks in the list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Example: `list`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Outcome: `all tasks displayed`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "### `delete` - Deletes a selected task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Deletes a selected task from the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Example: `delete 1`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Outcome: `task at index 1 deleted`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "### `done` - Marks a selected task as done"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Marks a selected task as done."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Example: `done 2`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Outcome: `task at index 1 marked as done`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "### `sort` - Sorts tasks chronologically"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Sorts all tasks chronologically"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Example: `sort`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Outcome: `tasks in list sorted by time`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "### `bye` - Quits application"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Saves data locally and quits application"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Example: `bye`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Outcome: `saves data in a local text file and quits application`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "## How to get this?"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Simply go to releases and find the latest release with a binary file."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "Download it and voila!"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "howtoosee": 93,
      "-": 9
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Main class for the Duke programme."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private static final String QUIT_STRING \u003d \"bye\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private final DukeList taskList \u003d new DukeList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private boolean shouldQuit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Creates a new Duke object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Creates a new Duke object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param inputStream Input stream from which user inputs will be read."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public Duke(InputStream inputStream) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.ui \u003d new Ui(inputStream);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Checks if programme should quit given the input message."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param msgInput Message input from user."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return True if programme should quit, false otherwise."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private static Boolean shouldQuit(String msgInput) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return msgInput.equals(Duke.QUIT_STRING);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Marks an item as done."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param inputTextArr String array of the input text, split by \" \"."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Status message to be printed."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @throws IndexOutOfBoundsException Invalid index given or input text array is invalid."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private String markAsDone(String[] inputTextArr) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            int index \u003d Integer.parseInt(inputTextArr[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            String statusMsg \u003d this.taskList.markAsDone(index);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            assert statusMsg !\u003d null : \"Status message not found\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return statusMsg;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            // forwards ArrayIndexOutOfBoundsException from Integer.parseInt()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            // inputTextArr is invalid."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            throw new ArrayIndexOutOfBoundsException(\"Invalid inputTextArr.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            // exception thrown from DukeList.markAsDone()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            // index given in input text is invalid."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            throw new IndexOutOfBoundsException(\"Invalid index given.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Deletes an item from the taskList."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param inputTextArr String array of the input text, split by \" \"."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Status message to be printed."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @throws IndexOutOfBoundsException Invalid index given or input text array is invalid."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private String delete(String[] inputTextArr) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            int index \u003d Integer.parseInt(inputTextArr[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            String statusMsg \u003d this.taskList.delete(index);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            assert statusMsg !\u003d null : \"Status message not found\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return statusMsg;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            // forwards ArrayIndexOutOfBoundsException from Integer.parseInt()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            // inputTextArr is invalid."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            throw new ArrayIndexOutOfBoundsException(\"Invalid inputTextArr.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            // exception thrown from DukeList.delete()"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            // index given in input text is invalid."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            throw new IndexOutOfBoundsException(\"Invalid index given.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Sorts tasks chronologically (by date)."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Todos always come first, in alphabetical order."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * If tasks with dates have the same date, they are sorted alphabetically."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Status message to be printed."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private String sort() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String statusMsg \u003d this.taskList.sort();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assert statusMsg !\u003d null;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return statusMsg;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Finds tasks based on keyword."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Output indexes are the indexes of elements in the original dukeList."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param inputTextArr String array of the input text, split by \" \"."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private String find(String[] inputTextArr) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String keyword \u003d Parser.getItemSubstring(inputTextArr);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String statusMsg \u003d this.taskList.find(keyword);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assert statusMsg !\u003d null : \"Status message not found\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return statusMsg;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Helper function to handle command cases."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param userInputStr   User input string."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param keywordCommand Parsed command of user input."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Status message to be printed after command is executed ."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private String handleCommands(String userInputStr, Command keywordCommand) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String[] msgArr \u003d Parser.parseLineToArray(userInputStr);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String statusMessage;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        switch (keywordCommand) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case INVALID:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            statusMessage \u003d String.format(\"Yo whatchu mean by `%s`???\", msgArr[0]);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            statusMessage \u003d this.taskList.toString();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            statusMessage \u003d this.markAsDone(msgArr);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            statusMessage \u003d this.delete(msgArr);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            statusMessage \u003d this.find(msgArr);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case SORT:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            statusMessage \u003d this.sort();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case TASK:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            statusMessage \u003d this.taskList.add(userInputStr);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case TERMINATE:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            this.shouldQuit \u003d true;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            statusMessage \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            this.exit();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assert statusMessage !\u003d null;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return statusMessage;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Logic helper function."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param msgInput User input string."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Status message to be printed."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private String dukeLogicHelper(String msgInput) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Command keywordCommand \u003d Parser.getCommand(msgInput);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String statusMessage;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            statusMessage \u003d this.handleCommands(msgInput, keywordCommand);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            this.ui.printMessage(statusMessage);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            statusMessage \u003d this.ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            statusMessage \u003d this.ui.printEmptyIndexErrorMsg(keywordCommand.toString());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            statusMessage \u003d this.ui.printInvalidIndexErrorMsg();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assert statusMessage !\u003d null;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return statusMessage;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Logic framework of Duke."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private void dukeLogic() {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.shouldQuit \u003d false;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String msgInput;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        while (!shouldQuit \u0026\u0026 this.ui.hasNextLine()) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            msgInput \u003d this.ui.nextLine();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            assert msgInput !\u003d null;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            dukeLogicHelper(msgInput);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Starts the Duke programme logic."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param isCli Whether programme should run as command line."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *              Cmd launchers will pass in true, Gui launchers will pass in false."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void start(boolean isCli) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.taskList.loadFromFile();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        if (isCli) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            // programme starts"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            this.ui.printStartMessage();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            // programme execution here"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            this.dukeLogic();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            // programme ends"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            this.ui.printEndMessage();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            this.taskList.writeToFile();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Gets the start message for Duke."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Start message string."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String getStartMessage() {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return Ui.getStartMessage();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Gets the end message for Duke."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return End message string."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String getEndMessage() {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return Ui.getEndMessage();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Exits duke and quit the Gui platform."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.taskList.writeToFile();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            Thread.sleep(2000);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } catch (Exception ignored) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            // Failed thread sleep is ignored,"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            // exit Duke normally."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Gets user response to the input string."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param input Input string from user to be processed."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return this.dukeLogicHelper(input);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Programme entry point."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param args default argument array."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        new Duke().start(true);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 307,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.exceptions.DukeInvalidCommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.exceptions.DukeInvalidDescriptionException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.exceptions.DukeNoDateException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.exceptions.DukeNoDescriptionException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.tasks.TaskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * DukeList class for Duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Stores tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public class DukeList {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private static final int DEFAULT_CAPACITY \u003d 100;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private final List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private final Storage store \u003d new Storage(\"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Creates a new DukeList with default capacity of 100."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public DukeList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e(DEFAULT_CAPACITY);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Creates a new DukeList with custom capacity."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param capacity List capacity to override default capacity."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public DukeList(int capacity) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e(capacity);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Adds a new item to the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param descriptionString String to be added."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Status string to be printed."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @throws DukeException Duke exception."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String add(String descriptionString) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Task newTask \u003d addHelper(descriptionString);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return \"Orite, I\u0027ve added this:\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                + String.format(\"\\t%s\\n\", newTask.toString())"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                + String.format(\"%s\", this.getListStats());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Adds a new item to the list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * This method is only accessed privately."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param descriptionString Description string of task to be added."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param isDone            True if task is already completed, false otherwise."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @throws DukeInvalidDescriptionException Invalid description text."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @throws DukeInvalidCommandException     Invalid command."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private void add(String descriptionString, boolean isDone) throws DukeInvalidDescriptionException, DukeInvalidCommandException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Task newTask \u003d addHelper(descriptionString);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            newTask.markAsDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Helper function for adding an item."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param descriptionString String to be added."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Task added."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @throws DukeInvalidDescriptionException Invalid description."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @throws DukeInvalidCommandException     Invalid command."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private Task addHelper(String descriptionString) throws DukeInvalidDescriptionException, DukeInvalidCommandException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String[] strArr \u003d Parser.parseLineToArray(descriptionString);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        TaskType taskType \u003d Parser.getTaskKeyword(descriptionString);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Task newTask \u003d this.handleTasks(strArr, taskType);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assert newTask !\u003d null;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Helper function to get new task."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param strArr   Parsed string array of user input."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param taskType Parsed type of task."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return New task to be added."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @throws DukeInvalidDescriptionException Invalid description in user input."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @throws DukeInvalidCommandException     Invalid task type in user input."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private Task handleTasks(String[] strArr, TaskType taskType) throws DukeInvalidDescriptionException, DukeInvalidCommandException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String formattedDescriptionString;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                formattedDescriptionString \u003d Parser.getItemSubstring(strArr);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                newTask \u003d new Todo(formattedDescriptionString);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                formattedDescriptionString \u003d Parser.getItemSubstring(strArr);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                newTask \u003d new Deadline(formattedDescriptionString);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                formattedDescriptionString \u003d Parser.getItemSubstring(strArr);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                newTask \u003d new Event(formattedDescriptionString);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                String invalidCommand \u003d strArr[0];"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                throw new DukeInvalidCommandException(String.format(\"Yo whatchu mean by `%s`???\", invalidCommand));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            assert newTask !\u003d null;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return newTask;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } catch (DukeNoDescriptionException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            throw new DukeInvalidDescriptionException(String.format(\"Hey hey where\u0027s my description for `%s`?\", taskType));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } catch (DukeNoDateException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            throw new DukeInvalidDescriptionException(String.format(\"Mate  you gave me an invalid description for `%s`!\", taskType));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Marks an item as done."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param index Index of item to be marked as done."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *              This index is the printed index, not the actual index in the list."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Status string to be printed."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @throws NullPointerException Invalid index."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String markAsDone(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Task targetTask \u003d this.taskList.get(index - 1);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        targetTask.markAsDone();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return String.format(\"Orite, this is marked as done:\\n\\t%s\", targetTask.toString());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Deletes an item from the list."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param index Index of ite to be deleted."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *              This index is the printed index, not the actual index in the list."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Status string to be printed."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @throws IndexOutOfBoundsException Invalid index."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String delete(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Task removedTask \u003d this.taskList.remove(index - 1);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return \"Okay, removed this:\\n\""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                + String.format(\"\\t%s\\n\", removedTask.toString())"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                + String.format(\"%s\", this.getListStats());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Finds tasks based on keyword."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Output index are the indexes in original dukeList."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param keyword Keyword to be searched for."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return String representation of all matched tasks."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String find(String keyword) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        List\u003cString\u003e matchedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        matchedTasks.add(\"Here\u0027s what I found man:\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            Task currTask \u003d this.taskList.get(i);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            if (currTask.matches(keyword)) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                matchedTasks.add(String.format(\"%d. %s\", i + 1, currTask));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        if (matchedTasks.size() \u003e 1) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return String.join(\"\\n\", matchedTasks);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return \"There\u0027s nothing found!\";"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Sorts tasks chronologically."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Status string to be printed."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String sort() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        if (this.taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return \"List is empty yo! Ain\u0027t nothing to sort!\";"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Collections.sort(this.taskList);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return \"Yes yes, tasks sorted chronologically:\\n\" + this.toString();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Writes all tasks in list to file."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void writeToFile() {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        for (Task t : this.taskList) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            this.store.addToFileBuffer(t);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.store.writeToFile();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Loads items that are read from file into the list."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void loadFromFile() {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String[][] parsedLines \u003d this.store.readFromFile();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        for (String[] parsedLine : parsedLines) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            String descriptionString \u003d parsedLine[0];"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            String isDoneString \u003d parsedLine[1];"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            this.add(descriptionString, isDoneString.equals(\"1\"));"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Gets the string representation of the statistics of the list."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return String representation of statistics of the list."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private String getListStats() {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return String.format(\"You have %d tasks in the list man! Get your stuff done asap\", this.taskList.size());"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        if (this.taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return \"You list is empty bruh!\";"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            StringBuilder outputString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            outputString.append(\"Get your stuff done:\\n\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            for (int i \u003d 0; i \u003c this.taskList.size(); i++) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                String currTaskStr \u003d String.format(\"%d: %s\", i + 1, this.taskList.get(i).toString());"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                outputString.append(currTaskStr);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                // add new line and tab only if not at the end of the list"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                if (i \u003c taskList.size() - 1) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                    outputString.append(\"\\n\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return outputString.toString();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 280
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Launcher class for JavaFX GUI."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 16
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.gui.MainWindow;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private final Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private void initialiseDuke(FXMLLoader loader) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        loader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        duke.start(false);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        loader.\u003cMainWindow\u003egetController().printWelcomeMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Starts the JavaFX Gui."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param stage Stage to be used in Gui."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            stage.setTitle(\"CS Task Manager\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            this.initialiseDuke(fxmlLoader);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 53
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.exceptions.DukeInvalidDescriptionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.exceptions.DukeNoDescriptionException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.tasks.TaskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Parser for Duke."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Parses user inputStrings."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private Parser() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Parses user input string to array by delimiter."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param inputString Input string from user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Parsed string array."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public static String[] parseLineToArray(String inputString) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return inputString.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Parses user input string and gets command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param inputString Input string from user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Corresponding parsed command.."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public static Command getCommand(String inputString) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String keyword \u003d parseLineToArray(inputString)[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        switch (keyword) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case (\"list\"):"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return Command.LIST;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case (\"delete\"):"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return Command.DELETE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case (\"done\"):"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return Command.DONE;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case (\"find\"):"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return Command.FIND;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case (\"bye\"):"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return Command.TERMINATE;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case (\"sort\"):"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return Command.SORT;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case (\"todo\"):"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            // fallthrough"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case (\"event\"):"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            // fallthrough"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case (\"deadline\"):"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return Command.TASK;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return Command.INVALID;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Parses user input string and gets task type."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param inputString input line."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return task type."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public static TaskType getTaskKeyword(String inputString) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String keyword \u003d parseLineToArray(inputString)[0];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        switch (keyword) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case (\"todo\"):"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return TaskType.TODO;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case (\"event\"):"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return TaskType.EVENT;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case (\"deadline\"):"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return TaskType.DEADLINE;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return TaskType.INVALID;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Removes the keyword at the start of the string array."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param strArr Array of strings (originally split by spaces)."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Substring with the keyword removed."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @throws DukeInvalidDescriptionException invalid description text."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public static String getItemSubstring(String[] strArr) throws DukeInvalidDescriptionException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        if (strArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            // string array is of invalid length"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            throw new DukeNoDescriptionException(\"String array of unexpected length: expected length \u003e 1\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return String.join(\" \", Arrays.copyOfRange(strArr, 1, strArr.length));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 107
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Storage for Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Reads and stores list in a database file (.txt)."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private static final String DELIMITER \u003d \",\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private static final String projectRoot \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private final Path path;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private final File storageFile;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private boolean pathExists;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private final ArrayList\u003cString\u003e fileBuffer;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Creates a new Storage object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param pathStrArr varargs: path to storage file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public Storage(String... pathStrArr) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.path \u003d Paths.get(projectRoot, pathStrArr);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.storageFile \u003d new File(this.path.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.pathExists \u003d Files.exists(this.path);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.fileBuffer \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Gets file status string."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return file status string."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String getFileStatus() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return this.pathExists ? \"exists\" : \"not found\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Checks if file exists."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return if file exists."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public boolean fileExists() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return Files.exists(this.path);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Creates file."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return is file created successfully."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @throws IOException IOException."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public boolean createFile() throws IOException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        File storageFile \u003d new File(path.toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        boolean isFileCreated \u003d storageFile.createNewFile();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.pathExists \u003d isFileCreated;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return isFileCreated;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Adds task to file buffer."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param task task to be added to file buffer."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void addToFileBuffer(Task task) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String[] storageStrArr \u003d task.toStorageStringArr();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String joinedStorageStr \u003d String.join(DELIMITER, storageStrArr);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.fileBuffer.add(joinedStorageStr);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Writes file buffer to file."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void writeToFile() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            if (fileBuffer.size() \u003e 0) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                if (!fileExists()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                    // creates the file if not found"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                    boolean isFileCreated \u003d this.createFile();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                assert fileExists();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                FileWriter fWriter \u003d new FileWriter(storageFile);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                BufferedWriter writer \u003d new BufferedWriter(fWriter);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                this.fileBuffer.forEach(bufferedLine -\u003e {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                        writer.append(bufferedLine).append(\"\\n\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                    } catch (IOException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                });"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                writer.close();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            // else don\u0027t need to write"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            System.out.println(\"Error writing to file!\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            exception.printStackTrace();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Parses line input string to an array."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param inputString Input string."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Parsed array, Array[0] \u003d\u003e itemString, Array[1] \u003d\u003e isDone."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private static String[] parseLine(String inputString) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String[] splitStr \u003d inputString.split(DELIMITER);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String taskType \u003d splitStr[0];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String status \u003d splitStr[1];"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String taskStr \u003d splitStr[2];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        StringBuilder parsedStringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case (\"T\"):"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            parsedStringBuilder.append(\"todo \").append(taskStr);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case (\"E\"):"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            parsedStringBuilder.append(\"event \").append(taskStr).append(\" /at \").append(splitStr[3]);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        case (\"D\"):"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            parsedStringBuilder.append(\"deadline \").append(taskStr).append(\" /by \").append(splitStr[3]);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            // assuming storage wrote to disk correctly, switch will never reach default."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return new String[]{parsedStringBuilder.toString(), status};"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Reads file for saved tasks."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return 2D array of saved tasks. Each task is given in an array of size 2."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String[][] readFromFile() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            ArrayList\u003cString[]\u003e parsedLines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(this.storageFile));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            String currLine \u003d reader.readLine();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            while (currLine !\u003d null) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                parsedLines.add(parseLine(currLine));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                currLine \u003d reader.readLine();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return parsedLines.toArray(new String[0][0]);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return new String[0][0];"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            System.out.println(\"Error reading file!\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            exception.printStackTrace();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return new String[0][0];"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 190
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Ui for Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Reads user inputs and prints messages."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private static final String START_MESSAGE \u003d \"Whassup I\u0027m Gilth Sebert,\\nyour friendly task manager!\\nWhatchu wanna do today?\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private static final String END_MESSAGE \u003d \"Bye bye and remember to study hard!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Creates a new Ui object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Default to System.in as input stream."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Creates a bew Ui object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Overrides default input stream."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param sys Input stream to override default input stream."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public Ui(InputStream sys) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.sc \u003d new Scanner(sys);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Gets the start message for Duke."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Start message string."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public static String getStartMessage() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return Ui.START_MESSAGE;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public static String getEndMessage() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return Ui.END_MESSAGE;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Prints the start message."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void printStartMessage() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String startMsg \u003d Ui.getStartMessage();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.printMessage(startMsg);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Prints the end message."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void printEndMessage() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String endMessage \u003d Ui.getEndMessage();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.printMessage(endMessage);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Prints a separator."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private static void printSeparator() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Checks if scanner has next line."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return if scanner has next line."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public boolean hasNextLine() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return sc.hasNextLine();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Gets next line of text."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return next line of text."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String nextLine() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Prints given message string."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param msg message to be printed."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void printMessage(String msg) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Ui.printSeparator();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assert msg !\u003d null;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Ui.printSeparator();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Prints empty index error message."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param commandStr String representation of command."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Error string printed."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String printEmptyIndexErrorMsg(String commandStr) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assert commandStr !\u003d null;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String errorMsg \u003d String.format(\"OOPS!!! The index of `%s` cannot be empty.\", commandStr);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.printErrorMessage(errorMsg);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return errorMsg;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Prints invalid index error message."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Error string printed."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String printInvalidIndexErrorMsg() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String errorMsg \u003d \"OOPS!!! The index given is invalid.\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.printErrorMessage(errorMsg);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return errorMsg;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Prints generic error message."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param errMsg Error message to be printed."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Error string printed."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String printErrorMessage(String errMsg) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assert errMsg !\u003d null;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.printMessage(errMsg);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return errMsg;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 159
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Command enum."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * TYPES: LIST, DONE, DELETE, TERMINATE, FIND, TASK, default INVALID."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    TERMINATE(\"terminate\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    TASK(\"task\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    FIND(\"find\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    SORT(\"sort\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    INVALID(\"invalid\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private final String str;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    Command(String str) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.str \u003d str;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 24
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Duke Exception class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Throws custom exception commands if Duke encounters an error during runtime."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Creates a new DukeException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Creates a new DukeException."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param errMsg error message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public DukeException(String errMsg) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        super(errMsg);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 27
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeInvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Duke Invalid Command Exception class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Thrown when command keyword is invalid."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public class DukeInvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Creates a new DukeInvalidCommandException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public DukeInvalidCommandException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Creates a new DukeInvalidCommandException."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param errMsg error message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public DukeInvalidCommandException(String errMsg) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        super(errMsg);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 27
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeInvalidDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Duke Invalid Description Exception class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Thrown when description given is invalid."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public class DukeInvalidDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Creates a new DukeInvalidDescriptionException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public DukeInvalidDescriptionException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Creates a new DukeInvalidDescriptionException."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param errMsg error message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public DukeInvalidDescriptionException(String errMsg) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        super(errMsg);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 27
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeNoDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Duke No Date Exception class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Thrown when description is missing a date."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public class DukeNoDateException extends DukeInvalidDescriptionException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Creates a new DukeNoDateException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public DukeNoDateException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Creates a new DukeNoDateException."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param errMsg error message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public DukeNoDateException(String errMsg) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        super(errMsg);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 27
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeNoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Duke No Description Exception class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Thrown when no description is given."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public class DukeNoDescriptionException extends DukeInvalidDescriptionException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *Creates a new DukeNoDescriptionException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public DukeNoDescriptionException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *Creates a new DukeNoDescriptionException."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param errMsg error message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public DukeNoDescriptionException(String errMsg) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        super(errMsg);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 27
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Controller for DialogBox."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Gets user dialogue box."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param text Text string to of dialogue."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param img  Image of user."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return New DialogBox of user to be displayed in the window."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Gets Duke dialogue box."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param text Text string to of dialogue."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param img  Image of Duke."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return New DialogBox of Duke to be displayed in the window."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 83
    }
  },
  {
    "path": "src/main/java/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Controller for MainWindow."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Provides the layout for the other controls."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Initialises main window."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Prints welcome message in the window."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                DialogBox.getDukeDialog(duke.getStartMessage(), dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Sets the duke to be used for this window."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param d Instance of duke to be used."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.duke \u003d d;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        );"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 80
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Deadline class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Subclass of Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Task that needs to be done by a specific date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public class Deadline extends Task implements Comparable\u003cTask\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private static final String DELIMITER \u003d \" /by \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Creates a new Deadline task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param itemString Description string."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public Deadline(String itemString) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        super(Task.getTaskString(itemString, Deadline.DELIMITER));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.setDateString(Task.getDateString(itemString, Deadline.DELIMITER));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.date \u003d LocalDate.parse(this.getDateString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Constructor for deadline."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param itemString Description string."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param isDone     True is task is done, false otherwise."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public Deadline(String itemString, boolean isDone) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        super(Task.getTaskString(itemString, Deadline.DELIMITER), isDone);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.setDateString(Task.getDateString(itemString, Deadline.DELIMITER));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.date \u003d LocalDate.parse(this.getDateString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Gets LocalDate object of task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return LocalDate object of task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Gets string array for storage."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return String array for storage."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String[] toStorageStringArr() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return new String[]{\"D\", this.isDone() ? \"1\" : \"0\", this.getItemString(), this.getDateString()};"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        char stateSymbol \u003d this.isDone() ? DONE : NOT_DONE;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String dateString \u003d Task.formatDateString(this.date);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\", stateSymbol, this.getItemString(), dateString);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public int compareTo(Task t) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        if (t instanceof Todo) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            LocalDate thisDate \u003d this.getDate();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            LocalDate otherDate \u003d t.getDate();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            if (thisDate.isBefore(otherDate)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                return -1;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            } else if (thisDate.isAfter(otherDate)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                return 1;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                return this.getItemString().compareTo(t.getItemString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 91
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Event class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Subclass of Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Task that starts on a specific date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public class Event extends Task implements Comparable\u003cTask\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private static final String DELIMITER \u003d \" /at \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Creates a new Event task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param itemString Description string."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public Event(String itemString) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        super(Task.getTaskString(itemString, Event.DELIMITER));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.setDateString(Task.getDateString(itemString, Event.DELIMITER));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.date \u003d LocalDate.parse(this.getDateString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Constructor for event."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param itemString Description string."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param isDone     True if task is done, false otherwise."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public Event(String itemString, boolean isDone) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        super(Task.getTaskString(itemString, Event.DELIMITER), isDone);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.setDateString(Task.getDateString(itemString, Event.DELIMITER));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.date \u003d LocalDate.parse(this.getDateString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Gets LocalDate object of task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return LocalDate object of task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Gets string array for storage."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return String array for storage."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String[] toStorageStringArr() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return new String[]{\"E\", this.isDone() ? \"1\" : \"0\", this.getItemString(), this.getDateString()};"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        char stateSymbol \u003d this.isDone() ? DONE : NOT_DONE;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String dateString \u003d Task.formatDateString(this.date);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s)\", stateSymbol, this.getItemString(), dateString);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public int compareTo(Task t) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        if (t instanceof Todo) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            LocalDate thisDate \u003d this.getDate();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            LocalDate otherDate \u003d t.getDate();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            if (thisDate.isBefore(otherDate)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                return -1;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            } else if (thisDate.isAfter(otherDate)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                return 1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                return this.getItemString().compareTo(t.getItemString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 90
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.exceptions.DukeInvalidDescriptionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.exceptions.DukeNoDateException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.exceptions.DukeNoDescriptionException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Abstract Task class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Child classes: Deadline, Event, Todo."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public abstract class Task implements Comparable\u003cTask\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public static final char DONE \u003d \u0027\\u2713\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public static final char NOT_DONE \u003d \u0027\\u2717\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private final String itemString;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private String dateString;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Abstract constructor for Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param itemString Description string."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public Task(String itemString) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.itemString \u003d itemString;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Abstract constructor for Task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param itemString Description string."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param isDone     True if task is done, false otherwise."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public Task(String itemString, boolean isDone) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.itemString \u003d itemString;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Splits the itemString by the delimiter and returns the task portion."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param taskString Item string."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param delimiter  Delimiter used."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Task portion of the string."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public static String getTaskString(String taskString, String delimiter) throws DukeInvalidDescriptionException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return taskString.split(delimiter)[0];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            throw new DukeNoDescriptionException(\"Description text not given.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Splits the taskString by the delimiter and returns the Date portion."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param taskString Item string."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param delimiter  Delimiter used."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Date portion of the string."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public static String getDateString(String taskString, String delimiter) throws DukeInvalidDescriptionException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return taskString.split(delimiter)[1];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            throw new DukeNoDateException(\"Date not given in description text.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Formats date string."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param date date object"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return formatted date string."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public static String formatDateString(LocalDate date) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Gets item string."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Item string."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String getItemString() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return this.itemString;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Gets date string."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return Date string of task."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String getDateString() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return this.dateString;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Sets date string."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param dateString New date string to be set."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void setDateString(String dateString) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.dateString \u003d dateString;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Checks whether task is done."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return If task is done."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Marks this item as done."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Gets string array for storage."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return String array for storage."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public abstract String[] toStorageStringArr();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Checks if task matches keyword."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param keyword keyword to be searched for."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return True if keyword is substring of itemString, false otherwise."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public boolean matches(String keyword) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return this.itemString.contains(keyword);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Gets LocalDate object of task."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return LocalDate object of task."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public abstract LocalDate getDate();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        char stateSymbol \u003d this.isDone ? DONE : NOT_DONE;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return String.format(\"[%s] %s\", stateSymbol, this.itemString);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public abstract int compareTo(Task t);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 178
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * TaskType enum."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Types: TODO, EVENT, DEADLINE, default INVALID."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    INVALID(\"invalid\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private final String taskKeywordStr;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    TaskType(String taskKeywordStr) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        this.taskKeywordStr \u003d taskKeywordStr;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return this.taskKeywordStr;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 26
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Todo class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Subclass of Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " * Task without any dates attached to it."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public class Todo extends Task implements Comparable\u003cTask\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private static LocalDate DUMMY_DATE \u003d LocalDate.EPOCH;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Creates a new Todo task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param itemString Description string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public Todo(String itemString) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        super(itemString);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Creates a new Todo task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param itemString Description string."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @param isDone     True if task is done, false otherwise."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public Todo(String itemString, boolean isDone) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        super(itemString, isDone);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * Gets string array for storage."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     * @return String array for storage."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String[] toStorageStringArr() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return new String[]{\"T\", this.isDone() ? \"1\" : \"0\", this.getItemString()};"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return Todo.DUMMY_DATE;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        char stateSymbol \u003d this.isDone() ? DONE : NOT_DONE;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        return String.format(\"[T][%s] %s\", stateSymbol, this.getItemString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public int compareTo(Task t) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        if (t instanceof Todo) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return this.getItemString().compareTo(t.getItemString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            // Todos always come before other tasks"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 71
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"450.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_LEFT\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "               style\u003d\"-fx-padding: 6; -fx-background-radius: 10; -fx-background-color: lightcoral;\" text\u003d\"Label\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "               textFill\u003d\"WHITE\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                \u003cInsets bottom\u003d\"1.0\" left\u003d\"2.0\" right\u003d\"4.0\" top\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                \u003cFont name\u003d\"Futura Medium\" size\u003d\"12.0\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        \u003cStackPane prefHeight\u003d\"98.0\" prefWidth\u003d\"82.0\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"98.0\" fitWidth\u003d\"98.0\" pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                           preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        \u003cInsets bottom\u003d\"10.0\" left\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 32
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" opacity\u003d\"0.9\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            prefWidth\u003d\"460.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            fx:controller\u003d\"duke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hvalue\u003d\"1.0\" prefHeight\u003d\"554.0\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                    prefWidth\u003d\"460.0\" vbarPolicy\u003d\"ALWAYS\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                    vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"BOTTOM_RIGHT\" prefHeight\u003d\"552.0\" prefWidth\u003d\"393.0\" style\u003d\"-fx-background-color: lightblue\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        \u003cHBox layoutY\u003d\"560.0\" prefHeight\u003d\"35.0\" prefWidth\u003d\"460.0\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"34.0\" prefWidth\u003d\"407.0\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                           promptText\u003d\"Whatchu wan?\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                        \u003cFont size\u003d\"14.0\"/\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                    \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                        \u003cInsets left\u003d\"10.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                    \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                \u003c/TextField\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"34.0\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                        prefWidth\u003d\"66.0\" textFill\u003d\"#009ac9\" textOverrun\u003d\"CLIP\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                        \u003cFont size\u003d\"16.0\"/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                    \u003cgraphic\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"21.0\" fitWidth\u003d\"40.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                            \u003cimage\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                                \u003cImage url\u003d\"@../images/button.png\"/\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                            \u003c/image\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                    \u003c/graphic\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                    \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                        \u003cInsets left\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                    \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                    \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                        \u003cInsets left\u003d\"5.0\" right\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                    \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                \u003c/Button\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 57
    }
  },
  {
    "path": "src/test/java/duke/test/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke.test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private static final char DONE \u003d \u0027\\u2713\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private static final char NOT_DONE \u003d \u0027\\u2717\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void deadlineNotDone_toString_printedCorrectly() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Deadline testDeadline \u003d new Deadline(\"stuff /by 2020-01-01\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String expected \u003d String.format(\"[D][%c] %s (by: %s)\", NOT_DONE, \"stuff\", \"01 Jan 2020\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assertEquals(expected, testDeadline.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void deadlineDone_toString_printedCorrectly() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Deadline testDeadline \u003d new Deadline(\"stuff /by 2020-01-01\", true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String expected \u003d String.format(\"[D][%c] %s (by: %s)\", DONE, \"stuff\", \"01 Jan 2020\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assertEquals(expected, testDeadline.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 32
    }
  },
  {
    "path": "src/test/java/duke/test/DukeListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke.test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.DukeList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.exceptions.DukeInvalidCommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.exceptions.DukeInvalidDescriptionException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public class DukeListTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private static final char DONE \u003d \u0027\\u2713\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private static final char NOT_DONE \u003d \u0027\\u2717\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void add_correctInput_addedCorrectly() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        DukeList testList \u003d new DukeList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String actual \u003d testList.add(\"todo stuff\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String expected \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                + String.format(\"\\t[T][%c] %s\\n\", NOT_DONE, \"stuff\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                + String.format(\"%s\", \"Now you have 1 tasks in the list.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void add_emptyDescription_exceptionThrown() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        DukeList testList \u003d new DukeList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assertThrows(DukeInvalidDescriptionException.class, () -\u003e testList.add(\"todo\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void add_emptyDate_exceptionThrown() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        DukeList testList \u003d new DukeList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assertThrows(DukeInvalidDescriptionException.class, () -\u003e testList.add(\"deadline stuff\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void add_invalidCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        DukeList testList \u003d new DukeList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assertThrows(DukeInvalidCommandException.class, () -\u003e testList.add(\"XXX\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void markAsDone_validIndex_correctlyDeleted() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        DukeList testList \u003d new DukeList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        testList.add(\"todo stuff\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        testList.add(\"deadline test /by 2020-01-01\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        testList.add(\"event another test /at 2020-02-02\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String actual \u003d testList.markAsDone(2);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String expected \u003d String.format(\"Nice! I\u0027ve marked this task as done:\\n\\t[D][%c] test (by: 01 Jan 2020)\", DONE);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void markAsDone_invalidIndex_exceptionThrown() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        DukeList testList \u003d new DukeList();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        testList.add(\"todo stuff\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        testList.add(\"deadline test /by 2020-01-01\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        testList.add(\"event another test /at 2020-02-02\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e testList.markAsDone(4));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void delete_validIndex_correctlyDeleted() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        DukeList testList \u003d new DukeList();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        testList.add(\"todo stuff\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        testList.add(\"deadline test /by 2020-01-01\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        testList.add(\"event another test /at 2020-02-02\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String actual \u003d testList.delete(1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String expected \u003d \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                + String.format(\"\\t[T][%c] %s\\n\", NOT_DONE, \"stuff\")"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "                + String.format(\"%s\", \"Now you have 2 tasks in the list.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void delete_invalidIndex_exceptionThrown() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        DukeList testList \u003d new DukeList();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        testList.add(\"todo stuff\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        testList.add(\"deadline test /by 2020-01-01\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        testList.add(\"event another test /at 2020-02-02\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e testList.delete(4));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 108
    }
  },
  {
    "path": "src/test/java/duke/test/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke.test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private static final char DONE \u003d \u0027\\u2713\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private static final char NOT_DONE \u003d \u0027\\u2717\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void eventNotDone_toString_printedCorrectly() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Event testEvent \u003d new Event(\"stuff /at 2020-01-01\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String expected \u003d String.format(\"[E][%c] %s (at: %s)\", NOT_DONE, \"stuff\", \"01 Jan 2020\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assertEquals(expected, testEvent.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void eventDone_toString_printedCorrectly() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Event testEvent \u003d new Event(\"stuff /at 2020-01-01\", true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String expected \u003d String.format(\"[E][%c] %s (at: %s)\", DONE, \"stuff\", \"01 Jan 2020\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assertEquals(expected, testEvent.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 32
    }
  },
  {
    "path": "src/test/java/duke/test/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke.test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.tasks.TaskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void parseLineToArray_validText_correctArray() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String text \u003d \"hello my name is duke\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String[] actual \u003d Parser.parseLineToArray(text);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String[] expected \u003d {\"hello\", \"my\", \"name\", \"is\", \"duke\"};"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assertArrayEquals(expected, actual);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void parseLineToArray_emptyText_correctArray() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String[] actual \u003d Parser.parseLineToArray(text);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String[] expected \u003d {\"\"};"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assertArrayEquals(expected, actual);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void getCommand_validCommand_correctCommand() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String text \u003d \"done 1\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Command actual \u003d Parser.getCommand(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Command expected \u003d Command.DONE;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void getCommand_validTask_correctCommand() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String text \u003d \"todo stuff abc\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Command actual \u003d Parser.getCommand(text);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Command expected \u003d Command.TASK;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void getCommand_invalidCommand_correctCommand() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String text \u003d \"XXX\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Command actual \u003d Parser.getCommand(text);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Command expected \u003d Command.INVALID;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void getTask_validTask_correctCommand() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String text \u003d \"todo stuff abc\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        TaskType actual \u003d Parser.getTaskKeyword(text);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        TaskType expected \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void getTask_invalidCommand_correctCommand() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String text \u003d \"XXX\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        TaskType actual \u003d Parser.getTaskKeyword(text);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        TaskType expected \u003d TaskType.INVALID;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 78
    }
  },
  {
    "path": "src/test/java/duke/test/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "package duke.test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private static final char DONE \u003d \u0027\\u2713\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    private static final char NOT_DONE \u003d \u0027\\u2717\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void constructorNotDone_toString_printedCorrectly() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Todo testTodo \u003d new Todo(\"stuff\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String expected \u003d String.format(\"[T][%c] %s\", NOT_DONE, \"stuff\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assertEquals(expected, testTodo.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    public void constructorDone_toString_printedCorrectly() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        Todo testTodo \u003d new Todo(\"stuff\", true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        String expected \u003d String.format(\"[T][%c] %s\", DONE, \"stuff\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "        assertEquals(expected, testTodo.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 32
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "REM !THIS FILE IS IGNORED AS IM USING MACOS"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 2,
      "-": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "#!/usr/bin/env zsh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "# force shell to use UTF-8 format for output"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "export LC_ALL\u003den_US.UTF-8"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "howtoosee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "howtoosee"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "howtoosee": 5,
      "-": 36
    }
  }
]
