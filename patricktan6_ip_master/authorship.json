[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"}"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"}"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"    String javaFxVersion \u003d \u002711.0.2\u0027"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"}"},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":38,"author":{"gitId":"patricktan6"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"patricktan6"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"patricktan6"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"patricktan6"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"patricktan6"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"patricktan6"},"content":"}"},{"lineNumber":45,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":46,"author":{"gitId":"patricktan6"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"patricktan6"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":48,"author":{"gitId":"patricktan6"},"content":"}"},{"lineNumber":49,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":50,"author":{"gitId":"patricktan6"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"patricktan6"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"patricktan6"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"patricktan6"},"content":"}"},{"lineNumber":54,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":55,"author":{"gitId":"patricktan6"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"patricktan6"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"patricktan6"},"content":"}"},{"lineNumber":58,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":59,"author":{"gitId":"patricktan6"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"patricktan6"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":61}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"E | ✗ | go to gym | 2020-10-10T09:00"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":"D | ✗ | find a girlfriend | 2020-11-13T00:00"}],"authorContributionMap":{"patricktan6":2}},{"path":"data/notes.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"menu  |  add salt"}],"authorContributionMap":{"patricktan6":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"### Table of Contents"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"\u003ca href\u003d\"#1\"\u003e 1. What is Duke? \u003c/a\u003e"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"\u003cbr/\u003e"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"\u003ca href\u003d\"#2\"\u003e 2. Features \u003c/a\u003e"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"\u003cbr/\u003e"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"\u003ca href\u003d\"#3\"\u003e 3. Setting Up \u003c/a\u003e"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"\u003cbr/\u003e"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"\u003ca href\u003d\"#4\"\u003e 4. Commands \u003c/a\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"## \u003ca id\u003d\"1\"\u003e1. What is Duke?\u003c/a\u003e "},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"Duke is a task management bot that can keep track of your daily tasks and manage them."},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"## \u003ca id\u003d\"2\"\u003e2. Features\u003c/a\u003e "},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"1. **Add a task**"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"\u003cbr/\u003e"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"    * Types of tasks:"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"        1. `todo`: A task to be done later"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"        2. `event`: A task with the time to do it "},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"        3. `deadline`: A task with a deadline"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    "},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"2. **Delete a task**"},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"\u003cbr/\u003e"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"    * `delete` a task from the existing list of tasks."},{"lineNumber":26,"author":{"gitId":"-"},"content":"   "},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"3. **List the tasks**"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"\u003cbr/\u003e"},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"    * `list` the existing list of tasks."},{"lineNumber":30,"author":{"gitId":"-"},"content":"    "},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"4. **Mark a task as done**"},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"\u003cbr/\u003e"},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"    * Mark a task as `done` after you have done it."},{"lineNumber":34,"author":{"gitId":"-"},"content":" "},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"5. **Find tasks**"},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":"\u003cbr/\u003e"},{"lineNumber":37,"author":{"gitId":"patricktan6"},"content":"    * `find` tasks that contain the keyword. "},{"lineNumber":38,"author":{"gitId":"-"},"content":"    "},{"lineNumber":39,"author":{"gitId":"patricktan6"},"content":"6. **Add a note**"},{"lineNumber":40,"author":{"gitId":"patricktan6"},"content":"\u003cbr/\u003e"},{"lineNumber":41,"author":{"gitId":"patricktan6"},"content":"    * Add a `note` to the existing list of notes."},{"lineNumber":42,"author":{"gitId":"-"},"content":"    "},{"lineNumber":43,"author":{"gitId":"patricktan6"},"content":"7. **Delete a note**"},{"lineNumber":44,"author":{"gitId":"patricktan6"},"content":"\u003cbr/\u003e "},{"lineNumber":45,"author":{"gitId":"patricktan6"},"content":"    * `delnote`: deletes a note that you do not want to keep anymore."},{"lineNumber":46,"author":{"gitId":"patricktan6"},"content":"    "},{"lineNumber":47,"author":{"gitId":"patricktan6"},"content":"8. **List the notes**"},{"lineNumber":48,"author":{"gitId":"patricktan6"},"content":"\u003cbr/\u003e"},{"lineNumber":49,"author":{"gitId":"patricktan6"},"content":"    * `listnote`: lists the existing notes."},{"lineNumber":50,"author":{"gitId":"patricktan6"},"content":"    "},{"lineNumber":51,"author":{"gitId":"patricktan6"},"content":"9. **Get the description of a note**"},{"lineNumber":52,"author":{"gitId":"patricktan6"},"content":"\u003cbr/\u003e"},{"lineNumber":53,"author":{"gitId":"patricktan6"},"content":"    * `description`: the content of a certain note."},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"patricktan6"},"content":"## \u003ca id\u003d\"3\"\u003e3. Setting Up\u003c/a\u003e"},{"lineNumber":56,"author":{"gitId":"patricktan6"},"content":"* Download the jar file [here] (https://github.com/patricktan6/ip/releases/tag/A-Release)"},{"lineNumber":57,"author":{"gitId":"patricktan6"},"content":"* Open the jar file downloaded and you can start using it."},{"lineNumber":58,"author":{"gitId":"patricktan6"},"content":"    "},{"lineNumber":59,"author":{"gitId":"patricktan6"},"content":"## \u003ca id\u003d\"4\"\u003e4. Commands\u003c/a\u003e"},{"lineNumber":60,"author":{"gitId":"patricktan6"},"content":"Command | Result"},{"lineNumber":61,"author":{"gitId":"patricktan6"},"content":"---------------- | ----------------"},{"lineNumber":62,"author":{"gitId":"patricktan6"},"content":"`todo` [Description] | New todo task added to the task list with the tag `[T]`"},{"lineNumber":63,"author":{"gitId":"patricktan6"},"content":"`event` [Description] /at [Time(YYYY/MM/DDTHH:MM)] | New event added to the task list with the tag `[E]`"},{"lineNumber":64,"author":{"gitId":"patricktan6"},"content":"`deadline` [Description] /by [Time(YYYY/MM/DDTHH:MM)] | New deadline added to the task list with the tag `[D]`"},{"lineNumber":65,"author":{"gitId":"patricktan6"},"content":"`delete` [Index] | Delete the task with the index"},{"lineNumber":66,"author":{"gitId":"patricktan6"},"content":"`list` | List the existing tasks on the task list"},{"lineNumber":67,"author":{"gitId":"patricktan6"},"content":"`done` [Index] | Mark the task with the index as done"},{"lineNumber":68,"author":{"gitId":"patricktan6"},"content":"`find` [Keyword] | Find the tasks which contains the keyword"},{"lineNumber":69,"author":{"gitId":"patricktan6"},"content":"`note` [Title] /d [Description] | Create a note with a title and description then add it to the note list."},{"lineNumber":70,"author":{"gitId":"patricktan6"},"content":"`delnote` [Index] | Delete the note with the index."},{"lineNumber":71,"author":{"gitId":"patricktan6"},"content":"`listnote` | List the notes on the note list."},{"lineNumber":72,"author":{"gitId":"patricktan6"},"content":"`description` [Index] | Get the description of the note with the index."}],"authorContributionMap":{"patricktan6":61,"-":11}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":38,"author":{"gitId":"patricktan6"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"patricktan6"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":41,"author":{"gitId":"patricktan6"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"patricktan6"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"patricktan6"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":44,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":45,"author":{"gitId":"patricktan6"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"patricktan6"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"patricktan6"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"patricktan6"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"patricktan6"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":51,"author":{"gitId":"patricktan6"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":53,"author":{"gitId":"patricktan6"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"patricktan6"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"patricktan6"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":57,"author":{"gitId":"patricktan6"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":58,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":59,"author":{"gitId":"patricktan6"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"patricktan6"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"patricktan6"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"patricktan6"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"patricktan6"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":65,"author":{"gitId":"patricktan6"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":67,"author":{"gitId":"patricktan6"},"content":":init"},{"lineNumber":68,"author":{"gitId":"patricktan6"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":69,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":70,"author":{"gitId":"patricktan6"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":71,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":72,"author":{"gitId":"patricktan6"},"content":":win9xME_args"},{"lineNumber":73,"author":{"gitId":"patricktan6"},"content":"@rem Slurp the command line arguments."},{"lineNumber":74,"author":{"gitId":"patricktan6"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":75,"author":{"gitId":"patricktan6"},"content":"set _SKIP\u003d2"},{"lineNumber":76,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":77,"author":{"gitId":"patricktan6"},"content":":win9xME_args_slurp"},{"lineNumber":78,"author":{"gitId":"patricktan6"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":79,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":80,"author":{"gitId":"patricktan6"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":81,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":82,"author":{"gitId":"patricktan6"},"content":":execute"},{"lineNumber":83,"author":{"gitId":"patricktan6"},"content":"@rem Setup the command line"},{"lineNumber":84,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":85,"author":{"gitId":"patricktan6"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":86,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":87,"author":{"gitId":"patricktan6"},"content":"@rem Execute Gradle"},{"lineNumber":88,"author":{"gitId":"patricktan6"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":89,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":90,"author":{"gitId":"patricktan6"},"content":":end"},{"lineNumber":91,"author":{"gitId":"patricktan6"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":92,"author":{"gitId":"patricktan6"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":93,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":94,"author":{"gitId":"patricktan6"},"content":":fail"},{"lineNumber":95,"author":{"gitId":"patricktan6"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":96,"author":{"gitId":"patricktan6"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":97,"author":{"gitId":"patricktan6"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":98,"author":{"gitId":"patricktan6"},"content":"exit /b 1"},{"lineNumber":99,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":100,"author":{"gitId":"patricktan6"},"content":":mainEnd"},{"lineNumber":101,"author":{"gitId":"patricktan6"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":102,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":103,"author":{"gitId":"patricktan6"},"content":":omega"}],"authorContributionMap":{"patricktan6":103}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":" * Creates a Duke object that represents a bot that manages a user\u0027s tasks."},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"    private Ui ui;"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"    private TaskList tasks;"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"    private Storage storage;"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"     * Creates a duke object."},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"    public Duke() {"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"        ui \u003d new Ui();"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"        storage \u003d new Storage(\"data/duke.txt\", \"data/notes.txt\");"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"            tasks \u003d new TaskList(storage.load(), storage.loadNotes());"},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"        } catch (DukeException e) {"},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"            System.out.println(ui.showLoadingError());"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"     * Runs the Duke program."},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"    public void run() {"},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"        System.out.println(ui.showWelcome());"},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"        ui.showLine();"},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"        boolean isExit \u003d false;"},{"lineNumber":34,"author":{"gitId":"patricktan6"},"content":"        while (!isExit) {"},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"            try {"},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":37,"author":{"gitId":"patricktan6"},"content":"                ui.showLine();"},{"lineNumber":38,"author":{"gitId":"patricktan6"},"content":"                Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":39,"author":{"gitId":"patricktan6"},"content":"                System.out.println(c.execute(this.tasks, this.ui, this.storage));"},{"lineNumber":40,"author":{"gitId":"patricktan6"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":41,"author":{"gitId":"patricktan6"},"content":"            } catch (DukeException e) {"},{"lineNumber":42,"author":{"gitId":"patricktan6"},"content":"                System.out.println(ui.showError(e.getMessage()));"},{"lineNumber":43,"author":{"gitId":"patricktan6"},"content":"            } finally {"},{"lineNumber":44,"author":{"gitId":"patricktan6"},"content":"                ui.showLine();"},{"lineNumber":45,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":49,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"patricktan6"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":51,"author":{"gitId":"patricktan6"},"content":"     * Replace this stub with your completed method."},{"lineNumber":52,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"patricktan6"},"content":"    public String getResponse(String input) {"},{"lineNumber":54,"author":{"gitId":"patricktan6"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"patricktan6"},"content":"            Command c \u003d Parser.parse(input);"},{"lineNumber":56,"author":{"gitId":"patricktan6"},"content":"            return c.execute(this.tasks, this.ui, this.storage);"},{"lineNumber":57,"author":{"gitId":"patricktan6"},"content":"        } catch (DukeException e) {"},{"lineNumber":58,"author":{"gitId":"patricktan6"},"content":"            return e.getMessage();"},{"lineNumber":59,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":62,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"patricktan6"},"content":"     * Creates a Duke object and runs the program."},{"lineNumber":64,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"patricktan6"},"content":"    public static void main(String[] args) {"},{"lineNumber":66,"author":{"gitId":"patricktan6"},"content":"        new Duke().run();"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"patricktan6":65,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":" * Creates a DukeException object to be thrown."},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"    public DukeException(String errMessage) {"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"        super(errMessage);"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":10}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"import duke.ui.MainWindow;"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"            stage.setTitle(\"PatBot\");"},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"            stage.show();"},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":33}},{"path":"src/main/java/duke/MissingDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":" * Creates an exception to be thrown when description of an event or deadline is missing."},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"public class MissingDescriptionException extends Exception {"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"    public MissingDescriptionException(String errMessage) {"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"        super(\"\\n     ☹ OOPS!!! The description of \" + errMessage + \" cannot be empty.\");"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":10}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"import duke.command.AddCommand;"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"import duke.command.AddNoteCommand;"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"import duke.command.Command;"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"import duke.command.DeleteNoteCommand;"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"import duke.command.DescriptionCommand;"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"import duke.command.DoneCommand;"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"import duke.command.ExitCommand;"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"import duke.command.FindCommand;"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"import duke.command.ListCommand;"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"import duke.command.ListNoteCommand;"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"import duke.note.Note;"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"import duke.task.Deadline;"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"import duke.task.Event;"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"import duke.task.Todo;"},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":" * Creates a parser that parses the command."},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"public class Parser {"},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"     * Parses the command and decides the type of the command."},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"     * @param fullCommand A string of the command."},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"     * @return A command object representing the command."},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"     * @throws DukeException when the command is not valid."},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"    public static Command parse(String fullCommand) throws DukeException {"},{"lineNumber":34,"author":{"gitId":"patricktan6"},"content":"        // a bye input"},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"        if (fullCommand.equals(\"bye\")) {"},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":"            return new ExitCommand();"},{"lineNumber":37,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":39,"author":{"gitId":"patricktan6"},"content":"        // a list input"},{"lineNumber":40,"author":{"gitId":"patricktan6"},"content":"        if (fullCommand.equals(\"list\")) {"},{"lineNumber":41,"author":{"gitId":"patricktan6"},"content":"            return new ListCommand();"},{"lineNumber":42,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":44,"author":{"gitId":"patricktan6"},"content":"        // a listnote input"},{"lineNumber":45,"author":{"gitId":"patricktan6"},"content":"        if (fullCommand.equals(\"listnote\")) {"},{"lineNumber":46,"author":{"gitId":"patricktan6"},"content":"            return new ListNoteCommand();"},{"lineNumber":47,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":49,"author":{"gitId":"patricktan6"},"content":"        String[] test \u003d fullCommand.split(\" \");"},{"lineNumber":50,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":51,"author":{"gitId":"patricktan6"},"content":"        // a note input"},{"lineNumber":52,"author":{"gitId":"patricktan6"},"content":"        if (test[0].equals(\"note\")) {"},{"lineNumber":53,"author":{"gitId":"patricktan6"},"content":"            if (test.length \u003d\u003d 1) {"},{"lineNumber":54,"author":{"gitId":"patricktan6"},"content":"                throw new DukeException(\"The title of the note cannot be empty! \");"},{"lineNumber":55,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"patricktan6"},"content":"            String[] str \u003d fullCommand.split(\"note \")[1].split(\"/d\");"},{"lineNumber":57,"author":{"gitId":"patricktan6"},"content":"            if (str.length \u003d\u003d 1) {"},{"lineNumber":58,"author":{"gitId":"patricktan6"},"content":"                throw new DukeException(\"The description of the note cannot be empty! \");"},{"lineNumber":59,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"patricktan6"},"content":"            String title \u003d str[0];"},{"lineNumber":61,"author":{"gitId":"patricktan6"},"content":"            assert title !\u003d null : \"Missing title! \";"},{"lineNumber":62,"author":{"gitId":"patricktan6"},"content":"            String description \u003d str[1];"},{"lineNumber":63,"author":{"gitId":"patricktan6"},"content":"            assert description !\u003d null : \"Missing description! \";"},{"lineNumber":64,"author":{"gitId":"patricktan6"},"content":"            Note note \u003d new Note(title, description);"},{"lineNumber":65,"author":{"gitId":"patricktan6"},"content":"            return new AddNoteCommand(note);"},{"lineNumber":66,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":68,"author":{"gitId":"patricktan6"},"content":"        // a delete note input"},{"lineNumber":69,"author":{"gitId":"patricktan6"},"content":"        if (test[0].equals(\"delnote\")) {"},{"lineNumber":70,"author":{"gitId":"patricktan6"},"content":"            if (test.length \u003d\u003d 1) {"},{"lineNumber":71,"author":{"gitId":"patricktan6"},"content":"                throw new DukeException(\"Please select the note you want to delete!\");"},{"lineNumber":72,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"patricktan6"},"content":"            int idx \u003d Integer.parseInt(test[1]);"},{"lineNumber":74,"author":{"gitId":"patricktan6"},"content":"            assert idx \u003e 0 : \"Index is not valid! \";"},{"lineNumber":75,"author":{"gitId":"patricktan6"},"content":"            return new DeleteNoteCommand(idx);"},{"lineNumber":76,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":78,"author":{"gitId":"patricktan6"},"content":"        // a description input"},{"lineNumber":79,"author":{"gitId":"patricktan6"},"content":"        if (test[0].equals(\"description\")) {"},{"lineNumber":80,"author":{"gitId":"patricktan6"},"content":"            if (test.length \u003d\u003d 1) {"},{"lineNumber":81,"author":{"gitId":"patricktan6"},"content":"                throw new DukeException(\"Please select the note you want!\");"},{"lineNumber":82,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"patricktan6"},"content":"            int idx \u003d Integer.parseInt(test[1]);"},{"lineNumber":84,"author":{"gitId":"patricktan6"},"content":"            assert idx \u003e 0 : \"Index is not valid! \";"},{"lineNumber":85,"author":{"gitId":"patricktan6"},"content":"            return new DescriptionCommand(idx);"},{"lineNumber":86,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":88,"author":{"gitId":"patricktan6"},"content":"        // a done input"},{"lineNumber":89,"author":{"gitId":"patricktan6"},"content":"        if (test[0].equals(\"done\")) {"},{"lineNumber":90,"author":{"gitId":"patricktan6"},"content":"            if (test.length \u003d\u003d 1) {"},{"lineNumber":91,"author":{"gitId":"patricktan6"},"content":"                throw new DukeException(\"Please select the task that you want to mark done!\");"},{"lineNumber":92,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"patricktan6"},"content":"            int idx \u003d Integer.parseInt(test[1]);"},{"lineNumber":94,"author":{"gitId":"patricktan6"},"content":"            assert idx \u003e 0 : \"Index is not valid! \";"},{"lineNumber":95,"author":{"gitId":"patricktan6"},"content":"            return new DoneCommand(idx);"},{"lineNumber":96,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":98,"author":{"gitId":"patricktan6"},"content":"        // a delete input"},{"lineNumber":99,"author":{"gitId":"patricktan6"},"content":"        if (test[0].equals(\"delete\")) {"},{"lineNumber":100,"author":{"gitId":"patricktan6"},"content":"            if (test.length \u003d\u003d 1) {"},{"lineNumber":101,"author":{"gitId":"patricktan6"},"content":"                throw new DukeException(\"Please select the task that you want to delete!\");"},{"lineNumber":102,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"patricktan6"},"content":"            int idx \u003d Integer.parseInt(test[1]);"},{"lineNumber":104,"author":{"gitId":"patricktan6"},"content":"            assert idx \u003e 0 : \"Index is not valid! \";"},{"lineNumber":105,"author":{"gitId":"patricktan6"},"content":"            return new DeleteCommand(idx);"},{"lineNumber":106,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":108,"author":{"gitId":"patricktan6"},"content":"        //a find input"},{"lineNumber":109,"author":{"gitId":"patricktan6"},"content":"        if (test[0].equals(\"find\")) {"},{"lineNumber":110,"author":{"gitId":"patricktan6"},"content":"            if (test.length \u003d\u003d 1) {"},{"lineNumber":111,"author":{"gitId":"patricktan6"},"content":"                throw new DukeException(\"Please include the keyword!\");"},{"lineNumber":112,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"patricktan6"},"content":"            String keyword \u003d test[1];"},{"lineNumber":114,"author":{"gitId":"patricktan6"},"content":"            assert keyword !\u003d null : \"Missing keyword! \";"},{"lineNumber":115,"author":{"gitId":"patricktan6"},"content":"            return new FindCommand(keyword);"},{"lineNumber":116,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":118,"author":{"gitId":"patricktan6"},"content":"        // a todo input"},{"lineNumber":119,"author":{"gitId":"patricktan6"},"content":"        if (test[0].equals(\"todo\")) {"},{"lineNumber":120,"author":{"gitId":"patricktan6"},"content":"            try {"},{"lineNumber":121,"author":{"gitId":"patricktan6"},"content":"                String description \u003d fullCommand.split(\"todo \")[1];"},{"lineNumber":122,"author":{"gitId":"patricktan6"},"content":"                assert description !\u003d null : \"Missing description! \";"},{"lineNumber":123,"author":{"gitId":"patricktan6"},"content":"                Todo todo \u003d new Todo(description);"},{"lineNumber":124,"author":{"gitId":"patricktan6"},"content":"                return new AddCommand(todo);"},{"lineNumber":125,"author":{"gitId":"patricktan6"},"content":"            } catch (ArrayIndexOutOfBoundsException err) {"},{"lineNumber":126,"author":{"gitId":"patricktan6"},"content":"                MissingDescriptionException realError \u003d new MissingDescriptionException(\"a todo\");"},{"lineNumber":127,"author":{"gitId":"patricktan6"},"content":"                throw new DukeException(realError.getMessage());"},{"lineNumber":128,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":129,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":131,"author":{"gitId":"patricktan6"},"content":"        // a deadline input"},{"lineNumber":132,"author":{"gitId":"patricktan6"},"content":"        if (test[0].equals(\"deadline\")) {"},{"lineNumber":133,"author":{"gitId":"patricktan6"},"content":"            try {"},{"lineNumber":134,"author":{"gitId":"patricktan6"},"content":"                String[] str \u003d fullCommand.split(\"deadline \")[1].split(\" /\");"},{"lineNumber":135,"author":{"gitId":"patricktan6"},"content":"                if (str.length \u003d\u003d 1) {"},{"lineNumber":136,"author":{"gitId":"patricktan6"},"content":"                    throw new DukeException(\"☹ OOPS!!! The deadline cannot be empty.\");"},{"lineNumber":137,"author":{"gitId":"patricktan6"},"content":"                }"},{"lineNumber":138,"author":{"gitId":"patricktan6"},"content":"                try {"},{"lineNumber":139,"author":{"gitId":"patricktan6"},"content":"                    String description \u003d str[0];"},{"lineNumber":140,"author":{"gitId":"patricktan6"},"content":"                    assert description !\u003d null : \"Missing description! \";"},{"lineNumber":141,"author":{"gitId":"patricktan6"},"content":"                    String by \u003d str[1].split(\"by \")[1];"},{"lineNumber":142,"author":{"gitId":"patricktan6"},"content":"                    assert by !\u003d null : \"Missing deadline! \";"},{"lineNumber":143,"author":{"gitId":"patricktan6"},"content":"                    LocalDateTime byTime \u003d LocalDateTime.parse(by);"},{"lineNumber":144,"author":{"gitId":"patricktan6"},"content":"                    Deadline deadline \u003d new Deadline(description, byTime);"},{"lineNumber":145,"author":{"gitId":"patricktan6"},"content":"                    return new AddCommand(deadline);"},{"lineNumber":146,"author":{"gitId":"patricktan6"},"content":"                } catch (DateTimeParseException e) {"},{"lineNumber":147,"author":{"gitId":"patricktan6"},"content":"                    throw new DukeException(\"Format of date and time is incorrect! \""},{"lineNumber":148,"author":{"gitId":"patricktan6"},"content":"                            + \"Please fill in the date and time following the format below. \\n\""},{"lineNumber":149,"author":{"gitId":"patricktan6"},"content":"                            + \"       YYYY-MM-DDTHH:MM\");"},{"lineNumber":150,"author":{"gitId":"patricktan6"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":151,"author":{"gitId":"patricktan6"},"content":"                    throw new DukeException(\"☹ OOPS!!! The deadline cannot be empty.\");"},{"lineNumber":152,"author":{"gitId":"patricktan6"},"content":"                }"},{"lineNumber":153,"author":{"gitId":"patricktan6"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":154,"author":{"gitId":"patricktan6"},"content":"                MissingDescriptionException realError \u003d new MissingDescriptionException(\"a deadline\");"},{"lineNumber":155,"author":{"gitId":"patricktan6"},"content":"                throw new DukeException(realError.getMessage());"},{"lineNumber":156,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":157,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":159,"author":{"gitId":"patricktan6"},"content":"        // an event input"},{"lineNumber":160,"author":{"gitId":"patricktan6"},"content":"        if (test[0].equals(\"event\")) {"},{"lineNumber":161,"author":{"gitId":"patricktan6"},"content":"            try {"},{"lineNumber":162,"author":{"gitId":"patricktan6"},"content":"                String[] str \u003d fullCommand.split(\"event \")[1].split(\" /at \");"},{"lineNumber":163,"author":{"gitId":"patricktan6"},"content":"                if (str.length \u003d\u003d 1) {"},{"lineNumber":164,"author":{"gitId":"patricktan6"},"content":"                    throw new DukeException(\"☹ OOPS!!! The time of an event cannot be empty.\");"},{"lineNumber":165,"author":{"gitId":"patricktan6"},"content":"                }"},{"lineNumber":166,"author":{"gitId":"patricktan6"},"content":"                try {"},{"lineNumber":167,"author":{"gitId":"patricktan6"},"content":"                    String description \u003d str[0];"},{"lineNumber":168,"author":{"gitId":"patricktan6"},"content":"                    assert description !\u003d null : \"Missing description! \";"},{"lineNumber":169,"author":{"gitId":"patricktan6"},"content":"                    String at \u003d str[1];"},{"lineNumber":170,"author":{"gitId":"patricktan6"},"content":"                    assert at !\u003d null : \"Missing time! \";"},{"lineNumber":171,"author":{"gitId":"patricktan6"},"content":"                    Event event \u003d new Event(description, LocalDateTime.parse(at));"},{"lineNumber":172,"author":{"gitId":"patricktan6"},"content":"                    return new AddCommand(event);"},{"lineNumber":173,"author":{"gitId":"patricktan6"},"content":"                } catch (DateTimeParseException e) {"},{"lineNumber":174,"author":{"gitId":"patricktan6"},"content":"                    throw new DukeException(\"Format of date and time is incorrect! \""},{"lineNumber":175,"author":{"gitId":"patricktan6"},"content":"                            + \"Please fill in the date and time following the format below. \\n\""},{"lineNumber":176,"author":{"gitId":"patricktan6"},"content":"                            + \"       YYYY-MM-DDTHH:MM\");"},{"lineNumber":177,"author":{"gitId":"patricktan6"},"content":"                }"},{"lineNumber":178,"author":{"gitId":"patricktan6"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":179,"author":{"gitId":"patricktan6"},"content":"                MissingDescriptionException realError \u003d new MissingDescriptionException(\"an event\");"},{"lineNumber":180,"author":{"gitId":"patricktan6"},"content":"                throw new DukeException(realError.getMessage());"},{"lineNumber":181,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":182,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":184,"author":{"gitId":"patricktan6"},"content":"        // the input is unknown"},{"lineNumber":185,"author":{"gitId":"patricktan6"},"content":"        UnknownInputException ue \u003d new UnknownInputException();"},{"lineNumber":186,"author":{"gitId":"patricktan6"},"content":"        throw new DukeException(ue.getMessage());"},{"lineNumber":187,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":188,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":189,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":191,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":191}},{"path":"src/main/java/duke/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import duke.note.Note;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":" * Creates a dialog box as a response."},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"public class Response {"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"    enum Tag {"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"        LIST,"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"        LISTNOTES,"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"        ADD,"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"        REMOVE,"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"        NORMAL,"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"        FIND"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"    private Note[] notes;"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"    private Task[] tasks;"},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"    private String[] texts;"},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"    private Tag tag;"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"    private int numOfTasks;"},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"     * Creates the response of normal texts."},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"     * @param texts An array of strings. Each string will be printed in one line."},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"    public Response(String[] texts) {"},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"        this.texts \u003d texts;"},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"        this.tag \u003d Tag.NORMAL;"},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":"     * Creates the response after receiving task related commands from the user"},{"lineNumber":37,"author":{"gitId":"patricktan6"},"content":"     * like adding task to the list."},{"lineNumber":38,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"patricktan6"},"content":"     * @param tasks      The task to be added or removed."},{"lineNumber":40,"author":{"gitId":"patricktan6"},"content":"     * @param tag        Removal or addition of the task."},{"lineNumber":41,"author":{"gitId":"patricktan6"},"content":"     * @param numOfTasks The number of Tasks in the list."},{"lineNumber":42,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"patricktan6"},"content":"    public Response(Task[] tasks, Tag tag, int numOfTasks) {"},{"lineNumber":44,"author":{"gitId":"patricktan6"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":45,"author":{"gitId":"patricktan6"},"content":"        this.tag \u003d tag;"},{"lineNumber":46,"author":{"gitId":"patricktan6"},"content":"        this.numOfTasks \u003d numOfTasks;"},{"lineNumber":47,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":49,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"patricktan6"},"content":"     * Creates the response after receiving some other task related commands from the user"},{"lineNumber":51,"author":{"gitId":"patricktan6"},"content":"     * like listing the tasks in the list."},{"lineNumber":52,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"patricktan6"},"content":"     * @param tasks The list of the tasks in the list."},{"lineNumber":54,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"patricktan6"},"content":"    public Response(Task[] tasks, Tag tag) {"},{"lineNumber":56,"author":{"gitId":"patricktan6"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":57,"author":{"gitId":"patricktan6"},"content":"        this.tag \u003d tag;"},{"lineNumber":58,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":60,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"patricktan6"},"content":"     * Creates the response after receiving command to list the notes."},{"lineNumber":62,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"patricktan6"},"content":"     * @param notes notes to be listed."},{"lineNumber":64,"author":{"gitId":"patricktan6"},"content":"     * @param tag   the tag of the command."},{"lineNumber":65,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"patricktan6"},"content":"    public Response(Note[] notes, Tag tag) {"},{"lineNumber":67,"author":{"gitId":"patricktan6"},"content":"        this.notes \u003d notes;"},{"lineNumber":68,"author":{"gitId":"patricktan6"},"content":"        this.tag \u003d tag;"},{"lineNumber":69,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":71,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"patricktan6"},"content":"     * Gets the string representation of the response."},{"lineNumber":73,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"patricktan6"},"content":"     * @return The string representation of the response from duke."},{"lineNumber":75,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"patricktan6"},"content":"    public String getResponse() {"},{"lineNumber":77,"author":{"gitId":"patricktan6"},"content":"        String linesOfText \u003d \"\";"},{"lineNumber":78,"author":{"gitId":"patricktan6"},"content":"        if (this.tag \u003d\u003d Tag.LIST) {"},{"lineNumber":79,"author":{"gitId":"patricktan6"},"content":"            for (int i \u003d 0; i \u003c this.tasks.length; i++) {"},{"lineNumber":80,"author":{"gitId":"patricktan6"},"content":"                linesOfText +\u003d \"     \" + String.format(\"%d. \", i + 1) + this.tasks[i] + \"\\n\";"},{"lineNumber":81,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"patricktan6"},"content":"        } else if (this.tag \u003d\u003d Tag.LISTNOTES) {"},{"lineNumber":83,"author":{"gitId":"patricktan6"},"content":"            for (int i \u003d 0; i \u003c this.notes.length; i++) {"},{"lineNumber":84,"author":{"gitId":"patricktan6"},"content":"                linesOfText +\u003d \"     \" + String.format(\"%d. \", i + 1) + this.notes[i] + \"\\n\";"},{"lineNumber":85,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"patricktan6"},"content":"        } else if (this.tag \u003d\u003d Tag.ADD) {"},{"lineNumber":87,"author":{"gitId":"patricktan6"},"content":"            for (int i \u003d 0; i \u003c this.tasks.length; i++) {"},{"lineNumber":88,"author":{"gitId":"patricktan6"},"content":"                linesOfText +\u003d \"     \""},{"lineNumber":89,"author":{"gitId":"patricktan6"},"content":"                        + \"Got it. I\u0027ve added this task: \\n\""},{"lineNumber":90,"author":{"gitId":"patricktan6"},"content":"                        + \"       \""},{"lineNumber":91,"author":{"gitId":"patricktan6"},"content":"                        + this.tasks[i]"},{"lineNumber":92,"author":{"gitId":"patricktan6"},"content":"                        + \"\\n\""},{"lineNumber":93,"author":{"gitId":"patricktan6"},"content":"                        + \"     \""},{"lineNumber":94,"author":{"gitId":"patricktan6"},"content":"                        + String.format(\"Now you have %d tasks in the list. \\n\", numOfTasks);"},{"lineNumber":95,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"patricktan6"},"content":"        } else if (this.tag \u003d\u003d Tag.REMOVE) {"},{"lineNumber":97,"author":{"gitId":"patricktan6"},"content":"            for (int i \u003d 0; i \u003c this.tasks.length; i++) {"},{"lineNumber":98,"author":{"gitId":"patricktan6"},"content":"                linesOfText +\u003d \"     \""},{"lineNumber":99,"author":{"gitId":"patricktan6"},"content":"                        + \"Got it. I\u0027ve removed this task: \\n\""},{"lineNumber":100,"author":{"gitId":"patricktan6"},"content":"                        + \"       \""},{"lineNumber":101,"author":{"gitId":"patricktan6"},"content":"                        + this.tasks[i]"},{"lineNumber":102,"author":{"gitId":"patricktan6"},"content":"                        + \"\\n\""},{"lineNumber":103,"author":{"gitId":"patricktan6"},"content":"                        + \"     \""},{"lineNumber":104,"author":{"gitId":"patricktan6"},"content":"                        + String.format(\"Now you have %d tasks in the list. \\n\", numOfTasks);"},{"lineNumber":105,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"patricktan6"},"content":"        } else if (this.tag \u003d\u003d Tag.FIND) {"},{"lineNumber":107,"author":{"gitId":"patricktan6"},"content":"            try {"},{"lineNumber":108,"author":{"gitId":"patricktan6"},"content":"                linesOfText +\u003d \"     \""},{"lineNumber":109,"author":{"gitId":"patricktan6"},"content":"                        + \"Here are the matching tasks in your list: \\n\";"},{"lineNumber":110,"author":{"gitId":"patricktan6"},"content":"                for (int i \u003d 0; i \u003c this.tasks.length; i++) {"},{"lineNumber":111,"author":{"gitId":"patricktan6"},"content":"                    linesOfText +\u003d \"       \""},{"lineNumber":112,"author":{"gitId":"patricktan6"},"content":"                            + this.tasks[i]"},{"lineNumber":113,"author":{"gitId":"patricktan6"},"content":"                            + \"\\n\";"},{"lineNumber":114,"author":{"gitId":"patricktan6"},"content":"                }"},{"lineNumber":115,"author":{"gitId":"patricktan6"},"content":"            } catch (NullPointerException e) {"},{"lineNumber":116,"author":{"gitId":"patricktan6"},"content":"                Response msg \u003d new Response(new String[]{\"There is no matching tasks!\"});"},{"lineNumber":117,"author":{"gitId":"patricktan6"},"content":"                System.out.println(msg.getResponse());"},{"lineNumber":118,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"patricktan6"},"content":"        } else {"},{"lineNumber":120,"author":{"gitId":"patricktan6"},"content":"            for (int i \u003d 0; i \u003c this.texts.length; i++) {"},{"lineNumber":121,"author":{"gitId":"patricktan6"},"content":"                linesOfText +\u003d \"     \""},{"lineNumber":122,"author":{"gitId":"patricktan6"},"content":"                        + this.texts[i] + \"\\n\";"},{"lineNumber":123,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"patricktan6"},"content":"        String output \u003d linesOfText;"},{"lineNumber":126,"author":{"gitId":"patricktan6"},"content":"        return output;"},{"lineNumber":127,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":128}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"import duke.note.Note;"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"import duke.task.Deadline;"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"import duke.task.Event;"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"import duke.task.Task;"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"import duke.task.Todo;"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":" * Creates a storage of the tasks."},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"public class Storage {"},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"    private File file;"},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"    private File notefile;"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"     * Creates a storage that stores the tasks and notes."},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"     * @param filePath     file path for task file."},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"     * @param noteFilePath file path for note file."},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"    public Storage(String filePath, String noteFilePath) {"},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"        this.file \u003d new File(filePath);"},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"        this.notefile \u003d new File(noteFilePath);"},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":"     * Loads the content of the file into an array list of tasks"},{"lineNumber":37,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"patricktan6"},"content":"     * @return An array list of tasks"},{"lineNumber":39,"author":{"gitId":"patricktan6"},"content":"     * @throws DukeException"},{"lineNumber":40,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"patricktan6"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":42,"author":{"gitId":"patricktan6"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":43,"author":{"gitId":"patricktan6"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"patricktan6"},"content":"            Scanner s \u003d new Scanner(this.file);"},{"lineNumber":45,"author":{"gitId":"patricktan6"},"content":"            while (s.hasNext()) {"},{"lineNumber":46,"author":{"gitId":"patricktan6"},"content":"                String line \u003d s.nextLine();"},{"lineNumber":47,"author":{"gitId":"patricktan6"},"content":"                String[] task \u003d line.split(\" \\\\| \");"},{"lineNumber":48,"author":{"gitId":"patricktan6"},"content":"                if (task[0].equals(\"T\")) {"},{"lineNumber":49,"author":{"gitId":"patricktan6"},"content":"                    Task todo \u003d new Todo(task[2]);"},{"lineNumber":50,"author":{"gitId":"patricktan6"},"content":"                    if (task[1].equals(\"✓\")) {"},{"lineNumber":51,"author":{"gitId":"patricktan6"},"content":"                        todo.markDone();"},{"lineNumber":52,"author":{"gitId":"patricktan6"},"content":"                    }"},{"lineNumber":53,"author":{"gitId":"patricktan6"},"content":"                    tasks.add(todo);"},{"lineNumber":54,"author":{"gitId":"patricktan6"},"content":"                } else if (task[0].equals(\"D\")) {"},{"lineNumber":55,"author":{"gitId":"patricktan6"},"content":"                    Task deadline \u003d new Deadline(task[2], LocalDateTime.parse(task[3]));"},{"lineNumber":56,"author":{"gitId":"patricktan6"},"content":"                    if (task[1].equals(\"✓\")) {"},{"lineNumber":57,"author":{"gitId":"patricktan6"},"content":"                        deadline.markDone();"},{"lineNumber":58,"author":{"gitId":"patricktan6"},"content":"                    }"},{"lineNumber":59,"author":{"gitId":"patricktan6"},"content":"                    tasks.add(deadline);"},{"lineNumber":60,"author":{"gitId":"patricktan6"},"content":"                } else if (task[0].equals(\"E\")) {"},{"lineNumber":61,"author":{"gitId":"patricktan6"},"content":"                    Task event \u003d new Event(task[2], LocalDateTime.parse(task[3]));"},{"lineNumber":62,"author":{"gitId":"patricktan6"},"content":"                    if (task[1].equals(\"✓\")) {"},{"lineNumber":63,"author":{"gitId":"patricktan6"},"content":"                        event.markDone();"},{"lineNumber":64,"author":{"gitId":"patricktan6"},"content":"                    }"},{"lineNumber":65,"author":{"gitId":"patricktan6"},"content":"                    tasks.add(event);"},{"lineNumber":66,"author":{"gitId":"patricktan6"},"content":"                } else {"},{"lineNumber":67,"author":{"gitId":"patricktan6"},"content":"                    continue;"},{"lineNumber":68,"author":{"gitId":"patricktan6"},"content":"                }"},{"lineNumber":69,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"patricktan6"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":71,"author":{"gitId":"patricktan6"},"content":"            throw new DukeException(\"Folder or file does not exist yet! \""},{"lineNumber":72,"author":{"gitId":"patricktan6"},"content":"                    + \"Please make sure you have data/duke.txt in ip directory. \");"},{"lineNumber":73,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"patricktan6"},"content":"        return tasks;"},{"lineNumber":75,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":77,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"patricktan6"},"content":"     * Returns an array list of notes from the note list."},{"lineNumber":79,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"patricktan6"},"content":"     * @return an array list of notes."},{"lineNumber":81,"author":{"gitId":"patricktan6"},"content":"     * @throws DukeException"},{"lineNumber":82,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"patricktan6"},"content":"    public ArrayList\u003cNote\u003e loadNotes() throws DukeException {"},{"lineNumber":84,"author":{"gitId":"patricktan6"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003cNote\u003e();"},{"lineNumber":85,"author":{"gitId":"patricktan6"},"content":"        try {"},{"lineNumber":86,"author":{"gitId":"patricktan6"},"content":"            Scanner s \u003d new Scanner(this.notefile);"},{"lineNumber":87,"author":{"gitId":"patricktan6"},"content":"            while (s.hasNext()) {"},{"lineNumber":88,"author":{"gitId":"patricktan6"},"content":"                String line \u003d s.nextLine();"},{"lineNumber":89,"author":{"gitId":"patricktan6"},"content":"                String[] note \u003d line.split(\" \\\\| \");"},{"lineNumber":90,"author":{"gitId":"patricktan6"},"content":"                Note n \u003d new Note(note[0], note[1]);"},{"lineNumber":91,"author":{"gitId":"patricktan6"},"content":"                notes.add(n);"},{"lineNumber":92,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"patricktan6"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":94,"author":{"gitId":"patricktan6"},"content":"            throw new DukeException(\"Folder or file does not exist yet! \""},{"lineNumber":95,"author":{"gitId":"patricktan6"},"content":"                    + \"Please make sure you have data/notes.txt in ip directory. \");"},{"lineNumber":96,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"patricktan6"},"content":"        return notes;"},{"lineNumber":98,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":100,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"patricktan6"},"content":"     * Writes the notes in to the note list file."},{"lineNumber":102,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"patricktan6"},"content":"     * @param tasks The note list."},{"lineNumber":104,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"patricktan6"},"content":"    public void writeNoteFile(TaskList tasks) {"},{"lineNumber":106,"author":{"gitId":"patricktan6"},"content":"        try {"},{"lineNumber":107,"author":{"gitId":"patricktan6"},"content":"            FileWriter fw \u003d new FileWriter(this.notefile);"},{"lineNumber":108,"author":{"gitId":"patricktan6"},"content":"            fw.write(tasks.getNoteList());"},{"lineNumber":109,"author":{"gitId":"patricktan6"},"content":"            fw.close();"},{"lineNumber":110,"author":{"gitId":"patricktan6"},"content":"        } catch (IOException e) {"},{"lineNumber":111,"author":{"gitId":"patricktan6"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());"},{"lineNumber":112,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":115,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"patricktan6"},"content":"     * Writes the tasks in the TaskList into the file."},{"lineNumber":117,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":118,"author":{"gitId":"patricktan6"},"content":"     * @param tasks A list of tasks to be written into the file."},{"lineNumber":119,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"patricktan6"},"content":"    public void writeFile(TaskList tasks) {"},{"lineNumber":121,"author":{"gitId":"patricktan6"},"content":"        try {"},{"lineNumber":122,"author":{"gitId":"patricktan6"},"content":"            FileWriter fw \u003d new FileWriter(this.file);"},{"lineNumber":123,"author":{"gitId":"patricktan6"},"content":"            fw.write(tasks.getList());"},{"lineNumber":124,"author":{"gitId":"patricktan6"},"content":"            fw.close();"},{"lineNumber":125,"author":{"gitId":"patricktan6"},"content":"        } catch (IOException e) {"},{"lineNumber":126,"author":{"gitId":"patricktan6"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());"},{"lineNumber":127,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":129,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":131,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":131}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"import duke.note.Note;"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":" * Creates a list that keeps the tasks."},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"public class TaskList {"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"    private ArrayList\u003cNote\u003e notes;"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"     * Creates a task and note lists with an array list of tasks and an array list of notes."},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"     * @param tasks an array list of tasks"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"     * @param notes an array list of notes"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks, ArrayList\u003cNote\u003e notes) {"},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"        this.notes \u003d notes;"},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"     * Creates a task list with empty lists of tasks and notes."},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"    public TaskList() {"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"        this.notes \u003d new ArrayList\u003cNote\u003e();"},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":34,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"     * Adds a task to the list of tasks."},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"patricktan6"},"content":"     * @param task The task to be added."},{"lineNumber":38,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"patricktan6"},"content":"    public void add(Task task) {"},{"lineNumber":40,"author":{"gitId":"patricktan6"},"content":"        tasks.add(task);"},{"lineNumber":41,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":43,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"patricktan6"},"content":"     * Adds a note to the note list."},{"lineNumber":45,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"patricktan6"},"content":"     * @param note The note to be added."},{"lineNumber":47,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"patricktan6"},"content":"    public void addNote(Note note) {"},{"lineNumber":49,"author":{"gitId":"patricktan6"},"content":"        notes.add(note);"},{"lineNumber":50,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":52,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"patricktan6"},"content":"     * Delete a note from the note list."},{"lineNumber":54,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"patricktan6"},"content":"     * @param idx The index of the note to be deleted."},{"lineNumber":56,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"patricktan6"},"content":"    public void deleteNote(int idx) {"},{"lineNumber":58,"author":{"gitId":"patricktan6"},"content":"        notes.remove(idx);"},{"lineNumber":59,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":61,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"patricktan6"},"content":"     * Deletes the task with the index of it in the list."},{"lineNumber":63,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"patricktan6"},"content":"     * @param idx The index of the task to be deleted in the list."},{"lineNumber":65,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"patricktan6"},"content":"    public void delete(int idx) {"},{"lineNumber":67,"author":{"gitId":"patricktan6"},"content":"        tasks.remove(idx);"},{"lineNumber":68,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":70,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"patricktan6"},"content":"     * Gets the task of the index passed in."},{"lineNumber":72,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"patricktan6"},"content":"     * @param idx The index of the task."},{"lineNumber":74,"author":{"gitId":"patricktan6"},"content":"     * @return The task with the index passed in."},{"lineNumber":75,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"patricktan6"},"content":"    public Task get(int idx) {"},{"lineNumber":77,"author":{"gitId":"patricktan6"},"content":"        return tasks.get(idx);"},{"lineNumber":78,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":80,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"patricktan6"},"content":"     * Gets the note of the index."},{"lineNumber":82,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"patricktan6"},"content":"     * @param idx The index of the note."},{"lineNumber":84,"author":{"gitId":"patricktan6"},"content":"     * @return the note requested."},{"lineNumber":85,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"patricktan6"},"content":"    public Note getNote(int idx) {"},{"lineNumber":87,"author":{"gitId":"patricktan6"},"content":"        return notes.get(idx);"},{"lineNumber":88,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":90,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"patricktan6"},"content":"     * Gets an array of the tasks in the task list."},{"lineNumber":92,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"patricktan6"},"content":"     * @return An array of the tasks."},{"lineNumber":94,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"patricktan6"},"content":"    public Task[] getArray() {"},{"lineNumber":96,"author":{"gitId":"patricktan6"},"content":"        return this.tasks.toArray(new Task[0]);"},{"lineNumber":97,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":99,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"patricktan6"},"content":"     * Gets the array of the notes."},{"lineNumber":101,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"patricktan6"},"content":"     * @return an array of the notes."},{"lineNumber":103,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"patricktan6"},"content":"    public Note[] getNotesArray() {"},{"lineNumber":105,"author":{"gitId":"patricktan6"},"content":"        return this.notes.toArray(new Note[0]);"},{"lineNumber":106,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":108,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"patricktan6"},"content":"     * Gets an array list of tasks that contain the keyword."},{"lineNumber":110,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":111,"author":{"gitId":"patricktan6"},"content":"     * @param keyword The searching keyword."},{"lineNumber":112,"author":{"gitId":"patricktan6"},"content":"     * @return An array list of tasks that contain the keyword."},{"lineNumber":113,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"patricktan6"},"content":"    public ArrayList\u003cTask\u003e filter(String keyword) {"},{"lineNumber":115,"author":{"gitId":"patricktan6"},"content":"        ArrayList\u003cTask\u003e satisfiedTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":116,"author":{"gitId":"patricktan6"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":117,"author":{"gitId":"patricktan6"},"content":"            if (tasks.get(i).getDescription().contains(keyword)) {"},{"lineNumber":118,"author":{"gitId":"patricktan6"},"content":"                satisfiedTasks.add(tasks.get(i));"},{"lineNumber":119,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":120,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"patricktan6"},"content":"        return satisfiedTasks;"},{"lineNumber":122,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":124,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"patricktan6"},"content":"     * Gets the string representation of the list of the tasks in the task list."},{"lineNumber":126,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":127,"author":{"gitId":"patricktan6"},"content":"     * @return A string that represents the list of tasks"},{"lineNumber":128,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"patricktan6"},"content":"    public String getList() {"},{"lineNumber":130,"author":{"gitId":"patricktan6"},"content":"        String list \u003d \"\";"},{"lineNumber":131,"author":{"gitId":"patricktan6"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":132,"author":{"gitId":"patricktan6"},"content":"            Task t \u003d tasks.get(i);"},{"lineNumber":133,"author":{"gitId":"patricktan6"},"content":"            list +\u003d t.writeMessage() + \"\\n\";"},{"lineNumber":134,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"patricktan6"},"content":"        return list;"},{"lineNumber":136,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":138,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":139,"author":{"gitId":"patricktan6"},"content":"     * Returns the string of the list of notes."},{"lineNumber":140,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":141,"author":{"gitId":"patricktan6"},"content":"     * @return The string of the list of notes."},{"lineNumber":142,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":143,"author":{"gitId":"patricktan6"},"content":"    public String getNoteList() {"},{"lineNumber":144,"author":{"gitId":"patricktan6"},"content":"        String list \u003d \"\";"},{"lineNumber":145,"author":{"gitId":"patricktan6"},"content":"        for (int i \u003d 0; i \u003c notes.size(); i++) {"},{"lineNumber":146,"author":{"gitId":"patricktan6"},"content":"            Note n \u003d notes.get(i);"},{"lineNumber":147,"author":{"gitId":"patricktan6"},"content":"            list +\u003d n.writeMessage() + \"\\n\";"},{"lineNumber":148,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"patricktan6"},"content":"        return list;"},{"lineNumber":150,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":152,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":153,"author":{"gitId":"patricktan6"},"content":"     * Gets the size of the task list."},{"lineNumber":154,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":155,"author":{"gitId":"patricktan6"},"content":"     * @return The size of the task list."},{"lineNumber":156,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":157,"author":{"gitId":"patricktan6"},"content":"    public int size() {"},{"lineNumber":158,"author":{"gitId":"patricktan6"},"content":"        return this.tasks.size();"},{"lineNumber":159,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":161,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":162,"author":{"gitId":"patricktan6"},"content":"     * Gets the size of the note list."},{"lineNumber":163,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":164,"author":{"gitId":"patricktan6"},"content":"     * @return the size of the note list."},{"lineNumber":165,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":166,"author":{"gitId":"patricktan6"},"content":"    public int noteSize() {"},{"lineNumber":167,"author":{"gitId":"patricktan6"},"content":"        return this.notes.size();"},{"lineNumber":168,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":170,"author":{"gitId":"patricktan6"},"content":"    @Override"},{"lineNumber":171,"author":{"gitId":"patricktan6"},"content":"    public String toString() {"},{"lineNumber":172,"author":{"gitId":"patricktan6"},"content":"        String str \u003d \"\";"},{"lineNumber":173,"author":{"gitId":"patricktan6"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":174,"author":{"gitId":"patricktan6"},"content":"            str +\u003d (i + 1) + \": \" + tasks.get(i);"},{"lineNumber":175,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":176,"author":{"gitId":"patricktan6"},"content":"            if (i !\u003d tasks.size() - 1) {"},{"lineNumber":177,"author":{"gitId":"patricktan6"},"content":"                str +\u003d \"\\n\";"},{"lineNumber":178,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":179,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":180,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":181,"author":{"gitId":"patricktan6"},"content":"        return str;"},{"lineNumber":182,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":184,"author":{"gitId":"patricktan6"},"content":"    @Override"},{"lineNumber":185,"author":{"gitId":"patricktan6"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":186,"author":{"gitId":"patricktan6"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":187,"author":{"gitId":"patricktan6"},"content":"            return true;"},{"lineNumber":188,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":189,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":190,"author":{"gitId":"patricktan6"},"content":"        if (!(obj instanceof TaskList)) {"},{"lineNumber":191,"author":{"gitId":"patricktan6"},"content":"            return false;"},{"lineNumber":192,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":194,"author":{"gitId":"patricktan6"},"content":"        TaskList tasks \u003d (TaskList) obj;"},{"lineNumber":195,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":196,"author":{"gitId":"patricktan6"},"content":"        return tasks.toString().equals(toString());"},{"lineNumber":197,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":199,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":199}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"import duke.note.Note;"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":" * Creates a ui."},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"public class Ui {"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"     * Prints the welcome message."},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"    public String showWelcome() {"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"        String logo \u003d \"      ___                __     \\n\""},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"                + \"     |  _ \\\\   ____      |  |    \\n\""},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"                + \"     | |_| | / __  \\\\  __|  |__  \\n\""},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"                + \"     |  _ / | |  |  ||__    __| \\n\""},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"                + \"     | |    | |_/   |   |  |    \\n\""},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"                + \"     |_|     \\\\___/|_|   |__|    \\n\";"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"        String[] greetingTexts \u003d {\"Hello! I\u0027m Pat\", \"What can I do for you?\"};"},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"        Response greeting \u003d new Response(greetingTexts);"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"        showLine();"},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"        return \"     Hello from\\n\""},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"                + logo"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"                + greeting.getResponse();"},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"     * A string of welcome message on GUI."},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"patricktan6"},"content":"     * @return String representation of welcome message on GUI."},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":"    public String showWelcomeMessage() {"},{"lineNumber":37,"author":{"gitId":"patricktan6"},"content":"        return \"Hello! I\u0027m Pat\\n\""},{"lineNumber":38,"author":{"gitId":"patricktan6"},"content":"                + \"What can I do for you?\";"},{"lineNumber":39,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":41,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"patricktan6"},"content":"     * Prints a line."},{"lineNumber":43,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"patricktan6"},"content":"    public void showLine() {"},{"lineNumber":45,"author":{"gitId":"patricktan6"},"content":"        System.out.println(\"    __________________________________________________________ \\n\");"},{"lineNumber":46,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":48,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"patricktan6"},"content":"     * Reads the string input."},{"lineNumber":50,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"patricktan6"},"content":"     * @return A string that will be parsed."},{"lineNumber":52,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"patricktan6"},"content":"    public String readCommand() {"},{"lineNumber":54,"author":{"gitId":"patricktan6"},"content":"        Scanner s \u003d new Scanner(System.in);"},{"lineNumber":55,"author":{"gitId":"patricktan6"},"content":"        return s.nextLine();"},{"lineNumber":56,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":58,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"patricktan6"},"content":"     * Returns a string of the message of adding a task."},{"lineNumber":60,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"patricktan6"},"content":"     * @param task  The task to be added."},{"lineNumber":62,"author":{"gitId":"patricktan6"},"content":"     * @param tasks The task list."},{"lineNumber":63,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"patricktan6"},"content":"    public String showAddMessage(Task task, TaskList tasks) {"},{"lineNumber":65,"author":{"gitId":"patricktan6"},"content":"        Response msg \u003d new Response(new Task[]{task}, Response.Tag.ADD, tasks.size());"},{"lineNumber":66,"author":{"gitId":"patricktan6"},"content":"        return msg.getResponse();"},{"lineNumber":67,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":69,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"patricktan6"},"content":"     * Returns a string of add note message."},{"lineNumber":71,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"patricktan6"},"content":"     * @param note  The note to be added."},{"lineNumber":73,"author":{"gitId":"patricktan6"},"content":"     * @param tasks The note list."},{"lineNumber":74,"author":{"gitId":"patricktan6"},"content":"     * @return the string of add note message."},{"lineNumber":75,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"patricktan6"},"content":"    public String showAddNoteMessage(Note note, TaskList tasks) {"},{"lineNumber":77,"author":{"gitId":"patricktan6"},"content":"        return \"     \""},{"lineNumber":78,"author":{"gitId":"patricktan6"},"content":"                + \"Got it. I\u0027ve added this note: \\n\""},{"lineNumber":79,"author":{"gitId":"patricktan6"},"content":"                + \"       \""},{"lineNumber":80,"author":{"gitId":"patricktan6"},"content":"                + note"},{"lineNumber":81,"author":{"gitId":"patricktan6"},"content":"                + \"\\n\""},{"lineNumber":82,"author":{"gitId":"patricktan6"},"content":"                + \"     \""},{"lineNumber":83,"author":{"gitId":"patricktan6"},"content":"                + String.format(\"Now you have %d notes in the list. \\n\", tasks.noteSize());"},{"lineNumber":84,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":86,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"patricktan6"},"content":"     * Returns a string of the message of deleting a task."},{"lineNumber":88,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"patricktan6"},"content":"     * @param task  The task to be deleted."},{"lineNumber":90,"author":{"gitId":"patricktan6"},"content":"     * @param tasks The task list."},{"lineNumber":91,"author":{"gitId":"patricktan6"},"content":"     * @return the string of the task delete message."},{"lineNumber":92,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"patricktan6"},"content":"    public String showDeleteMessage(Task task, TaskList tasks) {"},{"lineNumber":94,"author":{"gitId":"patricktan6"},"content":"        Response msg \u003d new Response(new Task[]{task}, Response.Tag.REMOVE, tasks.size());"},{"lineNumber":95,"author":{"gitId":"patricktan6"},"content":"        return msg.getResponse();"},{"lineNumber":96,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":98,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"patricktan6"},"content":"     * Returns a string of the message of deleting a note."},{"lineNumber":100,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":101,"author":{"gitId":"patricktan6"},"content":"     * @param note  The note to be deleted."},{"lineNumber":102,"author":{"gitId":"patricktan6"},"content":"     * @param tasks The note list."},{"lineNumber":103,"author":{"gitId":"patricktan6"},"content":"     * @return the string of the note delete message."},{"lineNumber":104,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"patricktan6"},"content":"    public String showDeleteNoteMessage(Note note, TaskList tasks) {"},{"lineNumber":106,"author":{"gitId":"patricktan6"},"content":"        return \"     \""},{"lineNumber":107,"author":{"gitId":"patricktan6"},"content":"                + \"Got it. I\u0027ve removed this note: \\n\""},{"lineNumber":108,"author":{"gitId":"patricktan6"},"content":"                + \"       \""},{"lineNumber":109,"author":{"gitId":"patricktan6"},"content":"                + note"},{"lineNumber":110,"author":{"gitId":"patricktan6"},"content":"                + \"\\n\""},{"lineNumber":111,"author":{"gitId":"patricktan6"},"content":"                + \"     \""},{"lineNumber":112,"author":{"gitId":"patricktan6"},"content":"                + String.format(\"Now you have %d notes in the list. \\n\", tasks.noteSize());"},{"lineNumber":113,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":115,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"patricktan6"},"content":"     * Returns a list of the tasks."},{"lineNumber":117,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":118,"author":{"gitId":"patricktan6"},"content":"     * @param tasks The task list."},{"lineNumber":119,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"patricktan6"},"content":"    public String listTasks(TaskList tasks) {"},{"lineNumber":121,"author":{"gitId":"patricktan6"},"content":"        Response list \u003d new Response(tasks.getArray(), Response.Tag.LIST);"},{"lineNumber":122,"author":{"gitId":"patricktan6"},"content":"        return list.getResponse();"},{"lineNumber":123,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":125,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"patricktan6"},"content":"     * Returns a list of notes."},{"lineNumber":127,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":128,"author":{"gitId":"patricktan6"},"content":"     * @param tasks the note list."},{"lineNumber":129,"author":{"gitId":"patricktan6"},"content":"     * @return"},{"lineNumber":130,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"patricktan6"},"content":"    public String listNotes(TaskList tasks) {"},{"lineNumber":132,"author":{"gitId":"patricktan6"},"content":"        Response list \u003d new Response(tasks.getNotesArray(), Response.Tag.LISTNOTES);"},{"lineNumber":133,"author":{"gitId":"patricktan6"},"content":"        return list.getResponse();"},{"lineNumber":134,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":136,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"patricktan6"},"content":"     * Prints the done message when marking a task as done."},{"lineNumber":138,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":139,"author":{"gitId":"patricktan6"},"content":"     * @param task The task to be marked done."},{"lineNumber":140,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":141,"author":{"gitId":"patricktan6"},"content":"    public String showDoneMessage(Task task) {"},{"lineNumber":142,"author":{"gitId":"patricktan6"},"content":"        Response msg \u003d new Response(new String[]{\"Nice! I\u0027ve marked this task as done:\", \"  \" + task});"},{"lineNumber":143,"author":{"gitId":"patricktan6"},"content":"        return msg.getResponse();"},{"lineNumber":144,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":146,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"patricktan6"},"content":"     * Returns a list of tasks that match the searching keyword."},{"lineNumber":148,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":149,"author":{"gitId":"patricktan6"},"content":"     * @param tasks The tasks that match the searching keyword."},{"lineNumber":150,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":151,"author":{"gitId":"patricktan6"},"content":"    public String showFindMessage(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":152,"author":{"gitId":"patricktan6"},"content":"        Response msg \u003d new Response(tasks.toArray(new Task[0]), Response.Tag.FIND);"},{"lineNumber":153,"author":{"gitId":"patricktan6"},"content":"        return msg.getResponse();"},{"lineNumber":154,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":156,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"patricktan6"},"content":"     * Returns the loading error when loading the local file."},{"lineNumber":158,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"patricktan6"},"content":"    public String showLoadingError() {"},{"lineNumber":160,"author":{"gitId":"patricktan6"},"content":"        Response msg \u003d new Response(new String[]{\"Folder or file does not exist yet! \""},{"lineNumber":161,"author":{"gitId":"patricktan6"},"content":"                + \"Please make sure you have data/duke.txt in ip directory. \"});"},{"lineNumber":162,"author":{"gitId":"patricktan6"},"content":"        return msg.getResponse();"},{"lineNumber":163,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":165,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":166,"author":{"gitId":"patricktan6"},"content":"     * Returns a string of the error message."},{"lineNumber":167,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":168,"author":{"gitId":"patricktan6"},"content":"     * @param errMessage The error message."},{"lineNumber":169,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":170,"author":{"gitId":"patricktan6"},"content":"    public String showError(String errMessage) {"},{"lineNumber":171,"author":{"gitId":"patricktan6"},"content":"        Response msg \u003d new Response(new String[]{errMessage});"},{"lineNumber":172,"author":{"gitId":"patricktan6"},"content":"        return msg.getResponse();"},{"lineNumber":173,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":175,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":176,"author":{"gitId":"patricktan6"},"content":"     * Returns a string of the bye message when exiting the program."},{"lineNumber":177,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":178,"author":{"gitId":"patricktan6"},"content":"    public String showByeMessage() {"},{"lineNumber":179,"author":{"gitId":"patricktan6"},"content":"        Response msg \u003d new Response(new String[]{\"Bye. Hope to see you again soon!\"});"},{"lineNumber":180,"author":{"gitId":"patricktan6"},"content":"        return msg.getResponse();"},{"lineNumber":181,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":183,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":183}},{"path":"src/main/java/duke/UnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":" * Creates an exception to be thrown when the input is unknown."},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"public class UnknownInputException extends Exception {"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"    public UnknownInputException() {"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"        super(\"\\n     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":10}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":" * Creates an add command object."},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"public class AddCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"    private Task task;"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"    public AddCommand(Task task) {"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"        this.task \u003d task;"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"     * Executes the command."},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"     * @param tasks   The list of existing tasks."},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"     * @param ui      The ui that handles user interaction."},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"     * @param storage The storage that stores the list of existing tasks."},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"        tasks.add(this.task);"},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"        storage.writeFile(tasks);"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"        return ui.showAddMessage(this.task, tasks);"},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"     * Determines if the command is an exit command."},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"patricktan6"},"content":"     * @return Always false."},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":"    public boolean isExit() {"},{"lineNumber":37,"author":{"gitId":"patricktan6"},"content":"        return false;"},{"lineNumber":38,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":40,"author":{"gitId":"patricktan6"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"patricktan6"},"content":"    public String toString() {"},{"lineNumber":42,"author":{"gitId":"patricktan6"},"content":"        return task.toString();"},{"lineNumber":43,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":45,"author":{"gitId":"patricktan6"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"patricktan6"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":47,"author":{"gitId":"patricktan6"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":48,"author":{"gitId":"patricktan6"},"content":"            return true;"},{"lineNumber":49,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":51,"author":{"gitId":"patricktan6"},"content":"        if (!(obj instanceof AddCommand)) {"},{"lineNumber":52,"author":{"gitId":"patricktan6"},"content":"            return false;"},{"lineNumber":53,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":55,"author":{"gitId":"patricktan6"},"content":"        AddCommand command \u003d (AddCommand) obj;"},{"lineNumber":56,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":57,"author":{"gitId":"patricktan6"},"content":"        return command.toString().equals(toString());"},{"lineNumber":58,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":60,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":60}},{"path":"src/main/java/duke/command/AddNoteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"import duke.note.Note;"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"public class AddNoteCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"    private Note note;"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"    public AddNoteCommand(Note note) {"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"        this.note \u003d note;"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"     * Executes the command."},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"     * @param tasks   The list of existing notes."},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"     * @param ui      The ui that handles user interaction."},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"     * @param storage The storage that stores the list of existing notes."},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"        tasks.addNote(this.note);"},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"        storage.writeNoteFile(tasks);"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"        return ui.showAddNoteMessage(this.note, tasks);"},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"     * Determines if the command is an exit command."},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"     * @return Always false."},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"    public boolean isExit() {"},{"lineNumber":34,"author":{"gitId":"patricktan6"},"content":"        return false;"},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":37,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":37}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":" * Creates a command object."},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"public abstract class Command {"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"     * Executes the command."},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"     * @param tasks   The list of existing tasks."},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"     * @param ui      The ui that handles user interaction."},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"     * @param storage The storage that stores the list of existing tasks."},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"     * @throws DukeException when the command cannot be executed."},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"     * Determines whether the command is an exit command."},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"     * @return The status of the command."},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"    public abstract boolean isExit();"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":29}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":" * Creates a delete command."},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"    private int idx;"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"    public DeleteCommand(int idx) {"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"        this.idx \u003d idx - 1;"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"     * Executes the command."},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"     * @param tasks   The list of existing tasks."},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"     * @param ui      The ui that handles user interaction."},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"     * @param storage The storage that stores the list of existing tasks."},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"     * @throws DukeException when the command cannot be executed."},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"            Task deletedTask \u003d tasks.get(idx);"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"            tasks.delete(idx);"},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"            storage.writeFile(tasks);"},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"            return ui.showDeleteMessage(deletedTask, tasks);"},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":34,"author":{"gitId":"patricktan6"},"content":"            throw new DukeException(\"The number does not exist!\");"},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":38,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"patricktan6"},"content":"     * Determines if the command is an exit command."},{"lineNumber":40,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"patricktan6"},"content":"     * @return Always false."},{"lineNumber":42,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"patricktan6"},"content":"    public boolean isExit() {"},{"lineNumber":44,"author":{"gitId":"patricktan6"},"content":"        return false;"},{"lineNumber":45,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":46}},{"path":"src/main/java/duke/command/DeleteNoteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"import duke.note.Note;"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"public class DeleteNoteCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"    private int idx;"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"    public DeleteNoteCommand(int idx) {"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"        this.idx \u003d idx - 1;"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"     * Executes the command."},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"     * @param tasks   The list of existing notes."},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"     * @param ui      The ui that handles user interaction."},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"     * @param storage The storage that stores the list of existing notes."},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"            Note deletedNote \u003d tasks.getNote(idx);"},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"            tasks.deleteNote(this.idx);"},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"            storage.writeNoteFile(tasks);"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"            return ui.showDeleteNoteMessage(deletedNote, tasks);"},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"            throw new DukeException(\"The number does not exist!\");"},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":34,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"     * Determines if the command is an exit command."},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"patricktan6"},"content":"     * @return Always false."},{"lineNumber":38,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"patricktan6"},"content":"    public boolean isExit() {"},{"lineNumber":40,"author":{"gitId":"patricktan6"},"content":"        return false;"},{"lineNumber":41,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":42}},{"path":"src/main/java/duke/command/DescriptionCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"public class DescriptionCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"    private int idx;"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"    public DescriptionCommand(int idx) {"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"        this.idx \u003d idx - 1;"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"     * Executes the command."},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"     * @param tasks   The list of existing notes."},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"     * @param ui      The ui that handles user interaction."},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"     * @param storage The storage that stores the list of existing notes."},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"        return \"Description: \\n\\n\" + tasks.getNote(idx).getDescription();"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"     * Determines if the command is an exit command."},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"     * @return Always false."},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"    public boolean isExit() {"},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"        return false;"},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":33}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":" * Creates a done command."},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"public class DoneCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"    private int idx;"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"    public DoneCommand(int idx) {"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"        this.idx \u003d idx - 1;"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"     * Executes the command."},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"     * @param tasks   The list of existing tasks."},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"     * @param ui      The ui that handles user interaction."},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"     * @param storage The storage that stores the list of existing tasks."},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"     * @throws DukeException when the command cannot be executed."},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"            if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"                throw new IndexOutOfBoundsException();"},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"            Task doneTask \u003d tasks.get(idx);"},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"            doneTask.markDone();"},{"lineNumber":34,"author":{"gitId":"patricktan6"},"content":"            storage.writeFile(tasks);"},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"            return ui.showDoneMessage(doneTask);"},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":37,"author":{"gitId":"patricktan6"},"content":"            throw new DukeException(\"The number does not exist!\");"},{"lineNumber":38,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":41,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"patricktan6"},"content":"     * Determines if the command is an exit command."},{"lineNumber":43,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"patricktan6"},"content":"     * @return Always false."},{"lineNumber":45,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"patricktan6"},"content":"    public boolean isExit() {"},{"lineNumber":47,"author":{"gitId":"patricktan6"},"content":"        return false;"},{"lineNumber":48,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":49}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":" * Creates an exit command."},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"public class ExitCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"     * Executes the command."},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"     * @param tasks   The list of existing tasks."},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"     * @param ui      The ui that handles user interaction."},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"     * @param storage The storage that stores the list of existing tasks."},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"        return ui.showByeMessage();"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"     * Determines if the command is an exit command."},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"     * @return Always true."},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"    public boolean isExit() {"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"        return true;"},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":31}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":" * Creates a find command."},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"public class FindCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"    private String keyword;"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"     * Executes the command."},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"     * @param tasks   The list of existing tasks."},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"     * @param ui      The ui that handles user interaction."},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"     * @param storage The storage that stores the list of existing tasks."},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"        return ui.showFindMessage(tasks.filter(keyword));"},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"     * Determines if the command is an exit command."},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"     * @return Always false."},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"    public boolean isExit() {"},{"lineNumber":34,"author":{"gitId":"patricktan6"},"content":"        return false;"},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":36}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":" * Creates a list command."},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"     * Executes the command."},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"     * @param tasks   The list of existing tasks."},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"     * @param ui      The ui that handles user interaction."},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"     * @param storage The storage that stores the list of existing tasks."},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"        return ui.listTasks(tasks);"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"     * Determines if the command is an exit command."},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"     * @return Always false."},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"    public boolean isExit() {"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"        return false;"},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":30}},{"path":"src/main/java/duke/command/ListNoteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"public class ListNoteCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"     * Executes the command."},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"     * @param tasks   The list of existing notes."},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"     * @param ui      The ui that handles user interaction."},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"     * @param storage The storage that stores the list of existing notes."},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"        return ui.listNotes(tasks);"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"     * Determines if the command is an exit command."},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"     * @return Always false."},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"    public boolean isExit() {"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"        return false;"},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":27}},{"path":"src/main/java/duke/note/Note.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke.note;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"public class Note {"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"    private String title;"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"    private String description;"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"     * Creates a note."},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"     * @param title       The title of the note."},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"     * @param description The description of the note."},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"    public Note(String title, String description) {"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"        this.title \u003d title;"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"        this.description \u003d description;"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"    public String getDescription() {"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"        return this.description;"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"    public String writeMessage() {"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"        return String.format(\"%s | %s\", this.title, this.description);"},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"        return this.title;"},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":31}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":" * Creates a deadline."},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"    protected LocalDateTime deadline;"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"     * Creates a Deadline object."},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"     * @param description The description of the task."},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"     * @param deadline    The deadline of the task."},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"    public Deadline(String description, LocalDateTime deadline) {"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"        super(description);"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"     * Returns the message to be saved into the hard disk."},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"     * @return The string representation of the task in the local file."},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"    public String writeMessage() {"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"        String done \u003d \"\";"},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"        if (this.isDone) {"},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"            done \u003d \"✓\";"},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"patricktan6"},"content":"            done \u003d \"✗\";"},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":"        return String.format(\"D | %s | %s | %s\", done, this.description, this.deadline);"},{"lineNumber":37,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":39,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"patricktan6"},"content":"     * Returns the string representation of this task to the users when Duke receives list command."},{"lineNumber":41,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"patricktan6"},"content":"     * @return The string representation of this task."},{"lineNumber":43,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"patricktan6"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"patricktan6"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"patricktan6"},"content":"        String str \u003d \" (by: \";"},{"lineNumber":47,"author":{"gitId":"patricktan6"},"content":"        str +\u003d deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"));"},{"lineNumber":48,"author":{"gitId":"patricktan6"},"content":"        return \"[D][\" + (this.isDone ? \"✓\" : \"✗\") + \"] \" + this.description + str + \")\";"},{"lineNumber":49,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":50}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":" * Creates an event."},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"    protected LocalDateTime time;"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"     * Creates an Event object."},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"     * @param description The description of the event."},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"     * @param time        The time of the event."},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"    public Event(String description, LocalDateTime time) {"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"        super(description);"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"        this.time \u003d time;"},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"     * Returns the message to be saved in the hard disk."},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"     * @return The string representation of the task in the local file."},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"    public String writeMessage() {"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"        String done \u003d \"\";"},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"        if (this.isDone) {"},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"            done \u003d \"✓\";"},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"patricktan6"},"content":"            done \u003d \"✗\";"},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":"        return String.format(\"E | %s | %s | %s\", done, this.description, this.time);"},{"lineNumber":37,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":39,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"patricktan6"},"content":"     * Returns the string representation of the event to the users when Duke receives list command."},{"lineNumber":41,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"patricktan6"},"content":"     * @return The string representation of this task."},{"lineNumber":43,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"patricktan6"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"patricktan6"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"patricktan6"},"content":"        String str \u003d \" (at: \";"},{"lineNumber":47,"author":{"gitId":"patricktan6"},"content":"        str +\u003d time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"));"},{"lineNumber":48,"author":{"gitId":"patricktan6"},"content":"        return \"[E][\" + (this.isDone ? \"✓\" : \"✗\") + \"] \" + this.description + str + \")\";"},{"lineNumber":49,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":50}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":" * Creates a task."},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"    protected String description;"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"    protected boolean isDone;"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"     * Creates a task"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"     * @param description The description of the task"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"    public Task(String description) {"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"        this.isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"     * Creates the message to be written into the local file."},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"     * @return A string representation of the task in the local file."},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"    public String writeMessage() {"},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"        return \"\";"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"     * Marks the task as done."},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"    public void markDone() {"},{"lineNumber":34,"author":{"gitId":"patricktan6"},"content":"        this.isDone \u003d true;"},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":37,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"patricktan6"},"content":"     * Gets the description of the task."},{"lineNumber":39,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"patricktan6"},"content":"     * @return The description of the task."},{"lineNumber":41,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"patricktan6"},"content":"    public String getDescription() {"},{"lineNumber":43,"author":{"gitId":"patricktan6"},"content":"        return this.description;"},{"lineNumber":44,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":46,"author":{"gitId":"patricktan6"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"patricktan6"},"content":"    public String toString() {"},{"lineNumber":48,"author":{"gitId":"patricktan6"},"content":"        return \"[\" + (this.isDone ? \"✓\" : \"✗\") + \"] \" + this.description;"},{"lineNumber":49,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":50}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":" * Creates a todo."},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"     * Creates a Todo object."},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"     * @param description The description of the task."},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"    public Todo(String description) {"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"     * Returns the message to be saved in the hard disk."},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"     * @return The string representation of this task in the local file."},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"    public String writeMessage() {"},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"        String done \u003d \"\";"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"        if (this.isDone) {"},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"            done \u003d \"✓\";"},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"            done \u003d \"✗\";"},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"        return String.format(\"T | %s | %s\", done, this.description);"},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"patricktan6"},"content":"     * Returns the string representation of this task to the users when Duke receives list command."},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":"     * @return The string representation of this task."},{"lineNumber":37,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"patricktan6"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"patricktan6"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"patricktan6"},"content":"        return \"[T][\" + (this.isDone ? \"✓\" : \"✗\") + \"] \" + this.description;"},{"lineNumber":41,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":42}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"import javafx.geometry.Insets;"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"import javafx.geometry.Pos;"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"import javafx.scene.Node;"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"import javafx.scene.control.Label;"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"import javafx.scene.image.Image;"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":" * An example of a custom control using FXML."},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":" * containing text from the speaker."},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"public class DialogBox extends HBox {"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"    private Label dialog;"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"    private ImageView displayPicture;"},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":34,"author":{"gitId":"patricktan6"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":37,"author":{"gitId":"patricktan6"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":38,"author":{"gitId":"patricktan6"},"content":"            fxmlLoader.load();"},{"lineNumber":39,"author":{"gitId":"patricktan6"},"content":"        } catch (IOException e) {"},{"lineNumber":40,"author":{"gitId":"patricktan6"},"content":"            e.printStackTrace();"},{"lineNumber":41,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":43,"author":{"gitId":"patricktan6"},"content":"        dialog.setText(text);"},{"lineNumber":44,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":45,"author":{"gitId":"patricktan6"},"content":"        dialog.setPadding(new Insets(10));"},{"lineNumber":46,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":47,"author":{"gitId":"patricktan6"},"content":"        setBackgroundColor(Color.rgb(144, 238, 144));"},{"lineNumber":48,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":49,"author":{"gitId":"patricktan6"},"content":"        displayPicture.setImage(img);"},{"lineNumber":50,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":52,"author":{"gitId":"patricktan6"},"content":"    private void setBackgroundColor(Color color) {"},{"lineNumber":53,"author":{"gitId":"patricktan6"},"content":"        CornerRadii radii \u003d new CornerRadii(10);"},{"lineNumber":54,"author":{"gitId":"patricktan6"},"content":"        dialog.setBackground(new Background(new BackgroundFill(color, radii, Insets.EMPTY)));"},{"lineNumber":55,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":57,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"patricktan6"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":59,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"patricktan6"},"content":"    private void flip() {"},{"lineNumber":61,"author":{"gitId":"patricktan6"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":62,"author":{"gitId":"patricktan6"},"content":"        Collections.reverse(tmp);"},{"lineNumber":63,"author":{"gitId":"patricktan6"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":64,"author":{"gitId":"patricktan6"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":65,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":67,"author":{"gitId":"patricktan6"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":68,"author":{"gitId":"patricktan6"},"content":"        return new DialogBox(text, img);"},{"lineNumber":69,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":71,"author":{"gitId":"patricktan6"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":72,"author":{"gitId":"patricktan6"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":73,"author":{"gitId":"patricktan6"},"content":"        db.flip();"},{"lineNumber":74,"author":{"gitId":"patricktan6"},"content":"        db.setBackgroundColor(Color.rgb(173, 216, 230));"},{"lineNumber":75,"author":{"gitId":"patricktan6"},"content":"        return db;"},{"lineNumber":76,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":77}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"import javafx.application.Platform;"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"import javafx.scene.control.Button;"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":" * Controller for duke.ui.MainWindow. Provides the layout for the other controls."},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":" */"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"    private VBox dialogContainer;"},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"    private TextField userInput;"},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"    private Button sendButton;"},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"    private Duke duke;"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"    public void initialize() {"},{"lineNumber":34,"author":{"gitId":"patricktan6"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":37,"author":{"gitId":"patricktan6"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":38,"author":{"gitId":"patricktan6"},"content":"        duke \u003d d;"},{"lineNumber":39,"author":{"gitId":"patricktan6"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":40,"author":{"gitId":"patricktan6"},"content":"                DialogBox.getDukeDialog(new Ui().showWelcomeMessage(), dukeImage)"},{"lineNumber":41,"author":{"gitId":"patricktan6"},"content":"        );"},{"lineNumber":42,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":44,"author":{"gitId":"patricktan6"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"patricktan6"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":46,"author":{"gitId":"patricktan6"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":47,"author":{"gitId":"patricktan6"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"patricktan6"},"content":"    @FXML"},{"lineNumber":49,"author":{"gitId":"patricktan6"},"content":"    private void handleUserInput() {"},{"lineNumber":50,"author":{"gitId":"patricktan6"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":51,"author":{"gitId":"patricktan6"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":52,"author":{"gitId":"patricktan6"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":53,"author":{"gitId":"patricktan6"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":54,"author":{"gitId":"patricktan6"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":55,"author":{"gitId":"patricktan6"},"content":"        );"},{"lineNumber":56,"author":{"gitId":"patricktan6"},"content":"        userInput.clear();"},{"lineNumber":57,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":58,"author":{"gitId":"patricktan6"},"content":"        boolean isExit \u003d response.equals(new Ui().showByeMessage());"},{"lineNumber":59,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":60,"author":{"gitId":"patricktan6"},"content":"        if (isExit) {"},{"lineNumber":61,"author":{"gitId":"patricktan6"},"content":"            userInput.setDisable(true);"},{"lineNumber":62,"author":{"gitId":"patricktan6"},"content":"            // Exit programme after 1.5 second when received an exit command"},{"lineNumber":63,"author":{"gitId":"patricktan6"},"content":"            new Thread(() -\u003e {"},{"lineNumber":64,"author":{"gitId":"patricktan6"},"content":"                try {"},{"lineNumber":65,"author":{"gitId":"patricktan6"},"content":"                    Thread.sleep(1500);"},{"lineNumber":66,"author":{"gitId":"patricktan6"},"content":"                    Platform.exit();"},{"lineNumber":67,"author":{"gitId":"patricktan6"},"content":"                } catch (InterruptedException e) {"},{"lineNumber":68,"author":{"gitId":"patricktan6"},"content":"                    System.err.println(e.getMessage());"},{"lineNumber":69,"author":{"gitId":"patricktan6"},"content":"                }"},{"lineNumber":70,"author":{"gitId":"patricktan6"},"content":"            }).start();"},{"lineNumber":71,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":73,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":74}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"        \u003cLabel fx:id\u003d\"dialog\" prefHeight\u003d\"99.0\" prefWidth\u003d\"286.0\" style\u003d\"-fx-padding: 10.0 10.0 10.0 10.0;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"         \u003cfont\u003e"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"            \u003cFont name\u003d\"Helvetica\" size\u003d\"11.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"         \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"    \u003c/children\u003e"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"    \u003cpadding\u003e"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"    \u003c/padding\u003e"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"patricktan6":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: black;\" /\u003e"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"patricktan6":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"import duke.command.AddCommand;"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"import duke.command.Command;"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"import duke.task.Event;"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"public class ParserTest {"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"    public void parseEvent_goodDateFormat_parsedSuccessfully() throws DukeException {"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"        String command \u003d \"event date with girlfriend!! /at 2020-10-10T13:00\";"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"        Event event \u003d new Event(\"date with girlfriend!!\", LocalDateTime.parse(\"2020-10-10T13:00\"));"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"        AddCommand addCommand \u003d new AddCommand(event);"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"        Command c \u003d Parser.parse(command);"},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"        assertEquals(addCommand, c);"},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"    public void parseEvent_badDateFormat_exceptionThrown() {"},{"lineNumber":26,"author":{"gitId":"patricktan6"},"content":"        String command \u003d \"event make some sandwiches /at Sunday\";"},{"lineNumber":27,"author":{"gitId":"patricktan6"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"patricktan6"},"content":"            assertEquals(Parser.parse(command), Parser.parse(command));"},{"lineNumber":29,"author":{"gitId":"patricktan6"},"content":"            fail();"},{"lineNumber":30,"author":{"gitId":"patricktan6"},"content":"        } catch (DukeException e) {"},{"lineNumber":31,"author":{"gitId":"patricktan6"},"content":"            assertEquals(\"Format of date and time is incorrect! \""},{"lineNumber":32,"author":{"gitId":"patricktan6"},"content":"                            + \"Please fill in the date and time following the format below. \\n\""},{"lineNumber":33,"author":{"gitId":"patricktan6"},"content":"                            + \"       YYYY-MM-DDTHH:MM\","},{"lineNumber":34,"author":{"gitId":"patricktan6"},"content":"                    e.getMessage());"},{"lineNumber":35,"author":{"gitId":"patricktan6"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":37}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"import duke.task.Deadline;"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"import duke.task.Todo;"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"public class StorageTest {"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"    public void testSaveAndLoad() throws DukeException {"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"        Storage s \u003d new Storage(\"storageTaskTest.txt\", \"storageNoteTest.txt\");"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"        tasks.add(new Todo(\"buy a gift\"));"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"        tasks.add(new Deadline(\"ask her out\", LocalDateTime.parse(\"2020-10-08T21:00\")));"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"        tasks.get(1).markDone();"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"        s.writeFile(tasks);"},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":""},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"        TaskList loadedTasks \u003d new TaskList(s.load(), s.loadNotes());"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"        assertEquals(tasks, loadedTasks);"},{"lineNumber":24,"author":{"gitId":"patricktan6"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"patricktan6"},"content":"}"}],"authorContributionMap":{"patricktan6":25}},{"path":"src/test/storageTaskTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"T | ✗ | buy a gift"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":"D | ✓ | ask her out | 2020-10-08T21:00"}],"authorContributionMap":{"patricktan6":2}},{"path":"storageTaskTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"T | ✗ | buy a gift"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":"D | ✓ | ask her out | 2020-10-08T21:00"}],"authorContributionMap":{"patricktan6":2}},{"path":"storageTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"T | ✗ | buy a gift"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":"D | ✓ | ask her out | 2020-10-08T21:00"}],"authorContributionMap":{"patricktan6":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"list"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":"done"},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"delete"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"todo Ask for help"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"todo"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"list"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"deadline"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"deadline IP /by Thursday 2359"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"event"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"event Go to Singapore /at Friday 9pm"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"list"},{"lineNumber":12,"author":{"gitId":"patricktan6"},"content":"blah"},{"lineNumber":13,"author":{"gitId":"patricktan6"},"content":"done 2"},{"lineNumber":14,"author":{"gitId":"patricktan6"},"content":"list"},{"lineNumber":15,"author":{"gitId":"patricktan6"},"content":"haha"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"done"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"done 1"},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"done 3"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"delete 1"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"delete"},{"lineNumber":21,"author":{"gitId":"patricktan6"},"content":"delete 2"},{"lineNumber":22,"author":{"gitId":"patricktan6"},"content":"list"},{"lineNumber":23,"author":{"gitId":"patricktan6"},"content":"bye"}],"authorContributionMap":{"patricktan6":23}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"patricktan6"},"content":"if"},{"lineNumber":17,"author":{"gitId":"patricktan6"},"content":"  ! ("},{"lineNumber":18,"author":{"gitId":"patricktan6"},"content":"    find ../src/main/java -name \"*.java\" \u003esources.txt"},{"lineNumber":19,"author":{"gitId":"patricktan6"},"content":"    javac -cp ../src -Xlint:none -d ../bin @sources.txt"},{"lineNumber":20,"author":{"gitId":"patricktan6"},"content":"  )"},{"lineNumber":21,"author":{"gitId":"-"},"content":"then"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":24,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":30,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":34,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":35,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":36,"author":{"gitId":"-"},"content":"then"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":39,"author":{"gitId":"-"},"content":"else"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":42,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"patricktan6":5,"-":37}},{"path":"text-ui-test/sources.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"patricktan6"},"content":"../src/main/java/MissingTimeException.java"},{"lineNumber":2,"author":{"gitId":"patricktan6"},"content":"../src/main/java/Response.java"},{"lineNumber":3,"author":{"gitId":"patricktan6"},"content":"../src/main/java/Event.java"},{"lineNumber":4,"author":{"gitId":"patricktan6"},"content":"../src/main/java/MissingDescriptionException.java"},{"lineNumber":5,"author":{"gitId":"patricktan6"},"content":"../src/main/java/MissingNumberException.java"},{"lineNumber":6,"author":{"gitId":"patricktan6"},"content":"../src/main/java/Task.java"},{"lineNumber":7,"author":{"gitId":"patricktan6"},"content":"../src/main/java/Duke.java"},{"lineNumber":8,"author":{"gitId":"patricktan6"},"content":"../src/main/java/Deadline.java"},{"lineNumber":9,"author":{"gitId":"patricktan6"},"content":"../src/main/java/MissingDeadlineException.java"},{"lineNumber":10,"author":{"gitId":"patricktan6"},"content":"../src/main/java/Todo.java"},{"lineNumber":11,"author":{"gitId":"patricktan6"},"content":"../src/main/java/UnknownInputException.java"}],"authorContributionMap":{"patricktan6":11}}]
