[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "munharsha"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "munharsha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "munharsha": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "munharsha"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "munharsha"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    static ArrayList\u003cTask\u003e stringStore \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "munharsha"
        },
        "content": "            Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "munharsha"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "munharsha"
        },
        "content": "            System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "munharsha"
        },
        "content": "            System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "munharsha"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "munharsha"
        },
        "content": "            if (sc.hasNext()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                while (!input.equals(TaskElement.BYE.label)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                    try{"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                    if (input.equals(TaskElement.LIST.label)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        printLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        System.out.println(\" Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        int sizeStore \u003d stringStore.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        for (int i \u003d 1; i \u003c sizeStore + 1; i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                            System.out.println(i + \".\" + stringStore.get(i - 1));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        printLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                    } else if (input.split(\" \")[0].equals(TaskElement.DONE.label)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        int doneTask \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        if(doneTask + 1 \u003e stringStore.size() || doneTask \u003c 0){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                            throw new DukeInvalidDoneNumException(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        stringStore.get(doneTask).markAsDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                    } else if (input.split(\" \")[0].equals(TaskElement.TODO.label)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        if (input.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                            throw new DukeEmptyToDoException(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        String tasker \u003d stringBuilder(input.split(\" \"), 1, input.split(\" \").length - 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        Todo todoTask \u003d new Todo(tasker);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        stringStore.add(todoTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        printer(todoTask);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                    } else if (input.split(\" \")[0].equals(TaskElement.DEADLINE.label)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        if (input.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                            throw new DukeEmptyDeadlineException(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        String deadliner \u003d stringBuilder(input.split(\" \"), 1, input.split(\" \").length - 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        String[] deadlinerparts \u003d deadliner.split(\"/by\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        if(deadlinerparts.length \u003d\u003d 1){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                            throw new DukeEmptyDeadlineTImeException(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        Deadline deadlineTask \u003d new Deadline(deadlinerparts[0], deadlinerparts[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        stringStore.add(deadlineTask);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        printer(deadlineTask);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                    } else if (input.split(\" \")[0].equals(TaskElement.EVENT.label)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        if (input.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                            throw new DukeEmptyEventException(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        String eventer \u003d stringBuilder(input.split(\" \"), 1, input.split(\" \").length - 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        String[] eventParts \u003d eventer.split(\"/at\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        if (eventParts.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                            throw new DukeEmptyEventTimeException(input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        Event eventTask \u003d new Event(eventParts[0], eventParts[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        stringStore.add(eventTask);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        printer(eventTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                    } else if(input.split(\" \")[0].equals(TaskElement.DELETE.label)){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        int deleteTask \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        if(deleteTask + 1 \u003e stringStore.size() || deleteTask \u003c 0){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                            throw new DukeDeleteException(input);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        deletePrinter(stringStore.get(deleteTask));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        stringStore.remove(deleteTask);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        throw new DukeUnknownInputException(input);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                    }  catch (DukeUnknownInputException e){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        printLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        printLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                    } catch (DukeEmptyToDoException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        printLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        System.out.println(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        printLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                    } catch (DukeEmptyEventException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        printLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        System.out.println(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        printLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                    } catch (DukeEmptyDeadlineException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        printLine();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        System.out.println(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        printLine();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                    } catch (DukeInvalidDoneNumException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        printLine();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        System.out.println(\"OOPS!!! The invalid done number.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        printLine();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                    } catch (DukeEmptyDeadlineTImeException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        printLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        System.out.println(\"OOPS!!! The description of a deadline time cannot be empty.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        printLine();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                    } catch (DukeEmptyEventTimeException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        printLine();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        System.out.println(\"OOPS!!! The description of a event time cannot be empty.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        printLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                    } catch (DukeDeleteException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        printLine();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        System.out.println(\"OOPS!!! The invalid delete number.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        printLine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                    if (sc.hasNext()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                        input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    public static String stringBuilder(String[] arr, int start, int end){"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        String store \u003d \"\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        for (int i \u003d start; i \u003c\u003d end; i++) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "munharsha"
        },
        "content": "            if(i \u003d\u003d end){"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                store +\u003d arr[i];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "munharsha"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "munharsha"
        },
        "content": "                store +\u003d arr[i] + \" \";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "munharsha"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        return store;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    public static void printer(Task task){"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        System.out.println(\"Now you have \" + String.valueOf(stringStore.size()) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    public static void deletePrinter(Task task){"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        System.out.println(\"Now you have \" + String.valueOf(stringStore.size() - 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    public static void printLine(){"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        System.out.println(\" ____________________________________________________________\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "munharsha": 149,
      "-": 11
    }
  },
  {
    "path": "src/main/java/DukeDeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "munharsha"
        },
        "content": "public class DukeDeleteException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    DukeDeleteException(String s){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "munharsha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "munharsha": 5
    }
  },
  {
    "path": "src/main/java/DukeEmptyDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "munharsha"
        },
        "content": "public class DukeEmptyDeadlineException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    DukeEmptyDeadlineException(String s){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "munharsha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "munharsha": 5
    }
  },
  {
    "path": "src/main/java/DukeEmptyDeadlineTImeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "munharsha"
        },
        "content": "public class DukeEmptyDeadlineTImeException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    DukeEmptyDeadlineTImeException(String s){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "munharsha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "munharsha": 5
    }
  },
  {
    "path": "src/main/java/DukeEmptyEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "munharsha"
        },
        "content": "public class DukeEmptyEventException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    DukeEmptyEventException(String s){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "munharsha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "munharsha": 5
    }
  },
  {
    "path": "src/main/java/DukeEmptyEventTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "munharsha"
        },
        "content": "public class DukeEmptyEventTimeException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    DukeEmptyEventTimeException(String s){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "munharsha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "munharsha": 5
    }
  },
  {
    "path": "src/main/java/DukeEmptyToDoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "munharsha"
        },
        "content": "public class DukeEmptyToDoException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    DukeEmptyToDoException(String s){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "munharsha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "munharsha": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "munharsha"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    public DukeException(String s){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "munharsha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "munharsha": 5
    }
  },
  {
    "path": "src/main/java/DukeInvalidDoneNumException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "munharsha"
        },
        "content": "public class DukeInvalidDoneNumException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    DukeInvalidDoneNumException(String s){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "munharsha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "munharsha": 6
    }
  },
  {
    "path": "src/main/java/DukeUnknownInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "munharsha"
        },
        "content": "public class DukeUnknownInputException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    DukeUnknownInputException(String s){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "munharsha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "munharsha": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "munharsha"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "munharsha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "munharsha": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "munharsha"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        Duke.printLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        System.out.println(this);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        Duke.printLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "munharsha"
        },
        "content": "            return \"[\" + getStatusIcon()+ \"]\" + \" \" + description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "munharsha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "munharsha": 27
    }
  },
  {
    "path": "src/main/java/TaskElement.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "munharsha"
        },
        "content": "public enum TaskElement {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    DELETE(\"delete\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    public final String label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    private TaskElement(String label){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        this.label \u003d label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "munharsha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "munharsha": 16
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "munharsha"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "munharsha"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "munharsha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "munharsha": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "munharsha"
        },
        "content": "blah"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "munharsha"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "munharsha"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "munharsha"
        },
        "content": "deadline read book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "munharsha"
        },
        "content": "deadline return book /by Wednesday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "munharsha"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "munharsha"
        },
        "content": "event project meeting /at Sun 2-4pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "munharsha"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "munharsha"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "munharsha"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "munharsha"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "munharsha"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "munharsha"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "munharsha"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "munharsha"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "munharsha"
        },
        "content": "delete 9"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "munharsha"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "munharsha"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "munharsha": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "munharsha"
        },
        "content": "    rm help.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "munharsha"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "munharsha"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "munharsha"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "munharsha": 4,
      "-": 36
    }
  }
]
