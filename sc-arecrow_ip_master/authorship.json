[
  {
    "path": "src/main/java/viscount/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountDateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountMissingArgumentDescriptionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountMissingArgumentException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountMissingDescriptionException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountNumberFormatException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountUnknownCommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountUnsupportedOperationException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.TaskType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.temporal.TemporalAccessor;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public static final DateTimeFormatter INPUT_DATE_TIME_FORMATTER \u003d "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            DateTimeFormatter.ofPattern(\"dd-MM-yyyy[ HHmm]\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public static final DateTimeFormatter TASK_DATA_DATE_TIME_FORMATTER \u003d "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            DateTimeFormatter.ofPattern(\"yyyyMMdd HHmm\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public static final DateTimeFormatter OUTPUT_DATE_FORMATTER \u003d "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public static final DateTimeFormatter OUTPUT_DATE_TIME_FORMATTER \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public static Command parse(String rawCommand) throws ViscountException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cString\u003e arguments \u003d Arrays.asList(rawCommand.split(\" \"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String baseCommand \u003d arguments.get(0);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (baseCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            int onArgumentIndex \u003d arguments.indexOf(\"/on\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            String modifier \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            String dateString \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            if (onArgumentIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                modifier \u003d String.join(\" \", arguments.subList(1, arguments.size()));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                modifier \u003d String.join(\" \", arguments.subList(1, onArgumentIndex));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                dateString \u003d String.join(\" \", arguments.subList(onArgumentIndex + 1, arguments.size()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                if (modifier.equals(\"todo\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    throw new ViscountUnsupportedOperationException(\"/on\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                } else if (dateString.isEmpty()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    throw new ViscountMissingArgumentDescriptionException(\"/on\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            if (!modifier.isEmpty()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    TaskType.valueOf(modifier.toUpperCase());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    throw new ViscountUnknownCommandException(modifier);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return new ListCommand(modifier, dateString);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } else if (baseCommand.equals(\"todo\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            String description \u003d String.join(\" \", arguments.subList(1, arguments.size()));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            if (description.isEmpty()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountMissingDescriptionException(\"todo\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return new AddCommand(TaskType.TODO, description, null);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } else if (baseCommand.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            int dueDateIndex \u003d arguments.indexOf(\"/by\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            if (dueDateIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountMissingArgumentException(\"/by\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            String description \u003d String.join(\" \", arguments.subList(1, dueDateIndex));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            String dueDateString \u003d String.join(\" \", arguments.subList(dueDateIndex + 1, arguments.size()));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            if (description.isEmpty()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountMissingDescriptionException(\"deadline\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } else if (dueDateString.isEmpty()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountMissingArgumentDescriptionException(\"/by\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    LocalDateTime dueDate \u003d Parser.parseDateTime(dueDateString, INPUT_DATE_TIME_FORMATTER);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    return new AddCommand(TaskType.DEADLINE, description, dueDate);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    throw new ViscountDateTimeParseException(\"due date\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } else if (baseCommand.equals(\"event\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            int eventTimeIndex \u003d arguments.indexOf(\"/at\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            if (eventTimeIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountMissingArgumentException(\"/at\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            String description \u003d String.join(\" \", arguments.subList(1, eventTimeIndex));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            String eventTimeString \u003d String.join(\" \", arguments.subList(eventTimeIndex + 1, arguments.size()));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            if (description.isEmpty()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountMissingDescriptionException(\"event\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } else if (eventTimeString.isEmpty()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountMissingArgumentDescriptionException(\"/at\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    LocalDateTime eventTime \u003d Parser.parseDateTime(eventTimeString, INPUT_DATE_TIME_FORMATTER);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    return new AddCommand(TaskType.EVENT, description, eventTime);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    throw new ViscountDateTimeParseException(\"event date\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } else if (baseCommand.equals(\"done\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            if (arguments.size() \u003c 2) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountMissingArgumentException(\"task number\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            int taskIndex \u003d -1;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                taskIndex \u003d Integer.parseInt(arguments.get(1)) - 1;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                return new DoneCommand(taskIndex);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountNumberFormatException(arguments.get(1));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } else if (baseCommand.equals(\"delete\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            if (arguments.size() \u003c 2) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountMissingArgumentException(\"task number\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                int taskIndex \u003d -1;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    taskIndex \u003d Integer.parseInt(arguments.get(1)) - 1;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    return new DeleteCommand(taskIndex);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    throw new ViscountNumberFormatException(arguments.get(1));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } else if (baseCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountUnknownCommandException(baseCommand);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author sc-arecrow-reused"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    //Reused from https://stackoverflow.com/a/48281350 with minor modifications"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    public static LocalDateTime parseDateTime(String dateTimeString, DateTimeFormatter formatter)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            throws DateTimeParseException {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        LocalDateTime dateTime;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        TemporalAccessor ta \u003d formatter.parseBest(dateTimeString, LocalDateTime::from, LocalDate::from);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        if (ta instanceof LocalDateTime) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            dateTime \u003d (LocalDateTime) ta;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            dateTime \u003d ((LocalDate) ta).atStartOfDay();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 151,
      "-": 17
    }
  },
  {
    "path": "src/main/java/viscount/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountIOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.nio.file.StandardOpenOption;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private String filePathString;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Storage(String filePathString) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.filePathString \u003d filePathString;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void saveToDisk(List\u003cTask\u003e tasks) throws ViscountIOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Path filePath \u003d Paths.get(filePathString);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cString\u003e savedData \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            savedData.add(task.toTaskData());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            Files.write(filePath, savedData, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountIOException(\"saving\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public List\u003cTask\u003e loadFromDisk() throws ViscountIOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Path filePath \u003d Paths.get(filePathString);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        boolean doesFileExist \u003d Files.exists(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (doesFileExist) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                File f \u003d new File(filePathString);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                while (sc.hasNext()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    if (line.isEmpty()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        // If the data file has empty lines, skip them"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        List\u003cString\u003e taskData \u003d Arrays.asList(line.split(\"\\\\|\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        TaskType taskType \u003d TaskType.valueOf(taskData.get(0));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        boolean isDone \u003d !taskData.get(1).equals(\"0\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        String taskDescription \u003d taskData.get(2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        if (taskType \u003d\u003d TaskType.TODO) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                            tasks.add(new Todo(taskDescription, isDone));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        } else if (taskType \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                            LocalDateTime dueDate \u003d Parser.parseDateTime("
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                                    taskData.get(3), Parser.TASK_DATA_DATE_TIME_FORMATTER);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                            tasks.add(new Deadline(taskDescription, isDone, dueDate));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        } else if (taskType \u003d\u003d TaskType.EVENT) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                            LocalDateTime eventTime \u003d Parser.parseDateTime("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                                    taskData.get(3), Parser.TASK_DATA_DATE_TIME_FORMATTER);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                            tasks.add(new Event(taskDescription, isDone, eventTime));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountIOException(\"loading\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                Files.write(filePath, new ArrayList\u003cString\u003e(), StandardCharsets.UTF_8, StandardOpenOption.CREATE_NEW);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountIOException(\"creating a new file for\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 93
    }
  },
  {
    "path": "src/main/java/viscount/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void markDone(int taskIndex) throws ViscountIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            Task task \u003d tasks.get(taskIndex);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            task.setDone(true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountIndexOutOfBoundsException(taskIndex);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Task remove(int taskIndex) throws ViscountIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountIndexOutOfBoundsException(taskIndex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Task getTask(int taskIndex) throws ViscountIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return tasks.get(taskIndex);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountIndexOutOfBoundsException(taskIndex);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public int getTasksSize() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 51
    }
  },
  {
    "path": "src/main/java/viscount/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String VISCOUNT_LOGO \u003d"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            \"        _  _____  _____                  _    \\n\" + "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    \"       (_)/ ____|/ ____|                | |   \\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    \" __   ___| (___ | |     ___  _   _ _ __ | |_  \\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    \" \\\\ \\\\ / / |\\\\___ \\\\| |    / _ \\\\| | | | \u0027_ \\\\| __| \\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    \"  \\\\ V /| |____) | |___| (_) | |_| | | | | |_  \\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    \"   \\\\_/ |_|_____/ \\\\_____\\\\___/ \\\\__,_|_| |_|\\\\__|\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String HORIZONTAL_LINE \u003d \"__________________________________________________\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Ui(InputStream is) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.scanner \u003d new Scanner(is);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        System.out.println(Ui.VISCOUNT_LOGO);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        speak(\"Good day to you! I\u0027m Viscount.\\nWhat can I do for you on this blessed day?\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        speak(\"Farewell my friend, I hope to see you again!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void showList(List\u003cTask\u003e tasks, String modifier, String dateString) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String finalDateString \u003d dateString.isEmpty()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                ? dateString"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                : (\"occurring \" + (dateString.equals(\"today\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        ? dateString"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        : \"on \" + dateString) + \" \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        speak(String.format(\"Here are the %ss %sin your list:\\n%s\","
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                modifier.isEmpty() ? \"task\" : modifier,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                finalDateString,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                convertTaskListToString(tasks)));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void showAdd(Task task, int tasksSize) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        speak(String.format(\"Very well. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list.\","
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                task.toString(),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                tasksSize));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void showDone(Task task) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        speak(String.format(\"Very good! I have marked this task as done:\\n%s\", task.toString()));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void showDelete(Task task, int tasksSize) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        speak(String.format(\"Very well. I\u0027ve removed this task:\\n%s\\nNow you have %d tasks in the list.\","
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                task.toString(),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                tasksSize));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        speak(errorMessage);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private void speak(String message) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private String convertTaskListToString(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            result +\u003d (i \u003d\u003d tasks.size() - 1)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    ? String.format(\"%d.%s\", i + 1, tasks.get(i).toString())"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    : String.format(\"%d.%s\\n\", i + 1, tasks.get(i).toString());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 94
    }
  },
  {
    "path": "src/main/java/viscount/Viscount.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountIOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class Viscount {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String DATA_FILE_PATH \u003d System.getProperty(\"user.dir\") + \"/data/viscount.txt\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private boolean shouldRun;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Viscount(String filePathString) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.storage \u003d new Storage(filePathString);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            this.tasks \u003d new TaskList(storage.loadFromDisk());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            this.shouldRun \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } catch (ViscountIOException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            this.shouldRun \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                String rawInput \u003d ui.readInput();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                Command command \u003d Parser.parse(rawInput);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } catch (ViscountException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Viscount viscount \u003d new Viscount(DATA_FILE_PATH);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (viscount.shouldRun) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            viscount.run();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            viscount.exit();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 57
    }
  },
  {
    "path": "src/main/java/viscount/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private TaskType taskType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public AddCommand(TaskType taskType, String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws ViscountException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Task newTask \u003d getNewTask();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        storage.saveToDisk(tasks.getTasks());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        ui.showAdd(newTask, tasks.getTasksSize());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private Task getNewTask() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        switch(taskType) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            newTask \u003d new Todo(description, false);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            newTask \u003d new Deadline(description, false, dateTime);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            newTask \u003d new Event(description, false, dateTime);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 52
    }
  },
  {
    "path": "src/main/java/viscount/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws ViscountException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 10
    }
  },
  {
    "path": "src/main/java/viscount/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public DeleteCommand(int taskIndex) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws ViscountException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Task removedTask \u003d tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        storage.saveToDisk(tasks.getTasks());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        ui.showDelete(removedTask, tasks.getTasksSize());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 25
    }
  },
  {
    "path": "src/main/java/viscount/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public DoneCommand(int taskIndex) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws ViscountException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        tasks.markDone(taskIndex);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        storage.saveToDisk(tasks.getTasks());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        ui.showDone(tasks.getTask(taskIndex));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 24
    }
  },
  {
    "path": "src/main/java/viscount/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        // do nothing"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 16
    }
  },
  {
    "path": "src/main/java/viscount/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountDateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.TaskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private String modifier;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private String dateString;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ListCommand(String modifier, String dateString) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.modifier \u003d modifier;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.dateString \u003d dateString;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws ViscountException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Predicate\u003cTask\u003e filterByModifier \u003d task -\u003e modifier.isEmpty()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                || task.getTaskType() \u003d\u003d TaskType.valueOf(modifier.toUpperCase());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (dateString.isEmpty()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            List\u003cTask\u003e filteredTasks \u003d tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    .stream()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    .filter(filterByModifier)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            ui.showList(filteredTasks, modifier, dateString);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                LocalDateTime queriedDateTime \u003d dateString.equals(\"today\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        ? LocalDate.now().atStartOfDay()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        : Parser.parseDateTime(dateString, Parser.INPUT_DATE_TIME_FORMATTER);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                List\u003cTask\u003e filteredTasks \u003d tasks"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        .stream()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        .filter(Task::hasDateTime)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        .filter(filterByModifier)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        .filter(task -\u003e task.getDateTime().toLocalDate().isEqual(queriedDateTime.toLocalDate()))"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        .sorted(Comparator.comparing(Task::getDateTime))"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        .collect(Collectors.toList());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                ui.showList("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        filteredTasks, "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        modifier, "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        dateString.equals(\"today\") "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                                ? dateString "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                                : queriedDateTime.format(Parser.OUTPUT_DATE_FORMATTER));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountDateTimeParseException(\"date query\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 74
    }
  },
  {
    "path": "src/main/java/viscount/exception/ViscountDateTimeParseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountDateTimeParseException extends ViscountException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String DATE_ERROR_MESSAGE \u003d \"Alas, I do not understand. Please format your %s\\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            + \"in this format: dd-MM-yyyy\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            + \"For example: 23-08-2020\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String DATE_TIME_ERROR_MESSAGE \u003d \"Alas, I do not understand. Please format your %s\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            + \"in this format: dd-MM-yyyy HHmm\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            + \"For example: 23-08-2020 1300\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            + \"The time is optional and the default is 0000.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountDateTimeParseException(String dateTimeType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(dateTimeType.equals(\"date query\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                ? String.format(ViscountDateTimeParseException.DATE_ERROR_MESSAGE, dateTimeType)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                : String.format(ViscountDateTimeParseException.DATE_TIME_ERROR_MESSAGE, dateTimeType));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 18
    }
  },
  {
    "path": "src/main/java/viscount/exception/ViscountException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, I do apologise but I don\u0027t know what that means.\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(ViscountException.ERROR_MESSAGE);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountException(String errorMessage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 13
    }
  },
  {
    "path": "src/main/java/viscount/exception/ViscountIOException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountIOException extends ViscountException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, something went wrong with %s your data.\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountIOException(String ioAction) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(String.format(ViscountIOException.ERROR_MESSAGE, ioAction));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 9
    }
  },
  {
    "path": "src/main/java/viscount/exception/ViscountIndexOutOfBoundsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountIndexOutOfBoundsException extends ViscountException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, your task list does not contain a task number %d.\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountIndexOutOfBoundsException(int index) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(String.format(ViscountIndexOutOfBoundsException.ERROR_MESSAGE, index + 1));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 9
    }
  },
  {
    "path": "src/main/java/viscount/exception/ViscountMissingArgumentDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountMissingArgumentDescriptionException extends ViscountException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, the description of the %s argument cannot be empty.\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountMissingArgumentDescriptionException(String argument) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(String.format(ViscountMissingArgumentDescriptionException.ERROR_MESSAGE, argument));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 9
    }
  },
  {
    "path": "src/main/java/viscount/exception/ViscountMissingArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountMissingArgumentException extends ViscountException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, you need to specify the %s argument.\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountMissingArgumentException(String missingArgument) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(String.format(ViscountMissingArgumentException.ERROR_MESSAGE, missingArgument));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 9
    }
  },
  {
    "path": "src/main/java/viscount/exception/ViscountMissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountMissingDescriptionException extends ViscountException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, the description of a %s cannot be empty.\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountMissingDescriptionException(String taskType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(String.format(ViscountMissingDescriptionException.ERROR_MESSAGE, taskType));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 9
    }
  },
  {
    "path": "src/main/java/viscount/exception/ViscountNumberFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountNumberFormatException extends ViscountException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, \u0027%s\u0027 is not a valid task number.\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountNumberFormatException(String argument) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(String.format(ViscountNumberFormatException.ERROR_MESSAGE, argument));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 9
    }
  },
  {
    "path": "src/main/java/viscount/exception/ViscountUnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountUnknownCommandException extends ViscountException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, I do apologise but I don\u0027t know what \u0027%s\u0027 means.\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountUnknownCommandException(String command) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(String.format(ViscountUnknownCommandException.ERROR_MESSAGE, command));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 9
    }
  },
  {
    "path": "src/main/java/viscount/exception/ViscountUnsupportedOperationException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountUnsupportedOperationException extends ViscountException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, this command does not support %s.\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountUnsupportedOperationException(String command) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(String.format(ViscountUnsupportedOperationException.ERROR_MESSAGE, command));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 9
    }
  },
  {
    "path": "src/main/java/viscount/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String STRING_FORMAT \u003d \"[D][%s] %s (by: %s)\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String TASK_DATA_FORMAT \u003d \"%s|%d|%s|%s\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private LocalDateTime dueDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDateTime dueDate) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(TaskType.DEADLINE, description, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public boolean hasDateTime() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toTaskData() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(Deadline.TASK_DATA_FORMAT, taskType.name(), isDone ? 1 : 0, description,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                dueDate.format(Parser.TASK_DATA_DATE_TIME_FORMATTER));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(Deadline.STRING_FORMAT, getStatusIcon(), description, "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                dueDate.format(Parser.OUTPUT_DATE_TIME_FORMATTER));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 39
    }
  },
  {
    "path": "src/main/java/viscount/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String STRING_FORMAT \u003d \"[E][%s] %s (at: %s)\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String TASK_DATA_FORMAT \u003d \"%s|%d|%s|%s\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private LocalDateTime eventTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Event(String description, boolean isDone, LocalDateTime eventTime) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(TaskType.EVENT, description, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public boolean hasDateTime() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return eventTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toTaskData() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(Event.TASK_DATA_FORMAT, taskType.name(), isDone ? 1 : 0, description,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                eventTime.format(Parser.TASK_DATA_DATE_TIME_FORMATTER));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(Event.STRING_FORMAT, getStatusIcon(), description, "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                eventTime.format(Parser.OUTPUT_DATE_TIME_FORMATTER));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 39
    }
  },
  {
    "path": "src/main/java/viscount/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Task(TaskType taskType, String description, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        //return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public abstract String toTaskData();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public abstract boolean hasDateTime();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public abstract LocalDateTime getDateTime();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 33
    }
  },
  {
    "path": "src/main/java/viscount/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    TODO, "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    EVENT;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 7
    }
  },
  {
    "path": "src/main/java/viscount/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String STRING_FORMAT \u003d \"[T][%s] %s\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String TASK_DATA_FORMAT \u003d \"%s|%d|%s\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(TaskType.TODO, description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public boolean hasDateTime() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        throw new UnsupportedOperationException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toTaskData() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(Todo.TASK_DATA_FORMAT, taskType.name(), isDone ? 1 : 0, description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(Todo.STRING_FORMAT, getStatusIcon(), description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 32
    }
  },
  {
    "path": "src/test/java/viscount/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import org.junit.jupiter.api.DisplayName;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import org.junit.jupiter.params.ParameterizedTest;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import org.junit.jupiter.params.provider.ValueSource;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final List\u003cTask\u003e DEFAULT_TASKS \u003d Arrays.asList("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Todo(\"t1\", false),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Deadline(\"t2\", true, LocalDateTime.of(2020, 8, 24, 10, 0)),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Deadline(\"t3\", false, LocalDateTime.of(2020, 8, 27, 11, 0)),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Event(\"t4\", true, LocalDateTime.of(2020, 8, 24, 11, 0)),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Event(\"t5\", false, LocalDateTime.of(2020, 8, 27, 12, 0)));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @DisplayName(\"Add task\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void addTask_newTask_success() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e testedCopy \u003d new ArrayList\u003c\u003e(DEFAULT_TASKS);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e expectedResult \u003d new ArrayList\u003c\u003e(DEFAULT_TASKS);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Task newTask \u003d new Todo(\"t6\", false);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        TaskList taskList \u003d new TaskList(testedCopy);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        expectedResult.add(newTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e actualResult \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assertArrayEquals(expectedResult.toArray(), actualResult.toArray());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @ParameterizedTest"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @ValueSource(ints \u003d {0, 2, 4})"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @DisplayName(\"Mark task as done with valid input\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void markDone_validInput_success(int taskIndex) throws ViscountIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e testedCopy \u003d new ArrayList\u003c\u003e(DEFAULT_TASKS);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e expectedResult \u003d new ArrayList\u003c\u003e(DEFAULT_TASKS);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        TaskList taskList \u003d new TaskList(testedCopy);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        taskList.markDone(taskIndex);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        expectedResult.get(taskIndex).setDone(true);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e actualResult \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assertArrayEquals(expectedResult.toArray(), actualResult.toArray());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @ParameterizedTest"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @ValueSource(ints \u003d {0, 2, 4})"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @DisplayName(\"Remove task with valid input\")"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void removeTask_validInput_success(int taskIndex) throws ViscountIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e testedCopy \u003d new ArrayList\u003c\u003e(DEFAULT_TASKS);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e expectedResult \u003d new ArrayList\u003c\u003e(DEFAULT_TASKS);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        TaskList taskList \u003d new TaskList(testedCopy);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        taskList.remove(taskIndex);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        expectedResult.remove(taskIndex);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e actualResult \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assertArrayEquals(expectedResult.toArray(), actualResult.toArray());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @ParameterizedTest"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @ValueSource(ints \u003d {0, 2, 4})"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @DisplayName(\"Get task with valid input\")"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void getTask_validInput_success(int taskIndex) throws ViscountIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e testedCopy \u003d new ArrayList\u003c\u003e(DEFAULT_TASKS);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e expectedCopy \u003d new ArrayList\u003c\u003e(DEFAULT_TASKS);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        TaskList taskList \u003d new TaskList(testedCopy);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Task expectedResult \u003d expectedCopy.get(taskIndex);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Task actualResult \u003d taskList.getTask(taskIndex);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 95
    }
  },
  {
    "path": "src/test/java/viscount/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import org.junit.jupiter.api.DisplayName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import org.junit.jupiter.params.ParameterizedTest;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import org.junit.jupiter.params.provider.ValueSource;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.*;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String VISCOUNT_LOGO \u003d \"        _  _____  _____                  _    \\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            \"       (_)/ ____|/ ____|                | |   \\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            \" __   ___| (___ | |     ___  _   _ _ __ | |_  \\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            \" \\\\ \\\\ / / |\\\\___ \\\\| |    / _ \\\\| | | | \u0027_ \\\\| __| \\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            \"  \\\\ V /| |____) | |___| (_) | |_| | | | | |_  \\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            \"   \\\\_/ |_|_____/ \\\\_____\\\\___/ \\\\__,_|_| |_|\\\\__|\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String HORIZONTAL_LINE \u003d \"__________________________________________________\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String TICK_ICON \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String CROSS_ICON \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final List\u003cTask\u003e DEFAULT_TASKS \u003d Arrays.asList("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Todo(\"t1\", false),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Deadline(\"t2\", true, LocalDateTime.of(2020, 8, 24, 10, 0)),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Deadline(\"t3\", false, LocalDateTime.of(2020, 8, 27, 11, 0)),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Event(\"t4\", true, LocalDateTime.of(2020, 8, 24, 11, 0)),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Event(\"t5\", false, LocalDateTime.of(2020, 8, 27, 12, 0)));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author sc-arecrow-reused"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    //Reused from https://www.baeldung.com/java-testing-system-out-println with minor modifications"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    private final InputStream standardIn \u003d System.in;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private final PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public void tearDown() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        System.setOut(standardOut);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @DisplayName(\"Show welcome message\")"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void showWelcome_invokeMethod_success() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        new Ui().showWelcome();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String welcomeMessage \u003d \"Good day to you! I\u0027m Viscount.\\nWhat can I do for you on this blessed day?\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String expectedResult \u003d VISCOUNT_LOGO + System.lineSeparator() + putInChatBox(welcomeMessage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assertEquals(expectedResult, outputStreamCaptor.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @DisplayName(\"Show exit message\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void showExit_inputCommand_success() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        new Ui().showExit();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String exitMessage \u003d \"Farewell my friend, I hope to see you again!\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String expectedResult \u003d putInChatBox(exitMessage);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assertEquals(expectedResult, outputStreamCaptor.toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @ParameterizedTest"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @ValueSource(strings \u003d {\"list\", \"todo t1\", \"deadline t2 /by 24-08-2020 1000\", \" \"})"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @DisplayName(\"Read input message\")"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void readInput_inputCommand_success(String command) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        ByteArrayInputStream inputStreamCaptor \u003d new ByteArrayInputStream(command.getBytes());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String expectedResult \u003d command;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String actualResult \u003d new Ui(inputStreamCaptor).readInput();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static String putInChatBox(String message) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return HORIZONTAL_LINE + System.lineSeparator() +"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                message + System.lineSeparator() +"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                HORIZONTAL_LINE + System.lineSeparator() +"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                System.lineSeparator();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 84,
      "-": 16
    }
  },
  {
    "path": "text-ui-test/input1.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "blah"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "todo t1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "deadline t2 /by"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "deadline t2 /by wednesday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "deadline t2 /by 23-08-2020 1400"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "deadline t3 /by 26-08-2020"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 10
    }
  },
  {
    "path": "text-ui-test/input2.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "event"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "event t4 /at"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "event t4 /at 6pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "event t4 /at 23-08-2020 1800"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "event t5 /at 26-08-2020 1900"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list blah"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list /on"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list todo /on"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list /on 26-08-2020"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list deadline /on today"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list event /on 26-08-2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "done a"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 24
    }
  },
  {
    "path": "text-ui-test/input3.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "delete"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "delete a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "REM run the program, feed commands from the input files and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "java -classpath ..\\bin viscount.Viscount \u003c input1.txt \u003e\u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "java -classpath ..\\bin viscount.Viscount \u003c input2.txt \u003e\u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "java -classpath ..\\bin viscount.Viscount \u003c input3.txt \u003e\u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "REM delete data afterwards"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "del data\\viscount.txt"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 8,
      "-": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/viscount/*.java ../src/main/java/viscount/command/*.java ../src/main/java/viscount/exception/*.java ../src/main/java/viscount/task/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "# run the program, feed commands from input files and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "java -classpath ../bin viscount.Viscount \u003c input1.txt \u003e\u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "java -classpath ../bin viscount.Viscount \u003c input2.txt \u003e\u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "java -classpath ../bin viscount.Viscount \u003c input3.txt \u003e\u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "# delete data afterwards"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "if [ -e \"data/viscount.txt\" ]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "then"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    rm data/viscount.txt"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "fi"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 11,
      "-": 35
    }
  }
]
