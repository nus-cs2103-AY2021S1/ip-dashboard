{
  "authorDailyContributionsMap": {
    "kkangs0226": [
      {
        "date": "2020-08-18",
        "commitResults": [
          {
            "hash": "469e0bdab069e14e092ff6f4e3f3ba34f320f03e",
            "messageTitle": "Add Level 1 features greet, echo, exit",
            "messageBody": "There is a basic greeting feature but no echo and exit features.\n\nA more personlized chat bot with a unique logo and tone will be more fun.\n\nLet\u0027s\n* add echo and exit features\n* change the logo and tone of the chat bot\n",
            "tags": [
              "Level-1"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 47,
                "deletions": 6
              }
            }
          },
          {
            "hash": "13587f27ab0a8415ca3e6be5201391b8f59cab59",
            "messageTitle": "Add Level 2 features add, list",
            "messageBody": "The chat bot can only echo commands, is unable to store user input.\n\nAdding add and list feature would allow chat bot to store user input\nand display past input of user on demand, engaging user.\n\nLet\u0027s\n* implement add and list feature\n",
            "tags": [
              "Level-2"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 23,
                "deletions": 3
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-20",
        "commitResults": [
          {
            "hash": "593a729a8ddfc46566bef9d831477c8a0072d32e",
            "messageTitle": "Add Level 3 feature \u0027mark as done\u0027",
            "messageBody": "User can only add tasks but cannot mark a task as done.\n\nAdding this future allows users to give \u0027done\u0027 command which\nmakes chat bot more useful to users when keeping track of their\ntasks.\n\nLet\u0027s\n* add \u0027mark as done\u0027 feature\n* add error catching methods to show error message when done command\n  is executed with out of bounds index or a non-integer\n",
            "tags": [
              "Level-3"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 77,
                "deletions": 7
              }
            }
          },
          {
            "hash": "32ffe6e29473f24944da6c7c60cdb9f8cb77ce81",
            "messageTitle": "Add Level 4 features todos, events, dealines",
            "messageBody": "User can only add one type of task, and cannot differentiate between\ndifferent types of tasks in their list.\n\nAdding child classes to Task - Todo, Event, Deadline would help user\nadd different types of tasks to their list. Printing the number of\ntasks in the user\u0027s list after addition of every task will also improve\nuser experience.\n\nLet\u0027s\n* implement child classes of Task - Todo, Event, Deadline\n* add a method to print the  number of tasks in the message after adding\n  every task to the list\n",
            "tags": [
              "Level-4"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 121,
                "deletions": 31
              }
            }
          },
          {
            "hash": "93da97d3ae8808a06cf8b0be6ccfaa9f68a532e8",
            "messageTitle": "Add Automated Text UI Testing",
            "messageBody": "Chat bot has no automated testing function and requires testing through\nindividual commands.\n\nAdding automated testing function would allow faster and more efficient\ntesting of the chat bot.\n\nLet\u0027s\n* add automated text UI testing to the program using I/O redirection\ntechnique\n",
            "tags": [
              "A-TextUiTesting"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 5,
                "deletions": 0
              },
              "sh": {
                "insertions": 2,
                "deletions": 2
              }
            }
          },
          {
            "hash": "5e8b48186ca5a8c3aa1d6fe0e5b667f24cb56eea",
            "messageTitle": "Add Level 5 feature error handling",
            "messageBody": "Chat bot is unable to handle invalid user input and throws exception,\nwhich affects user experience.\n\nImplementing a DukeException to handle invalid input would improve user\nexperience as customisation of error messages is possible.\n\nLet\u0027s\n* create a DukeException class to deal with invalid input\n* handle invalid done command with out of bounds index\n* handle invalid task command\n* handle empty todo command\n",
            "tags": [
              "Level-5"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 3,
                "deletions": 5
              },
              "java": {
                "insertions": 2,
                "deletions": 0
              }
            }
          },
          {
            "hash": "7597fb4d8a0f397872bd865139109f961c96cc87",
            "messageTitle": "Add Level 6 feature delete",
            "messageBody": "Chat bot only allows for adding tasks but does not support deletion\nof tasks.\n\nAdding a delete feature to the chat bot would make it more useful\nto users.\n\nLet\u0027s\n* add a new delete method to handle delete command\n* add a new delete message to print to user when a task is deleted\n",
            "tags": [
              "Level-6"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 11,
                "deletions": 3
              },
              "java": {
                "insertions": 79,
                "deletions": 43
              }
            }
          },
          {
            "hash": "23e6f22f392e3041fce9e34b0e64491496fb463d",
            "messageTitle": "Implement enums for commands",
            "messageBody": "Code in main Duke class is long because of multiple boolean methods to check\ntype of command.\n\nUsing enums will shorten code and make it more readable.\n\nLet\u0027s\n* implement InputCommands enum to represent command type\n",
            "tags": [
              "A-Enums"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 54,
                "deletions": 58
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-26",
        "commitResults": [
          {
            "hash": "4d5631fef786b62c2d3ed07a8392f252cf103696",
            "messageTitle": "Add Level 7 save feature",
            "messageBody": "Any changes made to the list of tasks does not get saved, and every run\nof the program would give an empty list at the start, which is not\nuseful to the user.\n\nAdding save feature would allow the program to save the changes to\nthe list of tasks from the previous run of the program.\n\nLet\u0027s\n* save the list of tasks in a duke.txt file under data folder\n  every time there are changes to the list of tasks\n* read data from the duke.txt file at the start of the program\n  run so that the data from previous program can be called and\n  used in the program\n",
            "tags": [
              "Level-7"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 4,
                "deletions": 0
              },
              "java": {
                "insertions": 143,
                "deletions": 34
              }
            }
          },
          {
            "hash": "7ac8adba42262c47cc34d01c5c9a7afc39597726",
            "messageTitle": "Add Level 8 features dates and times",
            "messageBody": "The chat bot accepts the date/time as a string input from user,\nwhich means meaningful storage of  dates is not possible as there\nis no conversion of the string input to date object.\n\nImporting LocalDate class and storing string input by users as a\nDate object will help chat bot understand date better and do more\nmeaningful operations with date.\n\nLet\u0027s\n* import LocalDate class and store deadline/event dates as a\n  LocalDate object in task objects\n* implement new command that prints deadlines/events occurring on\n  the date given as string input by user\n",
            "tags": [
              "Level-8"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 9,
                "deletions": 8
              },
              "java": {
                "insertions": 69,
                "deletions": 43
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-27",
        "commitResults": [
          {
            "hash": "9ac06ef2491bbb01f9ee259d22f119d8bf5c8ef4",
            "messageTitle": "Add MoreOOP feature",
            "messageBody": "The methods are not abstracted enough.\n\nAdding more OOP concepts into my code by abstracting classes and\nmethods will improve readability.\n\nLet\u0027s\n* create Parser, Storage, TaskList, Ui classes to abstract code\n* create *Command classes that inherit from abstract Command class\n",
            "tags": [
              "A-MoreOOP"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 2,
                "deletions": 4
              },
              "java": {
                "insertions": 460,
                "deletions": 255
              }
            }
          },
          {
            "hash": "228a0512deedf1fb4e7a50f2ee5953861c7ca0f9",
            "messageTitle": "Add A-Packages",
            "messageBody": "Projet code is unorganised because it is not packaged properly.\n\nPackaging code into different packages will make the code more\norganised.\n\nLet\u0027s\n* create package duke\n* create sub-packages task and command to group different files\n  together\n",
            "tags": [
              "A-Packages"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 2,
                "deletions": 0
              },
              "java": {
                "insertions": 81,
                "deletions": 3
              },
              "bat": {
                "insertions": 2,
                "deletions": 2
              },
              "sh": {
                "insertions": 1,
                "deletions": 1
              },
              "md": {
                "insertions": 2,
                "deletions": 2
              }
            }
          },
          {
            "hash": "32512e03faf6765f78203d9ef80a843d69eb84f2",
            "messageTitle": "Add A-JUnit",
            "messageBody": "Code does not have any JUnit tests.\n\nAdding JUnit tests would improve efficiency when finding\nerrors in code.\n\nLet\u0027s\n* add some JUnit tests to test creation of file strings for\n  Todo, Event and Deadline tasks.\n* add JUnit tests to test whether DukeException is thrown for\n  invalid add commands\n",
            "tags": [
              "A-JUnit"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 36,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-28",
        "commitResults": [
          {
            "hash": "d33163482590b285f0d76d8f25552e7819c0e5fa",
            "messageTitle": "Add JavaDocs to code",
            "messageBody": "Code now has no description to explain what the methods and\nclasses do.\n\nAdding JavaDocs would help readers understand code better.\n\nLet\u0027s\n* add JavaDocs to public classes and methods\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 298,
                "deletions": 58
              }
            }
          },
          {
            "hash": "5b4ffbf4597b77a4bebb8c7f86ab0d861d81be2e",
            "messageTitle": "Add Level-9 find feature",
            "messageBody": "Code does not contain class and methods for keyword search\nfunction.\n\nAdding find feature would allow users to find tasks more\nefficiently.\n\nLet\u0027s\n* add create FindCommand class to represent find command\n  and add methods accordingly.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 40,
                "deletions": 2
              }
            }
          },
          {
            "hash": "89ec51f813898233f3480c3bb89b0a05bdc2fe46",
            "messageTitle": "Merge branch \u0027branch-A-CodingStandard\u0027",
            "messageBody": "Branch for coding standard not yet merged into master branch.\n\nLet\u0027s\n* merge branch-A-CodingStandard into master branch\n",
            "tags": [
              "A-CodingStandard"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 34,
                "deletions": 20
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-01",
        "commitResults": [
          {
            "hash": "9f7dfcfe294fe6dc179c2f41d453ef37dfd093ac",
            "messageTitle": "Fix runtest.sh bugs",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 5,
                "deletions": 7
              },
              "java": {
                "insertions": 12,
                "deletions": 3
              },
              "bat": {
                "insertions": 3,
                "deletions": 3
              },
              "sh": {
                "insertions": 3,
                "deletions": 7
              },
              "md": {
                "insertions": 2,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-02",
        "commitResults": [
          {
            "hash": "21a97e9c14b51c4a0792974bd091aab34cce9816",
            "messageTitle": "Add checkstyle configurations",
            "messageBody": "Project now does not have checkstyle configurations.\n\nAdding checkstyle configurations will allow users to run\ncheckstyle locally.\n\nLet\u0027s\n* add checkstyle configurations\n",
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 1,
                "deletions": 1
              }
            }
          },
          {
            "hash": "cbea8ef1792270189edb61f1ea4d25d067b60352",
            "messageTitle": "Update code to follow checkstyle.",
            "messageBody": "Code has a few coding style violations.\n\nUpdating code to follow checkstyle would make the code follow\nthe conventional coding style and would make code more readable.\n\nLet\u0027s\n* use checkstyle on all files to find checkstyle errors\n* update code accordingly to follow checkstyle\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 116,
                "deletions": 56
              }
            }
          },
          {
            "hash": "d5fe2ec0cb0f06b473dbd12c86428e11a5f9d0f9",
            "messageTitle": "Add GUI to Chat Bot",
            "messageBody": "The Chat bot now is a command line app.\n\nAdding GUI would make it more visually appealing and interactive.\n\nLet\u0027s\n* add GUI features using javafx\n",
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 15,
                "deletions": 1
              },
              "txt": {
                "insertions": 1,
                "deletions": 2
              },
              "fxml": {
                "insertions": 35,
                "deletions": 0
              },
              "java": {
                "insertions": 248,
                "deletions": 104
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-09",
        "commitResults": [
          {
            "hash": "a7cc803c0aac8265774b4acfdd3433a771985a52",
            "messageTitle": "Create jar file",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 1,
                "deletions": 1
              },
              "txt": {
                "insertions": 0,
                "deletions": 1
              }
            }
          },
          {
            "hash": "b9fba52acce8860be8a3ea769ad891dc8fbe5f0f",
            "messageTitle": "Add assertions to program",
            "messageBody": "Program does not have assertions to verify the truth of certain\nassumptions.\n\nAdding assertions would help document important assumptions that\nshould hold at certain points in code.\n\nLet\u0027s add assertions to program.\n",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 2,
                "deletions": 2
              },
              "java": {
                "insertions": 47,
                "deletions": 10
              }
            }
          },
          {
            "hash": "ac1f9305c12c586e0506dbd177c3eb9b40aee749",
            "messageTitle": "Improve code quality",
            "messageBody": "Code does not comply with some coding standards.\n\nRefactoring code to comply with coding standards\nwould improve quality of code.\n\nLet\u0027s\n* check code quality using Java coding conventions\n* refactor code where necessary\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 33,
                "deletions": 30
              }
            }
          },
          {
            "hash": "3c17295293802e179aab9ca8342febb31dc50ead",
            "messageTitle": "Add extension for detecting duplicates",
            "messageBody": "Program unable to detect duplicates.\n\nLet\u0027s add methods to detect duplicates.\n",
            "tags": [
              "BCD-Extension"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 2,
                "deletions": 2
              },
              "java": {
                "insertions": 35,
                "deletions": 17
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-10",
        "commitResults": [
          {
            "hash": "749aaa8db9613edf0c6e77d0bfd87eb778576162",
            "messageTitle": "Add streams and lambda to code",
            "messageBody": "Program does not use lambdas and streams.\n\nUsing lambdas and streams will shorten code.\n\nLet\u0027s add lambdas and streams to program where\napplicable.\n",
            "tags": [
              "A-Streams",
              "A-Lambdas"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 0,
                "deletions": 1
              },
              "java": {
                "insertions": 12,
                "deletions": 4
              }
            }
          }
        ]
      }
    ]
  },
  "authorFileTypeContributionMap": {
    "kkangs0226": {
      "java": 1291,
      "md": 1,
      "fxml": 35,
      "sh": 3,
      "bat": 0,
      "gradle": 16,
      "txt": 19
    }
  },
  "authorContributionVariance": {
    "kkangs0226": 47609.215
  },
  "authorDisplayNameMap": {
    "kkangs0226": "CS2103T-T10-1 KANG.. MIN"
  }
}
