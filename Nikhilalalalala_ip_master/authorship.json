[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    public String getTypeOfTask() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        return \"deadline\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        return \"[D] [\" + this.getStatusIcon() + \"] \" + this.description + \" ----- By: \" + this.date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nikhilalalalala": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "import main.java.Logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    private Logic logic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    Duke() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        this.logic \u003d new Logic();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        Duke mrduke \u003d new Duke();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        mrduke.initialize();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        String INITIAL_PRINTING \u003d logo + \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        System.out.println(INITIAL_PRINTING);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        this.run();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        boolean toContinue;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            String answer \u003d sc.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            toContinue \u003d this.logic.digestString(answer);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        } while (toContinue);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 9,
      "Nikhilalalalala": 24
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "class DukeGotNoArgumentsException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    public DukeGotNoArgumentsException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        super(\"Please reenter your tasks in the format \" + message + \"\\nFill in all blanks.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "class DukeCannotUnderstandException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    public DukeCannotUnderstandException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        super(\"Hmm I did not understand what you meant.\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                \"Could you try again?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nikhilalalalala": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    public String getTypeOfTask() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        return \"event\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        return \"[E] [\" + this.getStatusIcon() + \"] \" + this.description + \" ----- When: \" + this.date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nikhilalalalala": 19
    }
  },
  {
    "path": "src/main/java/Logic.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "public class Logic {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    private Store store;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    private final String line \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    public Logic() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        this.store \u003d new Store();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    enum COMMANDS {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        TODO(\"todo\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        EVENT(\"event\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        LIST(\"list\"),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        EXIT(\"bye\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        DONE(\"done\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        DELETE(\"delete\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        ;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        private String text;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        COMMANDS(String text) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            this.text \u003d text;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "//    private final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "//    private final String EXIT_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "//    private final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "//    private final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "//    private final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "//    private final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "//    private final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    public boolean digestString(String answer) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            String edittedAnswer \u003d answer.strip().toLowerCase();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            String[] answers \u003d answer.split(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            if (answers.length \u003d\u003d 2 \u0026\u0026 answers[0].equals(COMMANDS.DONE.text)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                return store.completeTask(answers[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            } else if (answers.length \u003d\u003d 2 \u0026\u0026 answers[0].equals(COMMANDS.DELETE.text)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                return store.deleteTask(answers[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            }  else if (edittedAnswer.equals(COMMANDS.LIST.text)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                return this.store.printStore();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            } else if (edittedAnswer.equals(COMMANDS.EXIT.text)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                return this.exit();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            } else if (answers[0].equals(COMMANDS.TODO.text) ||"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                    answers[0].equals(COMMANDS.DEADLINE.text) ||"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                    answers[0].equals(COMMANDS.EVENT.text) ) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                return this.understandingTask(answer);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                throw new DukeCannotUnderstandException();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        } catch (DukeCannotUnderstandException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            System.out.println(e.getMessage() + \"\\n\" + line);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    private boolean understandingTask(String answer) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            String[] answers \u003d answer.split(\" \", 2);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            if (answers.length \u003e 1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                this.store.addToStore(answers[0], answers[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                // no description"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                String instruction \u003d  \"\u003ctype of task\u003e \u003cdescription\u003e\" ;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                if (answers[0].equals(COMMANDS.DEADLINE.text)) instruction \u003d \"\u003ctype of task\u003e \u003cdescription\u003e / \u003cdue date\u003e\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                else if (answers[0].equals(COMMANDS.EVENT.text)) instruction \u003d \"\u003ctype of task\u003e \u003cdescription\u003e / \u003cdate of event\u003e\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                throw new DukeGotNoArgumentsException(instruction);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        } catch (DukeGotNoArgumentsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            System.out.println(e.getMessage() + \"\\n\" + line);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    private boolean exit() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        System.out.println(\"Bye! See you later :)\" );"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nikhilalalalala": 85
    }
  },
  {
    "path": "src/main/java/Store.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "public class Store {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    private List\u003cTask\u003e allItems;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    private final String line \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    enum TYPES {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        TODO (\"todo\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        EVENT (\"event\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        ;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        private String text;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        TYPES(String text) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            this.text \u003d text;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "//    private final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "//    private final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "//    private final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    Store() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        this.allItems \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    public void addToStore(String type, String item) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            String actual_item \u003d item.strip();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        Task toAdd;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            if (type.equals(TYPES.TODO.text)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            toAdd \u003d new Task(actual_item);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            this.addTask(toAdd);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            String[] partsOfTask \u003d actual_item.split(\"/\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            if (partsOfTask.length !\u003d 2) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                String instruction \u003d \"\u003ctype of task\u003e \u003cdescription\u003e / \u003cdeadline\u003e\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                if (type.equals(TYPES.EVENT.text)) instruction \u003d \"\u003ctype of task\u003e \u003cdescription\u003e / \u003cdate of event\u003e\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                throw new DukeGotNoArgumentsException(instruction);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                String description \u003d partsOfTask[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                String duedate \u003d partsOfTask[1];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                if (type.equals(TYPES.DEADLINE.text)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                    toAdd \u003d new Deadline(description.strip(), duedate.strip());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                    this.addTask(toAdd);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                } else if (type.equals(TYPES.EVENT.text)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                    toAdd \u003d new Event(description.strip(), duedate.strip());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                    this.addTask(toAdd);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                    // should not reach here"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                    System.out.println(\"It\u0027s not you, it\u0027s me. Something went wrong\\n\" +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                            \"Please try again.\\n\" + line);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        } catch (DukeGotNoArgumentsException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            System.out.println(e.getMessage() + \"\\n\" + line);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    private void addTask(Task toAdd) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        this.allItems.add(toAdd);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        System.out.println(\"Alright, its in your list now!\\n\\t\" + toAdd +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                \"\\nNow you have \" + this.allItems.size() + \" tasks.\\n\" + line);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    public boolean printStore() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        String printList;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        if (this.allItems.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            printList \u003d \"There are no tasks added till now.\\nAdd one by just typing its name.\\n\" + line;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            printList \u003d \"Please finish these tasks ASAP!\\n\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            for (Task task: this.allItems) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                printList \u003d printList.concat(\"[\" + counter + \"] \" + task + \"\\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            printList \u003d printList.concat(\"If you\u0027re brave enough to start,\\n\" + \"You\u0027re strong enough to finish it!\\n\" + line);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        System.out.println(printList);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    public boolean completeTask(String answer) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            Integer oneIndex \u003d Integer.valueOf(answer);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            Integer realIndex \u003d oneIndex - 1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            Task toComplete \u003d this.allItems.get(realIndex);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            toComplete.finishTask();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            System.out.println(\"I can\u0027t seem to understand what task you are referring to.\\n\" +"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                    \"Please let me know in this format: done \u003cnumber of task\u003e\\n\" + line);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            System.out.println(\"Hmm... I don\u0027t have a task numbered \" + answer + \"\\n\" + line);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    public boolean deleteTask(String answer) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            int oneIndex \u003d Integer.parseInt(answer);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            int realIndex \u003d oneIndex - 1;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            this.allItems.remove(realIndex);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            System.out.println(\"I have removed the task from your list.\\n\" + line);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            System.out.println(\"I can\u0027t seem to understand what task you are referring to.\\n\" +"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "                    \"Please let me know in this format: done \u003cnumber of task\u003e\\n\" + line);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            System.out.println(\"Hmm... I don\u0027t have a task numbered \" + answer + \"\\n\" + line);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nikhilalalalala": 115
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    private final String line \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    public void finishTask() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            System.out.println(\"Task is already done!\\n\" + line );"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            System.out.println(\"Congratulations! I have marked this task done.\\n\" + line );"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    public String getTypeOfTask() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        return \"todo\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "        return \"[T] [\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Nikhilalalalala": 34
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "wrong command"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "event"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "todo something"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "todo with 2 words"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "deadline wrong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "deadline right / mon"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "deadline right more that 2 words/ mon"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "event wrong"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "event right / tue"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "event right more that 2 words/ mon"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "done two invalid"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "done invalid"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "delete invalid"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "delete 12"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Nikhilalalalala": 22
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Nikhilalalalala"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "Nikhilalalalala": 4
    }
  }
]
