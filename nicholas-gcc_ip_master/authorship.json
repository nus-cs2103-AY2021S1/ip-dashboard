[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 1 | enjoy life"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 1 | live life"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 1 | live life"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 0 | enjoy life"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 1 | live life"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 1 | live life"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "E | 1 | concert | Aug 26 2020"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 0 | enjoy life"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 1 | live life"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 0 | enjoy life"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 0 | live life"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 0 | borrow book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 0 | return book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "E | 0 | concert | Aug 26 2020"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 0 | live life"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 0 | live life"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "D | 0 | do homework | Aug 26 2020"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 0 | enjoy life"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "E | 0 | Concert | Aug 26 2020"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 0 | enjoy life"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 0 | live life"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 0 | live life"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 0 | enjoy life"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 0 | enjoy life"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 0 | enjoy life"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 0 | enjoy life"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 26
    }
  },
  {
    "path": "src/DukeTest/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " * Test class to ensure LocalDate to String formatting done correctly"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    void getDate() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        Event event \u003d new Event(\"Concert /at 2020-08-26\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        assertEquals(\"Aug 26 2020\", event.getDate());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 16
    }
  },
  {
    "path": "src/DukeTest/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " * handles testing for the class Task toString() method"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        Task task \u003d new Deadline(\"do homework /by 2020-08-26\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        assertEquals(\"[D][âœ˜] do homework (by: Aug 26 2020)\", task.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 16
    }
  },
  {
    "path": "src/DukeTest/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " * class that handles testing of Todo class toString() method"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        Todo todo \u003d new Todo(\"enjoy life\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        assertEquals(\"[T][âœ˜] enjoy life\", todo.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 16
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " * Handles instances of Deadline, a subclass of Task that involves description and LocalDate"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    private String identifier;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * Constructor for Deadline instance"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @param description includes specific details of event, and date in YYYY-MM-DD format"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.identifier \u003d \"D\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String[] desArray \u003d this.description.split(\"/\", 2); //e.g. do homework/ by 1999-10-21"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String[] dateArray \u003d desArray[1].split(\" \", 2); //1999-10-21"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.date \u003d LocalDate.parse(dateArray[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * Getter function to retrieve identifier to help with writing to duke.txt file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String getIdentifier() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return identifier;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * Separates the date from description and reformats the date to MMM D YYY"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String fullDescription \u003d super.getDescription();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String[] desArray \u003d fullDescription.split(\"/\", 2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return desArray[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * Getter function that separates the event details from the date"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String[] desArray \u003d this.description.split(\"/\", 2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String[] timeArray \u003d desArray[1].split(\" \", 2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return \"[D]\" + \"[\" + getStatusIcon() + \"] \" + getDescription() + \"(\" + timeArray[0] + \": \" + getDate() + \")\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 64
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " * Main method that runs input and output between system and user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * constructor for Duke"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @param filePath String to determine the path of duke.txt file to write to"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * Driver method that handles input/output between user and system"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        ui.Greet();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        Parser parser \u003d new Parser(tasks, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            parser.parse(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        ui.Bye();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * main method that runs Duke"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 45,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " * Throwable exception to be caught in other classes and methods"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "public class DukeException extends Throwable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * Constructor of exception that takes in a specific error message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 24
    }
  },
  {
    "path": "src/main/java/DukeExceptionHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " * DukeExceptionHandler outputs exception messages"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "public class DukeExceptionHandler {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * Static method that handles exception by releasing error message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @return String of error message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public static String handleException(String input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        if (input.equals(\"todo\") || input.equals(\"deadline\") || input.equals(\"event\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            //tasks created with no description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            InvalidDescriptionException error \u003d new InvalidDescriptionException(input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            return error.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        } else if (!input.contains(\"todo\") \u0026\u0026 !input.contains(\"deadline\") \u0026\u0026 !input.contains(\"event\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                \u0026\u0026 !input.contains(\"done\") \u0026\u0026 !input.equals(\"list\") \u0026\u0026 !input.contains(\"find\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            WrongInputException error \u003d new WrongInputException(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            return error.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 28
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " * Handles instances of Event, a subclass of Task that involves description and LocalDate"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    private String identifier;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * Constructor for Event instance"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @param description includes specific details of event, and date in YYYY-MM-DD format"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.identifier \u003d \"E\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String[] desArray \u003d this.description.split(\"/\", 2); //e.g. do homework/ by 1999-10-21"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String[] dateArray \u003d desArray[1].split(\" \", 2); //1999-10-21"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.date \u003d LocalDate.parse(dateArray[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * Getter function to retrieve identifier to help with writing to duke.txt file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String getIdentifier() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return identifier;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * Separates the date from description and reformats the date to MMM D YYY"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * Getter function that separates the event details from the date"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String fullDescription \u003d super.getDescription();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String[] desArray \u003d fullDescription.split(\"/\", 2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return desArray[0];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String[] desArray \u003d this.description.split(\"/\", 2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String[] timeArray \u003d desArray[1].split(\" \", 2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return \"[E]\" + \"[\" + getStatusIcon() + \"] \" + getDescription() + \"(\" + timeArray[0] + \": \" + getDate() + \")\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 66
    }
  },
  {
    "path": "src/main/java/InvalidDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "public class InvalidDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * Exception class that handles the case where no description is provided to the task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public InvalidDescriptionException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return \"Description is invalid. Please specify with more details.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 15
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " * Parser class handles interpretation of user input"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * Constructor for Parser object"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public Parser(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * reads a String input and outputs according to different cases of input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @param input String comes from the scanner object in Duke.main"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public void parse(String input) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String errorMessage \u003d DukeExceptionHandler.handleException(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        if (errorMessage !\u003d null) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            System.out.println(errorMessage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            tasks.printTasks();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            String[] words \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            String inputType \u003d words[0];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            String description \u003d words[1];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                if (inputType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                    Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                    tasks.addTask(storage, todo);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                } else if (inputType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                    Deadline deadline \u003d new Deadline(description);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                    tasks.addTask(storage, deadline);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                } else if (inputType.equals(\"event\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                    Event event \u003d new Event(description);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                    tasks.addTask(storage, event);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                } else if (inputType.equals(\"done\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                    tasks.setDone(Integer.parseInt(description), storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                } else if (inputType.equals(\"delete\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                    tasks.delete(Integer.parseInt(description));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                else if (inputType.equals(\"find\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                    tasks.find(input.substring(5));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                System.out.println(\"Date must be in the YYYY-MM-DD format!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            catch (DukeException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 76
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " * Utility class to help write to and modify .txt files"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * Appends task description to a .txt file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public void writeToFile(Task task) throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.filePath, true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        if (task instanceof Todo) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            fw.write(((Todo) task).getIdentifier() + \" | \" + (task.getDone() ? 1 : 0) + \" | \" + task.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            fw.write(((Deadline) task).getIdentifier() + \" | \" + (task.getDone() ? 1 : 0) + \" | \" + task.getDescription() + \"| \" + ((Deadline) task).getDate() + \"\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            fw.write(((Event) task).getIdentifier() + \" | \" + (task.getDone() ? 1 : 0) + \" | \" + task.getDescription() + \"| \" + ((Event) task).getDate() + \"\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * helper function to update the done status of task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @param replaceWith"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public void replaceDone(String replaceWith) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            // input the file content to the StringBuffer \"input\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            BufferedReader file \u003d new BufferedReader(new FileReader(this.filePath));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            StringBuffer inputBuffer \u003d new StringBuffer();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            while ((line \u003d file.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                inputBuffer.append(line);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                inputBuffer.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            String inputStr \u003d inputBuffer.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            inputStr \u003d inputStr.replace(\"| 0 | \" + replaceWith, \"| 1 | \" + replaceWith);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            // write the new string with the replaced line OVER the same file"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            FileOutputStream fileOut \u003d new FileOutputStream(filePath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            fileOut.write(inputStr.getBytes());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            fileOut.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            System.out.println(\"Problem reading file.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 64
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " * Class handling tasks of different types (i.e. its subclasses)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    protected String identifier;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * constructor to describe state and specifics of Task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @param description to describe task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * overridden methods for its subclasses to help write the tasks to duke.txt"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String getIdentifier() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return identifier;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * helper function to determine whether to use the tick or cross symbol for printing of tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * getter for isDone boolean"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * setter for isDone boolean"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * getter function for String description"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * toString method for printing"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return getStatusIcon() + this.description;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 73
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " * TaskList class handles the operations to modify list of tasks given by the user"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    private ArrayList\u003cTask\u003e taskArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * Constructor for TaskList with no argument, creates empty ArrayList"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        taskArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * Adds task to taskArrayList, writes to duke.txt file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @param storage to write to duke.txt file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @param task to be printed and written"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @throws IOException for errors relating to parsing of the file in the storage.writeToFile function"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public void addTask(Storage storage, Task task) throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        taskArrayList.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        Ui.print(\"     Got it. I\u0027ve added this task:\\n\" + \"     \" + task.toString() +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                \"\\n     Now you have \" + taskArrayList.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        storage.writeToFile(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * prints list of tasks when user inputs \"list\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public void printTasks() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        if (taskArrayList.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            Ui.print(\"There are no tasks!\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        else Ui.printList(this.taskArrayList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * removes task of ith position (in a 1 to n index) from arrayList and prints the resulting list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @param i"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public void delete(int i) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        if (i \u003c 0 || i \u003e taskArrayList.size()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            throw new DukeException(\"invalid task number\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        taskArrayList.remove(i - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        Ui.printList(this.taskArrayList);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * Marks list in taskArrayList as done, updates entries in duke.txt file"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @param i"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public void setDone(int i, Storage storage) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        Task doneTask \u003d taskArrayList.get(i - 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        Ui.print(\"Nice! I\u0027ve marked this task as done:\\n\" + doneTask);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        storage.replaceDone(doneTask.getDescription());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public void find(String substring) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        sb.append(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        for (Task t : taskArrayList) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            if (t.getDescription().contains(substring)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                sb.append(counter + \".\" + t.toString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        if (counter \u003e 0) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            Ui.print(sb.toString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            Ui.print(\"No match found!\\n\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 90
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " * Handles instances of todos, a subclass of Task with no date but only description"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    private String identifier;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * Constructor for todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.identifier \u003d \"T\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * Getter for identifier to help write tasks to duke.txt"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String getIdentifier() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return identifier;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return \"[T]\" + \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 33
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " * Class that handles system\u0027s interactions and output with user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * void function to greet and introduce to user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public void Greet() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        System.out.println(\"Hello, I\u0027m Duke\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * void printing function that prints a string that adheres to line and indentation format of Duke"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @param string"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public static void print(String string) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        System.out.println(string);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * takes in an ArrayList of tasks and prints each task one by one"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * @param TaskList"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public static void printList(ArrayList\u003cTask\u003e TaskList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        for (Task task : TaskList) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            System.out.println(\"     \" + (TaskList.indexOf(task) + 1) + \".\" + task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * Exit function for Duke"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public void Bye() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     * Helper function to assist with line and spacing format"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public static void showLine() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 59
    }
  },
  {
    "path": "src/main/java/WrongInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " * handles the case where task type/command is invalid"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "public class WrongInputException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public WrongInputException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return \"Input not in the correct format.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "todo return book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 1,
      "-": 20
    }
  }
]
