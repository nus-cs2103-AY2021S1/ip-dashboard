[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.6.2\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter-params:5.6.2\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.6.2\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    mainClassName \u003d \"viscount.Launcher\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    archiveBaseName \u003d \"viscount\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 21,
      "-": 41
    }
  },
  {
    "path": "src/main/java/viscount/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents a launcher to launch the Viscount application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Launches Viscount."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param args Standard arguments."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 17
    }
  },
  {
    "path": "src/main/java/viscount/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.gui.MainWindow;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents the main entry point into the application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Starts the GUI of Viscount."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param stage Stage shown."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        AnchorPane anchorPane \u003d new MainWindow();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Scene scene \u003d new Scene(anchorPane);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 25
    }
  },
  {
    "path": "src/main/java/viscount/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.temporal.TemporalAccessor;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.command.AddCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.command.Command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.command.DeleteAllCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.command.DeleteAllDoneCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.command.DeleteCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.command.DoneAllCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.command.DoneCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.command.ListCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountDateTimeParseException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountMissingArgumentException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountNumberFormatException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountUnknownCommandException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountUnsupportedOperationException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Deadline;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Event;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Task;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.TaskType;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Todo;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represent\u0027s Viscount\u0027s parser."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Handles making sense of the user\u0027s input commands."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public static final DateTimeFormatter INPUT_DATE_TIME_FORMATTER \u003d"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            DateTimeFormatter.ofPattern(\"dd-MM-yyyy[ HHmm]\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public static final DateTimeFormatter TASK_DATA_DATE_TIME_FORMATTER \u003d"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            DateTimeFormatter.ofPattern(\"yyyyMMdd HHmm\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public static final DateTimeFormatter OUTPUT_DATE_FORMATTER \u003d"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public static final DateTimeFormatter OUTPUT_DATE_TIME_FORMATTER \u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author sc-arecrow-reused"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    //Reused from https://stackoverflow.com/a/48281350 with minor modifications"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a String representing a date and time using the given formatter."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param dateTimeString Date and time string parsed."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param formatter Formatter used."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return LocalDateTime object representing the date and time in the String."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DateTimeParseException If string parsed is formatted wrongly."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public static LocalDateTime parseDateTime(String dateTimeString, DateTimeFormatter formatter)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            throws DateTimeParseException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        LocalDateTime dateTime;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        TemporalAccessor ta \u003d formatter.parseBest(dateTimeString, LocalDateTime::from, LocalDate::from);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        if (ta instanceof LocalDateTime) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            dateTime \u003d (LocalDateTime) ta;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            dateTime \u003d ((LocalDate) ta).atStartOfDay();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Parses a String representing raw task data."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param rawData Raw task data parsed."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return Task represented by the raw task data."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public static Task parseTaskData(String rawData) throws IOException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cString\u003e taskData \u003d Arrays.asList(rawData.split(\"\\\\|\"));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assert taskData.size() \u003e 0 : \"List of task data should be non-empty\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        TaskType taskType \u003d TaskType.valueOf(taskData.get(0));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        boolean isDone \u003d !taskData.get(1).equals(\"0\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String taskDescription \u003d taskData.get(2);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return new Todo(taskDescription, isDone);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            LocalDateTime dueDate \u003d Parser.parseDateTime("
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    taskData.get(3), Parser.TASK_DATA_DATE_TIME_FORMATTER);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return new Deadline(taskDescription, isDone, dueDate);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            LocalDateTime eventTime \u003d Parser.parseDateTime("
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    taskData.get(3), Parser.TASK_DATA_DATE_TIME_FORMATTER);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return new Event(taskDescription, isDone, eventTime);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new IOException(\"Data file corrupted.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Parses a raw command."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param rawCommand Raw command in String form parsed."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return Command object representing the raw command."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws ViscountException If command is unsupported or used wrongly."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public static Command parse(String rawCommand) throws ViscountException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cString\u003e arguments \u003d Arrays.asList(rawCommand.split(\" \"));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String baseCommand \u003d arguments.get(0);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        switch (baseCommand) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return parseListCommand(arguments);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return parseAddCommand(arguments);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return parseDoneCommand(arguments);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return parseDeleteCommand(arguments);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountUnknownCommandException(baseCommand);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Parses a list command."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param arguments Arguments from user input."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return List command representing input from user."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws ViscountException If command contains unknown arguments or was used wrongly."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static ListCommand parseListCommand(List\u003cString\u003e arguments) throws ViscountException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        int onArgumentIndex \u003d arguments.indexOf(\"/on\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        int findArgumentIndex \u003d arguments.indexOf(\"/find\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String taskTypeModifier \u003d \"\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String dateString \u003d \"\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String findString \u003d \"\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (onArgumentIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            if (findArgumentIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                taskTypeModifier \u003d String.join(\" \", arguments.subList(1, arguments.size()));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                taskTypeModifier \u003d String.join(\" \", arguments.subList(1, findArgumentIndex));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                findString \u003d String.join(\" \", arguments.subList(findArgumentIndex + 1, arguments.size()));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            if (findArgumentIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                taskTypeModifier \u003d String.join(\" \", arguments.subList(1, onArgumentIndex));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                dateString \u003d String.join(\" \", arguments.subList(onArgumentIndex + 1, arguments.size()));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } else if (onArgumentIndex \u003c findArgumentIndex) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                taskTypeModifier \u003d String.join(\" \", arguments.subList(1, onArgumentIndex));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                dateString \u003d String.join(\" \", arguments.subList(onArgumentIndex + 1, findArgumentIndex));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                findString \u003d String.join(\" \", arguments.subList(findArgumentIndex + 1, arguments.size()));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                taskTypeModifier \u003d String.join(\" \", arguments.subList(1, findArgumentIndex));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                findString \u003d String.join(\" \", arguments.subList(findArgumentIndex + 1, onArgumentIndex));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                dateString \u003d String.join(\" \", arguments.subList(onArgumentIndex + 1, arguments.size()));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            if (taskTypeModifier.equals(\"todo\")) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountUnsupportedOperationException(\"todo /on\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } else if (dateString.isEmpty()) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountMissingArgumentException(\"/on parameter\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (!taskTypeModifier.isEmpty()) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                TaskType.valueOf(taskTypeModifier.toUpperCase());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountUnknownCommandException(taskTypeModifier);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return new ListCommand(taskTypeModifier, dateString, findString);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Parses an add command."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param arguments Arguments from user input."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return Add command representing input from user."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws ViscountException If command contains unknown arguments or was used wrongly."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static AddCommand parseAddCommand(List\u003cString\u003e arguments) throws ViscountException {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (arguments.size() \u003c 2) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountMissingArgumentException(\"task type\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            TaskType taskType \u003d TaskType.valueOf(arguments.get(1).toUpperCase());"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                return parseAddTodoCommand(arguments);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                return parseAddDeadlineCommand(arguments);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                return parseAddEventCommand(arguments);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                /* Since all possible TaskTypes have been enumerated,"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                 * and exception for incorrect task type input has been handled,"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                 * program will never reach the default block of this switch statement."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                 */"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountUnknownCommandException(arguments.get(1));"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Parses an add todo command."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param arguments Arguments from user input."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return Add todo command representing input from user."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws ViscountException If command contains unknown arguments or was used wrongly."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static AddCommand parseAddTodoCommand(List\u003cString\u003e arguments) throws ViscountException {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String description \u003d String.join(\" \", arguments.subList(2, arguments.size()));"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountMissingArgumentException(\"todo description\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return new AddCommand(TaskType.TODO, description, null);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Parses an add deadline command."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param arguments Arguments from user input."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return Add deadline command representing input from user."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws ViscountException If command contains unknown arguments or was used wrongly."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static AddCommand parseAddDeadlineCommand(List\u003cString\u003e arguments) throws ViscountException {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        int dueDateIndex \u003d arguments.indexOf(\"/by\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (dueDateIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountMissingArgumentException(\"/by argument\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String description \u003d String.join(\" \", arguments.subList(2, dueDateIndex));"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String dueDateString \u003d String.join(\" \", arguments.subList(dueDateIndex + 1, arguments.size()));"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountMissingArgumentException(\"deadline description\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (dueDateString.isEmpty()) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountMissingArgumentException(\"/by parameter\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            LocalDateTime dueDate \u003d Parser.parseDateTime(dueDateString, INPUT_DATE_TIME_FORMATTER);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return new AddCommand(TaskType.DEADLINE, description, dueDate);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountDateTimeParseException(\"due date\");"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Parses an add event command."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param arguments Arguments from user input."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return Add event command representing input from user."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws ViscountException If command contains unknown arguments or was used wrongly."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static AddCommand parseAddEventCommand(List\u003cString\u003e arguments) throws ViscountException {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        int eventTimeIndex \u003d arguments.indexOf(\"/at\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (eventTimeIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountMissingArgumentException(\"/at argument\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String description \u003d String.join(\" \", arguments.subList(2, eventTimeIndex));"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String eventTimeString \u003d String.join(\" \", arguments.subList(eventTimeIndex + 1, arguments.size()));"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountMissingArgumentException(\"event description\");"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (eventTimeString.isEmpty()) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountMissingArgumentException(\"/at parameter\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            LocalDateTime eventTime \u003d Parser.parseDateTime(eventTimeString, INPUT_DATE_TIME_FORMATTER);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return new AddCommand(TaskType.EVENT, description, eventTime);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountDateTimeParseException(\"event date\");"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Parses a done command."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param arguments Arguments from user input."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return Done command representing input from user."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws ViscountException If command contains unknown arguments or was used wrongly."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static DoneCommand parseDoneCommand(List\u003cString\u003e arguments) throws ViscountException {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (arguments.size() \u003c 2) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountMissingArgumentException(\"task number\");"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (arguments.get(1).equals(\"all\")) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return new DoneAllCommand();"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(arguments.get(1)) - 1;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return new DoneCommand(taskIndex);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountNumberFormatException(arguments.get(1));"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Parses a delete command."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param arguments Arguments from user input."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return Delete command representing input from user."
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws ViscountException If command contains unknown arguments or was used wrongly."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static DeleteCommand parseDeleteCommand(List\u003cString\u003e arguments) throws ViscountException {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (arguments.size() \u003c 2) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountMissingArgumentException(\"task number\");"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (arguments.get(1).equals(\"all\")) {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return new DeleteAllCommand();"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (arguments.get(1).equals(\"done\")) {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return new DeleteAllDoneCommand();"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(arguments.get(1)) - 1;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return new DeleteCommand(taskIndex);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountNumberFormatException(arguments.get(1));"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 324,
      "-": 26
    }
  },
  {
    "path": "src/main/java/viscount/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.nio.file.StandardOpenOption;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountSaveDataException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents Viscount\u0027s storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Handles loading tasks from data file and writing tasks to the file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String DATA_FILE_NAME \u003d \"viscount.txt\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private String dataDirectoryPath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private String filePathString;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Instantiates a new storage object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param dataDirectoryPath Directory path to the data file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Storage(String dataDirectoryPath) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.dataDirectoryPath \u003d dataDirectoryPath;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.filePathString \u003d dataDirectoryPath + DATA_FILE_NAME;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Saves task list data to disk."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param tasks Task list saved."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws ViscountSaveDataException If exception occurs when writing to disk."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void saveToDisk(List\u003cTask\u003e tasks) throws ViscountSaveDataException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Path filePath \u003d Paths.get(filePathString);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cString\u003e savedData \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            savedData.add(task.toTaskData());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            Files.write(filePath, savedData, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountSaveDataException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Loads task list data from disk."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return Task list loaded."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws IOException If exception occurs when loading from disk or creating a new data file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public List\u003cTask\u003e loadFromDisk() throws IOException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (!hasDataDirectory()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            createDataDirectory();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (hasExistingDataFile()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return convertTaskDataToTasks();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return createNewDataFile();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Converts task data in the data file to a list of tasks."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return List of tasks represented by the task data"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws IOException If exception occurs when reading from data file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private List\u003cTask\u003e convertTaskDataToTasks() throws IOException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        File dataFile \u003d new File(filePathString);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Scanner sc \u003d new Scanner(dataFile);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            if (!line.isEmpty()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                tasks.add(Parser.parseTaskData(line));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Creates a new data file."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return An empty list of tasks representing the new data file with no task data saved."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws IOException If an error occurs while creating the new data file."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private List\u003cTask\u003e createNewDataFile() throws IOException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Path filePath \u003d Paths.get(filePathString);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Files.write(filePath, new ArrayList\u003cString\u003e(), StandardCharsets.UTF_8, StandardOpenOption.CREATE_NEW);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private boolean hasDataDirectory() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        File directory \u003d new File(dataDirectoryPath);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return directory.exists();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private void createDataDirectory() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        File directory \u003d new File(dataDirectoryPath);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        directory.mkdir();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private boolean hasExistingDataFile() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Path filePath \u003d Paths.get(filePathString);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return Files.exists(filePath);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 125
    }
  },
  {
    "path": "src/main/java/viscount/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents Viscount\u0027s task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Stores the task list and handles operations modifying it."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Adds task to task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param task Task added."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Marks task as done by its index in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param taskIndex Index of task marked."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws ViscountIndexOutOfBoundsException If taskIndex is \u003c 0 or \u003e\u003d list size."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void markDone(int taskIndex) throws ViscountIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            Task task \u003d tasks.get(taskIndex);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            task.setDone(true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountIndexOutOfBoundsException(taskIndex);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Marks all not done tasks as done and returns a list of these tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return List of previously not done tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public List\u003cTask\u003e markAndGetAllNotDoneTasks() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e notDoneTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            if (!task.getIsDone()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                notDoneTasks.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                task.setDone(true);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return notDoneTasks;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Removes task from list by its index in the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param taskIndex Index of task removed."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return Task removed."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws ViscountIndexOutOfBoundsException If taskIndex is \u003c 0 or \u003e\u003d list size"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Task remove(int taskIndex) throws ViscountIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountIndexOutOfBoundsException(taskIndex);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Deletes all tasks and returns the task list before all tasks were deleted."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return Task list before all tasks were deleted."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public List\u003cTask\u003e deleteAndGetAllTasks() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e copyOfTasks \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return copyOfTasks;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Deletes all done tasks and returns a list of all the deleted tasks that were done."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return List of all the deleted tasks that were done."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public List\u003cTask\u003e deleteAndGetAllDoneTasks() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e doneTasks \u003d tasks.stream()"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                .filter(Task::getIsDone)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        tasks.removeAll(doneTasks);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return doneTasks;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Gets task list."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return Task list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Gets task by its index in the list."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param taskIndex Index of task."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return Task with index taskIndex."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws ViscountIndexOutOfBoundsException If taskIndex is \u003c 0 or \u003e\u003d list size"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Task getTask(int taskIndex) throws ViscountIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return tasks.get(taskIndex);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throw new ViscountIndexOutOfBoundsException(taskIndex);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Gets size of task list."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return Size of task list."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public int getTasksSize() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 139
    }
  },
  {
    "path": "src/main/java/viscount/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents Viscount\u0027s User Interface."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Handles logic pertaining to interactions with the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Gets Viscount\u0027s welcome message."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return Viscount\u0027s welcome message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return \"Good day to you! I\u0027m Viscount.\\nWhat can I do for you on this blessed day?\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Gets the list response given a list of tasks and query modifiers."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param tasks List of tasks listed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param modifier Modifier of list command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param dateString Date argument of list command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return The appropriate list response."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String getListResponse(List\u003cTask\u003e tasks, String modifier, String dateString) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String[] validModifiers \u003d {\"\", \"todo\", \"deadline\", \"event\"};"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assert Arrays.asList(validModifiers).contains(modifier)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                : String.format(\"Invalid modifier \u0027%s\u0027\", modifier);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String finalDateString \u003d dateString.isEmpty()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                ? dateString"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                : (\"occurring \" + (dateString.equals(\"today\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        ? dateString"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        : \"on \" + dateString) + \" \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(\"Here are the %ss %sin your list:\\n%s\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                modifier.isEmpty() ? \"task\" : modifier,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                finalDateString,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                convertTaskListToString(tasks));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String getEmptyListResponse() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return \"Your task list is empty! Add a new task to get started.\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Gets the add task response."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param task Task added."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param tasksSize Size of task list after adding new task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return The appropriate add task response."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String getAddResponse(Task task, int tasksSize) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assert tasksSize \u003e\u003d 0 : \"Size of task list should be non-negative\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(\"Very well. I\u0027ve added this %s:\\n%s\\nNow you have %d tasks in the list.\","
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                task.getTaskType().name().toLowerCase(),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                task.toString(),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                tasksSize);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Gets the mark task as done response."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param task Task marked as done."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return The appropriate mark task as done response."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String getDoneResponse(Task task) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(\"Very good! I have marked this %s as done:\\n%s\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                task.getTaskType().name().toLowerCase(),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                task.toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Gets the mark all task as done response."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param tasks Tasks marked as done."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return The appropriate mark all task as done response."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String getDoneAllResponse(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(\"Very good! I have marked all these tasks as done:\\n%s\","
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                convertTaskListToString(tasks));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Gets the delete task response."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param task Task deleted."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param tasksSize Size of task list after deleting new task."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return The appropriate delete task response."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String getDeleteResponse(Task task, int tasksSize) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assert tasksSize \u003e\u003d 0 : \"Size of task list should be non-negative\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(\"Very well. I\u0027ve removed this %s:\\n%s\\nNow you have %d tasks in the list.\","
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                task.getTaskType().name().toLowerCase(),"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                task.toString(),"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                tasksSize);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Gets the delete all task response."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param tasks Tasks deleted."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return The appropriate delete all task response."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String getDeleteAllResponse(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(\"Very well. I\u0027ve removed all the tasks in the list:\\n%s\\nThe list is now empty.\","
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                convertTaskListToString(tasks));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Gets the delete all done tasks response."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param tasks Tasks deleted."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return The appropriate delete all done tasks response."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String getDeleteAllDoneResponse(List\u003cTask\u003e tasks, int tasksSize) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                \"Very well. I\u0027ve removed all the done tasks in the list:\\n%s\\nNow you have %d tasks in the list\","
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                convertTaskListToString(tasks),"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                tasksSize);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Converts task list to String format."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param tasks Task list to be converted."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return String representation of the task list."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private String convertTaskListToString(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            result +\u003d (i \u003d\u003d tasks.size() - 1)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    ? String.format(\"%d.%s\", i + 1, tasks.get(i).toString())"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    : String.format(\"%d.%s\\n\", i + 1, tasks.get(i).toString());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 153
    }
  },
  {
    "path": "src/main/java/viscount/Viscount.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents Viscount, a chatbot that helps the user keep track of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class Viscount {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Instantiates a new Viscount chatbot."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param filePathString String of path of data file loaded."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws IOException if an error occurs while loading data from save file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Viscount(String filePathString) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.storage \u003d new Storage(filePathString);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.tasks \u003d new TaskList(storage.loadFromDisk());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Gets the appropriate string response from Viscount, given an input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param input Input to be parsed and responded to."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return The appropriate string response from Viscount."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return command.executeAndGetResponse(tasks, ui, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } catch (ViscountException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Gets the UI of Viscount."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return UI of Viscount."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 52
    }
  },
  {
    "path": "src/main/java/viscount/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountSaveDataException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.TaskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents an add command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private TaskType taskType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Instantiates a new add command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param taskType Type of task added"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param description Description of task added"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param dateTime Date and time of task added"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public AddCommand(TaskType taskType, String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Executes the add command and returns the response from Viscount."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param taskList Task list where tasks are stored."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param ui Ui to display response."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param storage Storage to save changes to disk."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return The response from Viscount."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws ViscountSaveDataException If exception occurs with writing to disk."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String executeAndGetResponse(TaskList taskList, Ui ui, Storage storage) throws ViscountSaveDataException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Task newTask \u003d getNewTask();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        storage.saveToDisk(taskList.getTasks());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return ui.getAddResponse(newTask, taskList.getTasksSize());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Gets a new task to be added."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return A new task to be added."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private Task getNewTask() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        switch(taskType) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            newTask \u003d new Todo(description, false);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            newTask \u003d new Deadline(description, false, dateTime);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            newTask \u003d new Event(description, false, dateTime);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 78
    }
  },
  {
    "path": "src/main/java/viscount/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents a command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public abstract String executeAndGetResponse(TaskList taskList, Ui ui, Storage storage) throws ViscountException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 13
    }
  },
  {
    "path": "src/main/java/viscount/command/DeleteAllCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountSaveDataException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class DeleteAllCommand extends DeleteCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public DeleteAllCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(null);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Executes the delete all command and returns the response from Viscount."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param taskList Task list where tasks are stored."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param ui Ui to display response."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param storage Storage to save changes to disk."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return The response from Viscount."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws ViscountSaveDataException If exception occurs with writing to disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String executeAndGetResponse(TaskList taskList, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throws ViscountSaveDataException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e tasksBeforeDelete \u003d taskList.deleteAndGetAllTasks();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        storage.saveToDisk(taskList.getTasks());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return ui.getDeleteAllResponse(tasksBeforeDelete);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 31
    }
  },
  {
    "path": "src/main/java/viscount/command/DeleteAllDoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountSaveDataException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class DeleteAllDoneCommand extends DeleteCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public DeleteAllDoneCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(null);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Executes the delete all done command and returns the response from Viscount."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param taskList Task list where tasks are stored."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param ui Ui to display response."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param storage Storage to save changes to disk."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return The response from Viscount."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws ViscountSaveDataException If exception occurs with writing to disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String executeAndGetResponse(TaskList taskList, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throws ViscountSaveDataException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e deletedTasks \u003d taskList.deleteAndGetAllDoneTasks();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        storage.saveToDisk(taskList.getTasks());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return ui.getDeleteAllDoneResponse(deletedTasks, taskList.getTasksSize());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 31
    }
  },
  {
    "path": "src/main/java/viscount/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountSaveDataException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents a delete command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private Integer taskIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public DeleteCommand(Integer taskIndex) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Executes the delete command and returns the response from Viscount."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param taskList Task list where tasks are stored."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param ui Ui to display response."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param storage Storage to save changes to disk."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return The response from Viscount."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws ViscountIndexOutOfBoundsException If taskIndex is \u003c 0 or \u003e\u003d list size"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws ViscountSaveDataException If exception occurs with writing to disk."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String executeAndGetResponse(TaskList taskList, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throws ViscountIndexOutOfBoundsException, ViscountSaveDataException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Task removedTask \u003d taskList.remove(taskIndex);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        storage.saveToDisk(taskList.getTasks());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return ui.getDeleteResponse(removedTask, taskList.getTasksSize());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 37
    }
  },
  {
    "path": "src/main/java/viscount/command/DoneAllCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountSaveDataException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class DoneAllCommand extends DoneCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public DoneAllCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(null);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Executes the done all command and returns the response from Viscount."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param taskList Task list where tasks are stored."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param ui Ui to display response."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param storage Storage to save changes to disk."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return The response from Viscount."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws ViscountSaveDataException If exception occurs with writing to disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String executeAndGetResponse(TaskList taskList, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throws ViscountSaveDataException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e notDoneTasks \u003d taskList.markAndGetAllNotDoneTasks();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        storage.saveToDisk(taskList.getTasks());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return ui.getDoneAllResponse(notDoneTasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 32
    }
  },
  {
    "path": "src/main/java/viscount/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountSaveDataException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents a done command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private Integer taskIndex;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public DoneCommand(Integer taskIndex) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Executes the done command and returns the response from Viscount."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param taskList Task list where tasks are stored."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param ui Ui to display response."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param storage Storage to save changes to disk."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return The response from Viscount."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws ViscountIndexOutOfBoundsException If taskIndex is \u003c 0 or \u003e\u003d list size"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws ViscountSaveDataException If exception occurs with writing to disk."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String executeAndGetResponse(TaskList taskList, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            throws ViscountIndexOutOfBoundsException, ViscountSaveDataException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        taskList.markDone(taskIndex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        storage.saveToDisk(taskList.getTasks());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return ui.getDoneResponse(taskList.getTask(taskIndex));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 36
    }
  },
  {
    "path": "src/main/java/viscount/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.function.Predicate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountDateTimeParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.TaskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents a list command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private String taskTypeModifier;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private String dateString;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private String findString;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Instantiates a new list command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param taskTypeModifier Task type modifier of the command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param dateString Date string argument."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param findString Find string argument."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ListCommand(String taskTypeModifier, String dateString, String findString) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.taskTypeModifier \u003d taskTypeModifier;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.dateString \u003d dateString;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.findString \u003d findString;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Executes the list command and returns the response from Viscount."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param taskList Task list where tasks are stored."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param ui Ui to display response."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param storage Storage to save changes to disk."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return The response from Viscount."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @throws ViscountDateTimeParseException If exception occurs with parsing date string"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String executeAndGetResponse(TaskList taskList, Ui ui, Storage storage) throws ViscountException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Predicate\u003cTask\u003e filterByModifier \u003d task -\u003e {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            boolean isEmptyModifier \u003d taskTypeModifier.isEmpty();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return isEmptyModifier || task.getTaskType() \u003d\u003d TaskType.valueOf(taskTypeModifier.toUpperCase());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        };"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Predicate\u003cTask\u003e filterByDescription \u003d task -\u003e task.getDescription().contains(findString);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return ui.getEmptyListResponse();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (dateString.isEmpty()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            List\u003cTask\u003e filteredTasks \u003d tasks"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    .stream()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    .filter(filterByModifier)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    .filter(filterByDescription)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            return ui.getListResponse(filteredTasks, taskTypeModifier, dateString);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                LocalDateTime queriedDateTime \u003d dateString.equals(\"today\")"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        ? LocalDate.now().atStartOfDay()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        : Parser.parseDateTime(dateString, Parser.INPUT_DATE_TIME_FORMATTER);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                List\u003cTask\u003e filteredTasks \u003d tasks"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        .stream()"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        .filter(Task::hasDateTime)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        .filter(filterByModifier)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        .filter(filterByDescription)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        .filter(task -\u003e task.getDateTime().toLocalDate().isEqual(queriedDateTime.toLocalDate()))"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        .sorted(Comparator.comparing(Task::getDateTime))"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        .collect(Collectors.toList());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                return ui.getListResponse("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        filteredTasks,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        taskTypeModifier,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        dateString.equals(\"today\")"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                                ? dateString"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                                : queriedDateTime.format(Parser.OUTPUT_DATE_FORMATTER));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                throw new ViscountDateTimeParseException(\"date query\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 101
    }
  },
  {
    "path": "src/main/java/viscount/exception/ViscountDateTimeParseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents the exception when the user inputs an incorrectly formatted date time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountDateTimeParseException extends ViscountException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String DATE_ERROR_MESSAGE \u003d \"Alas, I do not understand. Please format your %s\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            + \"in this format: dd-MM-yyyy\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            + \"For example: 23-08-2020\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String DATE_TIME_ERROR_MESSAGE \u003d \"Alas, I do not understand. Please format your %s\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            + \"in this format: dd-MM-yyyy HHmm\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            + \"For example: 23-08-2020 1300\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            + \"The time is optional and the default is 0000.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Instantiates a new ViscountDateTimeParse exception."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param dateTimeType Type of date and time parsed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountDateTimeParseException(String dateTimeType) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(dateTimeType.equals(\"date query\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                ? String.format(ViscountDateTimeParseException.DATE_ERROR_MESSAGE, dateTimeType)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                : String.format(ViscountDateTimeParseException.DATE_TIME_ERROR_MESSAGE, dateTimeType));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 26
    }
  },
  {
    "path": "src/main/java/viscount/exception/ViscountException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents the exceptions specific to Viscount."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, I do apologise but I don\u0027t know what that means.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(ViscountException.ERROR_MESSAGE);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 16
    }
  },
  {
    "path": "src/main/java/viscount/exception/ViscountIndexOutOfBoundsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents the exception when the index given is invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountIndexOutOfBoundsException extends ViscountException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, your task list does not contain a task number %d.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountIndexOutOfBoundsException(int index) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(String.format(ViscountIndexOutOfBoundsException.ERROR_MESSAGE, index + 1));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 12
    }
  },
  {
    "path": "src/main/java/viscount/exception/ViscountMissingArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents the exception when an argument is missing."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountMissingArgumentException extends ViscountException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, you need to specify the %s.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountMissingArgumentException(String missingArgument) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(String.format(ViscountMissingArgumentException.ERROR_MESSAGE, missingArgument));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 12
    }
  },
  {
    "path": "src/main/java/viscount/exception/ViscountNumberFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents the exception when the input number is in the wrong format."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountNumberFormatException extends ViscountException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, \u0027%s\u0027 is not a valid task number.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountNumberFormatException(String argument) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(String.format(ViscountNumberFormatException.ERROR_MESSAGE, argument));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 12
    }
  },
  {
    "path": "src/main/java/viscount/exception/ViscountSaveDataException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents the exceptions occurring with loading or saving to data file."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountSaveDataException extends ViscountException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, something went wrong with saving your data.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountSaveDataException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(String.format(ViscountSaveDataException.ERROR_MESSAGE));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 12
    }
  },
  {
    "path": "src/main/java/viscount/exception/ViscountUnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents the exception when the command is unknown."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountUnknownCommandException extends ViscountException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, I do apologise but I don\u0027t know what \u0027%s\u0027 means.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountUnknownCommandException(String command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(String.format(ViscountUnknownCommandException.ERROR_MESSAGE, command));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 12
    }
  },
  {
    "path": "src/main/java/viscount/exception/ViscountUnsupportedOperationException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents the exception when the operation is unsupported."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class ViscountUnsupportedOperationException extends ViscountException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String ERROR_MESSAGE \u003d \"Alas, %s is an invalid command.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public ViscountUnsupportedOperationException(String command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(String.format(ViscountUnsupportedOperationException.ERROR_MESSAGE, command));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 12
    }
  },
  {
    "path": "src/main/java/viscount/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents a dialog box component within the main window."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final Image USER_IMAGE \u003d"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Image(DialogBox.class.getResourceAsStream(\"/images/userIcon.png\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final Image VISCOUNT_IMAGE \u003d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Image(DialogBox.class.getResourceAsStream(\"/images/viscountIcon.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Instantiates a new dialog box component."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param text Text inside the dialog box."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param image Image of the entity chatting the text inside the dialog box."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private DialogBox(String text, Image image) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        displayPicture.setImage(image);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Gets a new dialog box component representing a user\u0027s chat message."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param text Text inside the dialog box."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return A new dialog box component representing a user\u0027s chat message."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public static DialogBox getUserDialog(String text) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return new DialogBox(text, USER_IMAGE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Gets a new dialog box component representing Viscount\u0027s chat response."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param text Text inside the dialog box."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return Gets a new dialog box component representing Viscount\u0027s chat response."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public static DialogBox getViscountDialog(String text) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        DialogBox dialogBox \u003d new DialogBox(text, VISCOUNT_IMAGE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        dialogBox.flip();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return dialogBox;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Flips the dialog box component on the vertical axis."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        ObservableList\u003cNode\u003e nodes \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        FXCollections.reverse(nodes);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.getChildren().setAll(nodes);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 81
    }
  },
  {
    "path": "src/main/java/viscount/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Main;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Viscount;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents the main window component of the GUI."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Handles user input and display of Viscount\u0027s responses on the GUI."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String DATA_DIRECTORY_PATH \u003d System.getProperty(\"user.dir\") + \"/data/\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private Viscount viscount;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Instantiates a new MainWindow component."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public MainWindow() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            this.viscount \u003d new Viscount(DATA_DIRECTORY_PATH);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String viscountWelcome \u003d viscount.getUi().getWelcomeMessage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getViscountDialog(viscountWelcome));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Initialises the component."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Handles user input and displays Viscount\u0027s responses accordingly."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            String response \u003d viscount.getResponse(input);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    DialogBox.getUserDialog(input),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                    DialogBox.getViscountDialog(response)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            );"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 81
    }
  },
  {
    "path": "src/main/java/viscount/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents a deadline, a type of task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String STRING_FORMAT \u003d \"[D][%s] %s (by: %s)\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String TASK_DATA_FORMAT \u003d \"%s|%d|%s|%s\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Deadlines have an additional due date field."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private LocalDateTime dueDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Initialises a new deadline task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param description Description of the deadline created."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param isDone Represents if the deadline is done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param dueDate Due date of the deadline."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDateTime dueDate) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(TaskType.DEADLINE, description, isDone);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public boolean hasDateTime() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Gives a task data representation of the task in String format."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return Task data representation of the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toTaskData() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(Deadline.TASK_DATA_FORMAT, taskType.name(), isDone ? 1 : 0, description,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                dueDate.format(Parser.TASK_DATA_DATE_TIME_FORMATTER));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(Deadline.STRING_FORMAT, getStatusIcon(), description,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                dueDate.format(Parser.OUTPUT_DATE_TIME_FORMATTER));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 57
    }
  },
  {
    "path": "src/main/java/viscount/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents an event, a type of task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String STRING_FORMAT \u003d \"[E][%s] %s (at: %s)\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String TASK_DATA_FORMAT \u003d \"%s|%d|%s|%s\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Events have an additional event time field."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private LocalDateTime eventTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Instantiates a new event task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param description Description of event added."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param isDone Represents if event is done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param eventTime Date and time of the event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Event(String description, boolean isDone, LocalDateTime eventTime) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(TaskType.EVENT, description, isDone);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public boolean hasDateTime() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return eventTime;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Gives a task data representation of the task in String format."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return Task data representation of the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toTaskData() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(Event.TASK_DATA_FORMAT, taskType.name(), isDone ? 1 : 0, description,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                eventTime.format(Parser.TASK_DATA_DATE_TIME_FORMATTER));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(Event.STRING_FORMAT, getStatusIcon(), description,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                eventTime.format(Parser.OUTPUT_DATE_TIME_FORMATTER));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 57
    }
  },
  {
    "path": "src/main/java/viscount/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Every task has a:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * 1) task type"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * 2) description"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * 3) checkbox to indicate if it is done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Instantiates a new task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param taskType Type of the task created."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param description Description of the task created."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @param isDone Represents if the task is done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Task(TaskType taskType, String description, boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Returns tick or cross symbols depending on whether the task is done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return Tick or cross symbol"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        //return tick or X symbols"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public abstract boolean hasDateTime();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public abstract LocalDateTime getDateTime();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public abstract String toTaskData();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 59
    }
  },
  {
    "path": "src/main/java/viscount/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Enumerates the types of tasks supported by Viscount."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    EVENT;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 10
    }
  },
  {
    "path": "src/main/java/viscount/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " * Represents a todo, a type of task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String STRING_FORMAT \u003d \"[T][%s] %s\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String TASK_DATA_FORMAT \u003d \"%s|%d|%s\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        super(TaskType.TODO, description, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public boolean hasDateTime() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        throw new UnsupportedOperationException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * Gives a task data representation of the task in String format."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     * @return Task data representation of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toTaskData() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(Todo.TASK_DATA_FORMAT, taskType.name(), isDone ? 1 : 0, description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        return String.format(Todo.STRING_FORMAT, getStatusIcon(), description);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 40
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "\u003cfx:root "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        alignment\u003d\"TOP_RIGHT\" "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        maxHeight\u003d\"1.7976931348623157E308\" "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        maxWidth\u003d\"1.7976931348623157E308\" "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        prefWidth\u003d\"400.0\" "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        type\u003d\"javafx.scene.layout.HBox\" "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        xmlns\u003d\"http://javafx.com/javafx/8.0.171\" "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        \u003cLabel "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                fx:id\u003d\"dialog\" "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                text\u003d\"Label\" "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                wrapText\u003d\"true\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                minHeight\u003d\"-Infinity\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        \u003cImageView "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                fx:id\u003d\"displayPicture\" "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                fitHeight\u003d\"50.0\" "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                fitWidth\u003d\"50.0\" "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                pickOnBounds\u003d\"true\" "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        \u003cInsets "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                bottom\u003d\"15.0\" "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                left\u003d\"5.0\" "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                right\u003d\"5.0\" "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 36
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "\u003cfx:root"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        maxHeight\u003d\"-Infinity\" "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        maxWidth\u003d\"-Infinity\" "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        minHeight\u003d\"-Infinity\" "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        minWidth\u003d\"-Infinity\" "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        prefHeight\u003d\"600.0\" "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        type\u003d\"javafx.scene.layout.AnchorPane\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        xmlns\u003d\"http://javafx.com/javafx/8.0.171\" "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        xmlns:fx\u003d\"http://javafx.com/fxml/1\" \u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        \u003cTextField "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                fx:id\u003d\"userInput\" "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                layoutY\u003d\"558.0\" "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                onAction\u003d\"#handleUserInput\" "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                prefHeight\u003d\"41.0\" "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                prefWidth\u003d\"324.0\" "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        \u003cButton "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                fx:id\u003d\"sendButton\" "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                layoutX\u003d\"324.0\" "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                layoutY\u003d\"558.0\" "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                mnemonicParsing\u003d\"false\" "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                onAction\u003d\"#handleUserInput\" "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                prefHeight\u003d\"41.0\" "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                prefWidth\u003d\"76.0\" "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        \u003cScrollPane "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                fx:id\u003d\"scrollPane\" "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                hbarPolicy\u003d\"NEVER\" "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                hvalue\u003d\"1.0\" "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                prefHeight\u003d\"557.0\" "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                prefWidth\u003d\"400.0\" "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                \u003cVBox "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        fx:id\u003d\"dialogContainer\" "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        prefHeight\u003d\"552.0\" "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                        prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 51
    }
  },
  {
    "path": "src/test/java/viscount/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import org.junit.jupiter.api.DisplayName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import org.junit.jupiter.params.ParameterizedTest;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import org.junit.jupiter.params.provider.ValueSource;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.exception.ViscountIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Event;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Todo;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final List\u003cTask\u003e DEFAULT_TASKS \u003d Arrays.asList("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Todo(\"t1\", false),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Deadline(\"t2\", true, LocalDateTime.of(2020, 8, 24, 10, 0)),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Deadline(\"t3\", false, LocalDateTime.of(2020, 8, 27, 11, 0)),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Event(\"t4\", true, LocalDateTime.of(2020, 8, 24, 11, 0)),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Event(\"t5\", false, LocalDateTime.of(2020, 8, 27, 12, 0)));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @DisplayName(\"Add task\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void addTask_newTask_success() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e testedCopy \u003d new ArrayList\u003c\u003e(DEFAULT_TASKS);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e expectedResult \u003d new ArrayList\u003c\u003e(DEFAULT_TASKS);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Task newTask \u003d new Todo(\"t6\", false);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        TaskList taskList \u003d new TaskList(testedCopy);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        expectedResult.add(newTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e actualResult \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assertArrayEquals(expectedResult.toArray(), actualResult.toArray());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @ParameterizedTest"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @ValueSource(ints \u003d {0, 2, 4})"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @DisplayName(\"Mark task as done with valid input\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void markDone_validInput_success(int taskIndex) throws ViscountIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e testedCopy \u003d new ArrayList\u003c\u003e(DEFAULT_TASKS);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e expectedResult \u003d new ArrayList\u003c\u003e(DEFAULT_TASKS);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        TaskList taskList \u003d new TaskList(testedCopy);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        taskList.markDone(taskIndex);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        expectedResult.get(taskIndex).setDone(true);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e actualResult \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assertArrayEquals(expectedResult.toArray(), actualResult.toArray());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @ParameterizedTest"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @ValueSource(ints \u003d {0, 2, 4})"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @DisplayName(\"Remove task with valid input\")"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void removeTask_validInput_success(int taskIndex) throws ViscountIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e testedCopy \u003d new ArrayList\u003c\u003e(DEFAULT_TASKS);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e expectedResult \u003d new ArrayList\u003c\u003e(DEFAULT_TASKS);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        TaskList taskList \u003d new TaskList(testedCopy);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        taskList.remove(taskIndex);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        expectedResult.remove(taskIndex);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e actualResult \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assertArrayEquals(expectedResult.toArray(), actualResult.toArray());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @ParameterizedTest"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @ValueSource(ints \u003d {0, 2, 4})"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @DisplayName(\"Get task with valid input\")"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void getTask_validInput_success(int taskIndex) throws ViscountIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e testedCopy \u003d new ArrayList\u003c\u003e(DEFAULT_TASKS);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e expectedCopy \u003d new ArrayList\u003c\u003e(DEFAULT_TASKS);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        TaskList taskList \u003d new TaskList(testedCopy);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Task expectedResult \u003d expectedCopy.get(taskIndex);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        Task actualResult \u003d taskList.getTask(taskIndex);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 95
    }
  },
  {
    "path": "src/test/java/viscount/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "package viscount;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import org.junit.jupiter.api.DisplayName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "import viscount.task.Todo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String TICK_ICON \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final String CROSS_ICON \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    private static final List\u003cTask\u003e DEFAULT_TASKS \u003d Arrays.asList("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Todo(\"t1\", false),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Deadline(\"t2\", true, LocalDateTime.of(2020, 8, 24, 10, 0)),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Deadline(\"t3\", false, LocalDateTime.of(2020, 8, 27, 11, 0)),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Event(\"t4\", true, LocalDateTime.of(2020, 8, 24, 11, 0)),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "            new Event(\"t5\", false, LocalDateTime.of(2020, 8, 27, 12, 0)));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @DisplayName(\"Get welcome message\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void getWelcomeMessage_invokeMethod_success() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String expectedResult \u003d \"Good day to you! I\u0027m Viscount.\\nWhat can I do for you on this blessed day?\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String actualResult \u003d new Ui().getWelcomeMessage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @DisplayName(\"Get list response with empty modifier and empty date string\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void getListResponse_emptyModifierAndDate_success() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String expectedResult \u003d \"Here are the tasks in your list:\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                + \"1.[T][\" + CROSS_ICON + \"] t1\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                + \"2.[D][\" + TICK_ICON + \"] t2 (by: Aug 24 2020, 10:00)\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                + \"3.[D][\" + CROSS_ICON + \"] t3 (by: Aug 27 2020, 11:00)\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                + \"4.[E][\" + TICK_ICON + \"] t4 (at: Aug 24 2020, 11:00)\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                + \"5.[E][\" + CROSS_ICON + \"] t5 (at: Aug 27 2020, 12:00)\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String actualResult \u003d new Ui().getListResponse(DEFAULT_TASKS, \"\", \"\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @DisplayName(\"Get list response with specified date\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void getListResponse_specifiedDate_success() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String expectedResult \u003d \"Here are the tasks occurring on Aug 24 2020 in your list:\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                + \"1.[D][\" + TICK_ICON + \"] t2 (by: Aug 24 2020, 10:00)\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                + \"2.[E][\" + TICK_ICON + \"] t4 (at: Aug 24 2020, 11:00)\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e filteredTasks \u003d Arrays.asList("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                new Deadline(\"t2\", true, LocalDateTime.of(2020, 8, 24, 10, 0)),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                new Event(\"t4\", true, LocalDateTime.of(2020, 8, 24, 11, 0)));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String actualResult \u003d new Ui().getListResponse(filteredTasks, \"\", \"Aug 24 2020\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @DisplayName(\"Get list response with today date\")"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void getListResponse_todayDate_success() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String expectedResult \u003d \"Here are the tasks occurring today in your list:\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                + \"1.[D][\" + CROSS_ICON + \"] t3 (by: Aug 27 2020, 11:00)\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                + \"2.[E][\" + CROSS_ICON + \"] t5 (at: Aug 27 2020, 12:00)\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e filteredTasks \u003d Arrays.asList("
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                new Deadline(\"t3\", false, LocalDateTime.of(2020, 8, 27, 11, 0)),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                new Event(\"t5\", false, LocalDateTime.of(2020, 8, 27, 12, 0)));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String actualResult \u003d new Ui().getListResponse(filteredTasks, \"\", \"today\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @DisplayName(\"Get list response with specified modifier\")"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void getListResponse_specifiedModifier_success() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String expectedResult \u003d \"Here are the deadlines in your list:\\n\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                + \"1.[D][\" + TICK_ICON + \"] t2 (by: Aug 24 2020, 10:00)\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                + \"2.[D][\" + CROSS_ICON + \"] t3 (by: Aug 27 2020, 11:00)\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e filteredTasks \u003d Arrays.asList("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                new Deadline(\"t2\", true, LocalDateTime.of(2020, 8, 24, 10, 0)),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                new Deadline(\"t3\", false, LocalDateTime.of(2020, 8, 27, 11, 0)));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String actualResult \u003d new Ui().getListResponse(filteredTasks, \"deadline\", \"\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @DisplayName(\"Get list response with specified modifier and date string\")"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void getListResponse_specifiedModifierAndDate_success() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String expectedResult \u003d \"Here are the deadlines occurring on Aug 24 2020 in your list:\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                + \"1.[D][\" + TICK_ICON + \"] t2 (by: Aug 24 2020, 10:00)\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        List\u003cTask\u003e filteredTasks \u003d Arrays.asList("
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                new Deadline(\"t2\", true, LocalDateTime.of(2020, 8, 24, 10, 0)));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String actualResult \u003d new Ui().getListResponse(filteredTasks, \"deadline\", \"Aug 24 2020\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @DisplayName(\"Get add task response\")"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void getAddResponse_task_success() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String expectedResult \u003d \"Very well. I\u0027ve added this todo:\\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                + \"[T][\" + CROSS_ICON + \"] t1\\n\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                + \"Now you have 1 tasks in the list.\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String actualResult \u003d new Ui().getAddResponse(new Todo(\"t1\", false), 1);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @DisplayName(\"Get done task response\")"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void getDoneResponse_task_success() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String expectedResult \u003d \"Very good! I have marked this todo as done:\\n\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                + \"[T][\" + TICK_ICON + \"] t1\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String actualResult \u003d new Ui().getDoneResponse(new Todo(\"t1\", true));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    @DisplayName(\"Get delete task response\")"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    public void getDeleteResponse_task_success() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String expectedResult \u003d \"Very well. I\u0027ve removed this todo:\\n\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                + \"[T][\" + TICK_ICON + \"] t1\\n\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "                + \"Now you have 0 tasks in the list.\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        String actualResult \u003d new Ui().getDeleteResponse(new Todo(\"t1\", true), 0);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 145
    }
  },
  {
    "path": "text-ui-test/input1.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "blah"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "add blah"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "add todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "add todo t1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "add deadline"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "add deadline /by"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "add deadline t2 /by"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "add deadline t2 /by wednesday"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "add deadline t2 /by 23-08-2020 1400"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "add deadline t3 /by 26-08-2020"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 11
    }
  },
  {
    "path": "text-ui-test/input2.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "add event"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "add event /at"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "add event t4 /at"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "add event t4 /at 6pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "add event t4 /at 23-08-2020 1800"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "add event t5 /at 26-08-2020 1900"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list blah"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list /on"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list todo /on"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list /on 26-08-2020"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list deadline /on today"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list event /on 26-08-2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "done a"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 24
    }
  },
  {
    "path": "text-ui-test/input3.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "delete"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "delete a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "add todo t3t4t5"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "add deadline t2t3t4 /by 23-08-2020 1000"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list /find t3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list /find t2 /on 23-08-2020"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "list /on 23-08-2020 /find t2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ../src/main/java/viscount/*.java ../src/main/java/viscount/command/*.java ../src/main/java/viscount/exception/*.java ../src/main/java/viscount/task/*.java ../src/main/java/viscount/gui/*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "REM run the program, feed commands from the input files and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "java -classpath ..\\bin viscount.Viscount \u003c input1.txt \u003e\u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "java -classpath ..\\bin viscount.Viscount \u003c input2.txt \u003e\u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "java -classpath ..\\bin viscount.Viscount \u003c input3.txt \u003e\u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "REM delete data afterwards"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "del data\\viscount.txt"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 10,
      "-": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/viscount/*.java ../src/main/java/viscount/command/*.java ../src/main/java/viscount/exception/*.java ../src/main/java/viscount/task/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "# run the program, feed commands from input files and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "java -classpath ../bin viscount.Viscount \u003c input1.txt \u003e\u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "java -classpath ../bin viscount.Viscount \u003c input2.txt \u003e\u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "java -classpath ../bin viscount.Viscount \u003c input3.txt \u003e\u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "# delete data afterwards"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "if [ -e \"data/viscount.txt\" ]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "then"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "    rm data/viscount.txt"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sc-arecrow"
        },
        "content": "fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "sc-arecrow": 13,
      "-": 35
    }
  }
]
