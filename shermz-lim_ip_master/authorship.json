[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"shermz-lim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"shermz-lim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"shermz-lim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"shermz-lim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"shermz-lim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"shermz-lim"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"shermz-lim"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"shermz-lim"},"content":"    enableAssertions \u003d true"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"shermz-lim":18,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"# Duke User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"Duke is a desktop app that helps you keep track of your tasks so that you can have a peace of mind."},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":"You can interact with Duke, the friendly chat bot and task manager, via a Command Line Interface (CLI)."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"## Quick start "},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":"1. Ensure you have `Java 11` or above installed in your computer."},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"2. Copy the `duke.jar` file to the folder you want to use as the home folder for Duke."},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":"3. Open your terminal and navigate to the home folder for Duke."},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"4. Run `java -jar duke.jar` to start the program."},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"Refer to the Features section below for details of the commands available."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"### Listing all the tasks - `list`"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"Format: `list`"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"Lists all the tasks currently in your task list."},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"There are 3 types of tasks: `Todo`, `Deadline`, and `Event`"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"Expected outcome:\u003cbr/\u003e"},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"All the tasks  will be printed with a task number."},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"shermz-lim"},"content":"### Listing tasks on a date - `list`"},{"lineNumber":27,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":28,"author":{"gitId":"shermz-lim"},"content":"Format: `list YYYY-MM-DD`"},{"lineNumber":29,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":30,"author":{"gitId":"shermz-lim"},"content":"Lists all the deadlines and events occurring on a date stated in the format YYYY-MM-DD. "},{"lineNumber":31,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":32,"author":{"gitId":"shermz-lim"},"content":"Example of usage:\u003cbr/\u003e"},{"lineNumber":33,"author":{"gitId":"shermz-lim"},"content":"`list 2020-09-20` will list all the deadlines and events on 20th Sept 2020."},{"lineNumber":34,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":35,"author":{"gitId":"shermz-lim"},"content":"Expected outcome:\u003cbr/\u003e"},{"lineNumber":36,"author":{"gitId":"shermz-lim"},"content":"All the deadlines and events occurring on YYYY-MM-DD will be printed."},{"lineNumber":37,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":38,"author":{"gitId":"shermz-lim"},"content":"### Creating Todo task - `todo`"},{"lineNumber":39,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":40,"author":{"gitId":"shermz-lim"},"content":"Format: `todo TODO_DESCRIPTION`"},{"lineNumber":41,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":42,"author":{"gitId":"shermz-lim"},"content":"Creates a task of Todo type. The description of this todo task should be stated in `TODO_DESCRIPTION`."},{"lineNumber":43,"author":{"gitId":"shermz-lim"},"content":"It cannot be left empty."},{"lineNumber":44,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":45,"author":{"gitId":"shermz-lim"},"content":"Example of usage:\u003cbr/\u003e"},{"lineNumber":46,"author":{"gitId":"shermz-lim"},"content":"`todo borrow book` will create a todo task with description \u0027borrow book\u0027"},{"lineNumber":47,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":48,"author":{"gitId":"shermz-lim"},"content":"Expected outcome:\u003cbr/\u003e"},{"lineNumber":49,"author":{"gitId":"shermz-lim"},"content":"The successfully created todo task will be printed."},{"lineNumber":50,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":51,"author":{"gitId":"shermz-lim"},"content":"### Creating Deadline task - `deadline`"},{"lineNumber":52,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":53,"author":{"gitId":"shermz-lim"},"content":"Format: `deadline DEADLINE_DESCRIPTION /by DEADLINE_BY`"},{"lineNumber":54,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":55,"author":{"gitId":"shermz-lim"},"content":"Creates a task of Deadline type.\u003cbr/\u003e"},{"lineNumber":56,"author":{"gitId":"shermz-lim"},"content":"The description of this deadline task should be stated in `DEADLINE_DESCRIPTION`."},{"lineNumber":57,"author":{"gitId":"shermz-lim"},"content":"It cannot be left empty.\u003cbr/\u003e"},{"lineNumber":58,"author":{"gitId":"shermz-lim"},"content":"The date or datetime that this deadline should be completed by has to be given in `DEADLINE_BY`."},{"lineNumber":59,"author":{"gitId":"shermz-lim"},"content":"`DEADLINE_BY` can be in the format `YYYY-MM-DD` (date format) or `YYYY-MM-DDTHH:MM:SS` (datetime format)."},{"lineNumber":60,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":61,"author":{"gitId":"shermz-lim"},"content":"Example of usage:\u003cbr/\u003e"},{"lineNumber":62,"author":{"gitId":"shermz-lim"},"content":"`deadline return book /by 2020-09-20`"},{"lineNumber":63,"author":{"gitId":"shermz-lim"},"content":"will create a deadline task with description \u0027return book\u0027 due by 20th Sept 2020.\u003cbr/\u003e"},{"lineNumber":64,"author":{"gitId":"shermz-lim"},"content":"`deadline return book /by 2020-09-20T23:59:00`"},{"lineNumber":65,"author":{"gitId":"shermz-lim"},"content":"will create a deadline task with description \u0027return book\u0027 due by 20th Sept 2020, 11.59pm."},{"lineNumber":66,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":67,"author":{"gitId":"shermz-lim"},"content":"Expected outcome:\u003cbr/\u003e"},{"lineNumber":68,"author":{"gitId":"shermz-lim"},"content":"The successfully created deadline task will be printed."},{"lineNumber":69,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":70,"author":{"gitId":"shermz-lim"},"content":"### Creating Event task - `event`"},{"lineNumber":71,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":72,"author":{"gitId":"shermz-lim"},"content":"Format: `event EVENT_DESCRIPTION /at EVENT_AT`"},{"lineNumber":73,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":74,"author":{"gitId":"shermz-lim"},"content":"Creates a task of Event type.\u003cbr/\u003e"},{"lineNumber":75,"author":{"gitId":"shermz-lim"},"content":"The description of this event task should be stated in `EVENT_DESCRIPTION`."},{"lineNumber":76,"author":{"gitId":"shermz-lim"},"content":"It cannot be left empty.\u003cbr/\u003e"},{"lineNumber":77,"author":{"gitId":"shermz-lim"},"content":"The date or datetime that this event is at has to be given in `EVENT_AT`."},{"lineNumber":78,"author":{"gitId":"shermz-lim"},"content":"`EVENT_AT` can be in the format `YYYY-MM-DD` (date format) or `YYYY-MM-DDTHH:MM:SS` (datetime format)."},{"lineNumber":79,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":80,"author":{"gitId":"shermz-lim"},"content":"Example of usage:\u003cbr/\u003e"},{"lineNumber":81,"author":{"gitId":"shermz-lim"},"content":"`event midterms /at 2020-09-29`"},{"lineNumber":82,"author":{"gitId":"shermz-lim"},"content":"will create an event task with description \u0027midterms\u0027 happening at 29th Sept 2020.\u003cbr/\u003e"},{"lineNumber":83,"author":{"gitId":"shermz-lim"},"content":"`event midterms /at 2020-09-29T16:30:00`"},{"lineNumber":84,"author":{"gitId":"shermz-lim"},"content":"will create an event task with description \u0027midterms\u0027 happening at 29th Sept 2020, 4.30pm."},{"lineNumber":85,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":86,"author":{"gitId":"shermz-lim"},"content":"Expected outcome:\u003cbr/\u003e"},{"lineNumber":87,"author":{"gitId":"shermz-lim"},"content":"The successfully created event task will be printed."},{"lineNumber":88,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":89,"author":{"gitId":"shermz-lim"},"content":"### Tagging a task - `tag`"},{"lineNumber":90,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":91,"author":{"gitId":"shermz-lim"},"content":"Format: `tag TASK_NUMBER TAG_DESCRIPTION`"},{"lineNumber":92,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":93,"author":{"gitId":"shermz-lim"},"content":"Tags the task indicated by TASK_NUMBER (shown in `list`) with the TAG_DESCRIPTION."},{"lineNumber":94,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":95,"author":{"gitId":"shermz-lim"},"content":"Example of usage:\u003cbr/\u003e"},{"lineNumber":96,"author":{"gitId":"shermz-lim"},"content":"`tag 2 groceries` will tag the 2nd task in the list with the \u0027#groceries\u0027 tag."},{"lineNumber":97,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":98,"author":{"gitId":"shermz-lim"},"content":"Expected outcome:\u003cbr/\u003e"},{"lineNumber":99,"author":{"gitId":"shermz-lim"},"content":"The successfully tagged task will be printed."},{"lineNumber":100,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":101,"author":{"gitId":"shermz-lim"},"content":"### Finding tasks - `find`"},{"lineNumber":102,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":103,"author":{"gitId":"shermz-lim"},"content":"Format: `find KEYWORD`"},{"lineNumber":104,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":105,"author":{"gitId":"shermz-lim"},"content":"Finds all the tasks that has descriptions containing KEYWORD."},{"lineNumber":106,"author":{"gitId":"shermz-lim"},"content":"If KEYWORD starts with a \u0027#\u0027, this command will find all the tasks that has the tag KEYWORD."},{"lineNumber":107,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":108,"author":{"gitId":"shermz-lim"},"content":"Example of usage:\u003cbr/\u003e"},{"lineNumber":109,"author":{"gitId":"shermz-lim"},"content":"`find book` will find all the tasks that contains \u0027book\u0027 in its description."},{"lineNumber":110,"author":{"gitId":"shermz-lim"},"content":"`find #groceries` will find all the tasks with the \u0027groceries\u0027 tag."},{"lineNumber":111,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":112,"author":{"gitId":"shermz-lim"},"content":"Expected outcome:\u003cbr/\u003e"},{"lineNumber":113,"author":{"gitId":"shermz-lim"},"content":"All the tasks found will be printed."},{"lineNumber":114,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":115,"author":{"gitId":"shermz-lim"},"content":"### Marking tasks as done - `done`"},{"lineNumber":116,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":117,"author":{"gitId":"shermz-lim"},"content":"Format: `done TASK_NUMBER`"},{"lineNumber":118,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":119,"author":{"gitId":"shermz-lim"},"content":"Marks the task with TASK_NUMBER (shown in `list`) as completed."},{"lineNumber":120,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":121,"author":{"gitId":"shermz-lim"},"content":"Example of usage:\u003cbr/\u003e"},{"lineNumber":122,"author":{"gitId":"shermz-lim"},"content":"`done 2` will mark the 2nd task as done."},{"lineNumber":123,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":124,"author":{"gitId":"shermz-lim"},"content":"Expected outcome:\u003cbr/\u003e"},{"lineNumber":125,"author":{"gitId":"shermz-lim"},"content":"The task marked as done will be printed."},{"lineNumber":126,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":127,"author":{"gitId":"shermz-lim"},"content":"### Deleting tasks - `delete`"},{"lineNumber":128,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":129,"author":{"gitId":"shermz-lim"},"content":"Format: `delete TASK_NUMBER`"},{"lineNumber":130,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":131,"author":{"gitId":"shermz-lim"},"content":"Deletes the task with TASK_NUMBER (shown in `list`)."},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"shermz-lim"},"content":"Example of usage:\u003cbr/\u003e"},{"lineNumber":134,"author":{"gitId":"shermz-lim"},"content":"`delete 2` will delete the 2nd task."},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"shermz-lim"},"content":"Expected outcome:\u003cbr/\u003e"},{"lineNumber":137,"author":{"gitId":"shermz-lim"},"content":"The task deleted will be printed."},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"shermz-lim"},"content":"### Exiting the program - `bye`"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"shermz-lim"},"content":"Format: `bye`"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"shermz-lim"},"content":"Exits the program."},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"shermz-lim"},"content":"### Saving the data"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"shermz-lim"},"content":"All data will be saved automatically after any command that changes the data."},{"lineNumber":148,"author":{"gitId":"shermz-lim"},"content":"The data will be saved in `/data/duke.txt`"}],"authorContributionMap":{"shermz-lim":131,"-":17}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":" * containing text from the speaker."},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"public class DialogBox extends HBox {"},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"    private Label dialog;"},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"shermz-lim"},"content":"    private ImageView displayPicture;"},{"lineNumber":26,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":27,"author":{"gitId":"shermz-lim"},"content":"    private DialogBox(String text, Image img, boolean isErrorMessage) {"},{"lineNumber":28,"author":{"gitId":"shermz-lim"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"shermz-lim"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":30,"author":{"gitId":"shermz-lim"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":31,"author":{"gitId":"shermz-lim"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":32,"author":{"gitId":"shermz-lim"},"content":"            fxmlLoader.load();"},{"lineNumber":33,"author":{"gitId":"shermz-lim"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"shermz-lim"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":37,"author":{"gitId":"shermz-lim"},"content":"        dialog.setText(text);"},{"lineNumber":38,"author":{"gitId":"shermz-lim"},"content":"        displayPicture.setImage(img);"},{"lineNumber":39,"author":{"gitId":"shermz-lim"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);"},{"lineNumber":40,"author":{"gitId":"shermz-lim"},"content":"        if (isErrorMessage) {"},{"lineNumber":41,"author":{"gitId":"shermz-lim"},"content":"            dialog.setTextFill(Color.web(\"#ff3333\"));"},{"lineNumber":42,"author":{"gitId":"shermz-lim"},"content":"            dialog.setUnderline(true);"},{"lineNumber":43,"author":{"gitId":"shermz-lim"},"content":"        } else {"},{"lineNumber":44,"author":{"gitId":"shermz-lim"},"content":"            dialog.setTextFill(Color.web(\"#0076a3\"));"},{"lineNumber":45,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":48,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"shermz-lim"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":50,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"shermz-lim"},"content":"    private void flip() {"},{"lineNumber":52,"author":{"gitId":"shermz-lim"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":53,"author":{"gitId":"shermz-lim"},"content":"        Collections.reverse(tmp);"},{"lineNumber":54,"author":{"gitId":"shermz-lim"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":55,"author":{"gitId":"shermz-lim"},"content":"        setAlignment(Pos.CENTER_LEFT);"},{"lineNumber":56,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":58,"author":{"gitId":"shermz-lim"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":59,"author":{"gitId":"shermz-lim"},"content":"        return new DialogBox(text, img, false);"},{"lineNumber":60,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":62,"author":{"gitId":"shermz-lim"},"content":"    public static DialogBox getDukeDialog(String text, Image img, boolean isErrorMessage) {"},{"lineNumber":63,"author":{"gitId":"shermz-lim"},"content":"        var db \u003d new DialogBox(text, img, isErrorMessage);"},{"lineNumber":64,"author":{"gitId":"shermz-lim"},"content":"        db.flip();"},{"lineNumber":65,"author":{"gitId":"shermz-lim"},"content":"        return db;"},{"lineNumber":66,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":67}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"import seedu.duke.Duke;"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":" * A GUI for Duke using FXML."},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"public class Main extends Application {"},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");"},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"    public void start(Stage stage) {"},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"            stage.setScene(scene);"},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"            stage.setTitle(\"Duke\");"},{"lineNumber":25,"author":{"gitId":"shermz-lim"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":26,"author":{"gitId":"shermz-lim"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().dukeWelcome();"},{"lineNumber":27,"author":{"gitId":"shermz-lim"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"shermz-lim"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"shermz-lim"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":32}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"import seedu.duke.Duke;"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"    private VBox dialogContainer;"},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"    private TextField userInput;"},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"    private Button sendButton;"},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"    private Duke duke;"},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":25,"author":{"gitId":"shermz-lim"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":26,"author":{"gitId":"shermz-lim"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":27,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":28,"author":{"gitId":"shermz-lim"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"shermz-lim"},"content":"    public void initialize() {"},{"lineNumber":30,"author":{"gitId":"shermz-lim"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":31,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":33,"author":{"gitId":"shermz-lim"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":34,"author":{"gitId":"shermz-lim"},"content":"        duke \u003d d;"},{"lineNumber":35,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":37,"author":{"gitId":"shermz-lim"},"content":"    public void dukeWelcome() {"},{"lineNumber":38,"author":{"gitId":"shermz-lim"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.getWelcomeMessage(), dukeImage, false));"},{"lineNumber":39,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":41,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"shermz-lim"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":43,"author":{"gitId":"shermz-lim"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":44,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"shermz-lim"},"content":"    @FXML"},{"lineNumber":46,"author":{"gitId":"shermz-lim"},"content":"    private void handleUserInput() {"},{"lineNumber":47,"author":{"gitId":"shermz-lim"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":48,"author":{"gitId":"shermz-lim"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":49,"author":{"gitId":"shermz-lim"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":50,"author":{"gitId":"shermz-lim"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":51,"author":{"gitId":"shermz-lim"},"content":"                DialogBox.getDukeDialog(response, dukeImage, duke.hasError())"},{"lineNumber":52,"author":{"gitId":"shermz-lim"},"content":"        );"},{"lineNumber":53,"author":{"gitId":"shermz-lim"},"content":"        userInput.clear();"},{"lineNumber":54,"author":{"gitId":"shermz-lim"},"content":"        if (duke.getExitProgram()) {"},{"lineNumber":55,"author":{"gitId":"shermz-lim"},"content":"            System.exit(0);"},{"lineNumber":56,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":58}},{"path":"src/main/java/seedu/duke/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":" * Represents a command to add a task to the task list."},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"public class AddCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":"    private final CommandType addType;"},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"    private final String description;"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":"    private final String datetime;"},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"     * Initializes the add command."},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"     * @param addType The type of task to add."},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"     * @param description The description of the task."},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"     * @param datetime The datetime for the task if any."},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"    public AddCommand(CommandType addType, String description, String datetime) {"},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"        this.addType \u003d addType;"},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"        this.description \u003d description;"},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"        this.datetime \u003d datetime;"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"     * Adds the task to the task list provided and shows the output to the user."},{"lineNumber":25,"author":{"gitId":"shermz-lim"},"content":"     * Saves the new task list to the disk as well."},{"lineNumber":26,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"shermz-lim"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"shermz-lim"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":29,"author":{"gitId":"shermz-lim"},"content":"        Task task;"},{"lineNumber":30,"author":{"gitId":"shermz-lim"},"content":"        if (addType \u003d\u003d CommandType.TODO) {"},{"lineNumber":31,"author":{"gitId":"shermz-lim"},"content":"            task \u003d new Todo(description);"},{"lineNumber":32,"author":{"gitId":"shermz-lim"},"content":"        } else if (addType \u003d\u003d CommandType.DEADLINE) {"},{"lineNumber":33,"author":{"gitId":"shermz-lim"},"content":"            task \u003d new Deadline(description, datetime);"},{"lineNumber":34,"author":{"gitId":"shermz-lim"},"content":"        } else if (addType \u003d\u003d CommandType.EVENT) {"},{"lineNumber":35,"author":{"gitId":"shermz-lim"},"content":"            task \u003d new Event(description, datetime);"},{"lineNumber":36,"author":{"gitId":"shermz-lim"},"content":"        } else {"},{"lineNumber":37,"author":{"gitId":"shermz-lim"},"content":"            throw new DukeException(\"Unknown add command.\");"},{"lineNumber":38,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"shermz-lim"},"content":"        tasks.addTask(task);"},{"lineNumber":40,"author":{"gitId":"shermz-lim"},"content":"        ui.showTaskAdded(task, tasks.size());"},{"lineNumber":41,"author":{"gitId":"shermz-lim"},"content":"        storage.saveTaskList(tasks);"},{"lineNumber":42,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":43}},{"path":"src/main/java/seedu/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":" * Represents an executable command that can be given by the user."},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"public abstract class Command {"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":"     * Executes the command."},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"     * @param tasks The current task list."},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"     * @param ui UI class for user interaction."},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"     * @param storage Storage class for saving task list."},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"     * @throws DukeException Throws DukeException if there is an error executing the command."},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"     * Returns whether the program should be exited after executing this command."},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"     * @return Whether the program should be exited."},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"    public boolean isExit() {"},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"        return false;"},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":24}},{"path":"src/main/java/seedu/duke/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":" * Represents the different types of command that the user can input"},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"public enum CommandType {"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":"    BYE(\"bye\"),"},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"    LIST(\"list\"),"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":"    DONE(\"done\"),"},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"    DELETE(\"delete\"),"},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"    TODO(\"todo\"),"},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"    DEADLINE(\"deadline\"),"},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"    EVENT(\"event\"),"},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"    FIND(\"find\"),"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"    TAG(\"tag\");"},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"    private final String name;"},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"    CommandType(String name) {"},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"        this.name \u003d name;"},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"    public String getName() {"},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"        return this.name;"},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":25}},{"path":"src/main/java/seedu/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":" * Represents a deadline that the user has."},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"public class Deadline extends Task {"},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"    private String by;"},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"    private LocalDate byDate;"},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"    private LocalDateTime byDateTime;"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"     * Initializes a deadline with its description, and when it will be."},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"     * @param description The description of the deadline."},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"     * @param by When the deadline will be."},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"        super(description);"},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"        this.by \u003d by;"},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"        this.setByDateAndTime();"},{"lineNumber":25,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":27,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"shermz-lim"},"content":"     * Initializes a deadline with its description, whether it is done, and when it will be."},{"lineNumber":29,"author":{"gitId":"shermz-lim"},"content":"     * @param description The description of the deadline."},{"lineNumber":30,"author":{"gitId":"shermz-lim"},"content":"     * @param isDone Whether the deadline is done."},{"lineNumber":31,"author":{"gitId":"shermz-lim"},"content":"     * @param by When the event will be."},{"lineNumber":32,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"shermz-lim"},"content":"    public Deadline(String description, boolean isDone, String by, String tag) {"},{"lineNumber":34,"author":{"gitId":"shermz-lim"},"content":"        super(description, isDone, tag);"},{"lineNumber":35,"author":{"gitId":"shermz-lim"},"content":"        this.by \u003d by;"},{"lineNumber":36,"author":{"gitId":"shermz-lim"},"content":"        this.setByDateAndTime();"},{"lineNumber":37,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":39,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"shermz-lim"},"content":"     * Sets the date or datetime object of when this deadline will be upon initializing it,"},{"lineNumber":41,"author":{"gitId":"shermz-lim"},"content":"     * based on the String \"by\" input."},{"lineNumber":42,"author":{"gitId":"shermz-lim"},"content":"     * If the input cannot be parsed, no action will be done."},{"lineNumber":43,"author":{"gitId":"shermz-lim"},"content":"     * To set just the date, the format of \"by\" has to be \"YYYY-MM-DD\" e.g. \"2019-03-04\"."},{"lineNumber":44,"author":{"gitId":"shermz-lim"},"content":"     * To set both the datetime and date,"},{"lineNumber":45,"author":{"gitId":"shermz-lim"},"content":"     * the format of \"by\" has to be \"YYYY-MM-DD\u0027T\u0027HH:mm:ss\" e.g. \"2019-03-04T00:05:02\"."},{"lineNumber":46,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"shermz-lim"},"content":"    private void setByDateAndTime() {"},{"lineNumber":48,"author":{"gitId":"shermz-lim"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"shermz-lim"},"content":"            this.byDateTime \u003d LocalDateTime.parse(this.by);"},{"lineNumber":50,"author":{"gitId":"shermz-lim"},"content":"            this.byDate \u003d this.byDateTime.toLocalDate();"},{"lineNumber":51,"author":{"gitId":"shermz-lim"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":52,"author":{"gitId":"shermz-lim"},"content":"            try {"},{"lineNumber":53,"author":{"gitId":"shermz-lim"},"content":"                this.byDate \u003d LocalDate.parse(this.by);"},{"lineNumber":54,"author":{"gitId":"shermz-lim"},"content":"            } catch (DateTimeParseException ignored) {"},{"lineNumber":55,"author":{"gitId":"shermz-lim"},"content":"                // by is not in the format of localDate or localDateTime"},{"lineNumber":56,"author":{"gitId":"shermz-lim"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":60,"author":{"gitId":"shermz-lim"},"content":"    public String getBy() {"},{"lineNumber":61,"author":{"gitId":"shermz-lim"},"content":"        return this.by;"},{"lineNumber":62,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":64,"author":{"gitId":"shermz-lim"},"content":"    private String getFormattedBy() {"},{"lineNumber":65,"author":{"gitId":"shermz-lim"},"content":"        if (this.byDateTime !\u003d null) {"},{"lineNumber":66,"author":{"gitId":"shermz-lim"},"content":"            return this.byDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm:ss a\"));"},{"lineNumber":67,"author":{"gitId":"shermz-lim"},"content":"        } else if (this.byDate !\u003d null) {"},{"lineNumber":68,"author":{"gitId":"shermz-lim"},"content":"            return this.byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":69,"author":{"gitId":"shermz-lim"},"content":"        } else {"},{"lineNumber":70,"author":{"gitId":"shermz-lim"},"content":"            return this.by;"},{"lineNumber":71,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":74,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"shermz-lim"},"content":"     * Returns whether the deadline is happening on a particular date."},{"lineNumber":76,"author":{"gitId":"shermz-lim"},"content":"     * @param date The date."},{"lineNumber":77,"author":{"gitId":"shermz-lim"},"content":"     * @return Whether the deadline is due by the date."},{"lineNumber":78,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"shermz-lim"},"content":"    public boolean isOnDate(LocalDate date) {"},{"lineNumber":80,"author":{"gitId":"shermz-lim"},"content":"        if (this.byDate !\u003d null) {"},{"lineNumber":81,"author":{"gitId":"shermz-lim"},"content":"            return date.compareTo(this.byDate) \u003d\u003d 0;"},{"lineNumber":82,"author":{"gitId":"shermz-lim"},"content":"        } else {"},{"lineNumber":83,"author":{"gitId":"shermz-lim"},"content":"            return false;"},{"lineNumber":84,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":87,"author":{"gitId":"shermz-lim"},"content":"    @Override"},{"lineNumber":88,"author":{"gitId":"shermz-lim"},"content":"    public String toString() {"},{"lineNumber":89,"author":{"gitId":"shermz-lim"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getFormattedBy() + \")\";"},{"lineNumber":90,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":91}},{"path":"src/main/java/seedu/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":" * Represents a command to delete a task from the task list."},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":"    private final int index;"},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"     * Initializes delete command with the index the user inputted."},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"     * @param index The index of the task which the user wants to delete."},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"    public DeleteCommand(int index) {"},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"        this.index \u003d index;"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"     * Deletes the task from the task list and shows the task deleted to the user."},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"     * Saves the new task list to the disk as well."},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"        Task taskDeleted \u003d tasks.deleteTask(index - 1);"},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"        ui.showTaskDeleted(taskDeleted, tasks.size());"},{"lineNumber":25,"author":{"gitId":"shermz-lim"},"content":"        storage.saveTaskList(tasks);"},{"lineNumber":26,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":27}},{"path":"src/main/java/seedu/duke/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":" * Represents a command to mark a task as done."},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"public class DoneCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":"    private final int index;"},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"     * Initializes done command with the index the user inputted."},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"     * @param index The index of the task which the user wants to mark as done."},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"    public DoneCommand(int index) {"},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"        this.index \u003d index;"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"     * Marks the task from the task list as done and shows the task to the user."},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"     * Saves the new task list to the disk as well."},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"        Task taskMarkedDone \u003d tasks.markTaskDone(index - 1);"},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"        ui.showTaskDone(taskMarkedDone);"},{"lineNumber":25,"author":{"gitId":"shermz-lim"},"content":"        storage.saveTaskList(tasks);"},{"lineNumber":26,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":27}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":" * Represents the chat bot program"},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"    private Storage storage;"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":"    private TaskList tasks;"},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"    private Ui ui;"},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"    private boolean exitProgram;"},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"    private boolean hasError;"},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"     * Initializes Duke with the file path of the data file to be used for storage"},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"     * Also initializes the Ui and TaskList."},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"     * @param filePath The file path to the data file"},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"    public Duke(String filePath) {"},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"        this.storage \u003d new Storage(filePath);"},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"        this.exitProgram \u003d false;"},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"            this.tasks \u003d new TaskList(this.storage.load());"},{"lineNumber":25,"author":{"gitId":"shermz-lim"},"content":"        } catch (DukeException e) {"},{"lineNumber":26,"author":{"gitId":"shermz-lim"},"content":"            this.tasks \u003d new TaskList();"},{"lineNumber":27,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":30,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"shermz-lim"},"content":"     * Returns welcome message for duke program"},{"lineNumber":32,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"shermz-lim"},"content":"    public String getWelcomeMessage() {"},{"lineNumber":34,"author":{"gitId":"shermz-lim"},"content":"        this.ui.clearOutputMessage();"},{"lineNumber":35,"author":{"gitId":"shermz-lim"},"content":"        this.ui.showWelcome();"},{"lineNumber":36,"author":{"gitId":"shermz-lim"},"content":"        return ui.getOutputMessage();"},{"lineNumber":37,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":39,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"shermz-lim"},"content":"     * Returns the output of Duke based on the user\u0027s input and decide whether to exit program"},{"lineNumber":41,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"shermz-lim"},"content":"    public String getResponse(String input) {"},{"lineNumber":43,"author":{"gitId":"shermz-lim"},"content":"        assert !this.exitProgram;"},{"lineNumber":44,"author":{"gitId":"shermz-lim"},"content":"        ui.clearOutputMessage();"},{"lineNumber":45,"author":{"gitId":"shermz-lim"},"content":"        this.hasError \u003d false;"},{"lineNumber":46,"author":{"gitId":"shermz-lim"},"content":"        assert ui.getOutputMessage().length() \u003d\u003d 0;"},{"lineNumber":47,"author":{"gitId":"shermz-lim"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"shermz-lim"},"content":"            Command command \u003d Parser.parse(input);"},{"lineNumber":49,"author":{"gitId":"shermz-lim"},"content":"            command.execute(tasks, ui, storage);"},{"lineNumber":50,"author":{"gitId":"shermz-lim"},"content":"            this.exitProgram \u003d command.isExit();"},{"lineNumber":51,"author":{"gitId":"shermz-lim"},"content":"        } catch (DukeException err) {"},{"lineNumber":52,"author":{"gitId":"shermz-lim"},"content":"            ui.showError(err.getMessage());"},{"lineNumber":53,"author":{"gitId":"shermz-lim"},"content":"            this.hasError \u003d true;"},{"lineNumber":54,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"shermz-lim"},"content":"        assert ui.getOutputMessage().length() \u003e 0;"},{"lineNumber":56,"author":{"gitId":"shermz-lim"},"content":"        return ui.getOutputMessage();"},{"lineNumber":57,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":59,"author":{"gitId":"shermz-lim"},"content":"    public boolean getExitProgram() {"},{"lineNumber":60,"author":{"gitId":"shermz-lim"},"content":"        return this.exitProgram;"},{"lineNumber":61,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":63,"author":{"gitId":"shermz-lim"},"content":"    public boolean hasError() {"},{"lineNumber":64,"author":{"gitId":"shermz-lim"},"content":"        return this.hasError;"},{"lineNumber":65,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"shermz-lim":64,"-":2}},{"path":"src/main/java/seedu/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":" * Represents exceptions for the Duke program"},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":"        super(errorMessage);"},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"        return \"OOPS!!! \" + super.toString();"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":16}},{"path":"src/main/java/seedu/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":" * Represents an event that the user has."},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"public class Event extends Task {"},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"    private String at;"},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"    private LocalDate atDate;"},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"    private LocalDateTime atDateTime;"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"     * Initializes an event with its description, and when it will be."},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"     * @param description The description of the event."},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"     * @param at When the event will be at."},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"    public Event(String description, String at) {"},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"        super(description);"},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"        this.at \u003d at;"},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"        this.setAtDateAndTime();"},{"lineNumber":25,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":27,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"shermz-lim"},"content":"     * Initializes an event with its description, whether it is done, and when it will be."},{"lineNumber":29,"author":{"gitId":"shermz-lim"},"content":"     * @param description The description of the event."},{"lineNumber":30,"author":{"gitId":"shermz-lim"},"content":"     * @param isDone Whether the event is done."},{"lineNumber":31,"author":{"gitId":"shermz-lim"},"content":"     * @param at When the event will be at."},{"lineNumber":32,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"shermz-lim"},"content":"    public Event(String description, boolean isDone, String at, String tag) {"},{"lineNumber":34,"author":{"gitId":"shermz-lim"},"content":"        super(description, isDone, tag);"},{"lineNumber":35,"author":{"gitId":"shermz-lim"},"content":"        this.at \u003d at;"},{"lineNumber":36,"author":{"gitId":"shermz-lim"},"content":"        this.setAtDateAndTime();"},{"lineNumber":37,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":39,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"shermz-lim"},"content":"     * Sets the date or datetime object of when this event will be upon initializing it, based on the String \"at\" input."},{"lineNumber":41,"author":{"gitId":"shermz-lim"},"content":"     * If the input cannot be parsed, no action will be done."},{"lineNumber":42,"author":{"gitId":"shermz-lim"},"content":"     * To set just the date, the format of \"at\" has to be \"YYYY-MM-DD\" e.g. \"2019-03-04\"."},{"lineNumber":43,"author":{"gitId":"shermz-lim"},"content":"     * To set both the datetime and date,"},{"lineNumber":44,"author":{"gitId":"shermz-lim"},"content":"     * the format of \"at\" has to be \"YYYY-MM-DD\u0027T\u0027HH:mm:ss\" e.g. \"2019-03-04T00:05:02\"."},{"lineNumber":45,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"shermz-lim"},"content":"    private void setAtDateAndTime() {"},{"lineNumber":47,"author":{"gitId":"shermz-lim"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"shermz-lim"},"content":"            this.atDateTime \u003d LocalDateTime.parse(this.at);"},{"lineNumber":49,"author":{"gitId":"shermz-lim"},"content":"            this.atDate \u003d this.atDateTime.toLocalDate();"},{"lineNumber":50,"author":{"gitId":"shermz-lim"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":51,"author":{"gitId":"shermz-lim"},"content":"            try {"},{"lineNumber":52,"author":{"gitId":"shermz-lim"},"content":"                this.atDate \u003d LocalDate.parse(this.at);"},{"lineNumber":53,"author":{"gitId":"shermz-lim"},"content":"            } catch (DateTimeParseException ignored) {"},{"lineNumber":54,"author":{"gitId":"shermz-lim"},"content":"                // at is not in format of localDate or localDateTime."},{"lineNumber":55,"author":{"gitId":"shermz-lim"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":59,"author":{"gitId":"shermz-lim"},"content":"    public String getAt() {"},{"lineNumber":60,"author":{"gitId":"shermz-lim"},"content":"        return this.at;"},{"lineNumber":61,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":63,"author":{"gitId":"shermz-lim"},"content":"    private String getFormattedAt() {"},{"lineNumber":64,"author":{"gitId":"shermz-lim"},"content":"        if (this.atDateTime !\u003d null) {"},{"lineNumber":65,"author":{"gitId":"shermz-lim"},"content":"            return this.atDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm:ss a\"));"},{"lineNumber":66,"author":{"gitId":"shermz-lim"},"content":"        } else if (this.atDate !\u003d null) {"},{"lineNumber":67,"author":{"gitId":"shermz-lim"},"content":"            return this.atDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":68,"author":{"gitId":"shermz-lim"},"content":"        } else {"},{"lineNumber":69,"author":{"gitId":"shermz-lim"},"content":"            return this.at;"},{"lineNumber":70,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":73,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"shermz-lim"},"content":"     * Returns whether this event is happening on a particular date."},{"lineNumber":75,"author":{"gitId":"shermz-lim"},"content":"     * @param date The date."},{"lineNumber":76,"author":{"gitId":"shermz-lim"},"content":"     * @return Whether this event is on the date input."},{"lineNumber":77,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"shermz-lim"},"content":"    public boolean isOnDate(LocalDate date) {"},{"lineNumber":79,"author":{"gitId":"shermz-lim"},"content":"        if (this.atDate !\u003d null) {"},{"lineNumber":80,"author":{"gitId":"shermz-lim"},"content":"            return date.compareTo(this.atDate) \u003d\u003d 0;"},{"lineNumber":81,"author":{"gitId":"shermz-lim"},"content":"        } else {"},{"lineNumber":82,"author":{"gitId":"shermz-lim"},"content":"            return false;"},{"lineNumber":83,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":86,"author":{"gitId":"shermz-lim"},"content":"    @Override"},{"lineNumber":87,"author":{"gitId":"shermz-lim"},"content":"    public String toString() {"},{"lineNumber":88,"author":{"gitId":"shermz-lim"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.getFormattedAt() + \")\";"},{"lineNumber":89,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":90}},{"path":"src/main/java/seedu/duke/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":" * Represents a command to exit from the program."},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"public class ExitCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":"     * Shows the goodbye message to the user."},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"        ui.showGoodbye();"},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"     * Returns that this is an exit program command."},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"    public boolean isExit() {"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"        return true;"},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":23}},{"path":"src/main/java/seedu/duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":" * Represents a command to find all the tasks with a particular keyword."},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"public class FindCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":"    private final String keyword;"},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"     * Initializes the command with the keyword."},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"     * @param keyword The keyword to be used to filter the tasks that have a matching description."},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"     * Filters the task list with the keyword and show it to the user."},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"        ui.showTasksFound(tasks.getListOfTasksWithKeyword(this.keyword));"},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":24}},{"path":"src/main/java/seedu/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":" * Represents a command to list tasks."},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"public class ListCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":"    private LocalDate date;"},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"    public ListCommand() {}"},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"    public ListCommand(LocalDate date) {"},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"        this.date \u003d date;"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"     * Lists tasks that can be filtered by the date if initialized with it."},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"        if (date !\u003d null) {"},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"            ui.showTasksOnDate(tasks.getListOfTasksOnDate(date), date);"},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"        } else {"},{"lineNumber":25,"author":{"gitId":"shermz-lim"},"content":"            ui.showAllTasks(tasks.getListOfTasks());"},{"lineNumber":26,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":28}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":"import java.util.Arrays;"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":" * Handles the parsing of user input to identify the command given by user."},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"public class Parser {"},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"     * Parses the string input provided by the user and returns the executable Command object."},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"     * @param fullCommand The string input provided by the user."},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"     * @return The Command identified from the user\u0027s input."},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"     * @throws DukeException Throws DukeException when the command cannot be identified, or is not valid."},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"    public static Command parse(String fullCommand) throws DukeException {"},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"        String[] commandArgs \u003d fullCommand.split(\" \");"},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"        assert commandArgs.length \u003e 0;"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"        if (commandArgs[0].equals(CommandType.BYE.getName())) {"},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"            return new ExitCommand();"},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"        } else if (commandArgs[0].equals(CommandType.LIST.getName())) {"},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"            return createListCommand(commandArgs);"},{"lineNumber":25,"author":{"gitId":"shermz-lim"},"content":"        } else if (commandArgs[0].equals(CommandType.DONE.getName())) {"},{"lineNumber":26,"author":{"gitId":"shermz-lim"},"content":"            return createDoneCommand(commandArgs);"},{"lineNumber":27,"author":{"gitId":"shermz-lim"},"content":"        } else if (commandArgs[0].equals(CommandType.DELETE.getName())) {"},{"lineNumber":28,"author":{"gitId":"shermz-lim"},"content":"            return createDeleteCommand(commandArgs);"},{"lineNumber":29,"author":{"gitId":"shermz-lim"},"content":"        } else if (commandArgs[0].equals(CommandType.TODO.getName())) {"},{"lineNumber":30,"author":{"gitId":"shermz-lim"},"content":"            return createAddTodoCommand(commandArgs);"},{"lineNumber":31,"author":{"gitId":"shermz-lim"},"content":"        } else if (commandArgs[0].equals(CommandType.DEADLINE.getName())) {"},{"lineNumber":32,"author":{"gitId":"shermz-lim"},"content":"            return createAddDeadlineCommand(commandArgs);"},{"lineNumber":33,"author":{"gitId":"shermz-lim"},"content":"        } else if (commandArgs[0].equals(CommandType.EVENT.getName())) {"},{"lineNumber":34,"author":{"gitId":"shermz-lim"},"content":"            return createAddEventCommand(commandArgs);"},{"lineNumber":35,"author":{"gitId":"shermz-lim"},"content":"        } else if (commandArgs[0].equals(CommandType.FIND.getName())) {"},{"lineNumber":36,"author":{"gitId":"shermz-lim"},"content":"            return createFindCommand(commandArgs);"},{"lineNumber":37,"author":{"gitId":"shermz-lim"},"content":"        } else if (commandArgs[0].equals(CommandType.TAG.getName())) {"},{"lineNumber":38,"author":{"gitId":"shermz-lim"},"content":"            return createTagCommand(commandArgs);"},{"lineNumber":39,"author":{"gitId":"shermz-lim"},"content":"        } else {"},{"lineNumber":40,"author":{"gitId":"shermz-lim"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means...\");"},{"lineNumber":41,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":44,"author":{"gitId":"shermz-lim"},"content":"    private static ListCommand createListCommand(String[] commandArgs) {"},{"lineNumber":45,"author":{"gitId":"shermz-lim"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"shermz-lim"},"content":"            return new ListCommand(LocalDate.parse(commandArgs[1]));"},{"lineNumber":47,"author":{"gitId":"shermz-lim"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {"},{"lineNumber":48,"author":{"gitId":"shermz-lim"},"content":"            return new ListCommand();"},{"lineNumber":49,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":52,"author":{"gitId":"shermz-lim"},"content":"    private static DoneCommand createDoneCommand(String[] commandArgs) throws DukeException {"},{"lineNumber":53,"author":{"gitId":"shermz-lim"},"content":"        try {"},{"lineNumber":54,"author":{"gitId":"shermz-lim"},"content":"            return new DoneCommand(Integer.parseInt(commandArgs[1]));"},{"lineNumber":55,"author":{"gitId":"shermz-lim"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"},{"lineNumber":56,"author":{"gitId":"shermz-lim"},"content":"            throw new DukeException(\"The number of the task to be marked as done has to be provided.\");"},{"lineNumber":57,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":60,"author":{"gitId":"shermz-lim"},"content":"    private static DeleteCommand createDeleteCommand(String[] commandArgs) throws DukeException {"},{"lineNumber":61,"author":{"gitId":"shermz-lim"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"shermz-lim"},"content":"            return new DeleteCommand(Integer.parseInt(commandArgs[1]));"},{"lineNumber":63,"author":{"gitId":"shermz-lim"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"},{"lineNumber":64,"author":{"gitId":"shermz-lim"},"content":"            throw new DukeException(\"The number of the task to be deleted has to be provided.\");"},{"lineNumber":65,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":68,"author":{"gitId":"shermz-lim"},"content":"    private static AddCommand createAddTodoCommand(String[] commandArgs) throws DukeException {"},{"lineNumber":69,"author":{"gitId":"shermz-lim"},"content":"        String description \u003d Parser.reassembleString(commandArgs, 1, commandArgs.length);"},{"lineNumber":70,"author":{"gitId":"shermz-lim"},"content":"        if (description.equals(\"\")) {"},{"lineNumber":71,"author":{"gitId":"shermz-lim"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");"},{"lineNumber":72,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"shermz-lim"},"content":"        return new AddCommand(CommandType.TODO, description, null);"},{"lineNumber":74,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":76,"author":{"gitId":"shermz-lim"},"content":"    private static AddCommand createAddDeadlineCommand(String[] commandArgs) throws DukeException {"},{"lineNumber":77,"author":{"gitId":"shermz-lim"},"content":"        int byIdx \u003d Arrays.asList(commandArgs).indexOf(\"/by\");"},{"lineNumber":78,"author":{"gitId":"shermz-lim"},"content":"        if (byIdx \u003c 0) {"},{"lineNumber":79,"author":{"gitId":"shermz-lim"},"content":"            throw new DukeException(\"The deadline date has to be provided to the deadline task.\");"},{"lineNumber":80,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":82,"author":{"gitId":"shermz-lim"},"content":"        String description \u003d Parser.reassembleString(commandArgs, 1, byIdx);"},{"lineNumber":83,"author":{"gitId":"shermz-lim"},"content":"        String by \u003d Parser.reassembleString(commandArgs, byIdx + 1, commandArgs.length);"},{"lineNumber":84,"author":{"gitId":"shermz-lim"},"content":"        if (description.equals(\"\")) {"},{"lineNumber":85,"author":{"gitId":"shermz-lim"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");"},{"lineNumber":86,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"shermz-lim"},"content":"        if (by.equals(\"\")) {"},{"lineNumber":88,"author":{"gitId":"shermz-lim"},"content":"            throw new DukeException(\"The date of a deadline cannot be empty.\");"},{"lineNumber":89,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":91,"author":{"gitId":"shermz-lim"},"content":"        return new AddCommand(CommandType.DEADLINE, description, by);"},{"lineNumber":92,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":94,"author":{"gitId":"shermz-lim"},"content":"    private static AddCommand createAddEventCommand(String[] commandArgs) throws DukeException {"},{"lineNumber":95,"author":{"gitId":"shermz-lim"},"content":"        int atIdx \u003d Arrays.asList(commandArgs).indexOf(\"/at\");"},{"lineNumber":96,"author":{"gitId":"shermz-lim"},"content":"        if (atIdx \u003c 0) {"},{"lineNumber":97,"author":{"gitId":"shermz-lim"},"content":"            throw new DukeException(\"The event date has to be provided to the event task.\");"},{"lineNumber":98,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"shermz-lim"},"content":"        String description \u003d Parser.reassembleString(commandArgs, 1, atIdx);"},{"lineNumber":100,"author":{"gitId":"shermz-lim"},"content":"        String at \u003d Parser.reassembleString(commandArgs, atIdx + 1, commandArgs.length);"},{"lineNumber":101,"author":{"gitId":"shermz-lim"},"content":"        if (description.equals(\"\")) {"},{"lineNumber":102,"author":{"gitId":"shermz-lim"},"content":"            throw new DukeException(\"The description of an event cannot be empty.\");"},{"lineNumber":103,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"shermz-lim"},"content":"        if (at.equals(\"\")) {"},{"lineNumber":105,"author":{"gitId":"shermz-lim"},"content":"            throw new DukeException(\"The date of an event cannot be empty.\");"},{"lineNumber":106,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"shermz-lim"},"content":"        return new AddCommand(CommandType.EVENT, description, at);"},{"lineNumber":108,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":110,"author":{"gitId":"shermz-lim"},"content":"    private static FindCommand createFindCommand(String[] commandArgs) throws DukeException {"},{"lineNumber":111,"author":{"gitId":"shermz-lim"},"content":"        String keyword \u003d Parser.reassembleString(commandArgs, 1, commandArgs.length);"},{"lineNumber":112,"author":{"gitId":"shermz-lim"},"content":"        if (keyword.length() \u003d\u003d 0) {"},{"lineNumber":113,"author":{"gitId":"shermz-lim"},"content":"            throw new DukeException(\"The keyword has to be provided for the find command\");"},{"lineNumber":114,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"shermz-lim"},"content":"        return new FindCommand(keyword);"},{"lineNumber":116,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":118,"author":{"gitId":"shermz-lim"},"content":"    private static TagCommand createTagCommand(String[] commandArgs) throws DukeException {"},{"lineNumber":119,"author":{"gitId":"shermz-lim"},"content":"        int idx;"},{"lineNumber":120,"author":{"gitId":"shermz-lim"},"content":"        try {"},{"lineNumber":121,"author":{"gitId":"shermz-lim"},"content":"            idx \u003d Integer.parseInt(commandArgs[1]);"},{"lineNumber":122,"author":{"gitId":"shermz-lim"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"},{"lineNumber":123,"author":{"gitId":"shermz-lim"},"content":"            throw new DukeException(\"The number of the task to be tagged has to be provided.\");"},{"lineNumber":124,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"shermz-lim"},"content":"        String tag \u003d Parser.reassembleString(commandArgs, 2, commandArgs.length);"},{"lineNumber":126,"author":{"gitId":"shermz-lim"},"content":"        if (tag.length() \u003d\u003d 0) {"},{"lineNumber":127,"author":{"gitId":"shermz-lim"},"content":"            throw new DukeException(\"The tag has to be provided for the tag command\");"},{"lineNumber":128,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"shermz-lim"},"content":"        return new TagCommand(idx, tag);"},{"lineNumber":130,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":132,"author":{"gitId":"shermz-lim"},"content":"    private static String reassembleString(String[] arr, int from, int to) {"},{"lineNumber":133,"author":{"gitId":"shermz-lim"},"content":"        assert from \u003e\u003d 0 \u0026\u0026 to \u003c\u003d arr.length;"},{"lineNumber":134,"author":{"gitId":"shermz-lim"},"content":"        return String.join(\" \", Arrays.copyOfRange(arr, from, to));"},{"lineNumber":135,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":136}},{"path":"src/main/java/seedu/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":" * Handles the loading of task list data from the disk and the saving of task list data to the disk."},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"public class Storage {"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"    private static final String TODO_FORMAT \u003d \"T\";"},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"    private static final String EVENT_FORMAT \u003d \"E\";"},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"    private static final String DEADLINE_FORMAT \u003d \"D\";"},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"    private static final String SEPARATOR \u003d \"/\";"},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"    private final File file;"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"     * Initializes storage with the path to the data file."},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"     * @param filePath The relative path to the file which data is to be loaded from and saved to."},{"lineNumber":25,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"shermz-lim"},"content":"    public Storage(String filePath) {"},{"lineNumber":27,"author":{"gitId":"shermz-lim"},"content":"        this.file \u003d new File(filePath);"},{"lineNumber":28,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":30,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"shermz-lim"},"content":"     * Loads the task list data from the file and returns the task list as a List of tasks."},{"lineNumber":32,"author":{"gitId":"shermz-lim"},"content":"     * If the file does not exist, create it and then return an empty list as the task list."},{"lineNumber":33,"author":{"gitId":"shermz-lim"},"content":"     * @return List of tasks."},{"lineNumber":34,"author":{"gitId":"shermz-lim"},"content":"     * @throws DukeException Throws DukeException when the task cannot be loaded from the file."},{"lineNumber":35,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"shermz-lim"},"content":"    public List\u003cTask\u003e load() throws DukeException {"},{"lineNumber":37,"author":{"gitId":"shermz-lim"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"shermz-lim"},"content":"            if (this.file.exists()) {"},{"lineNumber":39,"author":{"gitId":"shermz-lim"},"content":"                ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":40,"author":{"gitId":"shermz-lim"},"content":"                Scanner scn \u003d new Scanner(this.file);"},{"lineNumber":41,"author":{"gitId":"shermz-lim"},"content":"                while (scn.hasNextLine()) {"},{"lineNumber":42,"author":{"gitId":"shermz-lim"},"content":"                    Task task \u003d convertFormatToTask(scn.nextLine());"},{"lineNumber":43,"author":{"gitId":"shermz-lim"},"content":"                    taskList.add(task);"},{"lineNumber":44,"author":{"gitId":"shermz-lim"},"content":"                }"},{"lineNumber":45,"author":{"gitId":"shermz-lim"},"content":"                scn.close();"},{"lineNumber":46,"author":{"gitId":"shermz-lim"},"content":"                return taskList;"},{"lineNumber":47,"author":{"gitId":"shermz-lim"},"content":"            } else {"},{"lineNumber":48,"author":{"gitId":"shermz-lim"},"content":"                this.file.getParentFile().mkdirs();"},{"lineNumber":49,"author":{"gitId":"shermz-lim"},"content":"                this.file.createNewFile();"},{"lineNumber":50,"author":{"gitId":"shermz-lim"},"content":"                return new ArrayList\u003c\u003e();"},{"lineNumber":51,"author":{"gitId":"shermz-lim"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"shermz-lim"},"content":"        } catch (IOException e) {"},{"lineNumber":53,"author":{"gitId":"shermz-lim"},"content":"            throw new DukeException(\"Sorry, there is an error loading the data\");"},{"lineNumber":54,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":57,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"shermz-lim"},"content":"     * Saves the task list provided to the file."},{"lineNumber":59,"author":{"gitId":"shermz-lim"},"content":"     * @param tasks The task list to be saved."},{"lineNumber":60,"author":{"gitId":"shermz-lim"},"content":"     * @throws DukeException Throws DukeException when the task list cannot be saved to the file."},{"lineNumber":61,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"shermz-lim"},"content":"    public void saveTaskList(TaskList tasks) throws DukeException {"},{"lineNumber":63,"author":{"gitId":"shermz-lim"},"content":"        FileWriter fileWriter;"},{"lineNumber":64,"author":{"gitId":"shermz-lim"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"shermz-lim"},"content":"            fileWriter \u003d new FileWriter(this.file);"},{"lineNumber":66,"author":{"gitId":"shermz-lim"},"content":"            for (Task task : tasks.getListOfTasks()) {"},{"lineNumber":67,"author":{"gitId":"shermz-lim"},"content":"                fileWriter.write(convertTaskToFormat(task));"},{"lineNumber":68,"author":{"gitId":"shermz-lim"},"content":"                fileWriter.write(System.lineSeparator());"},{"lineNumber":69,"author":{"gitId":"shermz-lim"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"shermz-lim"},"content":"            fileWriter.close();"},{"lineNumber":71,"author":{"gitId":"shermz-lim"},"content":"        } catch (IOException e) {"},{"lineNumber":72,"author":{"gitId":"shermz-lim"},"content":"            throw new DukeException(\"Sorry, there is an error saving the task list here.\");"},{"lineNumber":73,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":76,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"shermz-lim"},"content":"     * Converts the string format in which the task is saved as into the Task object."},{"lineNumber":78,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"shermz-lim"},"content":"    private Task convertFormatToTask(String taskFormat) throws DukeException {"},{"lineNumber":80,"author":{"gitId":"shermz-lim"},"content":"        String[] taskFormatData \u003d taskFormat.split(SEPARATOR);"},{"lineNumber":81,"author":{"gitId":"shermz-lim"},"content":"        String description \u003d taskFormatData[3];"},{"lineNumber":82,"author":{"gitId":"shermz-lim"},"content":"        boolean isDone \u003d convertFormatToIsDone(taskFormatData[1]);"},{"lineNumber":83,"author":{"gitId":"shermz-lim"},"content":"        String tag \u003d taskFormatData[2];"},{"lineNumber":84,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":85,"author":{"gitId":"shermz-lim"},"content":"        switch (taskFormatData[0]) {"},{"lineNumber":86,"author":{"gitId":"shermz-lim"},"content":"        case Storage.TODO_FORMAT:"},{"lineNumber":87,"author":{"gitId":"shermz-lim"},"content":"            return new Todo(description, isDone, tag);"},{"lineNumber":88,"author":{"gitId":"shermz-lim"},"content":"        case Storage.EVENT_FORMAT:"},{"lineNumber":89,"author":{"gitId":"shermz-lim"},"content":"            String at \u003d taskFormatData[4];"},{"lineNumber":90,"author":{"gitId":"shermz-lim"},"content":"            return new Event(description, isDone, at, tag);"},{"lineNumber":91,"author":{"gitId":"shermz-lim"},"content":"        case Storage.DEADLINE_FORMAT:"},{"lineNumber":92,"author":{"gitId":"shermz-lim"},"content":"            String by \u003d taskFormatData[4];"},{"lineNumber":93,"author":{"gitId":"shermz-lim"},"content":"            return new Deadline(description, isDone, by, tag);"},{"lineNumber":94,"author":{"gitId":"shermz-lim"},"content":"        default:"},{"lineNumber":95,"author":{"gitId":"shermz-lim"},"content":"            throw new DukeException(\"Sorry, there is an invalid task format.\");"},{"lineNumber":96,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":99,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"shermz-lim"},"content":"     * Converts the Task object into the string format which it is to be saved as."},{"lineNumber":101,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"shermz-lim"},"content":"    private String convertTaskToFormat(Task task) throws DukeException {"},{"lineNumber":103,"author":{"gitId":"shermz-lim"},"content":"        if (task instanceof Todo) {"},{"lineNumber":104,"author":{"gitId":"shermz-lim"},"content":"            return (String.join(Storage.SEPARATOR,"},{"lineNumber":105,"author":{"gitId":"shermz-lim"},"content":"                    Storage.TODO_FORMAT, convertIsDoneToFormat(task.getIsDone()),"},{"lineNumber":106,"author":{"gitId":"shermz-lim"},"content":"                    task.getTag(), task.getDescription()));"},{"lineNumber":107,"author":{"gitId":"shermz-lim"},"content":"        } else if (task instanceof Event) {"},{"lineNumber":108,"author":{"gitId":"shermz-lim"},"content":"            return (String.join(Storage.SEPARATOR,"},{"lineNumber":109,"author":{"gitId":"shermz-lim"},"content":"                    Storage.EVENT_FORMAT, convertIsDoneToFormat(task.getIsDone()),"},{"lineNumber":110,"author":{"gitId":"shermz-lim"},"content":"                    task.getTag(), task.getDescription(), ((Event) task).getAt()));"},{"lineNumber":111,"author":{"gitId":"shermz-lim"},"content":"        } else if (task instanceof Deadline) {"},{"lineNumber":112,"author":{"gitId":"shermz-lim"},"content":"            return (String.join(Storage.SEPARATOR,"},{"lineNumber":113,"author":{"gitId":"shermz-lim"},"content":"                    Storage.DEADLINE_FORMAT, convertIsDoneToFormat(task.getIsDone()),"},{"lineNumber":114,"author":{"gitId":"shermz-lim"},"content":"                    task.getTag(), task.getDescription(), ((Deadline) task).getBy()));"},{"lineNumber":115,"author":{"gitId":"shermz-lim"},"content":"        } else {"},{"lineNumber":116,"author":{"gitId":"shermz-lim"},"content":"            throw new DukeException(\"Sorry, there is an invalid task item.\");"},{"lineNumber":117,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":120,"author":{"gitId":"shermz-lim"},"content":"    private boolean convertFormatToIsDone(String taskDoneFormat) {"},{"lineNumber":121,"author":{"gitId":"shermz-lim"},"content":"        assert taskDoneFormat.equals(\"1\") || taskDoneFormat.equals(\"0\");"},{"lineNumber":122,"author":{"gitId":"shermz-lim"},"content":"        return taskDoneFormat.equals(\"1\");"},{"lineNumber":123,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":125,"author":{"gitId":"shermz-lim"},"content":"    private String convertIsDoneToFormat(boolean isDone) {"},{"lineNumber":126,"author":{"gitId":"shermz-lim"},"content":"        return isDone ? \"1\" : \"0\";"},{"lineNumber":127,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":128}},{"path":"src/main/java/seedu/duke/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":" * Represents a command to tag a task"},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"public class TagCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":"    private final int index;"},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"    private final String tag;"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"     * Initializes tag command"},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"     * @param index The index of the task user wants to tag"},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"     * @param tag The word which the user wants to tag the task object with"},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"    public TagCommand(int index, String tag) {"},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"        this.index \u003d index;"},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"        this.tag \u003d tag;"},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"     * Tags the task from the task list and shows the task to the user."},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"     * Saves the new task list to the disk as well."},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"shermz-lim"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"shermz-lim"},"content":"        Task taskTagged \u003d tasks.tagTask(index - 1, tag);"},{"lineNumber":27,"author":{"gitId":"shermz-lim"},"content":"        ui.showTaskTagged(taskTagged);"},{"lineNumber":28,"author":{"gitId":"shermz-lim"},"content":"        storage.saveTaskList(tasks);"},{"lineNumber":29,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":30}},{"path":"src/main/java/seedu/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":" * Represents a task that the user has to do."},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":"    protected String tag;"},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"     * Initializes a task that is by default not done yet, and with a description."},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"     * @param description The description for this task."},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"    public Task(String description) {"},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"        this.description \u003d description;"},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"        this.isDone \u003d false;"},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"        this.tag \u003d \"\";"},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"     * Initializes a task with both the description, and whether it is done."},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"     * @param description The description for this task."},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"     * @param isDone Whether this task is completed."},{"lineNumber":25,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"shermz-lim"},"content":"    public Task(String description, boolean isDone, String tag) {"},{"lineNumber":27,"author":{"gitId":"shermz-lim"},"content":"        this.description \u003d description;"},{"lineNumber":28,"author":{"gitId":"shermz-lim"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":29,"author":{"gitId":"shermz-lim"},"content":"        this.tag \u003d tag;"},{"lineNumber":30,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":32,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"shermz-lim"},"content":"     * Returns the description of the task."},{"lineNumber":34,"author":{"gitId":"shermz-lim"},"content":"     * @return Description of task."},{"lineNumber":35,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"shermz-lim"},"content":"    public String getDescription() {"},{"lineNumber":37,"author":{"gitId":"shermz-lim"},"content":"        return this.description;"},{"lineNumber":38,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":40,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"shermz-lim"},"content":"     * Returns whether the task is done."},{"lineNumber":42,"author":{"gitId":"shermz-lim"},"content":"     * @return Whether the task is done."},{"lineNumber":43,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"shermz-lim"},"content":"    public boolean getIsDone() {"},{"lineNumber":45,"author":{"gitId":"shermz-lim"},"content":"        return this.isDone;"},{"lineNumber":46,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":48,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"shermz-lim"},"content":"     * Returns the tag of the task"},{"lineNumber":50,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"shermz-lim"},"content":"    public String getTag() {"},{"lineNumber":52,"author":{"gitId":"shermz-lim"},"content":"        return this.tag;"},{"lineNumber":53,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":55,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"shermz-lim"},"content":"     * Returns a tick icon if this task is done, and a cross icon if this task is not yet done."},{"lineNumber":57,"author":{"gitId":"shermz-lim"},"content":"     * @return The Icon as a String."},{"lineNumber":58,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"shermz-lim"},"content":"    public String getStatusIcon() {"},{"lineNumber":60,"author":{"gitId":"shermz-lim"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":61,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":63,"author":{"gitId":"shermz-lim"},"content":"    @Override"},{"lineNumber":64,"author":{"gitId":"shermz-lim"},"content":"    public String toString() {"},{"lineNumber":65,"author":{"gitId":"shermz-lim"},"content":"        return String.format(\"[%s]%s %s\","},{"lineNumber":66,"author":{"gitId":"shermz-lim"},"content":"                getStatusIcon(), this.tag.length() \u003e 0 ? \"[#\" + this.tag + \"]\" : \"\", this.description);"},{"lineNumber":67,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":69,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"shermz-lim"},"content":"     * Marks this task as done."},{"lineNumber":71,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"shermz-lim"},"content":"    public void markAsDone() {"},{"lineNumber":73,"author":{"gitId":"shermz-lim"},"content":"        this.isDone \u003d true;"},{"lineNumber":74,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":76,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"shermz-lim"},"content":"     * Adds a tag to task object"},{"lineNumber":78,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"shermz-lim"},"content":"    public void addTag(String tag) {"},{"lineNumber":80,"author":{"gitId":"shermz-lim"},"content":"        this.tag \u003d tag;"},{"lineNumber":81,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":82}},{"path":"src/main/java/seedu/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"import java.util.stream.Collectors;"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":" * Represents a list of tasks, and provide methods for user to modify this list of tasks."},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"public class TaskList {"},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"    private List\u003cTask\u003e listOfTasks;"},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"     * Initializes an empty list of tasks."},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"    public TaskList() {"},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"        this.listOfTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"     * Initializes the list of tasks with a pre-existing list."},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"     * @param listOfTasks The pre-existing list of tasks."},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"shermz-lim"},"content":"    public TaskList(List\u003cTask\u003e listOfTasks) {"},{"lineNumber":26,"author":{"gitId":"shermz-lim"},"content":"        this.listOfTasks \u003d listOfTasks;"},{"lineNumber":27,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":29,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"shermz-lim"},"content":"     * Returns the list of tasks as a List."},{"lineNumber":31,"author":{"gitId":"shermz-lim"},"content":"     * @return List of tasks."},{"lineNumber":32,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"shermz-lim"},"content":"    public List\u003cTask\u003e getListOfTasks() {"},{"lineNumber":34,"author":{"gitId":"shermz-lim"},"content":"        return this.listOfTasks;"},{"lineNumber":35,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":37,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"shermz-lim"},"content":"     * Returns the deadlines and events filtered by a particular date."},{"lineNumber":39,"author":{"gitId":"shermz-lim"},"content":"     * @param date The date used to filter the tasks."},{"lineNumber":40,"author":{"gitId":"shermz-lim"},"content":"     * @return List of deadlines and events occurring on the date."},{"lineNumber":41,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"shermz-lim"},"content":"    public List\u003cTask\u003e getListOfTasksOnDate(LocalDate date) {"},{"lineNumber":43,"author":{"gitId":"shermz-lim"},"content":"        return this.listOfTasks.stream().filter(task -\u003e (task instanceof Event \u0026\u0026 ((Event) task).isOnDate(date))"},{"lineNumber":44,"author":{"gitId":"shermz-lim"},"content":"                || (task instanceof Deadline \u0026\u0026 ((Deadline) task).isOnDate(date))).collect(Collectors.toList());"},{"lineNumber":45,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":47,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"shermz-lim"},"content":"     * Returns list of tasks which description contains the keyword or which tag is equal to keyword tag."},{"lineNumber":49,"author":{"gitId":"shermz-lim"},"content":"     * If the keyword contains a \u0027#\u0027 at the start, this method will filter by tags instead."},{"lineNumber":50,"author":{"gitId":"shermz-lim"},"content":"     * @param keyword The keyword or tag to be used to filter the tasks."},{"lineNumber":51,"author":{"gitId":"shermz-lim"},"content":"     * @return The list of tasks."},{"lineNumber":52,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"shermz-lim"},"content":"    public List\u003cTask\u003e getListOfTasksWithKeyword(String keyword) {"},{"lineNumber":54,"author":{"gitId":"shermz-lim"},"content":"        return this.listOfTasks.stream().filter("},{"lineNumber":55,"author":{"gitId":"shermz-lim"},"content":"            task -\u003e keyword.charAt(0) \u003d\u003d \u0027#\u0027"},{"lineNumber":56,"author":{"gitId":"shermz-lim"},"content":"                    ? task.getTag().equals(keyword.substring(1))"},{"lineNumber":57,"author":{"gitId":"shermz-lim"},"content":"                    : task.getDescription().contains(keyword)"},{"lineNumber":58,"author":{"gitId":"shermz-lim"},"content":"        ).collect(Collectors.toList());"},{"lineNumber":59,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":61,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"shermz-lim"},"content":"     * Marks the task at that particular index as done and returns that task."},{"lineNumber":63,"author":{"gitId":"shermz-lim"},"content":"     * @param idx The index to identify the task to be marked as done."},{"lineNumber":64,"author":{"gitId":"shermz-lim"},"content":"     * @return The task that has been marked as done."},{"lineNumber":65,"author":{"gitId":"shermz-lim"},"content":"     * @throws DukeException Throws DukeException when the index given is not valid."},{"lineNumber":66,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"shermz-lim"},"content":"    public Task markTaskDone(int idx) throws DukeException {"},{"lineNumber":68,"author":{"gitId":"shermz-lim"},"content":"        if (idx \u003c 0 || idx \u003e\u003d listOfTasks.size()) {"},{"lineNumber":69,"author":{"gitId":"shermz-lim"},"content":"            throw new DukeException(\"The task cannot be found.\");"},{"lineNumber":70,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"shermz-lim"},"content":"        Task task \u003d listOfTasks.get(idx);"},{"lineNumber":72,"author":{"gitId":"shermz-lim"},"content":"        task.markAsDone();"},{"lineNumber":73,"author":{"gitId":"shermz-lim"},"content":"        assert task.getIsDone();"},{"lineNumber":74,"author":{"gitId":"shermz-lim"},"content":"        return task;"},{"lineNumber":75,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":77,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"shermz-lim"},"content":"     * Delete the task at that particular index and returns that task."},{"lineNumber":79,"author":{"gitId":"shermz-lim"},"content":"     * @param idx The index to identify the task to be deleted."},{"lineNumber":80,"author":{"gitId":"shermz-lim"},"content":"     * @return The task that has been deleted."},{"lineNumber":81,"author":{"gitId":"shermz-lim"},"content":"     * @throws DukeException Throws DukeException when the index given is not valid."},{"lineNumber":82,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"shermz-lim"},"content":"    public Task deleteTask(int idx) throws DukeException {"},{"lineNumber":84,"author":{"gitId":"shermz-lim"},"content":"        if (idx \u003c 0 || idx \u003e\u003d listOfTasks.size()) {"},{"lineNumber":85,"author":{"gitId":"shermz-lim"},"content":"            throw new DukeException(\"The task cannot be found.\");"},{"lineNumber":86,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"shermz-lim"},"content":"        Task task \u003d listOfTasks.get(idx);"},{"lineNumber":88,"author":{"gitId":"shermz-lim"},"content":"        listOfTasks.remove(idx);"},{"lineNumber":89,"author":{"gitId":"shermz-lim"},"content":"        return task;"},{"lineNumber":90,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":92,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"shermz-lim"},"content":"     * Tags the task at that particular index and returns that task."},{"lineNumber":94,"author":{"gitId":"shermz-lim"},"content":"     * @param idx The index to identify the task to be tagged."},{"lineNumber":95,"author":{"gitId":"shermz-lim"},"content":"     * @param tag The word to tag task with."},{"lineNumber":96,"author":{"gitId":"shermz-lim"},"content":"     * @return The task that has been tagged."},{"lineNumber":97,"author":{"gitId":"shermz-lim"},"content":"     * @throws DukeException Throws DukeException when the index given is not valid."},{"lineNumber":98,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"shermz-lim"},"content":"    public Task tagTask(int idx, String tag) throws DukeException {"},{"lineNumber":100,"author":{"gitId":"shermz-lim"},"content":"        if (idx \u003c 0 || idx \u003e\u003d listOfTasks.size()) {"},{"lineNumber":101,"author":{"gitId":"shermz-lim"},"content":"            throw new DukeException(\"The task cannot be found.\");"},{"lineNumber":102,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"shermz-lim"},"content":"        Task task \u003d listOfTasks.get(idx);"},{"lineNumber":104,"author":{"gitId":"shermz-lim"},"content":"        task.addTag(tag);"},{"lineNumber":105,"author":{"gitId":"shermz-lim"},"content":"        return task;"},{"lineNumber":106,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":108,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"shermz-lim"},"content":"     * Adds a task to the list."},{"lineNumber":110,"author":{"gitId":"shermz-lim"},"content":"     * @param task The task to be added."},{"lineNumber":111,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"shermz-lim"},"content":"    public void addTask(Task task) {"},{"lineNumber":113,"author":{"gitId":"shermz-lim"},"content":"        this.listOfTasks.add(task);"},{"lineNumber":114,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":116,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"shermz-lim"},"content":"     * Returns the current size of the task list."},{"lineNumber":118,"author":{"gitId":"shermz-lim"},"content":"     * @return Size of the task list."},{"lineNumber":119,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"shermz-lim"},"content":"    public int size() {"},{"lineNumber":121,"author":{"gitId":"shermz-lim"},"content":"        return this.listOfTasks.size();"},{"lineNumber":122,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":123}},{"path":"src/main/java/seedu/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":" * Represents a Todo that the user has."},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":"     * Initializes the Todo with the description."},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"     * @param description The description of this todo."},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"    public Todo(String description) {"},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"     * Initializes the Todo with the description, and whether it is done."},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"     * @param description The description of this todo."},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"     * @param isDone Whether this todo is done."},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"    public Todo(String description, boolean isDone, String tag) {"},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"        super(description, isDone, tag);"},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":25,"author":{"gitId":"shermz-lim"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"shermz-lim"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"shermz-lim"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":28,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":29}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":" * Handles the output to the user"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":" */"},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"public class Ui {"},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"    private String outputMessage;"},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"     * Initializes the Ui object."},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"    public Ui() {"},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"        this.outputMessage \u003d \"\";"},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"     * Clear the current output message"},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"    public void clearOutputMessage() {"},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"        this.outputMessage \u003d \"\";"},{"lineNumber":25,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":27,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"shermz-lim"},"content":"     * Get the current output message"},{"lineNumber":29,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"shermz-lim"},"content":"    public String getOutputMessage() {"},{"lineNumber":31,"author":{"gitId":"shermz-lim"},"content":"        return this.outputMessage;"},{"lineNumber":32,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":34,"author":{"gitId":"shermz-lim"},"content":"    private void outputLine(String message) {"},{"lineNumber":35,"author":{"gitId":"shermz-lim"},"content":"        this.outputMessage +\u003d message;"},{"lineNumber":36,"author":{"gitId":"shermz-lim"},"content":"        this.outputMessage +\u003d \"\\n\";"},{"lineNumber":37,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":39,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"shermz-lim"},"content":"     * Shows welcome message to user."},{"lineNumber":41,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"shermz-lim"},"content":"    public void showWelcome() {"},{"lineNumber":43,"author":{"gitId":"shermz-lim"},"content":"        String name \u003d \"Duke\";"},{"lineNumber":44,"author":{"gitId":"shermz-lim"},"content":"        this.outputLine(\"Hi! I am \" + name + \", your personal assistant.\");"},{"lineNumber":45,"author":{"gitId":"shermz-lim"},"content":"        this.outputLine(\"How may I help you today?\");"},{"lineNumber":46,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":48,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"shermz-lim"},"content":"     * Shows goodbye message to user."},{"lineNumber":50,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"shermz-lim"},"content":"    public void showGoodbye() {"},{"lineNumber":52,"author":{"gitId":"shermz-lim"},"content":"        this.outputLine(\"Goodbye! Shutting down now...\");"},{"lineNumber":53,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":55,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"shermz-lim"},"content":"     * Shows loading data from disk error to user."},{"lineNumber":57,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"shermz-lim"},"content":"    public void showLoadingError() {"},{"lineNumber":59,"author":{"gitId":"shermz-lim"},"content":"        this.outputLine(\"Sorry, there is an error loading the data\");"},{"lineNumber":60,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":62,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"shermz-lim"},"content":"     * Shows user the errorMessage passed to method."},{"lineNumber":64,"author":{"gitId":"shermz-lim"},"content":"     * @param errorMessage Error message to be shown to the user."},{"lineNumber":65,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"shermz-lim"},"content":"    public void showError(String errorMessage) {"},{"lineNumber":67,"author":{"gitId":"shermz-lim"},"content":"        this.outputLine(errorMessage);"},{"lineNumber":68,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":70,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"shermz-lim"},"content":"     * Shows all the tasks in the task list to the user."},{"lineNumber":72,"author":{"gitId":"shermz-lim"},"content":"     * @param taskList The list of tasks to be shown."},{"lineNumber":73,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"shermz-lim"},"content":"    public void showAllTasks(List\u003cTask\u003e taskList) {"},{"lineNumber":75,"author":{"gitId":"shermz-lim"},"content":"        this.outputLine(\"Here are the tasks in your list:\");"},{"lineNumber":76,"author":{"gitId":"shermz-lim"},"content":"        showTasks(taskList);"},{"lineNumber":77,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":79,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"shermz-lim"},"content":"     * Shows all the deadlines and events for a particular date."},{"lineNumber":81,"author":{"gitId":"shermz-lim"},"content":"     * @param taskList The list of tasks to retrieve the deadlines and events."},{"lineNumber":82,"author":{"gitId":"shermz-lim"},"content":"     * @param date The date used to filter the deadlines and events."},{"lineNumber":83,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"shermz-lim"},"content":"    public void showTasksOnDate(List\u003cTask\u003e taskList, LocalDate date) {"},{"lineNumber":85,"author":{"gitId":"shermz-lim"},"content":"        this.outputLine(String.format("},{"lineNumber":86,"author":{"gitId":"shermz-lim"},"content":"                \"Here are the tasks in your list on %s:\","},{"lineNumber":87,"author":{"gitId":"shermz-lim"},"content":"                date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))));"},{"lineNumber":88,"author":{"gitId":"shermz-lim"},"content":"        showTasks(taskList);"},{"lineNumber":89,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":91,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"shermz-lim"},"content":"     * Shows a task list that has been filtered with a keyword."},{"lineNumber":93,"author":{"gitId":"shermz-lim"},"content":"     * @param taskList The filtered task list."},{"lineNumber":94,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"shermz-lim"},"content":"    public void showTasksFound(List\u003cTask\u003e taskList) {"},{"lineNumber":96,"author":{"gitId":"shermz-lim"},"content":"        if (taskList.size() \u003e 0) {"},{"lineNumber":97,"author":{"gitId":"shermz-lim"},"content":"            this.outputLine(\"Here are the matching tasks in your list:\");"},{"lineNumber":98,"author":{"gitId":"shermz-lim"},"content":"            showTasks(taskList);"},{"lineNumber":99,"author":{"gitId":"shermz-lim"},"content":"        } else {"},{"lineNumber":100,"author":{"gitId":"shermz-lim"},"content":"            this.outputLine(\"There are no matching tasks in your list :(\");"},{"lineNumber":101,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":104,"author":{"gitId":"shermz-lim"},"content":"    private void showTasks(List\u003cTask\u003e taskList) {"},{"lineNumber":105,"author":{"gitId":"shermz-lim"},"content":"        int idx \u003d 1;"},{"lineNumber":106,"author":{"gitId":"shermz-lim"},"content":"        for (Task task : taskList) {"},{"lineNumber":107,"author":{"gitId":"shermz-lim"},"content":"            this.outputLine(String.format(\"%d.%s\", idx, task.toString()));"},{"lineNumber":108,"author":{"gitId":"shermz-lim"},"content":"            idx +\u003d 1;"},{"lineNumber":109,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":112,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"shermz-lim"},"content":"     * Shows the user the task that has been marked done."},{"lineNumber":114,"author":{"gitId":"shermz-lim"},"content":"     * @param task The task that has been marked as done."},{"lineNumber":115,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"shermz-lim"},"content":"    public void showTaskDone(Task task) {"},{"lineNumber":117,"author":{"gitId":"shermz-lim"},"content":"        this.outputLine(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":118,"author":{"gitId":"shermz-lim"},"content":"        printWithIndent(task.toString());"},{"lineNumber":119,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":121,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"shermz-lim"},"content":"     * Shows the user the task that has been deleted, as well as the total number of tasks left."},{"lineNumber":123,"author":{"gitId":"shermz-lim"},"content":"     * @param task The task that has been deleted."},{"lineNumber":124,"author":{"gitId":"shermz-lim"},"content":"     * @param numTasksLeft The total number of tasks left."},{"lineNumber":125,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"shermz-lim"},"content":"    public void showTaskDeleted(Task task, int numTasksLeft) {"},{"lineNumber":127,"author":{"gitId":"shermz-lim"},"content":"        this.outputLine(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":128,"author":{"gitId":"shermz-lim"},"content":"        printWithIndent(task.toString());"},{"lineNumber":129,"author":{"gitId":"shermz-lim"},"content":"        this.outputLine(String.format(\"Now you have %d tasks in the list.\", numTasksLeft));"},{"lineNumber":130,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":132,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"shermz-lim"},"content":"     * Shows the user the task that has been added, as well as the total number of tasks left in the list."},{"lineNumber":134,"author":{"gitId":"shermz-lim"},"content":"     * @param task The task that has been added."},{"lineNumber":135,"author":{"gitId":"shermz-lim"},"content":"     * @param numTasksLeft The total number of tasks left."},{"lineNumber":136,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"shermz-lim"},"content":"    public void showTaskAdded(Task task, int numTasksLeft) {"},{"lineNumber":138,"author":{"gitId":"shermz-lim"},"content":"        this.outputLine(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":139,"author":{"gitId":"shermz-lim"},"content":"        printWithIndent(task.toString());"},{"lineNumber":140,"author":{"gitId":"shermz-lim"},"content":"        this.outputLine(String.format(\"Now you have %d tasks in the list.\", numTasksLeft));"},{"lineNumber":141,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":143,"author":{"gitId":"shermz-lim"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"shermz-lim"},"content":"     * Shows the user the task that has been tagged."},{"lineNumber":145,"author":{"gitId":"shermz-lim"},"content":"     * @param task The task that has been tagged."},{"lineNumber":146,"author":{"gitId":"shermz-lim"},"content":"     */"},{"lineNumber":147,"author":{"gitId":"shermz-lim"},"content":"    public void showTaskTagged(Task task) {"},{"lineNumber":148,"author":{"gitId":"shermz-lim"},"content":"        this.outputLine(\"Got it. I\u0027ve tagged this task:\");"},{"lineNumber":149,"author":{"gitId":"shermz-lim"},"content":"        printWithIndent(task.toString());"},{"lineNumber":150,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":152,"author":{"gitId":"shermz-lim"},"content":"    private void printWithIndent(String str) {"},{"lineNumber":153,"author":{"gitId":"shermz-lim"},"content":"        this.outputLine(\"  \" + str);"},{"lineNumber":154,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":155}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"\u003cfx:root spacing\u003d\"14\" alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"shermz-lim":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"shermz-lim":19}},{"path":"src/test/java/seedu/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"public class TaskListTest {"},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"    public void markTaskDone_indexGiven_success() {"},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"        List\u003cTask\u003e taskList \u003d List.of(new Todo(\"abc\"), new Todo(\"def\"), new Todo(\"ghi\"));"},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"        TaskList tasks \u003d new TaskList(taskList);"},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"            tasks.markTaskDone(1);"},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"            assertTrue(taskList.get(1).getIsDone());"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"        } catch (DukeException e) {"},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"            fail();"},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":26,"author":{"gitId":"shermz-lim"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"shermz-lim"},"content":"    public void addTask_taskGiven_success() {"},{"lineNumber":28,"author":{"gitId":"shermz-lim"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":29,"author":{"gitId":"shermz-lim"},"content":"        TaskList tasks \u003d new TaskList(taskList);"},{"lineNumber":30,"author":{"gitId":"shermz-lim"},"content":"        tasks.addTask(new Todo(\"abc\"));"},{"lineNumber":31,"author":{"gitId":"shermz-lim"},"content":"        assertEquals(tasks.size(), 1);"},{"lineNumber":32,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":33}},{"path":"src/test/java/seedu/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"package seedu.duke;"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":"public class TodoTest {"},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"    public void testGetDescription() {"},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"        Todo todo \u003d new Todo(\"abc\");"},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"        assertEquals(todo.getDescription(), \"abc\");"},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"    public void testGetIsDone_default_false() {"},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"        Todo todo \u003d new Todo(\"abc\");"},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"        assertFalse(todo.getIsDone());"},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"}"}],"authorContributionMap":{"shermz-lim":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shermz-lim"},"content":"list"},{"lineNumber":2,"author":{"gitId":"shermz-lim"},"content":"todo borrow book"},{"lineNumber":3,"author":{"gitId":"shermz-lim"},"content":"done 1"},{"lineNumber":4,"author":{"gitId":"shermz-lim"},"content":"deadline return book /by 30 Aug 0000"},{"lineNumber":5,"author":{"gitId":"shermz-lim"},"content":"list"},{"lineNumber":6,"author":{"gitId":"shermz-lim"},"content":"event dinner with friends /at 25 Aug 1100"},{"lineNumber":7,"author":{"gitId":"shermz-lim"},"content":"event exercise /at monday, wednesday, friday"},{"lineNumber":8,"author":{"gitId":"shermz-lim"},"content":"deadline CS2103 project tasks /by this thursday"},{"lineNumber":9,"author":{"gitId":"shermz-lim"},"content":"todo do my laundry"},{"lineNumber":10,"author":{"gitId":"shermz-lim"},"content":"list"},{"lineNumber":11,"author":{"gitId":"shermz-lim"},"content":"done 6"},{"lineNumber":12,"author":{"gitId":"shermz-lim"},"content":"done 4"},{"lineNumber":13,"author":{"gitId":"shermz-lim"},"content":"list"},{"lineNumber":14,"author":{"gitId":"shermz-lim"},"content":"done 7"},{"lineNumber":15,"author":{"gitId":"shermz-lim"},"content":"done 0"},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"done"},{"lineNumber":17,"author":{"gitId":"shermz-lim"},"content":"done abc"},{"lineNumber":18,"author":{"gitId":"shermz-lim"},"content":"todo"},{"lineNumber":19,"author":{"gitId":"shermz-lim"},"content":"deadline"},{"lineNumber":20,"author":{"gitId":"shermz-lim"},"content":"deadline /by"},{"lineNumber":21,"author":{"gitId":"shermz-lim"},"content":"deadline buy coffee /by"},{"lineNumber":22,"author":{"gitId":"shermz-lim"},"content":"deadline buy coffee /by 4 aug"},{"lineNumber":23,"author":{"gitId":"shermz-lim"},"content":"event"},{"lineNumber":24,"author":{"gitId":"shermz-lim"},"content":"event /at"},{"lineNumber":25,"author":{"gitId":"shermz-lim"},"content":"event watch movie /at"},{"lineNumber":26,"author":{"gitId":"shermz-lim"},"content":"event watch movie /at 5 aug"},{"lineNumber":27,"author":{"gitId":"shermz-lim"},"content":"delete"},{"lineNumber":28,"author":{"gitId":"shermz-lim"},"content":"delete abc"},{"lineNumber":29,"author":{"gitId":"shermz-lim"},"content":"delete 0"},{"lineNumber":30,"author":{"gitId":"shermz-lim"},"content":"delete 10"},{"lineNumber":31,"author":{"gitId":"shermz-lim"},"content":"list"},{"lineNumber":32,"author":{"gitId":"shermz-lim"},"content":"delete 3"},{"lineNumber":33,"author":{"gitId":"shermz-lim"},"content":"list"},{"lineNumber":34,"author":{"gitId":"shermz-lim"},"content":"blah"},{"lineNumber":35,"author":{"gitId":"shermz-lim"},"content":"event coffee chat /at 2019-03-05"},{"lineNumber":36,"author":{"gitId":"shermz-lim"},"content":"event tea chat /at 2019-03-06T00:05:01"},{"lineNumber":37,"author":{"gitId":"shermz-lim"},"content":"deadline cs2103 project /by 2020-08-20"},{"lineNumber":38,"author":{"gitId":"shermz-lim"},"content":"deadline cs2103 project /by 2020-08-20T12:05:20"},{"lineNumber":39,"author":{"gitId":"shermz-lim"},"content":"list 2019-03-05"},{"lineNumber":40,"author":{"gitId":"shermz-lim"},"content":"list abc"},{"lineNumber":41,"author":{"gitId":"shermz-lim"},"content":"find chat"},{"lineNumber":42,"author":{"gitId":"shermz-lim"},"content":"find random things"},{"lineNumber":43,"author":{"gitId":"shermz-lim"},"content":"find cs2103 project"},{"lineNumber":44,"author":{"gitId":"shermz-lim"},"content":"bye"}],"authorContributionMap":{"shermz-lim":44}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"shermz-lim"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"shermz-lim"},"content":"# clean up data file created by program"},{"lineNumber":30,"author":{"gitId":"shermz-lim"},"content":"rm -rf data"},{"lineNumber":31,"author":{"gitId":"shermz-lim"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":33,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":34,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":35,"author":{"gitId":"-"},"content":"then"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":38,"author":{"gitId":"-"},"content":"else"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":41,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"shermz-lim":4,"-":37}}]
