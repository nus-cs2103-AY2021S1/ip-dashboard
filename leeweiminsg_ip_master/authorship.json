[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":5,"author":{"gitId":"leeweiminsg"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.8\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"leeweiminsg"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":15,"author":{"gitId":"leeweiminsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"leeweiminsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"leeweiminsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"leeweiminsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"leeweiminsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"leeweiminsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"leeweiminsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"leeweiminsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"leeweiminsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"leeweiminsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"leeweiminsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"leeweiminsg"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"leeweiminsg"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":59,"author":{"gitId":"leeweiminsg"},"content":"tasks.withType(JavaCompile) {"},{"lineNumber":60,"author":{"gitId":"leeweiminsg"},"content":"    options.encoding \u003d \u0027UTF-8\u0027"},{"lineNumber":61,"author":{"gitId":"leeweiminsg"},"content":"}"}],"authorContributionMap":{"leeweiminsg":21,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leeweiminsg"},"content":"E|true|project meeting|2019-10-15"},{"lineNumber":2,"author":{"gitId":"leeweiminsg"},"content":"T|true|borrow book"},{"lineNumber":3,"author":{"gitId":"leeweiminsg"},"content":"D|false|return book|2019-10-15"},{"lineNumber":4,"author":{"gitId":"leeweiminsg"},"content":"E|false|project meeting|2019-10-15"},{"lineNumber":5,"author":{"gitId":"leeweiminsg"},"content":"D|false|return book|2019-10-15"},{"lineNumber":6,"author":{"gitId":"leeweiminsg"},"content":"D|false|return book|2019-10-15"},{"lineNumber":7,"author":{"gitId":"leeweiminsg"},"content":"T|false|borrow book"},{"lineNumber":8,"author":{"gitId":"leeweiminsg"},"content":"D|false|return book|2019-10-15"},{"lineNumber":9,"author":{"gitId":"leeweiminsg"},"content":"E|true|project meeting|2019-10-15"},{"lineNumber":10,"author":{"gitId":"leeweiminsg"},"content":"T|false|borrow book"},{"lineNumber":11,"author":{"gitId":"leeweiminsg"},"content":"D|false|return book|2019-10-15"},{"lineNumber":12,"author":{"gitId":"leeweiminsg"},"content":"E|false|project meeting|2019-10-15"},{"lineNumber":13,"author":{"gitId":"leeweiminsg"},"content":"T|false|borrow book"},{"lineNumber":14,"author":{"gitId":"leeweiminsg"},"content":"D|false|return book|2019-10-15"},{"lineNumber":15,"author":{"gitId":"leeweiminsg"},"content":"E|false|project meeting|2019-10-15"},{"lineNumber":16,"author":{"gitId":"leeweiminsg"},"content":"T|false|WOOPS"}],"authorContributionMap":{"leeweiminsg":16}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"leeweiminsg"},"content":"Keep track of tasks!"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"leeweiminsg"},"content":"Task types:"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"leeweiminsg"},"content":"- ToDos"},{"lineNumber":10,"author":{"gitId":"leeweiminsg"},"content":"- Deadlines"},{"lineNumber":11,"author":{"gitId":"leeweiminsg"},"content":"- Events"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"leeweiminsg"},"content":"CRUD Operations"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"leeweiminsg"},"content":"### Adding a Task: `add`"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"leeweiminsg"},"content":"Adds a task to the to-do list."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"leeweiminsg"},"content":"Format: `TASKTYPE TASK [SEP] [DEADLINE]`"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"leeweiminsg"},"content":"Examples:"},{"lineNumber":22,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":23,"author":{"gitId":"leeweiminsg"},"content":"- todo borrow book"},{"lineNumber":24,"author":{"gitId":"leeweiminsg"},"content":"- deadline return book /by 2019-10-15"},{"lineNumber":25,"author":{"gitId":"leeweiminsg"},"content":"- event project meeting /at 2019-10-15"},{"lineNumber":26,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":27,"author":{"gitId":"leeweiminsg"},"content":"### Deleting a Task: `delete`"},{"lineNumber":28,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":29,"author":{"gitId":"leeweiminsg"},"content":"Deletes a task at specified INDEX from the to-do list."},{"lineNumber":30,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":31,"author":{"gitId":"leeweiminsg"},"content":"Format: `delete INDEX​`"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"leeweiminsg"},"content":"Eg. delete 2"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"leeweiminsg"},"content":"### List All Tasks: `list`"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"leeweiminsg"},"content":"List all tasks."},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"leeweiminsg"},"content":"Format: `list`"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"leeweiminsg"},"content":"### Complete a Task: `done`"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"leeweiminsg"},"content":"Mark a task as done at the specified INDEX."},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"leeweiminsg"},"content":"Format: `done INDEX`"}],"authorContributionMap":{"leeweiminsg":27,"-":18}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeweiminsg"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":2,"author":{"gitId":"leeweiminsg"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":3,"author":{"gitId":"leeweiminsg"},"content":"import javafx.geometry.Pos;"},{"lineNumber":4,"author":{"gitId":"leeweiminsg"},"content":"import javafx.scene.Node;"},{"lineNumber":5,"author":{"gitId":"leeweiminsg"},"content":"import javafx.scene.control.Label;"},{"lineNumber":6,"author":{"gitId":"leeweiminsg"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":7,"author":{"gitId":"leeweiminsg"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":8,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":9,"author":{"gitId":"leeweiminsg"},"content":"public class DialogBox extends HBox {"},{"lineNumber":10,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":11,"author":{"gitId":"leeweiminsg"},"content":"    private Label text;"},{"lineNumber":12,"author":{"gitId":"leeweiminsg"},"content":"    private ImageView displayPicture;"},{"lineNumber":13,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":14,"author":{"gitId":"leeweiminsg"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":15,"author":{"gitId":"leeweiminsg"},"content":"        text \u003d l;"},{"lineNumber":16,"author":{"gitId":"leeweiminsg"},"content":"        displayPicture \u003d iv;"},{"lineNumber":17,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":18,"author":{"gitId":"leeweiminsg"},"content":"        text.setWrapText(true);"},{"lineNumber":19,"author":{"gitId":"leeweiminsg"},"content":"        displayPicture.setFitWidth(100.0);"},{"lineNumber":20,"author":{"gitId":"leeweiminsg"},"content":"        displayPicture.setFitHeight(100.0);"},{"lineNumber":21,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":22,"author":{"gitId":"leeweiminsg"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":23,"author":{"gitId":"leeweiminsg"},"content":"        this.getChildren().addAll(text, displayPicture);"},{"lineNumber":24,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":26,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"leeweiminsg"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":28,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"leeweiminsg"},"content":"    private void flip() {"},{"lineNumber":30,"author":{"gitId":"leeweiminsg"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":31,"author":{"gitId":"leeweiminsg"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":32,"author":{"gitId":"leeweiminsg"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":33,"author":{"gitId":"leeweiminsg"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":34,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":36,"author":{"gitId":"leeweiminsg"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {"},{"lineNumber":37,"author":{"gitId":"leeweiminsg"},"content":"        return new DialogBox(l, iv);"},{"lineNumber":38,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":40,"author":{"gitId":"leeweiminsg"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {"},{"lineNumber":41,"author":{"gitId":"leeweiminsg"},"content":"        var db \u003d new DialogBox(l, iv);"},{"lineNumber":42,"author":{"gitId":"leeweiminsg"},"content":"        db.flip();"},{"lineNumber":43,"author":{"gitId":"leeweiminsg"},"content":"        return db;"},{"lineNumber":44,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"leeweiminsg"},"content":"}"}],"authorContributionMap":{"leeweiminsg":45}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeweiminsg"},"content":"import java.util.Arrays;"},{"lineNumber":2,"author":{"gitId":"leeweiminsg"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"leeweiminsg"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":5,"author":{"gitId":"leeweiminsg"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":7,"author":{"gitId":"leeweiminsg"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"leeweiminsg"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":9,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":10,"author":{"gitId":"leeweiminsg"},"content":"import javafx.application.Application;"},{"lineNumber":11,"author":{"gitId":"leeweiminsg"},"content":"import javafx.scene.Scene;"},{"lineNumber":12,"author":{"gitId":"leeweiminsg"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"leeweiminsg"},"content":"import javafx.scene.control.Button;"},{"lineNumber":14,"author":{"gitId":"leeweiminsg"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":15,"author":{"gitId":"leeweiminsg"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":16,"author":{"gitId":"leeweiminsg"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":17,"author":{"gitId":"leeweiminsg"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":18,"author":{"gitId":"leeweiminsg"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":19,"author":{"gitId":"leeweiminsg"},"content":"import javafx.stage.Stage;"},{"lineNumber":20,"author":{"gitId":"leeweiminsg"},"content":"import javafx.scene.image.Image;"},{"lineNumber":21,"author":{"gitId":"leeweiminsg"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":22,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":23,"author":{"gitId":"leeweiminsg"},"content":"public class Duke extends Application {"},{"lineNumber":24,"author":{"gitId":"leeweiminsg"},"content":"    private boolean isClosed \u003d false;"},{"lineNumber":25,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":26,"author":{"gitId":"leeweiminsg"},"content":"    private Storage db;"},{"lineNumber":27,"author":{"gitId":"leeweiminsg"},"content":"    private Parser parser;"},{"lineNumber":28,"author":{"gitId":"leeweiminsg"},"content":"    private Ui ui;"},{"lineNumber":29,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":30,"author":{"gitId":"leeweiminsg"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":31,"author":{"gitId":"leeweiminsg"},"content":"    private VBox dialogContainer;"},{"lineNumber":32,"author":{"gitId":"leeweiminsg"},"content":"    private TextField userInput;"},{"lineNumber":33,"author":{"gitId":"leeweiminsg"},"content":"    private Button sendButton;"},{"lineNumber":34,"author":{"gitId":"leeweiminsg"},"content":"    private Scene scene;"},{"lineNumber":35,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":36,"author":{"gitId":"leeweiminsg"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":37,"author":{"gitId":"leeweiminsg"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":38,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":39,"author":{"gitId":"leeweiminsg"},"content":"    public Duke() throws IOException {"},{"lineNumber":40,"author":{"gitId":"leeweiminsg"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"leeweiminsg"},"content":"            db \u003d new Storage();"},{"lineNumber":42,"author":{"gitId":"leeweiminsg"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":43,"author":{"gitId":"leeweiminsg"},"content":"            throw e;"},{"lineNumber":44,"author":{"gitId":"leeweiminsg"},"content":"        } catch (IOException e) {"},{"lineNumber":45,"author":{"gitId":"leeweiminsg"},"content":"            throw e;"},{"lineNumber":46,"author":{"gitId":"leeweiminsg"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":48,"author":{"gitId":"leeweiminsg"},"content":"        ui \u003d new Ui();"},{"lineNumber":49,"author":{"gitId":"leeweiminsg"},"content":"        parser \u003d new Parser();"},{"lineNumber":50,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":52,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"leeweiminsg"},"content":"     * Returns List of tasks."},{"lineNumber":54,"author":{"gitId":"leeweiminsg"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"leeweiminsg"},"content":"     * @return List of tasks"},{"lineNumber":56,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"leeweiminsg"},"content":"    public List\u003cTask\u003e getToDoLst() {"},{"lineNumber":58,"author":{"gitId":"leeweiminsg"},"content":"        return db.getToDoLst();"},{"lineNumber":59,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":61,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"leeweiminsg"},"content":"     * Returns description of total number of items in todo list."},{"lineNumber":63,"author":{"gitId":"leeweiminsg"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"leeweiminsg"},"content":"     * @return description of total number of items in todo list."},{"lineNumber":65,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"leeweiminsg"},"content":"    public String getTotalItemsDescription() {"},{"lineNumber":67,"author":{"gitId":"leeweiminsg"},"content":"        return db.getTotalItemsDescription();"},{"lineNumber":68,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":70,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"leeweiminsg"},"content":"     * Returns description of total number of items in todo list."},{"lineNumber":72,"author":{"gitId":"leeweiminsg"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"leeweiminsg"},"content":"     * @param i index of Task in todo list"},{"lineNumber":74,"author":{"gitId":"leeweiminsg"},"content":"     * @param bool new isDone status to set in task"},{"lineNumber":75,"author":{"gitId":"leeweiminsg"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"leeweiminsg"},"content":"     * @return updated task"},{"lineNumber":77,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"leeweiminsg"},"content":"    public Task setToDoItemStatus(int i, boolean bool) {"},{"lineNumber":79,"author":{"gitId":"leeweiminsg"},"content":"        Task task \u003d getToDoLst().get(i);"},{"lineNumber":80,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":81,"author":{"gitId":"leeweiminsg"},"content":"        task.setStatus(bool);"},{"lineNumber":82,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":83,"author":{"gitId":"leeweiminsg"},"content":"        return task;"},{"lineNumber":84,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":86,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"leeweiminsg"},"content":"     * Add new task to todo list."},{"lineNumber":88,"author":{"gitId":"leeweiminsg"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"leeweiminsg"},"content":"     * @param type type of task"},{"lineNumber":90,"author":{"gitId":"leeweiminsg"},"content":"     * @param todo description of task"},{"lineNumber":91,"author":{"gitId":"leeweiminsg"},"content":"     * @param date deadline of task (LocalDate)"},{"lineNumber":92,"author":{"gitId":"leeweiminsg"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"leeweiminsg"},"content":"     * @return new task"},{"lineNumber":94,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"leeweiminsg"},"content":"    public Task addToDoItem(String type, String todo, LocalDate date) {"},{"lineNumber":96,"author":{"gitId":"leeweiminsg"},"content":"        Task newTask \u003d null;"},{"lineNumber":97,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":98,"author":{"gitId":"leeweiminsg"},"content":"        if (type.equals(\"todo\")) {"},{"lineNumber":99,"author":{"gitId":"leeweiminsg"},"content":"            newTask \u003d new Task(\"T\", todo, null,false);"},{"lineNumber":100,"author":{"gitId":"leeweiminsg"},"content":"        } else if (type.equals(\"deadline\")) {"},{"lineNumber":101,"author":{"gitId":"leeweiminsg"},"content":"            newTask \u003d new Task(\"D\", todo, date, false);"},{"lineNumber":102,"author":{"gitId":"leeweiminsg"},"content":"        } else if (type.equals(\"event\")) {"},{"lineNumber":103,"author":{"gitId":"leeweiminsg"},"content":"            newTask \u003d new Task(\"E\", todo, date, false);"},{"lineNumber":104,"author":{"gitId":"leeweiminsg"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":106,"author":{"gitId":"leeweiminsg"},"content":"        boolean hasDuplicates \u003d db.addToDoItem(newTask);"},{"lineNumber":107,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":108,"author":{"gitId":"leeweiminsg"},"content":"        if (hasDuplicates) {"},{"lineNumber":109,"author":{"gitId":"leeweiminsg"},"content":"            showDuplicateTaskMessage(newTask);"},{"lineNumber":110,"author":{"gitId":"leeweiminsg"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":112,"author":{"gitId":"leeweiminsg"},"content":"        return newTask;"},{"lineNumber":113,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":115,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"leeweiminsg"},"content":"     * Remove task from todo list."},{"lineNumber":117,"author":{"gitId":"leeweiminsg"},"content":"     *"},{"lineNumber":118,"author":{"gitId":"leeweiminsg"},"content":"     * @param i index of Task in todo list"},{"lineNumber":119,"author":{"gitId":"leeweiminsg"},"content":"     *"},{"lineNumber":120,"author":{"gitId":"leeweiminsg"},"content":"     * @return deleted task"},{"lineNumber":121,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"leeweiminsg"},"content":"    public Task removeToDoItem(int i) {"},{"lineNumber":123,"author":{"gitId":"leeweiminsg"},"content":"        Task deletedTask \u003d db.removeToDoItem(i);"},{"lineNumber":124,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":125,"author":{"gitId":"leeweiminsg"},"content":"        return deletedTask;"},{"lineNumber":126,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":128,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"leeweiminsg"},"content":"     * Save tasks to storage."},{"lineNumber":130,"author":{"gitId":"leeweiminsg"},"content":"     *"},{"lineNumber":131,"author":{"gitId":"leeweiminsg"},"content":"     * @throws IOException"},{"lineNumber":132,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"leeweiminsg"},"content":"    public void save() throws IOException {"},{"lineNumber":134,"author":{"gitId":"leeweiminsg"},"content":"        try {"},{"lineNumber":135,"author":{"gitId":"leeweiminsg"},"content":"            db.save();"},{"lineNumber":136,"author":{"gitId":"leeweiminsg"},"content":"        } catch (IOException e) {"},{"lineNumber":137,"author":{"gitId":"leeweiminsg"},"content":"            throw e;"},{"lineNumber":138,"author":{"gitId":"leeweiminsg"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":141,"author":{"gitId":"leeweiminsg"},"content":"    @Override"},{"lineNumber":142,"author":{"gitId":"leeweiminsg"},"content":"    public void start(Stage stage) {"},{"lineNumber":143,"author":{"gitId":"leeweiminsg"},"content":"        //The container for the content of the chat to scroll."},{"lineNumber":144,"author":{"gitId":"leeweiminsg"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":145,"author":{"gitId":"leeweiminsg"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":146,"author":{"gitId":"leeweiminsg"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":147,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":148,"author":{"gitId":"leeweiminsg"},"content":"        userInput \u003d new TextField();"},{"lineNumber":149,"author":{"gitId":"leeweiminsg"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":150,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":151,"author":{"gitId":"leeweiminsg"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":152,"author":{"gitId":"leeweiminsg"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":153,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":154,"author":{"gitId":"leeweiminsg"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":155,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":156,"author":{"gitId":"leeweiminsg"},"content":"        stage.setScene(scene);"},{"lineNumber":157,"author":{"gitId":"leeweiminsg"},"content":"        stage.show();"},{"lineNumber":158,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":159,"author":{"gitId":"leeweiminsg"},"content":"        // Welcome user"},{"lineNumber":160,"author":{"gitId":"leeweiminsg"},"content":"        showWelcomeMessage();"},{"lineNumber":161,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":162,"author":{"gitId":"leeweiminsg"},"content":"        //Step 2. Formatting the window to look as expected"},{"lineNumber":163,"author":{"gitId":"leeweiminsg"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":164,"author":{"gitId":"leeweiminsg"},"content":"        stage.setResizable(false);"},{"lineNumber":165,"author":{"gitId":"leeweiminsg"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":166,"author":{"gitId":"leeweiminsg"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":167,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":168,"author":{"gitId":"leeweiminsg"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":169,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":170,"author":{"gitId":"leeweiminsg"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":171,"author":{"gitId":"leeweiminsg"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":172,"author":{"gitId":"leeweiminsg"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":173,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":174,"author":{"gitId":"leeweiminsg"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":175,"author":{"gitId":"leeweiminsg"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":176,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":177,"author":{"gitId":"leeweiminsg"},"content":"        // You will need to import `javafx.scene.layout.Region` for this."},{"lineNumber":178,"author":{"gitId":"leeweiminsg"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":179,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":180,"author":{"gitId":"leeweiminsg"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":181,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":182,"author":{"gitId":"leeweiminsg"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":183,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":184,"author":{"gitId":"leeweiminsg"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":185,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":186,"author":{"gitId":"leeweiminsg"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":187,"author":{"gitId":"leeweiminsg"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":188,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":189,"author":{"gitId":"leeweiminsg"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":190,"author":{"gitId":"leeweiminsg"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":191,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":192,"author":{"gitId":"leeweiminsg"},"content":"        //Step 3. Add functionality to handle user input."},{"lineNumber":193,"author":{"gitId":"leeweiminsg"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":194,"author":{"gitId":"leeweiminsg"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":195,"author":{"gitId":"leeweiminsg"},"content":"            userInput.clear();"},{"lineNumber":196,"author":{"gitId":"leeweiminsg"},"content":"        });"},{"lineNumber":197,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":198,"author":{"gitId":"leeweiminsg"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":199,"author":{"gitId":"leeweiminsg"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":200,"author":{"gitId":"leeweiminsg"},"content":"            userInput.clear();"},{"lineNumber":201,"author":{"gitId":"leeweiminsg"},"content":"        });"},{"lineNumber":202,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":203,"author":{"gitId":"leeweiminsg"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes."},{"lineNumber":204,"author":{"gitId":"leeweiminsg"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":205,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":206,"author":{"gitId":"leeweiminsg"},"content":"        //Part 3. Add functionality to handle user input."},{"lineNumber":207,"author":{"gitId":"leeweiminsg"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":208,"author":{"gitId":"leeweiminsg"},"content":"            handleUserInput();"},{"lineNumber":209,"author":{"gitId":"leeweiminsg"},"content":"        });"},{"lineNumber":210,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":211,"author":{"gitId":"leeweiminsg"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":212,"author":{"gitId":"leeweiminsg"},"content":"            handleUserInput();"},{"lineNumber":213,"author":{"gitId":"leeweiminsg"},"content":"        });"},{"lineNumber":214,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":215,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":216,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":217,"author":{"gitId":"leeweiminsg"},"content":"     * Iteration 1:"},{"lineNumber":218,"author":{"gitId":"leeweiminsg"},"content":"     * Creates a label with the specified text and adds it to the dialog container."},{"lineNumber":219,"author":{"gitId":"leeweiminsg"},"content":"     * @param text String containing text to add"},{"lineNumber":220,"author":{"gitId":"leeweiminsg"},"content":"     * @return a label with the specified text that has word wrap enabled."},{"lineNumber":221,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":222,"author":{"gitId":"leeweiminsg"},"content":"    private Label getDialogLabel(String text) {"},{"lineNumber":223,"author":{"gitId":"leeweiminsg"},"content":"        // You will need to import `javafx.scene.control.Label`."},{"lineNumber":224,"author":{"gitId":"leeweiminsg"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":225,"author":{"gitId":"leeweiminsg"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":226,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":227,"author":{"gitId":"leeweiminsg"},"content":"        return textToAdd;"},{"lineNumber":228,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":229,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":230,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":231,"author":{"gitId":"leeweiminsg"},"content":"     * Iteration 2:"},{"lineNumber":232,"author":{"gitId":"leeweiminsg"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":233,"author":{"gitId":"leeweiminsg"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":234,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":235,"author":{"gitId":"leeweiminsg"},"content":"    private void handleUserInput() {"},{"lineNumber":236,"author":{"gitId":"leeweiminsg"},"content":"        String line \u003d userInput.getText();"},{"lineNumber":237,"author":{"gitId":"leeweiminsg"},"content":"        Label userText \u003d new Label(userInput.getText());"},{"lineNumber":238,"author":{"gitId":"leeweiminsg"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(userText, new ImageView(user)));"},{"lineNumber":239,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":240,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":241,"author":{"gitId":"leeweiminsg"},"content":"        if (!this.isClosed) {"},{"lineNumber":242,"author":{"gitId":"leeweiminsg"},"content":"            if (line.equals(\"bye\")) {"},{"lineNumber":243,"author":{"gitId":"leeweiminsg"},"content":"                showByeMessage();"},{"lineNumber":244,"author":{"gitId":"leeweiminsg"},"content":"                this.isClosed \u003d true;"},{"lineNumber":245,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":246,"author":{"gitId":"leeweiminsg"},"content":"                try {"},{"lineNumber":247,"author":{"gitId":"leeweiminsg"},"content":"                    save();"},{"lineNumber":248,"author":{"gitId":"leeweiminsg"},"content":"                } catch (IOException e) {"},{"lineNumber":249,"author":{"gitId":"leeweiminsg"},"content":"                    showExceptionMessage(e);"},{"lineNumber":250,"author":{"gitId":"leeweiminsg"},"content":"                }"},{"lineNumber":251,"author":{"gitId":"leeweiminsg"},"content":"            } else if (line.equals(\"list\")) {"},{"lineNumber":252,"author":{"gitId":"leeweiminsg"},"content":"                showListItems(getToDoLst(), \"list\");"},{"lineNumber":253,"author":{"gitId":"leeweiminsg"},"content":"            } else if (line.split(\" \")[0].equals(\"find\")) {"},{"lineNumber":254,"author":{"gitId":"leeweiminsg"},"content":"                String searchTerm \u003d parser.processFind(line);"},{"lineNumber":255,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":256,"author":{"gitId":"leeweiminsg"},"content":"                List\u003cTask\u003e tasks \u003d db.searchToDoItems(searchTerm);"},{"lineNumber":257,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":258,"author":{"gitId":"leeweiminsg"},"content":"                showListItems(tasks, \"search\");"},{"lineNumber":259,"author":{"gitId":"leeweiminsg"},"content":"            } else if (parser.isTaskModification(line.split(\" \")[0])) {"},{"lineNumber":260,"author":{"gitId":"leeweiminsg"},"content":"                String[] processedData \u003d parser.processModification(line);"},{"lineNumber":261,"author":{"gitId":"leeweiminsg"},"content":"                String type \u003d processedData[0];"},{"lineNumber":262,"author":{"gitId":"leeweiminsg"},"content":"                int i \u003d Integer.valueOf(processedData[1]);"},{"lineNumber":263,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":264,"author":{"gitId":"leeweiminsg"},"content":"                if (type.equals(\"done\")) {"},{"lineNumber":265,"author":{"gitId":"leeweiminsg"},"content":"                    Task updatedTask \u003d setToDoItemStatus(i, true);"},{"lineNumber":266,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":267,"author":{"gitId":"leeweiminsg"},"content":"                    showDoneMessage(updatedTask);"},{"lineNumber":268,"author":{"gitId":"leeweiminsg"},"content":"                } else {"},{"lineNumber":269,"author":{"gitId":"leeweiminsg"},"content":"                    Task deletedTask \u003d removeToDoItem(i);"},{"lineNumber":270,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":271,"author":{"gitId":"leeweiminsg"},"content":"                    showDeleteMessage(deletedTask);"},{"lineNumber":272,"author":{"gitId":"leeweiminsg"},"content":"                    showtotalItemsDescription();"},{"lineNumber":273,"author":{"gitId":"leeweiminsg"},"content":"                }"},{"lineNumber":274,"author":{"gitId":"leeweiminsg"},"content":"            } else {"},{"lineNumber":275,"author":{"gitId":"leeweiminsg"},"content":"                String[] lineData \u003d parser.processTaskItem(line);"},{"lineNumber":276,"author":{"gitId":"leeweiminsg"},"content":"                String type \u003d lineData[0];"},{"lineNumber":277,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":278,"author":{"gitId":"leeweiminsg"},"content":"                if (type.equals(\"todo\")) {"},{"lineNumber":279,"author":{"gitId":"leeweiminsg"},"content":"                    if (lineData.length \u003d\u003d 1) {"},{"lineNumber":280,"author":{"gitId":"leeweiminsg"},"content":"                        showErrorMessage();"},{"lineNumber":281,"author":{"gitId":"leeweiminsg"},"content":"                    } else {"},{"lineNumber":282,"author":{"gitId":"leeweiminsg"},"content":"                        line \u003d String.join(\" \", Arrays.copyOfRange(lineData, 1, lineData.length));"},{"lineNumber":283,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":284,"author":{"gitId":"leeweiminsg"},"content":"                        Task newTask \u003d addToDoItem(type, line, null);"},{"lineNumber":285,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":286,"author":{"gitId":"leeweiminsg"},"content":"                        showAddMessage(newTask);"},{"lineNumber":287,"author":{"gitId":"leeweiminsg"},"content":"                        showtotalItemsDescription();"},{"lineNumber":288,"author":{"gitId":"leeweiminsg"},"content":"                    }"},{"lineNumber":289,"author":{"gitId":"leeweiminsg"},"content":"                } else if (type.equals(\"deadline\") || type.equals(\"event\")) {"},{"lineNumber":290,"author":{"gitId":"leeweiminsg"},"content":"                    int byIndex \u003d -1;"},{"lineNumber":291,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":292,"author":{"gitId":"leeweiminsg"},"content":"                    for (int i \u003d 0; i \u003c lineData.length; i++) {"},{"lineNumber":293,"author":{"gitId":"leeweiminsg"},"content":"                        if (lineData[i].equals(\"/by\") || lineData[i].equals(\"/at\")) {"},{"lineNumber":294,"author":{"gitId":"leeweiminsg"},"content":"                            byIndex \u003d i;"},{"lineNumber":295,"author":{"gitId":"leeweiminsg"},"content":"                            break;"},{"lineNumber":296,"author":{"gitId":"leeweiminsg"},"content":"                        }"},{"lineNumber":297,"author":{"gitId":"leeweiminsg"},"content":"                    }"},{"lineNumber":298,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":299,"author":{"gitId":"leeweiminsg"},"content":"                    String dateStr \u003d lineData[byIndex + 1];"},{"lineNumber":300,"author":{"gitId":"leeweiminsg"},"content":"                    LocalDate date \u003d LocalDate.parse(dateStr);"},{"lineNumber":301,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":302,"author":{"gitId":"leeweiminsg"},"content":"                    line \u003d String.join(\" \", Arrays.copyOfRange(lineData, 1, byIndex));"},{"lineNumber":303,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":304,"author":{"gitId":"leeweiminsg"},"content":"                    Task newTask \u003d addToDoItem(type, line, date);"},{"lineNumber":305,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":306,"author":{"gitId":"leeweiminsg"},"content":"                    showAddMessage(newTask);"},{"lineNumber":307,"author":{"gitId":"leeweiminsg"},"content":"                    showtotalItemsDescription();"},{"lineNumber":308,"author":{"gitId":"leeweiminsg"},"content":"                } else {"},{"lineNumber":309,"author":{"gitId":"leeweiminsg"},"content":"                    showWrongInputMessage();"},{"lineNumber":310,"author":{"gitId":"leeweiminsg"},"content":"                }"},{"lineNumber":311,"author":{"gitId":"leeweiminsg"},"content":"            }"},{"lineNumber":312,"author":{"gitId":"leeweiminsg"},"content":"        }"},{"lineNumber":313,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":314,"author":{"gitId":"leeweiminsg"},"content":"        userInput.clear();"},{"lineNumber":315,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":316,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":317,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":318,"author":{"gitId":"leeweiminsg"},"content":"     * Shows welcome message."},{"lineNumber":319,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":320,"author":{"gitId":"leeweiminsg"},"content":"    public void showWelcomeMessage() {"},{"lineNumber":321,"author":{"gitId":"leeweiminsg"},"content":"        Label welcomeText \u003d new Label(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"},{"lineNumber":322,"author":{"gitId":"leeweiminsg"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcomeText, new ImageView(duke)));"},{"lineNumber":323,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":324,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":325,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":326,"author":{"gitId":"leeweiminsg"},"content":"     * Shows bye message."},{"lineNumber":327,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":328,"author":{"gitId":"leeweiminsg"},"content":"    public void showByeMessage() {"},{"lineNumber":329,"author":{"gitId":"leeweiminsg"},"content":"        Label welcomeText \u003d new Label(\"Bye. Hope to see you again soon!\");"},{"lineNumber":330,"author":{"gitId":"leeweiminsg"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcomeText, new ImageView(duke)));"},{"lineNumber":331,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":332,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":333,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":334,"author":{"gitId":"leeweiminsg"},"content":"     * Shows done message."},{"lineNumber":335,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":336,"author":{"gitId":"leeweiminsg"},"content":"    public void showDoneMessage(Task task) {"},{"lineNumber":337,"author":{"gitId":"leeweiminsg"},"content":"        Label welcomeText \u003d new Label(String.format(\"Nice! I\u0027ve marked this task as done:\\n%s\", task));"},{"lineNumber":338,"author":{"gitId":"leeweiminsg"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcomeText, new ImageView(duke)));"},{"lineNumber":339,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":340,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":341,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":342,"author":{"gitId":"leeweiminsg"},"content":"     * Shows delete message."},{"lineNumber":343,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":344,"author":{"gitId":"leeweiminsg"},"content":"    public void showDeleteMessage(Task task) {"},{"lineNumber":345,"author":{"gitId":"leeweiminsg"},"content":"        Label deleteText \u003d new Label(String.format(\"Noted. I\u0027ve removed this task:\\n%s\", task));"},{"lineNumber":346,"author":{"gitId":"leeweiminsg"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(deleteText, new ImageView(duke)));"},{"lineNumber":347,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":348,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":349,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":350,"author":{"gitId":"leeweiminsg"},"content":"     * Shows number of list items."},{"lineNumber":351,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":352,"author":{"gitId":"leeweiminsg"},"content":"    public void showtotalItemsDescription() {"},{"lineNumber":353,"author":{"gitId":"leeweiminsg"},"content":"        String totalItemsDescription \u003d getTotalItemsDescription();"},{"lineNumber":354,"author":{"gitId":"leeweiminsg"},"content":"        Label totalItemsDescriptionText \u003d new Label(totalItemsDescription);"},{"lineNumber":355,"author":{"gitId":"leeweiminsg"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(totalItemsDescriptionText, new ImageView(duke)));"},{"lineNumber":356,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":357,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":358,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":359,"author":{"gitId":"leeweiminsg"},"content":"     * Shows list items."},{"lineNumber":360,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":361,"author":{"gitId":"leeweiminsg"},"content":"    public void showListItems(List\u003cTask\u003e lst, String action) {"},{"lineNumber":362,"author":{"gitId":"leeweiminsg"},"content":"        Label listItemsText \u003d new Label(ui.formatListItems(lst, action));"},{"lineNumber":363,"author":{"gitId":"leeweiminsg"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(listItemsText, new ImageView(duke)));"},{"lineNumber":364,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":365,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":366,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":367,"author":{"gitId":"leeweiminsg"},"content":"     * Shows error message."},{"lineNumber":368,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":369,"author":{"gitId":"leeweiminsg"},"content":"    public void showErrorMessage() {"},{"lineNumber":370,"author":{"gitId":"leeweiminsg"},"content":"        Label listItemsText \u003d new Label(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":371,"author":{"gitId":"leeweiminsg"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(listItemsText, new ImageView(duke)));"},{"lineNumber":372,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":373,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":374,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":375,"author":{"gitId":"leeweiminsg"},"content":"     * Shows exception message."},{"lineNumber":376,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":377,"author":{"gitId":"leeweiminsg"},"content":"    public void showExceptionMessage(Exception e) {"},{"lineNumber":378,"author":{"gitId":"leeweiminsg"},"content":"        Label exceptionText \u003d new Label(String.format(\"Error: %s\", e.getMessage()));"},{"lineNumber":379,"author":{"gitId":"leeweiminsg"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(exceptionText, new ImageView(duke)));"},{"lineNumber":380,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":381,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":382,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":383,"author":{"gitId":"leeweiminsg"},"content":"     * Shows add message."},{"lineNumber":384,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":385,"author":{"gitId":"leeweiminsg"},"content":"    public void showAddMessage(Task task) {"},{"lineNumber":386,"author":{"gitId":"leeweiminsg"},"content":"        Label listItemsText \u003d new Label(String.format(\"Got it. I\u0027ve added this task:\\n%s\", task));"},{"lineNumber":387,"author":{"gitId":"leeweiminsg"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(listItemsText, new ImageView(duke)));"},{"lineNumber":388,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":389,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":390,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":391,"author":{"gitId":"leeweiminsg"},"content":"     * Shows wrong input message."},{"lineNumber":392,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":393,"author":{"gitId":"leeweiminsg"},"content":"    public void showWrongInputMessage() {"},{"lineNumber":394,"author":{"gitId":"leeweiminsg"},"content":"        Label listItemsText \u003d new Label(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":395,"author":{"gitId":"leeweiminsg"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(listItemsText, new ImageView(duke)));"},{"lineNumber":396,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":397,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":398,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":399,"author":{"gitId":"leeweiminsg"},"content":"     * Shows duplicate task message."},{"lineNumber":400,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":401,"author":{"gitId":"leeweiminsg"},"content":"    public void showDuplicateTaskMessage(Task task) {"},{"lineNumber":402,"author":{"gitId":"leeweiminsg"},"content":"        Label listItemsText \u003d new Label(String.format(\"Duplicate task detected: %s\", task));"},{"lineNumber":403,"author":{"gitId":"leeweiminsg"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(listItemsText, new ImageView(duke)));"},{"lineNumber":404,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":405,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":406,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":407,"author":{"gitId":"leeweiminsg"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":408,"author":{"gitId":"leeweiminsg"},"content":"     * Replace this stub with your completed method."},{"lineNumber":409,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":410,"author":{"gitId":"leeweiminsg"},"content":"    private String getResponse(String input) {"},{"lineNumber":411,"author":{"gitId":"leeweiminsg"},"content":"        return \"Duke heard: \" + input;"},{"lineNumber":412,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":413,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":414,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":415,"author":{"gitId":"leeweiminsg"},"content":"     * Run."},{"lineNumber":416,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":417,"author":{"gitId":"leeweiminsg"},"content":"    public void run() {"},{"lineNumber":418,"author":{"gitId":"leeweiminsg"},"content":"        Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":419,"author":{"gitId":"leeweiminsg"},"content":"        String line \u003d \"\";"},{"lineNumber":420,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":421,"author":{"gitId":"leeweiminsg"},"content":"        ui.showWelcomeMessage();"},{"lineNumber":422,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":423,"author":{"gitId":"leeweiminsg"},"content":"        while(!line.equals(\"bye\")) {"},{"lineNumber":424,"author":{"gitId":"leeweiminsg"},"content":"            if (!line.equals(\"\")) {"},{"lineNumber":425,"author":{"gitId":"leeweiminsg"},"content":"                if (line.equals(\"list\")) {"},{"lineNumber":426,"author":{"gitId":"leeweiminsg"},"content":"                    ui.showListItems(getToDoLst(), \"list\");"},{"lineNumber":427,"author":{"gitId":"leeweiminsg"},"content":"                } else if (line.split(\" \")[0].equals(\"find\")) {"},{"lineNumber":428,"author":{"gitId":"leeweiminsg"},"content":"                    String searchTerm \u003d parser.processFind(line);"},{"lineNumber":429,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":430,"author":{"gitId":"leeweiminsg"},"content":"                    List\u003cTask\u003e tasks \u003d db.searchToDoItems(searchTerm);"},{"lineNumber":431,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":432,"author":{"gitId":"leeweiminsg"},"content":"                    ui.showListItems(tasks, \"search\");"},{"lineNumber":433,"author":{"gitId":"leeweiminsg"},"content":"                } else if (parser.isTaskModification(line.split(\" \")[0])) {"},{"lineNumber":434,"author":{"gitId":"leeweiminsg"},"content":"                    String[] processedData \u003d parser.processModification(line);"},{"lineNumber":435,"author":{"gitId":"leeweiminsg"},"content":"                    String type \u003d processedData[0];"},{"lineNumber":436,"author":{"gitId":"leeweiminsg"},"content":"                    int i \u003d Integer.valueOf(processedData[1]);"},{"lineNumber":437,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":438,"author":{"gitId":"leeweiminsg"},"content":"                    if (type.equals(\"done\")) {"},{"lineNumber":439,"author":{"gitId":"leeweiminsg"},"content":"                        Task updatedTask \u003d setToDoItemStatus(i, true);"},{"lineNumber":440,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":441,"author":{"gitId":"leeweiminsg"},"content":"                        ui.showDoneMessage();"},{"lineNumber":442,"author":{"gitId":"leeweiminsg"},"content":"                        System.out.println(updatedTask);"},{"lineNumber":443,"author":{"gitId":"leeweiminsg"},"content":"                    }  else {"},{"lineNumber":444,"author":{"gitId":"leeweiminsg"},"content":"                        Task deletedTask \u003d removeToDoItem(i);"},{"lineNumber":445,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":446,"author":{"gitId":"leeweiminsg"},"content":"                        ui.showDeleteMessage();"},{"lineNumber":447,"author":{"gitId":"leeweiminsg"},"content":"                        System.out.println(deletedTask);"},{"lineNumber":448,"author":{"gitId":"leeweiminsg"},"content":"                        System.out.println(getTotalItemsDescription());"},{"lineNumber":449,"author":{"gitId":"leeweiminsg"},"content":"                    }"},{"lineNumber":450,"author":{"gitId":"leeweiminsg"},"content":"                } else {"},{"lineNumber":451,"author":{"gitId":"leeweiminsg"},"content":"                    String[] lineData \u003d parser.processTaskItem(line);"},{"lineNumber":452,"author":{"gitId":"leeweiminsg"},"content":"                    String type \u003d lineData[0];"},{"lineNumber":453,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":454,"author":{"gitId":"leeweiminsg"},"content":"                    if (type.equals(\"todo\")) {"},{"lineNumber":455,"author":{"gitId":"leeweiminsg"},"content":"                        if (lineData.length \u003d\u003d 1) {"},{"lineNumber":456,"author":{"gitId":"leeweiminsg"},"content":"                            ui.showErrorMessage();"},{"lineNumber":457,"author":{"gitId":"leeweiminsg"},"content":"                        } else {"},{"lineNumber":458,"author":{"gitId":"leeweiminsg"},"content":"                            line \u003d String.join(\" \", Arrays.copyOfRange(lineData, 1, lineData.length));"},{"lineNumber":459,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":460,"author":{"gitId":"leeweiminsg"},"content":"                            Task newTask \u003d addToDoItem(type, line, null);"},{"lineNumber":461,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":462,"author":{"gitId":"leeweiminsg"},"content":"                            ui.showAddMessage();"},{"lineNumber":463,"author":{"gitId":"leeweiminsg"},"content":"                            System.out.println(newTask);"},{"lineNumber":464,"author":{"gitId":"leeweiminsg"},"content":"                            System.out.println(getTotalItemsDescription());"},{"lineNumber":465,"author":{"gitId":"leeweiminsg"},"content":"                        }"},{"lineNumber":466,"author":{"gitId":"leeweiminsg"},"content":"                    } else if (type.equals(\"deadline\") || type.equals(\"event\")) {"},{"lineNumber":467,"author":{"gitId":"leeweiminsg"},"content":"                        int byIndex \u003d -1;"},{"lineNumber":468,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":469,"author":{"gitId":"leeweiminsg"},"content":"                        for (int i \u003d 0; i \u003c lineData.length; i++) {"},{"lineNumber":470,"author":{"gitId":"leeweiminsg"},"content":"                            if (lineData[i].equals(\"/by\") || lineData[i].equals(\"/at\")) {"},{"lineNumber":471,"author":{"gitId":"leeweiminsg"},"content":"                                byIndex \u003d i;"},{"lineNumber":472,"author":{"gitId":"leeweiminsg"},"content":"                                break;"},{"lineNumber":473,"author":{"gitId":"leeweiminsg"},"content":"                            }"},{"lineNumber":474,"author":{"gitId":"leeweiminsg"},"content":"                        }"},{"lineNumber":475,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":476,"author":{"gitId":"leeweiminsg"},"content":"                        String dateStr \u003d lineData[byIndex + 1];"},{"lineNumber":477,"author":{"gitId":"leeweiminsg"},"content":"                        LocalDate date \u003d LocalDate.parse(dateStr);"},{"lineNumber":478,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":479,"author":{"gitId":"leeweiminsg"},"content":"                        line \u003d String.join(\" \", Arrays.copyOfRange(lineData, 1, byIndex));"},{"lineNumber":480,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":481,"author":{"gitId":"leeweiminsg"},"content":"                        Task newTask \u003d addToDoItem(type, line, date);"},{"lineNumber":482,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":483,"author":{"gitId":"leeweiminsg"},"content":"                        ui.showAddMessage();"},{"lineNumber":484,"author":{"gitId":"leeweiminsg"},"content":"                        System.out.println(newTask);"},{"lineNumber":485,"author":{"gitId":"leeweiminsg"},"content":"                        System.out.println(getTotalItemsDescription());"},{"lineNumber":486,"author":{"gitId":"leeweiminsg"},"content":"                    } else {"},{"lineNumber":487,"author":{"gitId":"leeweiminsg"},"content":"                        ui.showWrongInputMessage();"},{"lineNumber":488,"author":{"gitId":"leeweiminsg"},"content":"                    }"},{"lineNumber":489,"author":{"gitId":"leeweiminsg"},"content":"                }"},{"lineNumber":490,"author":{"gitId":"leeweiminsg"},"content":"            }"},{"lineNumber":491,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":492,"author":{"gitId":"leeweiminsg"},"content":"            line \u003d scanner.nextLine();"},{"lineNumber":493,"author":{"gitId":"leeweiminsg"},"content":"        }"},{"lineNumber":494,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":495,"author":{"gitId":"leeweiminsg"},"content":"        try {"},{"lineNumber":496,"author":{"gitId":"leeweiminsg"},"content":"            save();"},{"lineNumber":497,"author":{"gitId":"leeweiminsg"},"content":"        } catch (IOException e) {"},{"lineNumber":498,"author":{"gitId":"leeweiminsg"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":499,"author":{"gitId":"leeweiminsg"},"content":"            return;"},{"lineNumber":500,"author":{"gitId":"leeweiminsg"},"content":"        }"},{"lineNumber":501,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":502,"author":{"gitId":"leeweiminsg"},"content":"        ui.showByeMessage();"},{"lineNumber":503,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":504,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":505,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":506,"author":{"gitId":"leeweiminsg"},"content":"     * Entry point."},{"lineNumber":507,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":508,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":509,"author":{"gitId":"leeweiminsg"},"content":"        Duke duke \u003d null;"},{"lineNumber":510,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":511,"author":{"gitId":"leeweiminsg"},"content":"        assert duke \u003d\u003d null;"},{"lineNumber":512,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":513,"author":{"gitId":"leeweiminsg"},"content":"        try {"},{"lineNumber":514,"author":{"gitId":"leeweiminsg"},"content":"            duke \u003d new Duke();"},{"lineNumber":515,"author":{"gitId":"leeweiminsg"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":516,"author":{"gitId":"leeweiminsg"},"content":"            System.out.println(\"Data directory or file not found, see error\");"},{"lineNumber":517,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":518,"author":{"gitId":"leeweiminsg"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":519,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":520,"author":{"gitId":"leeweiminsg"},"content":"            return;"},{"lineNumber":521,"author":{"gitId":"leeweiminsg"},"content":"        } catch (IOException e) {"},{"lineNumber":522,"author":{"gitId":"leeweiminsg"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":523,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":524,"author":{"gitId":"leeweiminsg"},"content":"            return;"},{"lineNumber":525,"author":{"gitId":"leeweiminsg"},"content":"        }"},{"lineNumber":526,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":527,"author":{"gitId":"leeweiminsg"},"content":"        duke.run();"},{"lineNumber":528,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":529,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"leeweiminsg":526,"-":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeweiminsg"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":3,"author":{"gitId":"leeweiminsg"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"leeweiminsg"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"leeweiminsg"},"content":" */"},{"lineNumber":6,"author":{"gitId":"leeweiminsg"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"leeweiminsg"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"leeweiminsg"},"content":"        Application.launch(Duke.class, args);"},{"lineNumber":9,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"leeweiminsg"},"content":"}"}],"authorContributionMap":{"leeweiminsg":10}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeweiminsg"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"leeweiminsg"},"content":" * deals with making sense of the user command"},{"lineNumber":3,"author":{"gitId":"leeweiminsg"},"content":" */"},{"lineNumber":4,"author":{"gitId":"leeweiminsg"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":6,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"leeweiminsg"},"content":"     * Returns whether type is a task modification"},{"lineNumber":8,"author":{"gitId":"leeweiminsg"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"leeweiminsg"},"content":"     * @param type type of Task"},{"lineNumber":10,"author":{"gitId":"leeweiminsg"},"content":"     * @return whether type is a task modification"},{"lineNumber":11,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"leeweiminsg"},"content":"    public static boolean isTaskModification(String type) {"},{"lineNumber":13,"author":{"gitId":"leeweiminsg"},"content":"        return type.equals(\"done\") || type.equals(\"delete\");"},{"lineNumber":14,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":16,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"leeweiminsg"},"content":"     * Processes line when its a task modification"},{"lineNumber":18,"author":{"gitId":"leeweiminsg"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"leeweiminsg"},"content":"     * @param line line"},{"lineNumber":20,"author":{"gitId":"leeweiminsg"},"content":"     * @return array of parsed strings"},{"lineNumber":21,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"leeweiminsg"},"content":"    public static String[] processModification(String line) {"},{"lineNumber":23,"author":{"gitId":"leeweiminsg"},"content":"        String[] lineData \u003d line.split(\" \");"},{"lineNumber":24,"author":{"gitId":"leeweiminsg"},"content":"        int i \u003d Integer.parseInt(lineData[1]) - 1;"},{"lineNumber":25,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":26,"author":{"gitId":"leeweiminsg"},"content":"        String[] processedData \u003d {lineData[0], String.valueOf(i)};"},{"lineNumber":27,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":28,"author":{"gitId":"leeweiminsg"},"content":"        return processedData;"},{"lineNumber":29,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":31,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"leeweiminsg"},"content":"     * Processes line when its a task item"},{"lineNumber":33,"author":{"gitId":"leeweiminsg"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"leeweiminsg"},"content":"     * @param line line"},{"lineNumber":35,"author":{"gitId":"leeweiminsg"},"content":"     * @return array of parsed strings"},{"lineNumber":36,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"leeweiminsg"},"content":"    public static String[] processTaskItem(String line) {"},{"lineNumber":38,"author":{"gitId":"leeweiminsg"},"content":"        String[] lineData \u003d line.split(\" \");"},{"lineNumber":39,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":40,"author":{"gitId":"leeweiminsg"},"content":"        return lineData;"},{"lineNumber":41,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":43,"author":{"gitId":"leeweiminsg"},"content":"    public static String processFind(String line) {"},{"lineNumber":44,"author":{"gitId":"leeweiminsg"},"content":"        String[] lineData \u003d line.split(\" \");"},{"lineNumber":45,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":46,"author":{"gitId":"leeweiminsg"},"content":"        return lineData[1];"},{"lineNumber":47,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"leeweiminsg"},"content":"}"}],"authorContributionMap":{"leeweiminsg":48}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeweiminsg"},"content":"import java.io.*;"},{"lineNumber":2,"author":{"gitId":"leeweiminsg"},"content":"import java.nio.file.Path;"},{"lineNumber":3,"author":{"gitId":"leeweiminsg"},"content":"import java.nio.file.Paths;"},{"lineNumber":4,"author":{"gitId":"leeweiminsg"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"leeweiminsg"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"leeweiminsg"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":8,"author":{"gitId":"leeweiminsg"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"leeweiminsg"},"content":" * deals with loading tasks from the file and saving tasks in the file"},{"lineNumber":10,"author":{"gitId":"leeweiminsg"},"content":" */"},{"lineNumber":11,"author":{"gitId":"leeweiminsg"},"content":"public final class Storage {"},{"lineNumber":12,"author":{"gitId":"leeweiminsg"},"content":"    private static final String DB_DIR_NAME \u003d \"data\";"},{"lineNumber":13,"author":{"gitId":"leeweiminsg"},"content":"    private static final String DB_FILE_NAME \u003d \"duke.txt\";"},{"lineNumber":14,"author":{"gitId":"leeweiminsg"},"content":"    private static Path dbPath \u003d null;"},{"lineNumber":15,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":16,"author":{"gitId":"leeweiminsg"},"content":"    private TaskList toDoLst;"},{"lineNumber":17,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":18,"author":{"gitId":"leeweiminsg"},"content":"    public Storage() throws FileNotFoundException, IOException {"},{"lineNumber":19,"author":{"gitId":"leeweiminsg"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"leeweiminsg"},"content":"            checkDbExists();"},{"lineNumber":21,"author":{"gitId":"leeweiminsg"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":22,"author":{"gitId":"leeweiminsg"},"content":"            throw e;"},{"lineNumber":23,"author":{"gitId":"leeweiminsg"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":25,"author":{"gitId":"leeweiminsg"},"content":"        toDoLst \u003d new TaskList();"},{"lineNumber":26,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":27,"author":{"gitId":"leeweiminsg"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"leeweiminsg"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(dbPath.toFile()));"},{"lineNumber":29,"author":{"gitId":"leeweiminsg"},"content":"            String line \u003d br.readLine();"},{"lineNumber":30,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":31,"author":{"gitId":"leeweiminsg"},"content":"            while (line !\u003d null) {"},{"lineNumber":32,"author":{"gitId":"leeweiminsg"},"content":"                String[] lineData \u003d line.split(\"\\\\|\");"},{"lineNumber":33,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":34,"author":{"gitId":"leeweiminsg"},"content":"                Task task \u003d new Task(lineData[0], lineData[2], lineData.length \u003d\u003d 3 ? null : LocalDate.parse(lineData[3]), Boolean.valueOf(lineData[1]));"},{"lineNumber":35,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":36,"author":{"gitId":"leeweiminsg"},"content":"                addToDoItem(task);"},{"lineNumber":37,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":38,"author":{"gitId":"leeweiminsg"},"content":"                line \u003d br.readLine();"},{"lineNumber":39,"author":{"gitId":"leeweiminsg"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"leeweiminsg"},"content":"        } catch (IOException e) {"},{"lineNumber":41,"author":{"gitId":"leeweiminsg"},"content":"            throw e;"},{"lineNumber":42,"author":{"gitId":"leeweiminsg"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":45,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"leeweiminsg"},"content":"     * Checks whether the text file (for storage) exists"},{"lineNumber":47,"author":{"gitId":"leeweiminsg"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"leeweiminsg"},"content":"     * @throws FileNotFoundException"},{"lineNumber":49,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"leeweiminsg"},"content":"    public static void checkDbExists() throws FileNotFoundException {"},{"lineNumber":51,"author":{"gitId":"leeweiminsg"},"content":"        Path curDirPath \u003d Paths.get(\"\");"},{"lineNumber":52,"author":{"gitId":"leeweiminsg"},"content":"        Path dbDirPath \u003d curDirPath.resolve(DB_DIR_NAME);"},{"lineNumber":53,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":54,"author":{"gitId":"leeweiminsg"},"content":"        if (!Files.exists(dbDirPath)) {"},{"lineNumber":55,"author":{"gitId":"leeweiminsg"},"content":"            throw new FileNotFoundException(String.format(\"Data folder does not exist! Please create a directory named %s\", DB_DIR_NAME));"},{"lineNumber":56,"author":{"gitId":"leeweiminsg"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":58,"author":{"gitId":"leeweiminsg"},"content":"        dbPath \u003d dbDirPath.resolve(DB_FILE_NAME);"},{"lineNumber":59,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":60,"author":{"gitId":"leeweiminsg"},"content":"        if (!Files.exists(dbPath)) {"},{"lineNumber":61,"author":{"gitId":"leeweiminsg"},"content":"            throw new FileNotFoundException(String.format(\"Db does not exist! Please create a text file named %s\", DB_FILE_NAME));"},{"lineNumber":62,"author":{"gitId":"leeweiminsg"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":65,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"leeweiminsg"},"content":"     * Gets to-do list."},{"lineNumber":67,"author":{"gitId":"leeweiminsg"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"leeweiminsg"},"content":"     * @returns List of tasks (to-do list)."},{"lineNumber":69,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"leeweiminsg"},"content":"    public List\u003cTask\u003e getToDoLst() {"},{"lineNumber":71,"author":{"gitId":"leeweiminsg"},"content":"        return toDoLst.getToDoLst();"},{"lineNumber":72,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":74,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"leeweiminsg"},"content":"     * Get size of to-do list."},{"lineNumber":76,"author":{"gitId":"leeweiminsg"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"leeweiminsg"},"content":"     * @returns size of to-do list."},{"lineNumber":78,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"leeweiminsg"},"content":"    public int getToDoLstSize() {"},{"lineNumber":80,"author":{"gitId":"leeweiminsg"},"content":"        return toDoLst.getToDoLstSize();"},{"lineNumber":81,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":83,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"leeweiminsg"},"content":"     * Get description of size of list."},{"lineNumber":85,"author":{"gitId":"leeweiminsg"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"leeweiminsg"},"content":"     * @returns Description of size of list."},{"lineNumber":87,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"leeweiminsg"},"content":"    public String getTotalItemsDescription() {"},{"lineNumber":89,"author":{"gitId":"leeweiminsg"},"content":"        return String.format(\"Now you have %d %s in the list.\", toDoLst.getToDoLstSize(), toDoLst.getToDoLstSize() \u003e 1 ? \"tasks\" : \"task\");"},{"lineNumber":90,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":92,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"leeweiminsg"},"content":"     * Add to-do item"},{"lineNumber":94,"author":{"gitId":"leeweiminsg"},"content":"     *"},{"lineNumber":95,"author":{"gitId":"leeweiminsg"},"content":"     * @param task to be added"},{"lineNumber":96,"author":{"gitId":"leeweiminsg"},"content":"     * @return boolean whether there are duplicates"},{"lineNumber":97,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"leeweiminsg"},"content":"    public boolean addToDoItem(Task task) {"},{"lineNumber":99,"author":{"gitId":"leeweiminsg"},"content":"        boolean hasDuplicates \u003d false;"},{"lineNumber":100,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":101,"author":{"gitId":"leeweiminsg"},"content":"        if (toDoLst.contains(task)) {"},{"lineNumber":102,"author":{"gitId":"leeweiminsg"},"content":"            hasDuplicates \u003d true;"},{"lineNumber":103,"author":{"gitId":"leeweiminsg"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":105,"author":{"gitId":"leeweiminsg"},"content":"        toDoLst.addToDoItem(task);"},{"lineNumber":106,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":107,"author":{"gitId":"leeweiminsg"},"content":"        return hasDuplicates;"},{"lineNumber":108,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":110,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"leeweiminsg"},"content":"     * Remove to-do item"},{"lineNumber":112,"author":{"gitId":"leeweiminsg"},"content":"     *"},{"lineNumber":113,"author":{"gitId":"leeweiminsg"},"content":"     * @param i index of task tobe removed in the to-do list"},{"lineNumber":114,"author":{"gitId":"leeweiminsg"},"content":"     *"},{"lineNumber":115,"author":{"gitId":"leeweiminsg"},"content":"     * @return removed task"},{"lineNumber":116,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"leeweiminsg"},"content":"    public Task removeToDoItem(int i) {"},{"lineNumber":118,"author":{"gitId":"leeweiminsg"},"content":"        return toDoLst.removeToDoItem(i);"},{"lineNumber":119,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":121,"author":{"gitId":"leeweiminsg"},"content":"    public List\u003cTask\u003e searchToDoItems(String searchTerm) {"},{"lineNumber":122,"author":{"gitId":"leeweiminsg"},"content":"        return toDoLst.searchToDoItems(searchTerm);"},{"lineNumber":123,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":125,"author":{"gitId":"leeweiminsg"},"content":"    public void save() throws IOException {"},{"lineNumber":126,"author":{"gitId":"leeweiminsg"},"content":"        try {"},{"lineNumber":127,"author":{"gitId":"leeweiminsg"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(dbPath.toFile()));"},{"lineNumber":128,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":129,"author":{"gitId":"leeweiminsg"},"content":"            for (Task task: toDoLst.getToDoLst()) {"},{"lineNumber":130,"author":{"gitId":"leeweiminsg"},"content":"                writer.append(task.toDbString());"},{"lineNumber":131,"author":{"gitId":"leeweiminsg"},"content":"                writer.newLine();"},{"lineNumber":132,"author":{"gitId":"leeweiminsg"},"content":"            }"},{"lineNumber":133,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":134,"author":{"gitId":"leeweiminsg"},"content":"            writer.flush();"},{"lineNumber":135,"author":{"gitId":"leeweiminsg"},"content":"        } catch (IOException e) {"},{"lineNumber":136,"author":{"gitId":"leeweiminsg"},"content":"            throw e;"},{"lineNumber":137,"author":{"gitId":"leeweiminsg"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"leeweiminsg"},"content":"}"}],"authorContributionMap":{"leeweiminsg":139}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeweiminsg"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"leeweiminsg"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":4,"author":{"gitId":"leeweiminsg"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"leeweiminsg"},"content":" * represents a task"},{"lineNumber":6,"author":{"gitId":"leeweiminsg"},"content":" */"},{"lineNumber":7,"author":{"gitId":"leeweiminsg"},"content":"public class Task {"},{"lineNumber":8,"author":{"gitId":"leeweiminsg"},"content":"    private String type;"},{"lineNumber":9,"author":{"gitId":"leeweiminsg"},"content":"    private String todo;"},{"lineNumber":10,"author":{"gitId":"leeweiminsg"},"content":"    private LocalDate date;"},{"lineNumber":11,"author":{"gitId":"leeweiminsg"},"content":"    private boolean isDone;"},{"lineNumber":12,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":13,"author":{"gitId":"leeweiminsg"},"content":"    Task(String type, String todo, LocalDate date, boolean isDone) {"},{"lineNumber":14,"author":{"gitId":"leeweiminsg"},"content":"        this.type \u003d type;"},{"lineNumber":15,"author":{"gitId":"leeweiminsg"},"content":"        this.todo \u003d todo;"},{"lineNumber":16,"author":{"gitId":"leeweiminsg"},"content":"        this.date \u003d date;"},{"lineNumber":17,"author":{"gitId":"leeweiminsg"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":18,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":20,"author":{"gitId":"leeweiminsg"},"content":"    public String getTodo() {"},{"lineNumber":21,"author":{"gitId":"leeweiminsg"},"content":"        return todo;"},{"lineNumber":22,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":24,"author":{"gitId":"leeweiminsg"},"content":"    public void setStatus(boolean newStatus) {"},{"lineNumber":25,"author":{"gitId":"leeweiminsg"},"content":"        isDone \u003d newStatus;"},{"lineNumber":26,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":28,"author":{"gitId":"leeweiminsg"},"content":"    public String toDateStr(LocalDate date) {"},{"lineNumber":29,"author":{"gitId":"leeweiminsg"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":30,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":32,"author":{"gitId":"leeweiminsg"},"content":"    public String toDbDateStr(LocalDate date) {"},{"lineNumber":33,"author":{"gitId":"leeweiminsg"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":34,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":36,"author":{"gitId":"leeweiminsg"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":37,"author":{"gitId":"leeweiminsg"},"content":"        Task otherTask \u003d (Task) obj;"},{"lineNumber":38,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":39,"author":{"gitId":"leeweiminsg"},"content":"        return todo.equals(otherTask.getTodo());"},{"lineNumber":40,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":42,"author":{"gitId":"leeweiminsg"},"content":"    public String toString() {"},{"lineNumber":43,"author":{"gitId":"leeweiminsg"},"content":"        String description \u003d String.format(\"[%s][%s] %s\", type, isDone ? \"✓\" : \"✗\", todo);"},{"lineNumber":44,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":45,"author":{"gitId":"leeweiminsg"},"content":"        if (type.equals(\"D\") || type.equals(\"E\")) {"},{"lineNumber":46,"author":{"gitId":"leeweiminsg"},"content":"            description +\u003d String.format(\" (%s: %s)\", type.equals(\"D\") ? \"by\" : \"at\", toDateStr(date));"},{"lineNumber":47,"author":{"gitId":"leeweiminsg"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":49,"author":{"gitId":"leeweiminsg"},"content":"        return description;"},{"lineNumber":50,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":52,"author":{"gitId":"leeweiminsg"},"content":"    public String toDbString() {"},{"lineNumber":53,"author":{"gitId":"leeweiminsg"},"content":"        String log \u003d String.format(\"%s|%s|%s\", type, isDone, todo);"},{"lineNumber":54,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":55,"author":{"gitId":"leeweiminsg"},"content":"        if (type.equals(\"D\") || type.equals(\"E\")) {"},{"lineNumber":56,"author":{"gitId":"leeweiminsg"},"content":"            log +\u003d String.format(\"|%s\", toDbDateStr(date));"},{"lineNumber":57,"author":{"gitId":"leeweiminsg"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":59,"author":{"gitId":"leeweiminsg"},"content":"        return log;"},{"lineNumber":60,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"leeweiminsg"},"content":"}"}],"authorContributionMap":{"leeweiminsg":61}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeweiminsg"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"leeweiminsg"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":4,"author":{"gitId":"leeweiminsg"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"leeweiminsg"},"content":" * represents a list of tasks"},{"lineNumber":6,"author":{"gitId":"leeweiminsg"},"content":" */"},{"lineNumber":7,"author":{"gitId":"leeweiminsg"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"leeweiminsg"},"content":"    private List\u003cTask\u003e toDoLst;"},{"lineNumber":9,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":10,"author":{"gitId":"leeweiminsg"},"content":"    TaskList() {"},{"lineNumber":11,"author":{"gitId":"leeweiminsg"},"content":"        toDoLst \u003d new ArrayList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":14,"author":{"gitId":"leeweiminsg"},"content":"    public List\u003cTask\u003e getToDoLst() {"},{"lineNumber":15,"author":{"gitId":"leeweiminsg"},"content":"        return toDoLst;"},{"lineNumber":16,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":18,"author":{"gitId":"leeweiminsg"},"content":"    public boolean contains(Task task) {"},{"lineNumber":19,"author":{"gitId":"leeweiminsg"},"content":"        return toDoLst.contains(task);"},{"lineNumber":20,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":22,"author":{"gitId":"leeweiminsg"},"content":"    public int getToDoLstSize() {"},{"lineNumber":23,"author":{"gitId":"leeweiminsg"},"content":"        return toDoLst.size();"},{"lineNumber":24,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":26,"author":{"gitId":"leeweiminsg"},"content":"    public void addToDoItem(Task task) {"},{"lineNumber":27,"author":{"gitId":"leeweiminsg"},"content":"        toDoLst.add(task);"},{"lineNumber":28,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":30,"author":{"gitId":"leeweiminsg"},"content":"    public Task removeToDoItem(int i) {"},{"lineNumber":31,"author":{"gitId":"leeweiminsg"},"content":"        Task deletedTask \u003d toDoLst.remove(i);"},{"lineNumber":32,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":33,"author":{"gitId":"leeweiminsg"},"content":"        return deletedTask;"},{"lineNumber":34,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":36,"author":{"gitId":"leeweiminsg"},"content":"    public List\u003cTask\u003e searchToDoItems(String searchTerm) {"},{"lineNumber":37,"author":{"gitId":"leeweiminsg"},"content":"        List\u003cTask\u003e result \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":38,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":39,"author":{"gitId":"leeweiminsg"},"content":"        for (Task task: toDoLst) {"},{"lineNumber":40,"author":{"gitId":"leeweiminsg"},"content":"            String taskTodo \u003d task.getTodo();"},{"lineNumber":41,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":42,"author":{"gitId":"leeweiminsg"},"content":"            if (taskTodo.matches(String.format(\".*?\\\\b%s\\\\b.*?\", searchTerm))) {"},{"lineNumber":43,"author":{"gitId":"leeweiminsg"},"content":"                result.add(task);"},{"lineNumber":44,"author":{"gitId":"leeweiminsg"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"leeweiminsg"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":47,"author":{"gitId":"leeweiminsg"},"content":"        return result;"},{"lineNumber":48,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"leeweiminsg"},"content":"}"}],"authorContributionMap":{"leeweiminsg":49}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeweiminsg"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":3,"author":{"gitId":"leeweiminsg"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"leeweiminsg"},"content":" * Deals with interactions with the user."},{"lineNumber":5,"author":{"gitId":"leeweiminsg"},"content":" */"},{"lineNumber":6,"author":{"gitId":"leeweiminsg"},"content":"public final class Ui {"},{"lineNumber":7,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"leeweiminsg"},"content":"     * Shows welcome message."},{"lineNumber":9,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"leeweiminsg"},"content":"    public void showWelcomeMessage() {"},{"lineNumber":11,"author":{"gitId":"leeweiminsg"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":12,"author":{"gitId":"leeweiminsg"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":13,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":15,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"leeweiminsg"},"content":"     * Shows bye message."},{"lineNumber":17,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"leeweiminsg"},"content":"    public void showByeMessage() {"},{"lineNumber":19,"author":{"gitId":"leeweiminsg"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":20,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":22,"author":{"gitId":"leeweiminsg"},"content":"    public void showListItems(List\u003cTask\u003e lst, String action) {"},{"lineNumber":23,"author":{"gitId":"leeweiminsg"},"content":"        System.out.println(String.format(\"Here are the %s tasks in your list:\", action.equals(\"search\") ? \"matching\" : \"\"));"},{"lineNumber":24,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":25,"author":{"gitId":"leeweiminsg"},"content":"        for (int i \u003d 0; i \u003c lst.size(); i++) {"},{"lineNumber":26,"author":{"gitId":"leeweiminsg"},"content":"            System.out.println(String.format(\"%d.%s\", i + 1, lst.get(i)));"},{"lineNumber":27,"author":{"gitId":"leeweiminsg"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":30,"author":{"gitId":"leeweiminsg"},"content":"    public String formatListItems(List\u003cTask\u003e lst, String action) {"},{"lineNumber":31,"author":{"gitId":"leeweiminsg"},"content":"        String result \u003d String.format(\"Here are the %s tasks in your list:\\n\", action.equals(\"search\") ? \"matching\" : \"\");"},{"lineNumber":32,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":33,"author":{"gitId":"leeweiminsg"},"content":"        for (int i \u003d 0; i \u003c lst.size(); i++) {"},{"lineNumber":34,"author":{"gitId":"leeweiminsg"},"content":"            result +\u003d String.format(\"%d.%s\\n\", i + 1, lst.get(i));"},{"lineNumber":35,"author":{"gitId":"leeweiminsg"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":37,"author":{"gitId":"leeweiminsg"},"content":"        return result;"},{"lineNumber":38,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":40,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"leeweiminsg"},"content":"     * Shows add message."},{"lineNumber":42,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"leeweiminsg"},"content":"    public void showAddMessage() {"},{"lineNumber":44,"author":{"gitId":"leeweiminsg"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":45,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":47,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"leeweiminsg"},"content":"     * Shows done message."},{"lineNumber":49,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"leeweiminsg"},"content":"    public void showDoneMessage() {"},{"lineNumber":51,"author":{"gitId":"leeweiminsg"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":52,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":54,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"leeweiminsg"},"content":"     * Shows delete message."},{"lineNumber":56,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"leeweiminsg"},"content":"    public void showDeleteMessage() {"},{"lineNumber":58,"author":{"gitId":"leeweiminsg"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":59,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":61,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"leeweiminsg"},"content":"     * Shows error message."},{"lineNumber":63,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"leeweiminsg"},"content":"    public void showErrorMessage() {"},{"lineNumber":65,"author":{"gitId":"leeweiminsg"},"content":"        System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":66,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":68,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"leeweiminsg"},"content":"     * Shows wrong input message."},{"lineNumber":70,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"leeweiminsg"},"content":"    public void showWrongInputMessage() {"},{"lineNumber":72,"author":{"gitId":"leeweiminsg"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":73,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":75,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"leeweiminsg"},"content":"     * Shows file not found error message."},{"lineNumber":77,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"leeweiminsg"},"content":"    public void showDirErrorMessage() {"},{"lineNumber":79,"author":{"gitId":"leeweiminsg"},"content":"        System.out.println(\"Data directory or file not found, see error\");"},{"lineNumber":80,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":82,"author":{"gitId":"leeweiminsg"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"leeweiminsg"},"content":"     * Shows duplicate task message."},{"lineNumber":84,"author":{"gitId":"leeweiminsg"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"leeweiminsg"},"content":"    public static void showDuplicateTaskMessage(Task task) {"},{"lineNumber":86,"author":{"gitId":"leeweiminsg"},"content":"        System.out.println(String.format(\"Duplicate task detected: %s\", task));"},{"lineNumber":87,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"leeweiminsg"},"content":"}"}],"authorContributionMap":{"leeweiminsg":88}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeweiminsg"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":3,"author":{"gitId":"leeweiminsg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":5,"author":{"gitId":"leeweiminsg"},"content":"public class ParserTest {"},{"lineNumber":6,"author":{"gitId":"leeweiminsg"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"leeweiminsg"},"content":"    public void isTaskModificationF_done_isTaskModification(){"},{"lineNumber":8,"author":{"gitId":"leeweiminsg"},"content":"        boolean isTaskModification \u003d Parser.isTaskModification(\"done\");"},{"lineNumber":9,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":10,"author":{"gitId":"leeweiminsg"},"content":"        assertEquals(isTaskModification, true);"},{"lineNumber":11,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":13,"author":{"gitId":"leeweiminsg"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"leeweiminsg"},"content":"    public void isTaskModificationF_delete_isTaskModification(){"},{"lineNumber":15,"author":{"gitId":"leeweiminsg"},"content":"        boolean isTaskModification \u003d Parser.isTaskModification(\"delete\");"},{"lineNumber":16,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":17,"author":{"gitId":"leeweiminsg"},"content":"        assertEquals(isTaskModification, true);"},{"lineNumber":18,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":20,"author":{"gitId":"leeweiminsg"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"leeweiminsg"},"content":"    public void isTaskModificationF_todo_isNotTaskModification(){"},{"lineNumber":22,"author":{"gitId":"leeweiminsg"},"content":"        boolean isTaskModification \u003d Parser.isTaskModification(\"todo\");"},{"lineNumber":23,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":24,"author":{"gitId":"leeweiminsg"},"content":"        assertEquals(isTaskModification, false);"},{"lineNumber":25,"author":{"gitId":"leeweiminsg"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"leeweiminsg"},"content":"}"},{"lineNumber":27,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":28,"author":{"gitId":"leeweiminsg"},"content":"/*"},{"lineNumber":29,"author":{"gitId":"leeweiminsg"},"content":"todo borrow book"},{"lineNumber":30,"author":{"gitId":"leeweiminsg"},"content":"deadline return book /by 2019-10-15"},{"lineNumber":31,"author":{"gitId":"leeweiminsg"},"content":"event project meeting /at 2019-10-15"},{"lineNumber":32,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":33,"author":{"gitId":"leeweiminsg"},"content":"list"},{"lineNumber":34,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":35,"author":{"gitId":"leeweiminsg"},"content":"done 2"},{"lineNumber":36,"author":{"gitId":"leeweiminsg"},"content":""},{"lineNumber":37,"author":{"gitId":"leeweiminsg"},"content":"delete 2"},{"lineNumber":38,"author":{"gitId":"leeweiminsg"},"content":" */"}],"authorContributionMap":{"leeweiminsg":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leeweiminsg"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"leeweiminsg"},"content":"list"},{"lineNumber":3,"author":{"gitId":"leeweiminsg"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"leeweiminsg"},"content":"event project meeting /at Mon 2-4pm"}],"authorContributionMap":{"leeweiminsg":4}}]
