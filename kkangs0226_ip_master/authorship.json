[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "# KING BOB User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "_KING BOB_ is a chat bot that helps you organise your daily tasks (bananas). Make his Highness happy by giving him more "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "tasks (bananas)!"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "![Image of KING BOB](https://raw.githubusercontent.com/kkangs0226/ip/master/docs/Ui.png)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "##### Below are instructions on how to use _KING BOB_."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- Features"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  - todo "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  - event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  - deadline "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  - list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  - done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  - delete"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  - date"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  - find"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  - bye  "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "### `todo` - Add a new Todo task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "This command adds a new Todo task to the user\u0027s list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Duplicate tasks will not be added to the list. "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "`todo TODO_DESCRIPTION`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `todo read book` "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! Banana has been added to your list!"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     [T][✘] read book"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Now you have 1 banana(s) in your list! Nom nom.."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `todo read book` "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! There is a duplicate in the list!"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "### `event` - Add a new Event task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "This command adds a new Event task to the user\u0027s list of tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Duplicate tasks will not be added to the list. "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "`event EVENT_DESCRIPTION /at EVENT_DATE`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `event graduation night /at 2020-02-19`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! Banana has been added to your list!"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     [E][✘] graduation night (at: Feb 19 2020)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Now you have 2 banana(s) in your list! Nom nom.."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `event graduation night /at 2020-02-19`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! There is a duplicate in the list!"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "### `deadline` - Add a new Deadline task"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "This command adds a new Deadline task to the user\u0027s list of tasks."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Duplicate tasks will not be added to the list. "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "`deadline PROJECT_DESCRIPTION /by DEADLINE_DATE`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `deadline project /by 2020-09-30`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! Banana has been added to your list!"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     [D][✘] project (by: Sep 30 2020)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Now you have 3 banana(s) in your list! Nom nom.."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `deadline project /by 2020-09-30`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! There is a duplicate in the list!"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "### `list` - Display list of tasks "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "This command displays the list of existing tasks to the user. "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! So many tasks?"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "1. [T][✘] read book"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "2. [E][✘] graduation night (at: Feb 19 2020)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "3. [D][✘] project (by: Sep 30 2020)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "### `done` - Mark a task as done"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "This command marks the task at the specified index as done. "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "`done TASK_INDEX`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `done 1`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! I’ve marked this task as done:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     [T][✓] read book"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "### `delete` - Delete a task "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "This command deletes a task at the specified index. "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "`delete TASK_INDEX`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `delete 1`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! banana has been eaten. Burp!"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     [T][✓] read book"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Now you have 2 banana(s) in your list! Nom nom.."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "### `date` - Find a task by its date"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "This command finds tasks based on its event or deadline date. "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "`date TASK_DATE`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `date 2020-09-30`"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result: "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! Here are your bananas.."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     [D][✘] project (by: Sep 30 2020)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "### `find` - Find a task by its keyword"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "This command finds tasks by keywords in the task description. "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "`find TASK_KEYWORD`"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `find project`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result: "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! Here are your bananas.."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     [D][✘] project (by: Sep 30 2020)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command: "
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `find graduation`  "
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result: "
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! Here are your bananas.."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     [E][✘] graduation night (at: Feb 19 2020)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "### `bye` - Exits application"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "This command exits the application. "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "The app quits. "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  "
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "## Credits"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "* Images retrieved from:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  * [Background](https://www.pinterest.co.kr/pin/661114420275950559/)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  * [User icon](https://www.pinterest.com/pin/484559241150248458/)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  * [KING BOB icon](https://despicableme.fandom.com/wiki/Bob)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  "
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 193,
      "-": 6
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 16,
      "-": 44
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "T | 0 | read book"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "# KING BOB User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "_KING BOB_ is a chat bot that helps you organise your daily tasks (bananas). Make his Highness happy by giving him more "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "tasks (bananas)!"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "![Image of KING BOB](https://raw.githubusercontent.com/kkangs0226/ip/master/docs/Ui.png)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "##### Below are instructions on how to use _KING BOB_."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- Features"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  - todo "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  - event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  - deadline "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  - list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  - done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  - delete"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  - date"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  - find"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  - bye  "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "### `todo` - Add a new Todo task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "This command adds a new Todo task to the user\u0027s list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Duplicate tasks will not be added to the list. "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "`todo TODO_DESCRIPTION`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `todo read book` "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! Banana has been added to your list!"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     [T][✘] read book"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Now you have 1 banana(s) in your list! Nom nom.."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `todo read book` "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! There is a duplicate in the list!"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "### `event` - Add a new Event task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "This command adds a new Event task to the user\u0027s list of tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Duplicate tasks will not be added to the list. "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "`event EVENT_DESCRIPTION /at EVENT_DATE`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `event graduation night /at 2020-02-19`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! Banana has been added to your list!"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     [E][✘] graduation night (at: Feb 19 2020)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Now you have 2 banana(s) in your list! Nom nom.."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `event graduation night /at 2020-02-19`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! There is a duplicate in the list!"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "### `deadline` - Add a new Deadline task"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "This command adds a new Deadline task to the user\u0027s list of tasks."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Duplicate tasks will not be added to the list. "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "`deadline PROJECT_DESCRIPTION /by DEADLINE_DATE`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `deadline project /by 2020-09-30`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! Banana has been added to your list!"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     [D][✘] project (by: Sep 30 2020)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Now you have 3 banana(s) in your list! Nom nom.."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `deadline project /by 2020-09-30`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! There is a duplicate in the list!"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "### `list` - Display list of tasks "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "This command displays the list of existing tasks to the user. "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! So many tasks?"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "1. [T][✘] read book"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "2. [E][✘] graduation night (at: Feb 19 2020)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "3. [D][✘] project (by: Sep 30 2020)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "### `done` - Mark a task as done"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "This command marks the task at the specified index as done. "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "`done TASK_INDEX`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `done 1`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! I’ve marked this task as done:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     [T][✓] read book"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "### `delete` - Delete a task "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "This command deletes a task at the specified index. "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "`delete TASK_INDEX`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `delete 1`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! banana has been eaten. Burp!"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     [T][✓] read book"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Now you have 2 banana(s) in your list! Nom nom.."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "### `date` - Find a task by its date"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "This command finds tasks based on its event or deadline date. "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "`date TASK_DATE`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `date 2020-09-30`"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result: "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! Here are your bananas.."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     [D][✘] project (by: Sep 30 2020)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "### `find` - Find a task by its keyword"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "This command finds tasks by keywords in the task description. "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "`find TASK_KEYWORD`"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `find project`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result: "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! Here are your bananas.."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     [D][✘] project (by: Sep 30 2020)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Example of command: "
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "- `find graduation`  "
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result: "
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Banana! Here are your bananas.."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     [E][✘] graduation night (at: Feb 19 2020)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "```"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "### `bye` - Exits application"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "This command exits the application. "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "Expected result:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "The app quits. "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "## Credits"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "* Images retrieved from:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  * [Background](https://www.pinterest.co.kr/pin/661114420275950559/)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  * [User icon](https://www.pinterest.com/pin/484559241150248458/)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "  * [KING BOB icon](https://despicableme.fandom.com/wiki/Bob)"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 179,
      "-": 19
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        dialog.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        db.dialog.getStyleClass().add(\"user\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        db.dialog.getStyleClass().add(\"kingbob\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 66
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * Chat bot to keep track of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Creates Duke object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        Path filePath \u003d Paths.get(\"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            ui.setLoadingErrorMessage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Returns response message of Chat Bot according to user input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            return ui.getResponseMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 47,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * Represents Exception thrown within Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Creates DukeExcpetion object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param input Custom message to be printed in DukeException message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public DukeException(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        message \u003d input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return \"Apple Pineapple!! \" + message;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 23
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 32
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    //Image retrieved from https://www.pinterest.com/pin/484559241150248458/"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    //Image retrieved from https://despicableme.fandom.com/wiki/Bob"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private final String greeting \u003d \"Bello from the Majestic KING BOB. What can KING BOB do for you?\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Initializes the scrollPane of Chat bot when program first runs."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greeting, dukeImage));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Set duke to Duke object given in parameter."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param d Duke object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 64
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.command.DateCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.command.InputCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * Represents a parser that parses the input of users."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private static final int TODO_SUBSTRING_INDEX \u003d 5;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private static final int DEADLINE_SUBSTRING_INDEX \u003d 9;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private static final int EVENT_SUBSTRING_INDEX \u003d 6;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Parses the user\u0027s input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param fullCommand String command by user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return Command object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @throws DukeException If invalid input by user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert fullCommand !\u003d \" \" : \"There is no command input\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String input \u003d fullCommand;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String command \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        InputCommand inputCommand;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            inputCommand \u003d InputCommand.valueOf(command.toUpperCase());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            inputCommand \u003d InputCommand.INVALID;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        switch (inputCommand) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            return new DoneCommand(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            return new DeleteCommand(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            return new AddCommand(input, inputCommand);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        case DATE:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            return new DateCommand(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            return new FindCommand(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            throw new DukeException(\"Give me a valid banana (input)!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Checks if the input has valid index."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param input String input of user."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param tasksNumber Number of tasks."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return true if valid, false if invalid."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public static boolean isValidIndex(String input, int tasksNumber) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String[] parsedInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            index \u003d Integer.parseInt(parsedInput[1]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return index \u003c\u003d tasksNumber \u0026\u0026 index \u003e 0;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Gets index of input."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param input String input of user."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return Index in input."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public static int getIndex(String input) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert input !\u003d \" \" : \"There is no input\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String[] parsedInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return Integer.parseInt(parsedInput[1]) - 1;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Gets description of Todo object."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param input String input of user."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return String description of Todo object."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @throws DukeException if Todo description is empty."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public static String getTodoDescription(String input) throws DukeException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            return input.substring(TODO_SUBSTRING_INDEX);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            throw new DukeException(\"Todo cannot be empty!\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Gets array of deadline description strings."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param input String input of user."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return Array of deadline description strings."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public static String[] getDeadlineStrings(String input) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert input !\u003d null : \"There is no input\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String[] parsedInput \u003d input.split(\" /by \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        parsedInput[0] \u003d parsedInput[0].substring(DEADLINE_SUBSTRING_INDEX);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return parsedInput;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Gets array of event description strings."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param input String input of user."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return Array of event description strings."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public static String[] getEventTimeStrings(String input) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert input !\u003d null : \"There is no input\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String[] parsedInput \u003d input.split(\" /at \");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        parsedInput[0] \u003d parsedInput[0].substring(EVENT_SUBSTRING_INDEX);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return parsedInput;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Parses string input of user and returns LocalDate object."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param date String input of user."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return LocalDate object corresponding to input of user."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public static LocalDate parseDate(String date) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return LocalDate.parse(date);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 141
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * Stores all storage related methods and variables."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private Path filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private File dataFile;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public Storage(Path filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Loads data from file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return List of tasks in file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @throws DukeException if file cannot be created or reader cannot read next line."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        Path directoryPath \u003d Paths.get(\"data\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        boolean directoryExists \u003d Files.exists(directoryPath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        dataFile \u003d new File(filePath.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        boolean fileExists \u003d Files.exists(Paths.get(\"data\", \"duke.txt\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        if (!directoryExists) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            File directory \u003d new File(directoryPath.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                dataFile.createNewFile();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                throw new DukeException(\"File cannot be created\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        } else if (!fileExists) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                dataFile.createNewFile();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                throw new DukeException(\"File cannot be created\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                BufferedReader reader \u003d new BufferedReader(new FileReader(filePath.toString()));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                while (line !\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    readDataToList(tasks, line);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    line \u003d reader.readLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                throw new DukeException(\"BufferedReader I/O Exception\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Converts lines in text file to task objects and adds them to list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param tasks list of objects to add the new task objects to."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param line Line to be converted to a task object."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private void readDataToList(List\u003cTask\u003e tasks, String line) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String[] stringArray \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String taskType \u003d stringArray[0];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        boolean isDone \u003d stringArray[1].equals(\"1\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            task \u003d new Todo(stringArray[2]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            task \u003d new Deadline(stringArray[2], stringArray[3]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            task \u003d new Event(stringArray[2], stringArray[3]);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Saves list of tasks of users to file."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param tasks List of tasks of user."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @throws DukeException if unable to write to file."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void saveListToFile(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            FileWriter writer \u003d new FileWriter(dataFile, false);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                writer.write(t.convertToFileString() + \"\\n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            throw new DukeException(\"Writing error\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 127
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * Stores all User Interface related methods and objects."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private StringBuilder responseMessage \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Resets responseMessage to empty StringBuilder."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private void resetMessage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        responseMessage \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Sets responseMessage to list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param tasks tasks of user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void setShowListMessage(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        resetMessage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        responseMessage.append(\"Banana! So many tasks?\\n\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            responseMessage.append((i + 1) + \". \" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Sets responseMessage to bye message."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void setByeMessage() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        resetMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        responseMessage.append(\"Banana! KING BOB is sad to see you go. Farewell my friend!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Sets responseMessage to added message."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param task Task that is added."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param tasksNumber number of tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void setAddedMessage(Task task, int tasksNumber) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        resetMessage();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        responseMessage.append(\"Banana! Banana has been added to your list!\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                + \"     \" + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                + \"Now you have \" + tasksNumber + \" banana(s) in your list! Nom nom..\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Sets responseMessage to duplicate message."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void setDuplicateMessage() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        resetMessage();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        responseMessage.append(\"Banana! There is a duplicate in the list!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Sets responseMessage to deleted message."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param task Task that is deleted."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param tasksNumber Number of tasks."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void setDeletedMessage(Task task, int tasksNumber) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        resetMessage();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        responseMessage.append(\"Banana! Banana has been eaten. Burp!\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                + \"     \" + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                + \"Now you have \" + (tasksNumber - 1) + \" banana(s) in your list! Nom nom..\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Sets responseMessage to done message."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param task Task that is done."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void setDoneMessage(Task task) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        resetMessage();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        responseMessage.append(\"Banana! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                + \"     \" + task.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Sets responseMessage to loading error message."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void setLoadingErrorMessage() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        resetMessage();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        responseMessage.append(\"Banana! There is a loading error...\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Sets responseMessage to tasks happening/due this date."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param date date requested by user."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param tasks tasks of user."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void setFindTaskByDateMessage(LocalDate date, List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        resetMessage();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        responseMessage.append(\"Banana! Here are your bananas..\\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            if (t.getDate().equals(date)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                responseMessage.append(\"     \" + t.toString() + \"\\n\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Sets responseMessage to tasks containing this keyword."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param keyword Keyword input by user."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param tasks Tasks of user."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void setFindTaskByKeywordMessage(String keyword, List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        resetMessage();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        responseMessage.append(\"Banana! Here are your bananas..\\n\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            if (t.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                responseMessage.append(\"     \" + t.toString() + \"\\n\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Returns the responseMessage."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return responseMessage of this Ui Object."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String getResponseMessage() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert responseMessage !\u003d null : \"There is no response message\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return responseMessage.toString();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 133
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * Represents command that is specific to the add command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private InputCommand inputCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Creates AddCommand object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param input input of user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param inputCommand the InputCommand enum value of object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public AddCommand(String input, InputCommand inputCommand) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.inputCommand \u003d inputCommand;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Executes add command based on user input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param taskList tasks of user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param ui user interface object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param storage Storage object to retrieve and store data from file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @throws DukeException If invalid input."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert taskList !\u003d null : \"TaskList is null\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert ui !\u003d null : \"ui is null\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert storage !\u003d null : \"storage is null\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        Stream\u003cString\u003e stream \u003d taskList.getList().stream().map(Task::toString);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        switch (inputCommand) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                Todo todo \u003d new Todo(Parser.getTodoDescription(input));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                if (stream.noneMatch(task -\u003e task.equals(todo.toString()))) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    taskList.addList(todo);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    ui.setAddedMessage(new Todo(Parser.getTodoDescription(input)), taskList.getListSize());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    storage.saveListToFile(taskList.getList());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    ui.setDuplicateMessage();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                throw new DukeException(\"Banana! Something\u0027s wrong with the todo description...\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                Deadline deadline \u003d new Deadline(Parser.getDeadlineStrings(input)[0],"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                        Parser.getDeadlineStrings(input)[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                if (stream.noneMatch(task -\u003e task.equals(deadline.toString()))) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    taskList.addList(deadline);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    ui.setAddedMessage(deadline, taskList.getListSize());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    storage.saveListToFile(taskList.getList());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    ui.setDuplicateMessage();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                throw new DukeException(\"Banana! Something\u0027s wrong with the deadline description...\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                Event event \u003d new Event(Parser.getEventTimeStrings(input)[0],"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                        Parser.getEventTimeStrings(input)[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                if (stream.noneMatch(task -\u003e task.equals(event.toString()))) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    taskList.addList(event);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    ui.setAddedMessage(event, taskList.getListSize());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    storage.saveListToFile(taskList.getList());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    ui.setDuplicateMessage();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                throw new DukeException(\"Banana! Something\u0027s wrong with the event description...\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            throw new DukeException(\"Give me a valid banana (input)!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 100
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * Represents command object that is based on user command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Executes command based on user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param taskList tasks of user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param ui user interface object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param storage Storage object to retrieve and store data from file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @throws DukeException If invalid input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Checks boolean value of exit variable."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return boolean value of exit variable."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 32
    }
  },
  {
    "path": "src/main/java/duke/command/DateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * Represents command that is specific to the get command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class DateCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private static final int DATE_SUBSTRING_INDEX \u003d 5;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Creates GetCommand object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param input input of user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public DateCommand(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Executes get command of user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param taskList tasks of user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param ui user interface object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param storage Storage object to retrieve and store data from file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @throws DukeException If input is invalid."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert taskList !\u003d null : \"TaskList is null\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert ui !\u003d null : \"ui is null\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert storage !\u003d null : \"storage is null\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        ui.setFindTaskByDateMessage(Parser.parseDate(input.substring(DATE_SUBSTRING_INDEX)), taskList.getList());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 44
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * Represents command that is specific to the delete command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Creates DeleteCommand object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param input input of user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public DeleteCommand(String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Executes delete command based on user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param taskList tasks of user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param ui user interface object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param storage Storage object to retrieve and store data from file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @throws DukeException If invalid input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert taskList !\u003d null : \"TaskList is null\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert ui !\u003d null : \"ui is null\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert storage !\u003d null : \"storage is null\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        if (Parser.isValidIndex(input, taskList.getListSize())) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            int index \u003d Parser.getIndex(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            ui.setDeletedMessage(taskList.getList().get(index), taskList.getListSize());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            taskList.deleteTask(index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            storage.saveListToFile(taskList.getList());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            throw new DukeException(\"You don\u0027t have such task in your list...\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 48
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * Represents command that is specific to the done command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Creates DeleteCommand object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param input input of user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public DoneCommand(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Executes done command based on user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param taskList tasks of user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param ui user interface object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param storage Storage object to retrieve and store data from file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @throws DukeException If invalid input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert taskList !\u003d null : \"TaskList is null\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert ui !\u003d null : \"ui is null\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert storage !\u003d null : \"storage is null\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        if (Parser.isValidIndex(input, taskList.getListSize())) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            Task task \u003d taskList.getList().get(Parser.getIndex(input));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            ui.setDoneMessage(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            storage.saveListToFile(taskList.getList());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            throw new DukeException(\"You don\u0027t have such task in your list...\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 50
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * Represents command that is specific to the exit command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Creates an ExitCommand object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Executes exit command of user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param taskList tasks of user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param ui user interface object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param storage Storage object to retrieve and store data from file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert taskList !\u003d null : \"TaskList is null\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert ui !\u003d null : \"ui is null\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert storage !\u003d null : \"storage is null\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        ui.setByeMessage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 37
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * Represents command that is specific to the find command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Creates FindCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param input input of user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public FindCommand(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Executes find command of user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param taskList tasks of user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param ui user interface object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param storage Storage object to retrieve and store data from file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert taskList !\u003d null : \"TaskList is null\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert ui !\u003d null : \"ui is null\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert storage !\u003d null : \"storage is null\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        ui.setFindTaskByKeywordMessage(input.substring(5), taskList.getList());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 38
    }
  },
  {
    "path": "src/main/java/duke/command/InputCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public enum InputCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    INVALID,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    DATE,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    FIND,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 14
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * Represents command that is specific to the list command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Creates ListCommand object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Executes list command by user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param taskList tasks of user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param ui user interface object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param storage Storage object to retrieve and store data from file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert taskList !\u003d null : \"TaskList is null\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert ui !\u003d null : \"ui is null\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assert storage !\u003d null : \"storage is null\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        ui.setShowListMessage(taskList.getList());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 34
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * Represents deadline task of user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Creates Deadline object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param description Description of the Deadline object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param by string representation of deadline of Deadline object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.dateString \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Returns string representation of Deadline object to be stored in file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return string representation of Deadline object for file storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String convertToFileString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String doneInteger \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return \"D | \" + doneInteger + \" | \" + this.description + \" | \" + this.dateString;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 36
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * Represents event task of user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Creates Event object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param description Description of the Event object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param at string representation of time of Event object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.date \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.dateString \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Returns string representation of Event object to be stored in file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return string representation of Event object for file storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String convertToFileString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String doneInteger \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return \"E | \" + doneInteger + \" | \" + this.description + \" | \" + this.dateString;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 36
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * Represents task of user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    protected String dateString;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Creates Task object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param description Description of Task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.dateString \u003d \"0001-01-01\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.date \u003d LocalDate.parse(\"0001-01-01\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Returns status icon of task object according to its done status"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return status icon of task object"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Returns date of task object"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return date of task object"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Sets the value of isDone variable to true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Returns string representation of task object to be stored in file"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return string representation of task object for file storage"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String convertToFileString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 60
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * Represents tasks of user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Returns list of tasks of user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return tasks of user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Adds task to the list of tasks of user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param task task which the user wants to add to the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void addList(Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Deletes the task from list of tasks of user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param index Index of the task the user wants to delete."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @throws DukeException If index \u003e number of tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void deleteTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            tasks.remove(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            throw new DukeException(\"You don\u0027t have such task in your list...\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Gets number of tasks."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return number of tasks."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 59
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " * Represents to-do task of user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Creates Todo object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param description Description of Todo object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Returns string representation of Todo object to be stored in file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return string representation of Todo object for file storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String convertToFileString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String doneInteger \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return \"T | \" + doneInteger + \" | \" + this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 30
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        \u003cInsets top\u003d\"12.0\" bottom\u003d\"12.0\" left\u003d\"6.0\" right\u003d\"6.0\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" styleClass\u003d\"dialog\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "               stylesheets\u003d\"@../stylesheet/stylesheet.css\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 21
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            fx:controller\u003d\"duke.MainWindow\" stylesheets\u003d\"@../stylesheet/stylesheet.css\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                   AnchorPane.bottomAnchor\u003d\"1.0\" styleClass\u003d\"userInput\" stylesheets\u003d\"@../stylesheet/stylesheet.css\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" styleClass\u003d\"sendButton\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                stylesheets\u003d\"@../stylesheet/stylesheet.css\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" styleClass\u003d\"background\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                stylesheets\u003d\"@../stylesheet/stylesheet.css\"/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 26
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void getTodoDescription_descriptionEmpty_exceptionThrown() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            Parser.getTodoDescription(\"\"); });"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void parseCommand_invalidCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        Exception e \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            Parser.parse(\"Banana\"); });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void toFileString_correctFileStringPrinted() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String todoFileString \u003d new Todo(\"Read Book\").convertToFileString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assertEquals(todoFileString, \"T | 0 | Read Book\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String eventFileString \u003d new Event(\"Gym\", \"2020-02-02\").convertToFileString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assertEquals(eventFileString, \"E | 0 | Gym | 2020-02-02\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String deadlineFileString \u003d new Deadline(\"Go home\", \"2020-02-02\").convertToFileString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        assertEquals(deadlineFileString, \"D | 0 | Go home | 2020-02-02\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 39
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "event graduation /at 2018-11-27"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "deadline 2103 project /by 2020-08-26"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "get_task 2018-11-27"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "event more graduation /at 2018-11-27"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "get_task 2018-11-27"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "find graduation"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 16
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 3,
      "-": 31
    }
  }
]
