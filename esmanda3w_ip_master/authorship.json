[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 17,
      "-": 44
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a command by the user to add a task into the list of tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * An AddCommand object has a task type, which is either a todo, deadline or event task,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * and a string array with the task description separated into the task name and date/time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private TaskType taskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private String[] taskInfos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates an AddCommand object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskType The type of task to be added."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskInfos The description of the task to be added."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public AddCommand(TaskType taskType, String[] taskInfos) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.taskInfos \u003d taskInfos;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Executes the command by adding the new task to the list, replying the user,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * and updating the list of tasks stored in the computer."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param tasks List of all the tasks of the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param ui Replies the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param storage Stores the new task in the computer."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If the deadline or event is not specified in the correct format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assert tasks !\u003d null \u0026\u0026 ui !\u003d null \u0026\u0026 storage !\u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                : \"TaskList, Ui or Storage is not supposed to be null\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assert this.taskInfos.length \u003e 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                : \"String array containing task descriptions is not supposed to be empty\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task t \u003d createTask();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        tasks.addTask(t);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        storage.updateData(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return ui.showAdd(t, tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Creates and returns a new task according to its task type."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return A new task according to its task type."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If the deadline or event is not specified in the correct format."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public Task createTask() throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (this.taskType \u003d\u003d TaskType.TODO) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            task \u003d new Todo(this.taskInfos[0]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } else if (this.taskType \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            task \u003d new Deadline(this.taskInfos[0], this.taskInfos[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            task \u003d new Event(this.taskInfos[0], this.taskInfos[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns false as the command is not an exit command."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 69
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a command that the user input into the system."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Executes the command by performing the steps required for that."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param tasks List of all the tasks of the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param ui Replies the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param storage Stores the new task in the computer."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException Throws the required exception as necessary."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Shows whether the command is an exit command or not."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return True if the command is an exit command, false if it is not."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 21
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a deadline task that has a specific deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * A Deadline object is made up of the task name, as well as a date and time of the deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    protected LocalDateTime byDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private String originalFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private String printedFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a Deadline object if the input was written in the correct format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskName The description of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param date The date and time of the deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If the deadline is not specified in the correct format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public Deadline(String taskName, String date) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            this.byDateTime \u003d LocalDateTime.parse("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    date, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            this.originalFormat \u003d this.byDateTime.format("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            this.printedFormat \u003d this.byDateTime.format("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"EEE, d MMM yyyy, HH:mm\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new InvalidDeadlineFormatException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void setTaskDateTime(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            this.byDateTime \u003d LocalDateTime.parse("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            this.originalFormat \u003d this.byDateTime.format("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            this.printedFormat \u003d this.byDateTime.format("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"EEE, d MMM yyyy, HH:mm\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new InvalidUpdateTaskDateException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns the string representation of the deadline task in the format to be saved in the computer."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return String representation of the task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String toTaskData() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String separator \u003d \" ; \";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return \"D\" + separator + super.toTaskData() + separator + originalFormat;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns the string representation of the deadline task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return String representation of the deadline task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + printedFormat + \")\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 70
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a command by the user to delete a task into the list of tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * A DeleteCommand object has a task number to represent the task to be deleted."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a DeleteCommand object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskNum The task number to be deleted."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public DeleteCommand(int taskNum) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Executes the command by deleting the specified task from the list, replying the user,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * and updating the list of tasks stored in the computer."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param tasks List of all the tasks of the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param ui Replies the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param storage Stores the new task in the computer."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If there are no tasks, or an invalid task number is given."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assert tasks !\u003d null \u0026\u0026 ui !\u003d null \u0026\u0026 storage !\u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                : \"TaskList, Ui or Storage is not supposed to be null\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new EmptyListException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (this.taskNum \u003d\u003d 0 || this.taskNum \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new InvalidTaskNumberException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task t \u003d tasks.getTask(this.taskNum);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        tasks.deleteTask(this.taskNum);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        storage.updateData(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return ui.showDelete(t, tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns false as the command is not an exit command."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 54
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.setHeight(dialog.getHeight());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 60
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a command by the user to mark a task in the list of tasks as done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * An DoneCommand object has a task number to represent the task to be marked done."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a done command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskNum The task number to be marked as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public DoneCommand(int taskNum) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Executes the command by marking the specified task as done, replying the user,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * and updating the list of tasks stored in the computer."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param tasks List of all the tasks of the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param ui Replies the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param storage Stores the new task in the computer."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If there are no tasks, or an invalid task number is given."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assert tasks !\u003d null \u0026\u0026 ui !\u003d null \u0026\u0026 storage !\u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                : \"TaskList, Ui or Storage is not supposed to be null\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new EmptyListException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (this.taskNum \u003d\u003d 0 || this.taskNum \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new InvalidTaskNumberException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task t \u003d tasks.getTask(this.taskNum);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        t.markDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        storage.updateData(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return ui.showDone(t);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns false as the command is not an exit command."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 54
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents Duke program that executes the various commands given by the user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * A Duke object consists of a Storage object, which stores the tasks in the computer,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * a TaskList object, which keeps track of the tasks, and a Ui object, which replies"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * the user accordingly."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a Duke object and loads the tasks stored in the computer, if any."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param filePath The filePath of the file which stores the data."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            ui.showError(ex.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                return ui.showError(ex.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assert false : \"Response to user input is supposed to be returned\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 45,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents errors that occurs as a result of running the program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a DukeException object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param msg The specific error message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(\"UHOH! \" + msg);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 13
    }
  },
  {
    "path": "src/main/java/EmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class EmptyListException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private static String errorMsg \u003d \"You ain\u0027t no tasks yet!\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public EmptyListException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents an event task that has a specific start and end date and time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * An Event object is made up of the task name, as well as a date and time of the event."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    protected LocalDateTime atDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private String originalFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private String printedFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a Event object if the input was written in the correct format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskName The description of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param date The date and time of the event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If the event is not specified in the correct format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public Event(String taskName, String date) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            this.atDateTime \u003d LocalDateTime.parse("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    date, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            this.originalFormat \u003d this.atDateTime.format("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            this.printedFormat \u003d this.atDateTime.format("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"EEE, d MMM yyyy, HH:mm\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new InvalidEventFormatException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void setTaskDateTime(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            this.atDateTime \u003d LocalDateTime.parse("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    dateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            this.originalFormat \u003d this.atDateTime.format("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            this.printedFormat \u003d this.atDateTime.format("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"EEE, d MMM yyyy, HH:mm\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new InvalidUpdateTaskDateException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns the string representation of the event task in the format to be saved in the computer."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return String representation of the task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String toTaskData() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String separator \u003d \" ; \";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return \"E\" + separator + super.toTaskData() + separator + originalFormat;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns the string representation of the event task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return String representation of the event task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + printedFormat + \")\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 70
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a command by the user to exit the program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Executes the command by showing the exit message to the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param tasks List of all the tasks of the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param ui Replies the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param storage Stores the new task in the computer."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assert tasks !\u003d null \u0026\u0026 ui !\u003d null \u0026\u0026 storage !\u003d null"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                : \"TaskList, Ui or Storage is not supposed to be null\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return ui.showExit();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns true as the command is an exit command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return True."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 29
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a command by the user to find matching tasks with a keyword. A FindCommand object has a"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * keyword variable, which is the keyword used by the user."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a FindCommand object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param keyword The keyword to search for matching tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Executes the command by finding the matching tasks using the keyword and displaying"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * it in a list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param tasks List of all the tasks of the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param ui Replies the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param storage Stores the new task in the computer."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If there are no matching tasks with the specified keyword."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assert tasks !\u003d null \u0026\u0026 ui !\u003d null \u0026\u0026 storage !\u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                : \"TaskList, Ui or Storage is not supposed to be null\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        TaskList foundTasks \u003d tasks.findTasks(keyword);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (foundTasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new NoTasksFoundException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return ui.showFind() + \"\\n\" + foundTasks.printList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns false as the command is not an exit command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 49
    }
  },
  {
    "path": "src/main/java/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a command by the user to display the list of commands available."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Executes the command by displaying the list of commands available."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param tasks List of all the tasks of the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param ui Replies the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param storage Stores the new task in the computer."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assert tasks !\u003d null \u0026\u0026 ui !\u003d null \u0026\u0026 storage !\u003d null"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                : \"TaskList, Ui or Storage is not supposed to be null\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return ui.showHelp();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns false as the command is not an exit command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 29
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private static String errorMsg \u003d \"Boy, I don\u0027t get what y\u0027all are sayin\u0027!\\n\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            + \"Try typin\u0027 \\\"help\\\" to see what commands you can use!\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 8
    }
  },
  {
    "path": "src/main/java/InvalidDeadlineFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class InvalidDeadlineFormatException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private static String errorMsg \u003d \"Y\u0027all need to learn to use the proper format!\\n\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            + \"Try somethin\u0027 like this: \\ndeadline build spaceship /by 2019-10-15 2359\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public InvalidDeadlineFormatException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 8
    }
  },
  {
    "path": "src/main/java/InvalidDeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class InvalidDeleteException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private static String errorMsg \u003d \"I ain\u0027t sure which task to delete if you ain\u0027t sayin\u0027!\\n\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            + \"Try somethin\u0027 like this: \\ndelete 1\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public InvalidDeleteException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 8
    }
  },
  {
    "path": "src/main/java/InvalidDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class InvalidDoneException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private static String errorMsg \u003d \"I ain\u0027t sure which task to mark done if you ain\u0027t sayin\u0027!\\n\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            + \"Try somethin\u0027 like this: \\ndone 1\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public InvalidDoneException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 8
    }
  },
  {
    "path": "src/main/java/InvalidEventFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class InvalidEventFormatException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private static String errorMsg \u003d \"Y\u0027all need to learn to use the proper format!\\n\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            + \"Try somethin\u0027 like this: \\nevent karate competition /at 2019-10-15 1200\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public InvalidEventFormatException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 8
    }
  },
  {
    "path": "src/main/java/InvalidFindException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class InvalidFindException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private static String errorMsg \u003d \"I ain\u0027t sure what you want to find if you ain\u0027t sayin\u0027!\\n\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            + \"Try somethin\u0027 like this: \\nfind karate\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public InvalidFindException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 8
    }
  },
  {
    "path": "src/main/java/InvalidTaskNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class InvalidTaskNumberException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private static String errorMsg \u003d \"You ain\u0027t no task with that number!\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public InvalidTaskNumberException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 7
    }
  },
  {
    "path": "src/main/java/InvalidTodoFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class InvalidTodoFormatException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private static String errorMsg \u003d \"Y\u0027all need to learn to use the proper format!\\n\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            + \"Try somethin\u0027 like this: \\ntodo scold spongebob\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public InvalidTodoFormatException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 8
    }
  },
  {
    "path": "src/main/java/InvalidUpdateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class InvalidUpdateException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private static String errorMsg \u003d \"Y\u0027all need to learn to use the proper format!\\n\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            + \"Try somethin\u0027 like this:\\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            + \"update 1 /name help spongebob\\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            + \"Or this: \\nupdate 1 /date 2020-02-20 1200\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public InvalidUpdateException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 10
    }
  },
  {
    "path": "src/main/java/InvalidUpdateTaskDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class InvalidUpdateTaskDateException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private static String errorMsg \u003d \"Gotta check yer format for date and times!\\n\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            + \"Try somethin\u0027 like this:\\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            + \"update 1 /date 2020-02-20 1200\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public InvalidUpdateTaskDateException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 9
    }
  },
  {
    "path": "src/main/java/InvalidUpdateTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class InvalidUpdateTodoException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private static String errorMsg \u003d \"Todos ain\u0027t got no date and time!\\n\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            + \"Try somethin\u0027 like this:\\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            + \"update 1 /name help spongebob\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public InvalidUpdateTodoException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 9
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a command by the user to display their list of tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Executes the command by displaying the list of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param tasks List of all the tasks of the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param ui Replies the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param storage Stores the new task in the computer."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If there are no tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assert tasks !\u003d null \u0026\u0026 ui !\u003d null \u0026\u0026 storage !\u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                : \"TaskList, Ui or Storage is not supposed to be null\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new EmptyListException();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return ui.showList() + \"\\n\" + tasks.printList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns false as the command is not an exit command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 34
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/spongebob.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/sandy.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Initialises the Main Window with a greeting message."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String greeting \u003d Ui.showWelcome();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                DialogBox.getDukeDialog(greeting, dukeImage));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 56
    }
  },
  {
    "path": "src/main/java/NoTasksFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class NoTasksFoundException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private static String errorMsg \u003d \"There ain\u0027t no matching tasks in your list!\\n\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public NoTasksFoundException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 7
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a parser that helps to make sense of the user commands."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Reads the user input and returns the corresponding command according to the command"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * given by the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param input The user input into the program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return The corresponding command for the user input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If an invalid user input was given."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        input \u003d input.toLowerCase();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String[] inputWords \u003d input.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (inputWords.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String commandWord \u003d inputWords[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        boolean isOneWord \u003d inputWords.length \u003d\u003d 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (commandWord.equals(\"bye\") \u0026\u0026 isOneWord) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } else if (commandWord.equals(\"help\") \u0026\u0026 isOneWord) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } else if (commandWord.equals(\"list\") \u0026\u0026 isOneWord) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } else if (commandWord.equals(\"find\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            return parseFind(input, isOneWord);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } else if (commandWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            return parseDone(input, inputWords);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } else if (commandWord.equals(\"delete\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            return parseDelete(input, inputWords);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } else if (commandWord.equals(\"update\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            return parseUpdate(input, inputWords);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } else if (commandWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            return parseTodo(input, isOneWord);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } else if (commandWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            return parseDeadline(input, isOneWord);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } else if (commandWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            return parseEvent(input, isOneWord);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Parses the user input according to the expected format of a find command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param input The user input into the program."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param isOneWord Boolean representing whether the command was a single word."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return A find command."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If the user input did not match the expected format of a find command."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public static Command parseFind(String input, boolean isOneWord) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (isOneWord) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new InvalidFindException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String keyword \u003d input.substring(4);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return new FindCommand(keyword);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Parses the user input according to the expected format of a done command."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param input The user input into the program."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param inputWords String array of the words in the user input."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return A done command."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If the user input did not match the expected format of a done command."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public static Command parseDone(String input, String[] inputWords) throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (inputWords.length !\u003d 2) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new InvalidDoneException();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String taskNum \u003d input.substring(5);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        int i \u003d Integer.parseInt(taskNum);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return new DoneCommand(i);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Parses the user input according to the expected format of a delete command."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param input The user input into the program."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param inputWords String array of the words in the user input."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return A delete command."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If the user input did not match the expected format of a delete command."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public static Command parseDelete(String input, String[] inputWords) throws DukeException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (inputWords.length !\u003d 2) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new InvalidDeleteException();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String taskNum \u003d input.substring(7);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        int i \u003d Integer.parseInt(taskNum);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return new DeleteCommand(i);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Parses the user input according to the expected format of a update command."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param input The user input into the program."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param inputWords String array of the words in the user input."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return An update command."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If the user input did not match the expected format of a update command."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public static Command parseUpdate(String input, String[] inputWords) throws DukeException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (inputWords.length \u003c 4) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new InvalidUpdateException();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        boolean isUpdateName \u003d inputWords[2].equals(\"/name\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        boolean isUpdateDateTime \u003d inputWords[2].equals(\"/date\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (!isUpdateName \u0026\u0026 !isUpdateDateTime) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new InvalidUpdateException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String taskNum \u003d inputWords[1];"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        int i \u003d Integer.parseInt(taskNum);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (isUpdateName) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String newTaskName \u003d input.split(\" /name \")[1];"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            return new UpdateCommand(i, newTaskName, null);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String newTaskDate \u003d input.split(\" /date \")[1];"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            return new UpdateCommand(i, null, newTaskDate);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Parses the user input according to the expected format of a todo command."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param input The user input into the program."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param isOneWord Boolean representing whether the command was a single word."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return An add command."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If the user input did not match the expected format of a todo command."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public static Command parseTodo(String input, boolean isOneWord) throws DukeException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (isOneWord) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new InvalidTodoFormatException();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String taskDesc \u003d input.substring(5);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String[] taskInfos \u003d {taskDesc};"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return new AddCommand(TaskType.TODO, taskInfos);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Parses the user input according to the expected format of a deadline command."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param input The user input into the program."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param isOneWord Boolean representing whether the command was a single word."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return An add command."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If the user input did not match the expected format of a deadline command."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public static Command parseDeadline(String input, boolean isOneWord) throws DukeException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (isOneWord) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new InvalidDeadlineFormatException();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String taskDesc \u003d input.substring(9);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String[] taskInfos \u003d taskDesc.split(\" /by \");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (taskInfos.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new InvalidDeadlineFormatException();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return new AddCommand(TaskType.DEADLINE, taskInfos);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Parses the user input according to the expected format of a event command."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param input The user input into the program."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param isOneWord Boolean representing whether the command was a single word."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return An add command."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If the user input did not match the expected format of a event command."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public static Command parseEvent(String input, boolean isOneWord) throws DukeException {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (isOneWord) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new InvalidEventFormatException();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String taskDesc \u003d input.substring(6);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String[] taskInfos \u003d taskDesc.split(\" /at \");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (taskInfos.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new InvalidEventFormatException();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return new AddCommand(TaskType.EVENT, taskInfos);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 191
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents the storing of the tasks in the user\u0027s computer. The Storage class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a Storage object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param filePath The filePath of the file which stores the data."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If the file to store the data is unable to be created."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public Storage(String filePath) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        createFileIfAbsent(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assert new File(filePath).exists()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                : \"File to store tasks is supposed to be created\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Creates a file to store the data if it does not already exist on the user computer."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param filePath The filePath of the file which stores the data."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If the file to store the data is unable to be created."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public static void createFileIfAbsent(String filePath) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                File dir \u003d new File (\"data\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                dir.mkdir();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                throw new StorageNotCreatedException();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Loads the list of tasks saved in the user\u0027s computer."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return Arraylist of tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If saved list of tasks cannot be loaded."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Scanner sc;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new StorageNotLoadedException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String data \u003d sc.nextLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            Task t \u003d createTask(data);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Creates and returns a new task according to its task type."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param data String representation of the task in the storage."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return A new task according to its task type."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If the deadline or event is not specified in the correct format."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public Task createTask(String data) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String[] taskInfos \u003d data.split(\" ; \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (taskInfos[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            t \u003d new Todo(taskInfos[2]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } else if (taskInfos[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            t \u003d new Event(taskInfos[2], taskInfos[3]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            t \u003d new Deadline(taskInfos[2], taskInfos[3]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (taskInfos[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            t.markDone();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Updates the list of tasks stored in the users data when a change is made."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param tasks The up-to-date list of tasks."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If saved list of tasks cannot be loaded."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void updateData(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String data \u003d \"\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                if (i \u003d\u003d tasks.getSize()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    data +\u003d tasks.getTask(i).toTaskData();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    data +\u003d tasks.getTask(i).toTaskData() + \"\\n\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            fw.write(data);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new StorageNotUpdatedException();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 123
    }
  },
  {
    "path": "src/main/java/StorageNotCreatedException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class StorageNotCreatedException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private static String errorMessage \u003d \"Somethin\u0027 went WRONG!\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            + \"It seems your tasks can\u0027t be saved upon exit! :(\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public StorageNotCreatedException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 8
    }
  },
  {
    "path": "src/main/java/StorageNotLoadedException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class StorageNotLoadedException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private static String errorMessage \u003d \"Somethin\u0027 TERRIBLE happened!\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            + \"Your saved list of tasks could not be loaded\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public StorageNotLoadedException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 8
    }
  },
  {
    "path": "src/main/java/StorageNotUpdatedException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class StorageNotUpdatedException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private static String errorMessage \u003d \"Somethin\u0027 BAD happened!\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            + \"Your saved list of tasks could not be updated\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public StorageNotUpdatedException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 8
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a Task that the user has. A Task object has a task name, which"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * describes the task, as well as a status to indicate whether the task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * has been completed. The class also keeps track of the total number of"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * tasks the user has in the list so far."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private static final String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private static final String CROSS \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a Task object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskName The description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void setTaskName(String taskName) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void setTaskDateTime(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns the string representation of the task in the format to be saved in the computer."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return String representation of the task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String toTaskData() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String separator \u003d \" ; \";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return (this.isDone ? \"1\" : \"0\") + separator + this.taskName;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns the string representation of the task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return Returns the string representation of the deadline task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return \"[\" + (isDone ? TICK : CROSS)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"] \" + taskName;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 58
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents the list of tasks the user has and keeps track of the current state of the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a TaskList object with a list of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param tasks Arraylist of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a TaskList object with an empty list of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns the task with the specified task number."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskNum The task number to be retrieved."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return Task at that task number."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public Task getTask(int taskNum) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return this.tasks.get(taskNum - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Adds the specified task into the list of tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param t The task to be added."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.tasks.add(t);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Deletes the task with the specified task number."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskNum The task number to be deleted."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void deleteTask(int taskNum) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.tasks.remove(taskNum - 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Prints the list of tasks in a numbered format."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String printList() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assert tasks.size() \u003e 0"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                : \"List of tasks is not supposed to be empty\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            int num \u003d i + 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            list +\u003d num + \". \" + tasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Finds the matching tasks in the list according to the specified keyword."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param keyword The keyword to find tasks."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return TaskList containing tasks with the same keyword."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public TaskList findTasks(String keyword) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assert keyword !\u003d null"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                : \"Keyword used to find tasks is not supposed to be null\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.tasks.stream()"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                .filter(t -\u003e t.toString().contains(keyword))"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                .collect(Collectors.toCollection(() -\u003e foundTasks));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return new TaskList(foundTasks);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 92
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 3
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents a todo task without any date/time attached to it."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * A Todo object only consists of the task name."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a Todo object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskName The description of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public Todo(String taskName) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void setTaskDateTime(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        throw new InvalidUpdateTodoException();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns the string representation of the todo task in the format to be saved in the computer."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return String representation of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String toTaskData() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String separator \u003d \" ; \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return \"T\" + separator + super.toTaskData();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Returns the string representation of the todo task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return String representation of the todo task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 40
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * Represents the user interface that interacts with the user by replying"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " * the user accordingly."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates a Ui object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public Ui() { }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Displays the welcome message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return Reply to the user command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public static String showWelcome() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String welcomeMessage \u003d \"HOWDY!!!!! WELCOME TO BIKINI BOTTOM! \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"I\u0027m Sandy Cheeks, what can I do for yer?\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"Try typin\u0027 \\\"help\\\" to see what commands you can use!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return welcomeMessage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Displays the exit message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return Reply to the user command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String showExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String exitMessage \u003d \"You\u0027re leavin\u0027 already?!??! Well, see you again! \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"BYEEE!!!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return exitMessage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Displays the list of commands available."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return Reply to the user command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String showHelp() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String helpMessage \u003d \"I don\u0027t know nothin\u0027 about other commands but \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"here are the list of commands I understand!\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"help: displays the list of commands available\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"list: displays the list of tasks you have\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"find *keyword*: displays the tasks with that keyword\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"eg find karate\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"todo *task description*: adds a task without any\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"date/time attached to it\\n\" + \"eg todo scold spongebob\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"deadline *task description* /by *date+time*: adds a\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"task that needs to be done before a specific date and time\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"(date and time to be written in yyyy-mm-dd HHMM format)\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"eg deadline build spaceship /by 2019-10-15 2359\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"event *task description* /at *date+time*: adds a task that\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"starts at a specific time and ends at a specific time\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"(date and time to be written in yyyy-mm-dd HHMM format)\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"eg karate competition /at 2019-10-15 1200\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"done *task number*: marks the task with that number as done\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"eg done 1\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"delete *task number*: deletes the task with that number from the list\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"eg delete 1\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"update *task number* /name *task name*: updates the name of the task with \""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"that number from the list\\n\" + \"update 1 /name help spongebob\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"update *task number* /date *task name*: (only for deadline or event tasks!) \""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"updates the date and time of the task with that number from the list\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"update 1 /date 2020-02-20 1200\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"bye: ends the session\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return helpMessage;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Displays the user\u0027s list of tasks."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return Reply to the user command."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String showList() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String listMessage \u003d \"Here yer go! These are all your tasks!\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return listMessage;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Replies the user\u0027s command to mark a task as done."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param t Task that is marked as done."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return Reply to the user command."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String showDone(Task t) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String doneMessage \u003d \"YEEEEE-HAW!!! You\u0027ve completed this task!\\n\" + t;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return doneMessage;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Replies the user\u0027s command to delete a task."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param t Task that is deleted."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return Reply to the user command."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String showDelete(Task t, TaskList tasks) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String deleteMessage \u003d \"Got it! I\u0027m removin\u0027 this task!\\n\" + t + \"\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"Now you have \" + tasks.getSize() + \" tasks in your list!\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return deleteMessage;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Replies the user\u0027s command to update a task."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param t Task to be updated."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return Reply to the user command."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String showUpdate(Task t) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String updateMessage \u003d \"Got it! I\u0027m updatin\u0027 this task to:\\n\" + t;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return updateMessage;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Replies the user\u0027s command to add a task."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param t Task to be added."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return Reply to the user command."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String showAdd(Task t, TaskList tasks) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String addMessage \u003d \"Ain\u0027t no problem! I\u0027m addin\u0027 this task:\\n\" + t + \"\\n\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                + \"Now you have \" + tasks.getSize() + \" tasks in your list!\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return addMessage;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Displays the matching tasks found using the keyword."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return Reply to the user command."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String showFind() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        String findMessage \u003d \"Ain\u0027t no problem! I have found the matchin\u0027 tasks in your list:\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return findMessage;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Displays the error message."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param errorMessage Error message."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @return The error message to be displayed."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String showError(String errorMessage) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 145
    }
  },
  {
    "path": "src/main/java/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    private String taskDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Instantiates an UpdateCommand object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskNum The task number to be updated."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskName The new name of the task to be updated."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param taskDate The new date and time of the task to be updated."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public UpdateCommand(int taskNum, String taskName, String taskDate) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        this.taskDate \u003d taskDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assert tasks !\u003d null \u0026\u0026 ui !\u003d null \u0026\u0026 storage !\u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                : \"TaskList, Ui or Storage is not supposed to be null\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new EmptyListException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (this.taskNum \u003d\u003d 0 || this.taskNum \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            throw new InvalidTaskNumberException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task t \u003d tasks.getTask(this.taskNum);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        updateTask(t);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        storage.updateData(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return ui.showUpdate(t);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * Updates the task with the new task name or date and time."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @param t Task to be updated."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     * @throws DukeException If the date and time was not specified in the correct format."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void updateTask(Task t) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        if (this.taskName !\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            t.setTaskName(this.taskName);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            t.setTaskDateTime(this.taskDate);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 54
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" maxWidth\u003d\"250.0\" style\u003d\"-fx-background-color: mistyrose; -fx-background-radius: 15 15 15 15;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "      \u003c/Label\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"75.0\" fitWidth\u003d\"75.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 27
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: pink;\" text\u003d\"ENTER\" textFill\u003d\"#5b7294\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            \u003cFont name\u003d\"Comic Sans MS Bold\" size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-image: url(\u0027/images/clouds.jpg\u0027);\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 23
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testDeadlinePrinting_correctFormat_success() throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task d \u003d new Deadline(\"proj\", \"2019-10-15 2359\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"[D][\\u2718] proj (by: Tue, 15 Oct 2019, 23:59)\", d.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testDeadlinePrinting_wrongFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            Task d \u003d new Deadline(\"project\", \"Sunday\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String error \u003d \"UHOH! Y\u0027all need to learn to use the proper format!\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    + \"Try somethin\u0027 like this: \\ndeadline build spaceship /by 2019-10-15 2359\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            assertEquals(error, ex.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testDeadlinePrinting_doneDeadline_success() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task d \u003d new Deadline(\"proj\", \"2019-10-15 2359\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        d.markDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"[D][\\u2713] proj (by: Tue, 15 Oct 2019, 23:59)\", d.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testToTaskData_doneDeadline_success() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task d \u003d new Deadline(\"proj\", \"2019-10-15 2359\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        d.markDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"D ; 1 ; proj ; 2019-10-15 2359\", d.toTaskData());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testToTaskData_notDoneDeadline_success() throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task d \u003d new Deadline(\"proj\", \"2019-10-15 2359\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"D ; 0 ; proj ; 2019-10-15 2359\", d.toTaskData());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 45
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testEventPrinting_correctFormat_success() throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task e \u003d new Event(\"meeting\", \"2019-10-15 1200\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"[E][\\u2718] meeting (at: Tue, 15 Oct 2019, 12:00)\", e.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testEventPrinting_wrongFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            Task e \u003d new Event(\"meeting\", \"Sunday\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String error \u003d \"UHOH! Y\u0027all need to learn to use the proper format!\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    + \"Try somethin\u0027 like this: \\nevent karate competition /at 2019-10-15 1200\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            assertEquals(error, ex.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testEventPrinting_doneEvent_success() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task e \u003d new Event(\"meeting\", \"2019-10-15 1200\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        e.markDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"[E][\\u2713] meeting (at: Tue, 15 Oct 2019, 12:00)\", e.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testToTaskData_doneEvent_success() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task e \u003d new Event(\"meeting\", \"2019-10-15 1200\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        e.markDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"E ; 1 ; meeting ; 2019-10-15 1200\", e.toTaskData());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testToTaskData_notDoneDeadline_success() throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task e \u003d new Event(\"meeting\", \"2019-10-15 1200\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"E ; 0 ; meeting ; 2019-10-15 1200\", e.toTaskData());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 44
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void parse_exitCommand_success() throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(true, Parser.parse(\"bye\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void parse_helpCommand_success() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(true, Parser.parse(\"help\") instanceof HelpCommand);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void parse_listCommand_success() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(true, Parser.parse(\"list\") instanceof ListCommand);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void parse_doneCommand_success() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(true, Parser.parse(\"done 1\") instanceof DoneCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void parse_doneCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            Parser.parse(\"done\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String error \u003d \"UHOH! I ain\u0027t sure which task to mark done if you ain\u0027t sayin\u0027!\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    + \"Try somethin\u0027 like this: \\ndone 1\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            assertEquals(error, ex.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void parse_deleteCommand_success() throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(true, Parser.parse(\"delete 1\") instanceof DeleteCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void parse_deleteCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            Parser.parse(\"delete\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String error \u003d \"UHOH! I ain\u0027t sure which task to delete if you ain\u0027t sayin\u0027!\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    + \"Try somethin\u0027 like this: \\ndelete 1\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            assertEquals(error, ex.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void parse_addCommand_success() throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(true, Parser.parse(\"todo read\") instanceof AddCommand);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(true,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                Parser.parse(\"deadline project /by 2019-10-15 2359\") instanceof AddCommand);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(true,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                Parser.parse(\"event meeting /at 2019-10-15 1200\") instanceof AddCommand);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void parse_unknownCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            Parser.parse(\"hello\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            String error \u003d \"UHOH! Boy, I don\u0027t get what y\u0027all are sayin\u0027!\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "                    + \"Try typin\u0027 \\\"help\\\" to see what commands you can use!\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "            assertEquals(error, ex.getMessage());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 76
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testTodoPrinting_doneTodo_success() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task todo \u003d new Todo(\"read\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        todo.markDone();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"[T][\\u2713] read\", todo.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testTodoPrinting_notDoneTodo_success() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task todo \u003d new Todo(\"read\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"[T][\\u2718] read\", todo.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testToTaskData_doneTodo_success() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task todo \u003d new Todo(\"read\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        todo.markDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"T ; 1 ; read\", todo.toTaskData());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    public void testToTaskData_notDoneTodo_success() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        Task todo \u003d new Todo(\"read\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "        assertEquals(\"T ; 0 ; read\", todo.toTaskData());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 31
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "help"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "event project meeting /at"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "LIST"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "delete"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "esmanda3w"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "esmanda3w": 3,
      "-": 37
    }
  }
]
