[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"-":24,"davidcaiqifan":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.8\u0027"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"davidcaiqifan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"davidcaiqifan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"davidcaiqifan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"davidcaiqifan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"davidcaiqifan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"davidcaiqifan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"davidcaiqifan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"davidcaiqifan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"davidcaiqifan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"davidcaiqifan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"davidcaiqifan"},"content":"    systemProperty \"file.encoding\", \"utf-8\""},{"lineNumber":36,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":49,"author":{"gitId":"davidcaiqifan"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":53,"author":{"gitId":"davidcaiqifan"},"content":"    archiveBaseName \u003d \"Duke\""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":58,"author":{"gitId":"davidcaiqifan"},"content":"    toolVersion \u003d \u00278.35\u0027"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":63,"author":{"gitId":"davidcaiqifan"},"content":"    enableAssertions \u003d true"},{"lineNumber":64,"author":{"gitId":"davidcaiqifan"},"content":"    systemProperty \"file.encoding\", \"utf-8\""},{"lineNumber":65,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":43,"davidcaiqifan":22}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":"# Checks that all text files end with a newline."},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":"ret\u003d0"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"# Preserve filename with spaces by only splitting on newlines."},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"IFS\u003d\u0027"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"\u0027"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\""},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\""},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"        ret\u003d1"},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"    fi"},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":"done"},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"exit $ret"}],"authorContributionMap":{"davidcaiqifan":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":"# Checks for prohibited line endings."},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"# Prohibited line endings: \\r\\n"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"awk \u0027"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"    BEGIN {"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"        FS \u003d \":\""},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"        OFS \u003d \":\""},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"        ret \u003d 0"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"    {"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"        ret \u003d 1"},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\""},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":"    END {"},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":"        exit ret"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"\u0027"}],"authorContributionMap":{"davidcaiqifan":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":"# Checks for trailing whitespace"},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":"awk \u0027"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"    BEGIN {"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"        FS \u003d \":\""},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"        OFS \u003d \":\""},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"        ret \u003d 0"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"    {"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"        # which do not properly handle trailing whitespace."},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"        # (e.g. GitHub web editor)"},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"        if ($1 ~ /\\.md$/) {"},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":"            severity \u003d \"WARN\""},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"            severity \u003d \"ERROR\""},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"            ret \u003d 1"},{"lineNumber":20,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"davidcaiqifan"},"content":"        print severity, $1, $2, \" trailing whitespace.\""},{"lineNumber":22,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"davidcaiqifan"},"content":"    END {"},{"lineNumber":24,"author":{"gitId":"davidcaiqifan"},"content":"        exit ret"},{"lineNumber":25,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"davidcaiqifan"},"content":"\u0027"}],"authorContributionMap":{"davidcaiqifan":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail."},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":"ret\u003d0 \u0026\u0026"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"for checkscript in \"$dir\"/check-*; do"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"    if ! \"$checkscript\"; then"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"        ret\u003d1"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"    fi"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"done"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"exit $ret"}],"authorContributionMap":{"davidcaiqifan":11}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"## Introduction"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":"_DogeBot_ is a desktop app for managing tasks and its optimized for use via **Command Line Interface(CLI)** while"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"still having the benefits of a **Graphical User Interface(GUI)**.Therefore this app is suitable for fast typers."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"## Quick start"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"1. Ensure you have Java `11` or above installed in your Computer."},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"2. You can download the latest version of DogeBot [here](https://github.com/davidcaiqifan/ip/releases/tag/A-Release)"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"3. Download the `.jar` file and copy the file to the folder you want to use as the home folder for your DogeBot."},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":"4. Double-click the file to start the app. You should be able to see the following in a few seconds."},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"![Image of DogeBot](./Ui.png)"},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":20,"author":{"gitId":"davidcaiqifan"},"content":"Type the command in the command box and press Enter to execute it. e.g. typing list and pressing Enter will display all tasks."},{"lineNumber":21,"author":{"gitId":"davidcaiqifan"},"content":"Some example commands you can try:"},{"lineNumber":22,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":23,"author":{"gitId":"davidcaiqifan"},"content":"_**list :**_ Lists all tasks."},{"lineNumber":24,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":25,"author":{"gitId":"davidcaiqifan"},"content":"_**remove 3**_ : Deletes the 3rd task shown in the current list."},{"lineNumber":26,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":27,"author":{"gitId":"davidcaiqifan"},"content":"**_bye_** : Exits the app."},{"lineNumber":28,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":29,"author":{"gitId":"davidcaiqifan"},"content":"Refer to the Features below for details of each command."},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"davidcaiqifan"},"content":"### `Add task` "},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"davidcaiqifan"},"content":"Use the keyword **_todo_** followed by task description."},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"davidcaiqifan"},"content":"_todo feed dog_"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"davidcaiqifan"},"content":"_Added to list : [LOW] feed dog_"},{"lineNumber":44,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":45,"author":{"gitId":"davidcaiqifan"},"content":"_You have a total of 1 tasks_"},{"lineNumber":46,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":47,"author":{"gitId":"davidcaiqifan"},"content":"### `Show tasks` "},{"lineNumber":48,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":49,"author":{"gitId":"davidcaiqifan"},"content":"Type in the keyword **_list_** as input"},{"lineNumber":50,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":51,"author":{"gitId":"davidcaiqifan"},"content":"Example of usage: "},{"lineNumber":52,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":53,"author":{"gitId":"davidcaiqifan"},"content":"_list_"},{"lineNumber":54,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":55,"author":{"gitId":"davidcaiqifan"},"content":"Expected outcome:"},{"lineNumber":56,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":57,"author":{"gitId":"davidcaiqifan"},"content":"Check out your missions!"},{"lineNumber":58,"author":{"gitId":"davidcaiqifan"},"content":"_1.  [T] [LOW] feed doge [✗]_"},{"lineNumber":59,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":60,"author":{"gitId":"davidcaiqifan"},"content":"_You have a total of 1 tasks_"},{"lineNumber":61,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":62,"author":{"gitId":"davidcaiqifan"},"content":"### `Remove` "},{"lineNumber":63,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":64,"author":{"gitId":"davidcaiqifan"},"content":"Use the keyword **_remove_** followed by task serial number as"},{"lineNumber":65,"author":{"gitId":"davidcaiqifan"},"content":"shown by the **_list_** command"},{"lineNumber":66,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":67,"author":{"gitId":"davidcaiqifan"},"content":"Example of usage: "},{"lineNumber":68,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":69,"author":{"gitId":"davidcaiqifan"},"content":"_remove 1_"},{"lineNumber":70,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":71,"author":{"gitId":"davidcaiqifan"},"content":"Expected outcome:"},{"lineNumber":72,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":73,"author":{"gitId":"davidcaiqifan"},"content":"_Task successfully removed!_"},{"lineNumber":74,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":75,"author":{"gitId":"davidcaiqifan"},"content":"_-\u003e [LOW] feed doge_"},{"lineNumber":76,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":77,"author":{"gitId":"davidcaiqifan"},"content":"_You have a total of 0 tasks_"},{"lineNumber":78,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":79,"author":{"gitId":"davidcaiqifan"},"content":"### `Remove` "},{"lineNumber":80,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":81,"author":{"gitId":"davidcaiqifan"},"content":"Use the keyword **_remove_** followed by task serial number as"},{"lineNumber":82,"author":{"gitId":"davidcaiqifan"},"content":"shown by the **_list_** command"},{"lineNumber":83,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":84,"author":{"gitId":"davidcaiqifan"},"content":"Example of usage: "},{"lineNumber":85,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":86,"author":{"gitId":"davidcaiqifan"},"content":"_remove 1_"},{"lineNumber":87,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":88,"author":{"gitId":"davidcaiqifan"},"content":"Expected outcome:"},{"lineNumber":89,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":90,"author":{"gitId":"davidcaiqifan"},"content":"_Task successfully removed!_"},{"lineNumber":91,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":92,"author":{"gitId":"davidcaiqifan"},"content":"_-\u003e [LOW] feed doge_"},{"lineNumber":93,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":94,"author":{"gitId":"davidcaiqifan"},"content":"_You have a total of 0 tasks_"},{"lineNumber":95,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":96,"author":{"gitId":"davidcaiqifan"},"content":"### `Mark as done` "},{"lineNumber":97,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":98,"author":{"gitId":"davidcaiqifan"},"content":"Use the keyword **_check_** followed by task serial number as"},{"lineNumber":99,"author":{"gitId":"davidcaiqifan"},"content":"shown by the **_list_** command"},{"lineNumber":100,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":101,"author":{"gitId":"davidcaiqifan"},"content":"Example of usage: "},{"lineNumber":102,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":103,"author":{"gitId":"davidcaiqifan"},"content":"_check 1_"},{"lineNumber":104,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":105,"author":{"gitId":"davidcaiqifan"},"content":"Expected outcome:"},{"lineNumber":106,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":107,"author":{"gitId":"davidcaiqifan"},"content":"_Such wow! I have completed the following task!_"},{"lineNumber":108,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":109,"author":{"gitId":"davidcaiqifan"},"content":"_[LOW] feed dog [✓]_"},{"lineNumber":110,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":111,"author":{"gitId":"davidcaiqifan"},"content":"_You have a total of 1 tasks_"},{"lineNumber":112,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":113,"author":{"gitId":"davidcaiqifan"},"content":"### `Add events` "},{"lineNumber":114,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":115,"author":{"gitId":"davidcaiqifan"},"content":"Use the keyword **_event_** followed by event description."},{"lineNumber":116,"author":{"gitId":"davidcaiqifan"},"content":"A date must be specified after the description with the"},{"lineNumber":117,"author":{"gitId":"davidcaiqifan"},"content":"following format : **_event_** _description_ **_/on_** _YYYY-MM-DD_"},{"lineNumber":118,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":119,"author":{"gitId":"davidcaiqifan"},"content":"Example of usage: "},{"lineNumber":120,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":121,"author":{"gitId":"davidcaiqifan"},"content":"_event east coast plan /on 2020-09-02_"},{"lineNumber":122,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":123,"author":{"gitId":"davidcaiqifan"},"content":"Expected outcome:"},{"lineNumber":124,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":125,"author":{"gitId":"davidcaiqifan"},"content":"_Added to list : [LOW] east coast plan on WEDNESDAY 2 SEPTEMBER 2020_"},{"lineNumber":126,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":127,"author":{"gitId":"davidcaiqifan"},"content":"### `Add deadline` "},{"lineNumber":128,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":129,"author":{"gitId":"davidcaiqifan"},"content":"Use the keyword **_deadline_** followed by event description."},{"lineNumber":130,"author":{"gitId":"davidcaiqifan"},"content":"A date must be specified after the description with the"},{"lineNumber":131,"author":{"gitId":"davidcaiqifan"},"content":"following format : **_deadline_** _description_ **_/by_** _YYYY-MM-DD_"},{"lineNumber":132,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":133,"author":{"gitId":"davidcaiqifan"},"content":"Example of usage: "},{"lineNumber":134,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":135,"author":{"gitId":"davidcaiqifan"},"content":"_dead west coast plan /by 2020-10-02_"},{"lineNumber":136,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":137,"author":{"gitId":"davidcaiqifan"},"content":"Expected outcome:"},{"lineNumber":138,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":139,"author":{"gitId":"davidcaiqifan"},"content":"_Added to list : [LOW] west coast plan by FRIDAY 2 OCTOBER 2020_"},{"lineNumber":140,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":141,"author":{"gitId":"davidcaiqifan"},"content":"### `Find task` "},{"lineNumber":142,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":143,"author":{"gitId":"davidcaiqifan"},"content":"Use the keyword **_find_** followed by search keyword."},{"lineNumber":144,"author":{"gitId":"davidcaiqifan"},"content":"Multiple keywords can be used by adding a _comma_ after the previous keyword."},{"lineNumber":145,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":146,"author":{"gitId":"davidcaiqifan"},"content":"Example of usage: "},{"lineNumber":147,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":148,"author":{"gitId":"davidcaiqifan"},"content":"_find dog,east_"},{"lineNumber":149,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":150,"author":{"gitId":"davidcaiqifan"},"content":"Expected outcome:"},{"lineNumber":151,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":152,"author":{"gitId":"davidcaiqifan"},"content":"_Doge found the following tasks you asked for!_"},{"lineNumber":153,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":154,"author":{"gitId":"davidcaiqifan"},"content":" _1.  [T] [LOW] feed doge [✗]_"},{"lineNumber":155,"author":{"gitId":"davidcaiqifan"},"content":" "},{"lineNumber":156,"author":{"gitId":"davidcaiqifan"},"content":" _2.  [E] [LOW] east coast plan on WEDNESDAY 2 SEPTEMBER 2020 [✗]_"},{"lineNumber":157,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":158,"author":{"gitId":"davidcaiqifan"},"content":"### `Set priority` "},{"lineNumber":159,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":160,"author":{"gitId":"davidcaiqifan"},"content":"Use the keyword **_-PL_** followed by a number from _**1**_ to _**3**_ to indicate "},{"lineNumber":161,"author":{"gitId":"davidcaiqifan"},"content":"priority level of the task, with _**1**_ being the lowest priority and _**3**_ being the highest priority."},{"lineNumber":162,"author":{"gitId":"davidcaiqifan"},"content":"Otherwise, the default priority level is _low._"},{"lineNumber":163,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":164,"author":{"gitId":"davidcaiqifan"},"content":"Example of usage: "},{"lineNumber":165,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":166,"author":{"gitId":"davidcaiqifan"},"content":"_todo feed doge -PL3_"},{"lineNumber":167,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":168,"author":{"gitId":"davidcaiqifan"},"content":"Expected outcome:"},{"lineNumber":169,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":170,"author":{"gitId":"davidcaiqifan"},"content":"_Added to list : [HIGH] feed doge_ "},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"davidcaiqifan"},"content":"### `Exit application` "},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"davidcaiqifan"},"content":"Use the keyword **_bye_** "},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"davidcaiqifan"},"content":"_bye_"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"davidcaiqifan"},"content":"_Doge would like to see you soon!_ "}],"authorContributionMap":{"-":21,"davidcaiqifan":161}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.scene.paint.Paint;"},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"davidcaiqifan"},"content":" * An example of a custom control using FXML."},{"lineNumber":21,"author":{"gitId":"davidcaiqifan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":22,"author":{"gitId":"davidcaiqifan"},"content":" * containing text from the speaker."},{"lineNumber":23,"author":{"gitId":"davidcaiqifan"},"content":" */"},{"lineNumber":24,"author":{"gitId":"davidcaiqifan"},"content":"public class DialogBox extends HBox {"},{"lineNumber":25,"author":{"gitId":"davidcaiqifan"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"davidcaiqifan"},"content":"    private Label dialog;"},{"lineNumber":27,"author":{"gitId":"davidcaiqifan"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"davidcaiqifan"},"content":"    private ImageView displayPicture;"},{"lineNumber":29,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":30,"author":{"gitId":"davidcaiqifan"},"content":"    private DialogBox(String text, Image img, boolean type) {"},{"lineNumber":31,"author":{"gitId":"davidcaiqifan"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"davidcaiqifan"},"content":"            FXMLLoader fxmlLoader;"},{"lineNumber":33,"author":{"gitId":"davidcaiqifan"},"content":"            if (type) {"},{"lineNumber":34,"author":{"gitId":"davidcaiqifan"},"content":"                fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":35,"author":{"gitId":"davidcaiqifan"},"content":"            } else {"},{"lineNumber":36,"author":{"gitId":"davidcaiqifan"},"content":"                fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBoxUser.fxml\"));"},{"lineNumber":37,"author":{"gitId":"davidcaiqifan"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"davidcaiqifan"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":39,"author":{"gitId":"davidcaiqifan"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":40,"author":{"gitId":"davidcaiqifan"},"content":"            fxmlLoader.load();"},{"lineNumber":41,"author":{"gitId":"davidcaiqifan"},"content":"        } catch (IOException e) {"},{"lineNumber":42,"author":{"gitId":"davidcaiqifan"},"content":"            e.printStackTrace();"},{"lineNumber":43,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"davidcaiqifan"},"content":"        dialog.setText(text);"},{"lineNumber":45,"author":{"gitId":"davidcaiqifan"},"content":"        Circle circleClip \u003d new Circle(50, 50, 50);"},{"lineNumber":46,"author":{"gitId":"davidcaiqifan"},"content":"        ImageView circleImage \u003d new ImageView(img);"},{"lineNumber":47,"author":{"gitId":"davidcaiqifan"},"content":"        displayPicture.setImage(img);"},{"lineNumber":48,"author":{"gitId":"davidcaiqifan"},"content":"        displayPicture.setClip(circleClip);"},{"lineNumber":49,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":51,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"davidcaiqifan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":53,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"davidcaiqifan"},"content":"    private void flip() {"},{"lineNumber":55,"author":{"gitId":"davidcaiqifan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":56,"author":{"gitId":"davidcaiqifan"},"content":"        Collections.reverse(tmp);"},{"lineNumber":57,"author":{"gitId":"davidcaiqifan"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":58,"author":{"gitId":"davidcaiqifan"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":59,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":61,"author":{"gitId":"davidcaiqifan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":62,"author":{"gitId":"davidcaiqifan"},"content":"        return new DialogBox(text, img, false);"},{"lineNumber":63,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":65,"author":{"gitId":"davidcaiqifan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":66,"author":{"gitId":"davidcaiqifan"},"content":"        var db \u003d new DialogBox(text, img, true);"},{"lineNumber":67,"author":{"gitId":"davidcaiqifan"},"content":"        db.flip();"},{"lineNumber":68,"author":{"gitId":"davidcaiqifan"},"content":"        return db;"},{"lineNumber":69,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":71,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"davidcaiqifan"},"content":"     * Gets a Dialogbox when Duke detects an error in user input."},{"lineNumber":73,"author":{"gitId":"davidcaiqifan"},"content":"     * @param text User input."},{"lineNumber":74,"author":{"gitId":"davidcaiqifan"},"content":"     * @param img User image."},{"lineNumber":75,"author":{"gitId":"davidcaiqifan"},"content":"     * @return Dialogbox"},{"lineNumber":76,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"davidcaiqifan"},"content":"    public static DialogBox getDukeDialogError(String text, Image img) {"},{"lineNumber":78,"author":{"gitId":"davidcaiqifan"},"content":"        var db \u003d new DialogBox(text, img, true);"},{"lineNumber":79,"author":{"gitId":"davidcaiqifan"},"content":"        db.flip();"},{"lineNumber":80,"author":{"gitId":"davidcaiqifan"},"content":"        db.dialog.setTextFill(Paint.valueOf(\"crimson\"));"},{"lineNumber":81,"author":{"gitId":"davidcaiqifan"},"content":"        return db;"},{"lineNumber":82,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":84,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":84}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":"import duke.commands.Command;"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"     * Runs the duke.Duke programme"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"     * @param args main args"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"    public static void main(String[] args) {"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"        Storage storage \u003d new Storage(\"\\\\save.txt\");"},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"        Ui ui \u003d new Ui(sc);"},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":"        ui.printWelcome();"},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"            String next \u003d sc.nextLine();"},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"            try {"},{"lineNumber":20,"author":{"gitId":"davidcaiqifan"},"content":"                Command c \u003d Parser.manage(next);"},{"lineNumber":21,"author":{"gitId":"davidcaiqifan"},"content":"                c.execute(ui, storage);"},{"lineNumber":22,"author":{"gitId":"davidcaiqifan"},"content":"            } catch (DukeException e) {"},{"lineNumber":23,"author":{"gitId":"davidcaiqifan"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":24,"author":{"gitId":"davidcaiqifan"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":28,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"davidcaiqifan"},"content":"     * Gets a string output from Duke based on input given in order to output message for client."},{"lineNumber":30,"author":{"gitId":"davidcaiqifan"},"content":"     * @param input Input that is parsed to generate a output."},{"lineNumber":31,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"davidcaiqifan"},"content":"    public String getResponse(String input) throws DukeException {"},{"lineNumber":33,"author":{"gitId":"davidcaiqifan"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":34,"author":{"gitId":"davidcaiqifan"},"content":"        Storage storage \u003d new Storage(\"\\\\save.txt\");"},{"lineNumber":35,"author":{"gitId":"davidcaiqifan"},"content":"        Command c \u003d Parser.manage(input);"},{"lineNumber":36,"author":{"gitId":"davidcaiqifan"},"content":"        return (c.execute(ui, storage));"},{"lineNumber":37,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":1,"davidcaiqifan":37}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":" * Exception class that encapsulates a Duke specific Exception."},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":" */"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":10}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":10}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":" * A GUI for duke.Duke using FXML."},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":" */"},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":"    private final Duke duke \u003d new Duke();"},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"    public void start(Stage stage) {"},{"lineNumber":20,"author":{"gitId":"davidcaiqifan"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes."},{"lineNumber":21,"author":{"gitId":"davidcaiqifan"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"davidcaiqifan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"davidcaiqifan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"davidcaiqifan"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"davidcaiqifan"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"davidcaiqifan"},"content":"            stage.setTitle(\"DogeBot\");"},{"lineNumber":27,"author":{"gitId":"davidcaiqifan"},"content":"            stage.getIcons().add(new Image(\"/images/rsz_1doge.png\"));"},{"lineNumber":28,"author":{"gitId":"davidcaiqifan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":29,"author":{"gitId":"davidcaiqifan"},"content":"            stage.show();"},{"lineNumber":30,"author":{"gitId":"davidcaiqifan"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"davidcaiqifan"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":34}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"import java.util.Timer;"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":"import java.util.TimerTask;"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.application.Platform;"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.fxml.FXML;"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.scene.control.Button;"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":" * Controller for duke.MainWindow. Provides the layout for the other controls."},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":" */"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"davidcaiqifan"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":21,"author":{"gitId":"davidcaiqifan"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"davidcaiqifan"},"content":"    private VBox dialogContainer;"},{"lineNumber":23,"author":{"gitId":"davidcaiqifan"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"davidcaiqifan"},"content":"    private TextField userInput;"},{"lineNumber":25,"author":{"gitId":"davidcaiqifan"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"davidcaiqifan"},"content":"    private Button sendButton;"},{"lineNumber":27,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":28,"author":{"gitId":"davidcaiqifan"},"content":"    private Duke duke;"},{"lineNumber":29,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":30,"author":{"gitId":"davidcaiqifan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/rsz_1pepe.png\"));"},{"lineNumber":31,"author":{"gitId":"davidcaiqifan"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/rsz_1doge.png\"));"},{"lineNumber":32,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":33,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"davidcaiqifan"},"content":"     * Initializes dialogcontainer"},{"lineNumber":35,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"davidcaiqifan"},"content":"    @FXML"},{"lineNumber":37,"author":{"gitId":"davidcaiqifan"},"content":"    public void initialize() {"},{"lineNumber":38,"author":{"gitId":"davidcaiqifan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":39,"author":{"gitId":"davidcaiqifan"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(Ui.printWelcome(), dukeImage));"},{"lineNumber":40,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":42,"author":{"gitId":"davidcaiqifan"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":43,"author":{"gitId":"davidcaiqifan"},"content":"        duke \u003d d;"},{"lineNumber":44,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":46,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"davidcaiqifan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing duke.Duke\u0027s reply and then appends"},{"lineNumber":48,"author":{"gitId":"davidcaiqifan"},"content":"     * them to"},{"lineNumber":49,"author":{"gitId":"davidcaiqifan"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":50,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"davidcaiqifan"},"content":"    @FXML"},{"lineNumber":52,"author":{"gitId":"davidcaiqifan"},"content":"    private void handleUserInput() {"},{"lineNumber":53,"author":{"gitId":"davidcaiqifan"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":54,"author":{"gitId":"davidcaiqifan"},"content":"        String response;"},{"lineNumber":55,"author":{"gitId":"davidcaiqifan"},"content":"        try {"},{"lineNumber":56,"author":{"gitId":"davidcaiqifan"},"content":"            String byeMessage \u003d \"Doge would like to see you soon!\";"},{"lineNumber":57,"author":{"gitId":"davidcaiqifan"},"content":"            response \u003d duke.getResponse(input);"},{"lineNumber":58,"author":{"gitId":"davidcaiqifan"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":59,"author":{"gitId":"davidcaiqifan"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":60,"author":{"gitId":"davidcaiqifan"},"content":"                    DialogBox.getDukeDialog(response, dukeImage));"},{"lineNumber":61,"author":{"gitId":"davidcaiqifan"},"content":"            userInput.clear();"},{"lineNumber":62,"author":{"gitId":"davidcaiqifan"},"content":"            if (response \u003d\u003d byeMessage) {"},{"lineNumber":63,"author":{"gitId":"davidcaiqifan"},"content":"                exitApplication();"},{"lineNumber":64,"author":{"gitId":"davidcaiqifan"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"davidcaiqifan"},"content":"        } catch (DukeException e) {"},{"lineNumber":66,"author":{"gitId":"davidcaiqifan"},"content":"            response \u003d e.getMessage();"},{"lineNumber":67,"author":{"gitId":"davidcaiqifan"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":68,"author":{"gitId":"davidcaiqifan"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":69,"author":{"gitId":"davidcaiqifan"},"content":"                    DialogBox.getDukeDialogError(response, dukeImage));"},{"lineNumber":70,"author":{"gitId":"davidcaiqifan"},"content":"            userInput.clear();"},{"lineNumber":71,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":74,"author":{"gitId":"davidcaiqifan"},"content":"    private void exitApplication() {"},{"lineNumber":75,"author":{"gitId":"davidcaiqifan"},"content":"        TimerTask time \u003d new TimerTask() {"},{"lineNumber":76,"author":{"gitId":"davidcaiqifan"},"content":"            @Override"},{"lineNumber":77,"author":{"gitId":"davidcaiqifan"},"content":"            public void run() {"},{"lineNumber":78,"author":{"gitId":"davidcaiqifan"},"content":"                Platform.exit();"},{"lineNumber":79,"author":{"gitId":"davidcaiqifan"},"content":"                System.exit(0);"},{"lineNumber":80,"author":{"gitId":"davidcaiqifan"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"davidcaiqifan"},"content":"        };"},{"lineNumber":82,"author":{"gitId":"davidcaiqifan"},"content":"        Timer delayTime \u003d new Timer();"},{"lineNumber":83,"author":{"gitId":"davidcaiqifan"},"content":"        delayTime.schedule(time, 1500);"},{"lineNumber":84,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":85}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"import duke.commands.AddCommand;"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"import duke.commands.CheckCommand;"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"import duke.commands.Command;"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"import duke.commands.ErrorCommand;"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"import duke.commands.ExitCommand;"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"import duke.commands.PrintlistCommand;"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"import duke.commands.RemoveCommand;"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"import duke.commands.SearchCommand;"},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"import duke.task.Deadline;"},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"import duke.task.Event;"},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":"import duke.task.Priority;"},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":"import duke.task.Task;"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"import duke.task.TaskType;"},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"import duke.task.ToDo;"},{"lineNumber":20,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":21,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":22,"author":{"gitId":"davidcaiqifan"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"davidcaiqifan"},"content":" * Object to parse a line of input given by user"},{"lineNumber":24,"author":{"gitId":"davidcaiqifan"},"content":" */"},{"lineNumber":25,"author":{"gitId":"davidcaiqifan"},"content":"public class Parser {"},{"lineNumber":26,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":27,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"davidcaiqifan"},"content":"     * Returns a duke.commands.Command based on user input"},{"lineNumber":29,"author":{"gitId":"davidcaiqifan"},"content":"     * @param input user input"},{"lineNumber":30,"author":{"gitId":"davidcaiqifan"},"content":"     * @return command based on user input"},{"lineNumber":31,"author":{"gitId":"davidcaiqifan"},"content":"     * @throws DukeException exception that occurs when parser does not"},{"lineNumber":32,"author":{"gitId":"davidcaiqifan"},"content":"     * recognise user input"},{"lineNumber":33,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"davidcaiqifan"},"content":"    public static Command manage(String input) throws DukeException {"},{"lineNumber":35,"author":{"gitId":"davidcaiqifan"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":36,"author":{"gitId":"davidcaiqifan"},"content":"            return new ExitCommand();"},{"lineNumber":37,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"davidcaiqifan"},"content":"        if (input.equals(\"list\")) {"},{"lineNumber":39,"author":{"gitId":"davidcaiqifan"},"content":"            return new PrintlistCommand();"},{"lineNumber":40,"author":{"gitId":"davidcaiqifan"},"content":"        } else if (input.contains(\"check\")) {"},{"lineNumber":41,"author":{"gitId":"davidcaiqifan"},"content":"            return processCheck(input);"},{"lineNumber":42,"author":{"gitId":"davidcaiqifan"},"content":"        } else if (input.contains(\"find\")) {"},{"lineNumber":43,"author":{"gitId":"davidcaiqifan"},"content":"            return processSearch(input);"},{"lineNumber":44,"author":{"gitId":"davidcaiqifan"},"content":"        } else if (input.contains(\"remove\")) {"},{"lineNumber":45,"author":{"gitId":"davidcaiqifan"},"content":"            return processRemoval(input);"},{"lineNumber":46,"author":{"gitId":"davidcaiqifan"},"content":"        } else if (input.contains(\"todo\")) {"},{"lineNumber":47,"author":{"gitId":"davidcaiqifan"},"content":"            return processTodo(input);"},{"lineNumber":48,"author":{"gitId":"davidcaiqifan"},"content":"        } else if (input.contains(\"deadline\")) {"},{"lineNumber":49,"author":{"gitId":"davidcaiqifan"},"content":"            return processDeadline(input.substring(9));"},{"lineNumber":50,"author":{"gitId":"davidcaiqifan"},"content":"        } else if (input.contains(\"event\")) {"},{"lineNumber":51,"author":{"gitId":"davidcaiqifan"},"content":"            return processEvent(input.substring(6));"},{"lineNumber":52,"author":{"gitId":"davidcaiqifan"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"davidcaiqifan"},"content":"            throw new DukeException(\"Oops! There is no such keyword!\");"},{"lineNumber":54,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":57,"author":{"gitId":"davidcaiqifan"},"content":"    private static Command processRemoval(String input) {"},{"lineNumber":58,"author":{"gitId":"davidcaiqifan"},"content":"        int removeInt;"},{"lineNumber":59,"author":{"gitId":"davidcaiqifan"},"content":"        try {"},{"lineNumber":60,"author":{"gitId":"davidcaiqifan"},"content":"            String intAtBack \u003d input.substring(7);"},{"lineNumber":61,"author":{"gitId":"davidcaiqifan"},"content":"            removeInt \u003d Integer.parseInt(intAtBack);"},{"lineNumber":62,"author":{"gitId":"davidcaiqifan"},"content":"            return new RemoveCommand(removeInt);"},{"lineNumber":63,"author":{"gitId":"davidcaiqifan"},"content":"        } catch (Exception e) {"},{"lineNumber":64,"author":{"gitId":"davidcaiqifan"},"content":"            return new ErrorCommand(e.getMessage());"},{"lineNumber":65,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":68,"author":{"gitId":"davidcaiqifan"},"content":"    private static Command processSearch(String input) {"},{"lineNumber":69,"author":{"gitId":"davidcaiqifan"},"content":"        String keyword \u003d input.substring(5);"},{"lineNumber":70,"author":{"gitId":"davidcaiqifan"},"content":"        String[] searchArray \u003d checkCommas(keyword).toArray(new String [0]);"},{"lineNumber":71,"author":{"gitId":"davidcaiqifan"},"content":"        return new SearchCommand(searchArray);"},{"lineNumber":72,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":74,"author":{"gitId":"davidcaiqifan"},"content":"    private static Command processCheck(String input) {"},{"lineNumber":75,"author":{"gitId":"davidcaiqifan"},"content":"        int checkInt;"},{"lineNumber":76,"author":{"gitId":"davidcaiqifan"},"content":"        try {"},{"lineNumber":77,"author":{"gitId":"davidcaiqifan"},"content":"            String intAtBack \u003d input.substring(6);"},{"lineNumber":78,"author":{"gitId":"davidcaiqifan"},"content":"            checkInt \u003d Integer.parseInt(intAtBack);"},{"lineNumber":79,"author":{"gitId":"davidcaiqifan"},"content":"            return new CheckCommand(checkInt);"},{"lineNumber":80,"author":{"gitId":"davidcaiqifan"},"content":"        } catch (Exception e) {"},{"lineNumber":81,"author":{"gitId":"davidcaiqifan"},"content":"            return new ErrorCommand(e.getMessage());"},{"lineNumber":82,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":85,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"davidcaiqifan"},"content":"     * Parses a string input containing commas."},{"lineNumber":87,"author":{"gitId":"davidcaiqifan"},"content":"     * @param input String input."},{"lineNumber":88,"author":{"gitId":"davidcaiqifan"},"content":"     * @return An arraylist for the elements in the input string that were separated by commas."},{"lineNumber":89,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"davidcaiqifan"},"content":"    public static ArrayList\u003cString\u003e checkCommas(String input) {"},{"lineNumber":91,"author":{"gitId":"davidcaiqifan"},"content":"        ArrayList\u003cString\u003e returnArray \u003d new ArrayList\u003c\u003e();"},{"lineNumber":92,"author":{"gitId":"davidcaiqifan"},"content":"        if (input.contains(\",\")) {"},{"lineNumber":93,"author":{"gitId":"davidcaiqifan"},"content":"            int commaIndex \u003d input.indexOf(\",\");"},{"lineNumber":94,"author":{"gitId":"davidcaiqifan"},"content":"            returnArray.addAll(checkCommas(input.substring(0, commaIndex)));"},{"lineNumber":95,"author":{"gitId":"davidcaiqifan"},"content":"            returnArray.addAll(checkCommas(input.substring(commaIndex + 1)));"},{"lineNumber":96,"author":{"gitId":"davidcaiqifan"},"content":"        } else {"},{"lineNumber":97,"author":{"gitId":"davidcaiqifan"},"content":"            returnArray.add(input);"},{"lineNumber":98,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"davidcaiqifan"},"content":"        return returnArray;"},{"lineNumber":100,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":102,"author":{"gitId":"davidcaiqifan"},"content":"    private static Command processTodo(String input) throws DukeException {"},{"lineNumber":103,"author":{"gitId":"davidcaiqifan"},"content":"        if (checkEmpty(input, \"todo\")) {"},{"lineNumber":104,"author":{"gitId":"davidcaiqifan"},"content":"            throw new DukeException(\"Much error! You have to describe your mission!\");"},{"lineNumber":105,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"davidcaiqifan"},"content":"        ArrayList\u003cString\u003e todos \u003d checkCommas(input.substring(5));"},{"lineNumber":107,"author":{"gitId":"davidcaiqifan"},"content":"        ArrayList\u003cTask\u003e todoTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":108,"author":{"gitId":"davidcaiqifan"},"content":"        for (String s : todos) {"},{"lineNumber":109,"author":{"gitId":"davidcaiqifan"},"content":"            if (checkPriority(s)) {"},{"lineNumber":110,"author":{"gitId":"davidcaiqifan"},"content":"                todoTasks.add(handlePriority(s, TaskType.T));"},{"lineNumber":111,"author":{"gitId":"davidcaiqifan"},"content":"            } else {"},{"lineNumber":112,"author":{"gitId":"davidcaiqifan"},"content":"                todoTasks.add(new ToDo(s));"},{"lineNumber":113,"author":{"gitId":"davidcaiqifan"},"content":"            }"},{"lineNumber":114,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"davidcaiqifan"},"content":"        return new AddCommand(todoTasks.toArray(new Task[0]));"},{"lineNumber":116,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":118,"author":{"gitId":"davidcaiqifan"},"content":"    private static Command processEvent(String input) throws DukeException {"},{"lineNumber":119,"author":{"gitId":"davidcaiqifan"},"content":"        if (checkEmpty(input, \"event\")) {"},{"lineNumber":120,"author":{"gitId":"davidcaiqifan"},"content":"            throw new DukeException(\"Much error! You have to describe your event!\");"},{"lineNumber":121,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"davidcaiqifan"},"content":"        ArrayList\u003cString\u003e events \u003d checkCommas(input);"},{"lineNumber":123,"author":{"gitId":"davidcaiqifan"},"content":"        ArrayList\u003cTask\u003e eventTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":124,"author":{"gitId":"davidcaiqifan"},"content":"        for (String s : events) {"},{"lineNumber":125,"author":{"gitId":"davidcaiqifan"},"content":"            if (checkPlan(s)) {"},{"lineNumber":126,"author":{"gitId":"davidcaiqifan"},"content":"                throw new DukeException(\"Oh no, you do not have a planned timing for your event!\");"},{"lineNumber":127,"author":{"gitId":"davidcaiqifan"},"content":"            } else if (s.contains(\"/\")) {"},{"lineNumber":128,"author":{"gitId":"davidcaiqifan"},"content":"                if (checkPriority(s)) {"},{"lineNumber":129,"author":{"gitId":"davidcaiqifan"},"content":"                    eventTasks.add(handlePriority(parseDate(s, \"on\"), TaskType.E));"},{"lineNumber":130,"author":{"gitId":"davidcaiqifan"},"content":"                } else {"},{"lineNumber":131,"author":{"gitId":"davidcaiqifan"},"content":"                    eventTasks.add(new Event(parseDate(s, \"on\")));"},{"lineNumber":132,"author":{"gitId":"davidcaiqifan"},"content":"                }"},{"lineNumber":133,"author":{"gitId":"davidcaiqifan"},"content":"            } else {"},{"lineNumber":134,"author":{"gitId":"davidcaiqifan"},"content":"                eventTasks.add(new Event(s));"},{"lineNumber":135,"author":{"gitId":"davidcaiqifan"},"content":"            }"},{"lineNumber":136,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"davidcaiqifan"},"content":"        return new AddCommand(eventTasks.toArray(new Task[0]));"},{"lineNumber":138,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":140,"author":{"gitId":"davidcaiqifan"},"content":"    private static Command processDeadline(String input) throws DukeException {"},{"lineNumber":141,"author":{"gitId":"davidcaiqifan"},"content":"        if (checkEmpty(input, \"deadline\")) {"},{"lineNumber":142,"author":{"gitId":"davidcaiqifan"},"content":"            throw new DukeException(\"Much error! You have to describe your deadline!\");"},{"lineNumber":143,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"davidcaiqifan"},"content":"        ArrayList\u003cString\u003e events \u003d checkCommas(input);"},{"lineNumber":145,"author":{"gitId":"davidcaiqifan"},"content":"        ArrayList\u003cTask\u003e eventTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":146,"author":{"gitId":"davidcaiqifan"},"content":"        for (String s : events) {"},{"lineNumber":147,"author":{"gitId":"davidcaiqifan"},"content":"            if (checkPlan(s)) {"},{"lineNumber":148,"author":{"gitId":"davidcaiqifan"},"content":"                throw new DukeException(\"Oh no, you do not have a planned timing for your deadline!\");"},{"lineNumber":149,"author":{"gitId":"davidcaiqifan"},"content":"            } else if (s.contains(\"/\")) {"},{"lineNumber":150,"author":{"gitId":"davidcaiqifan"},"content":"                if (checkPriority(s)) {"},{"lineNumber":151,"author":{"gitId":"davidcaiqifan"},"content":"                    System.out.println(s);"},{"lineNumber":152,"author":{"gitId":"davidcaiqifan"},"content":"                    eventTasks.add(handlePriority(parseDate(s, \"by\"), TaskType.D));"},{"lineNumber":153,"author":{"gitId":"davidcaiqifan"},"content":"                } else {"},{"lineNumber":154,"author":{"gitId":"davidcaiqifan"},"content":"                    eventTasks.add(new Deadline(parseDate(s, \"by\")));"},{"lineNumber":155,"author":{"gitId":"davidcaiqifan"},"content":"                }"},{"lineNumber":156,"author":{"gitId":"davidcaiqifan"},"content":"            } else {"},{"lineNumber":157,"author":{"gitId":"davidcaiqifan"},"content":"                eventTasks.add(handlePriority(s, TaskType.D));"},{"lineNumber":158,"author":{"gitId":"davidcaiqifan"},"content":"            }"},{"lineNumber":159,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":160,"author":{"gitId":"davidcaiqifan"},"content":"        return new AddCommand(eventTasks.toArray(new Task[0]));"},{"lineNumber":161,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":163,"author":{"gitId":"davidcaiqifan"},"content":"    private static String parseDate(String input, String keyword) {"},{"lineNumber":164,"author":{"gitId":"davidcaiqifan"},"content":"        String removePriorityString \u003d input;"},{"lineNumber":165,"author":{"gitId":"davidcaiqifan"},"content":"        String priorityString \u003d \"\";"},{"lineNumber":166,"author":{"gitId":"davidcaiqifan"},"content":"        if (input.contains(\"-PL\")) {"},{"lineNumber":167,"author":{"gitId":"davidcaiqifan"},"content":"            priorityString \u003d \" \" + input.substring(input.indexOf(\"-PL\"));"},{"lineNumber":168,"author":{"gitId":"davidcaiqifan"},"content":"            System.out.println(priorityString);"},{"lineNumber":169,"author":{"gitId":"davidcaiqifan"},"content":"            removePriorityString \u003d input.substring(0, input.indexOf(\"-PL\") - 1);"},{"lineNumber":170,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"davidcaiqifan"},"content":"        System.out.println(removePriorityString);"},{"lineNumber":172,"author":{"gitId":"davidcaiqifan"},"content":"        int notePos \u003d removePriorityString.indexOf(\"/\") + 1;"},{"lineNumber":173,"author":{"gitId":"davidcaiqifan"},"content":"        String note \u003d removePriorityString.substring(notePos);"},{"lineNumber":174,"author":{"gitId":"davidcaiqifan"},"content":"        String echo \u003d removePriorityString.substring(0, notePos - 1) + \" ------\u003e \" + note + priorityString;"},{"lineNumber":175,"author":{"gitId":"davidcaiqifan"},"content":"        if (removePriorityString.contains(keyword)) {"},{"lineNumber":176,"author":{"gitId":"davidcaiqifan"},"content":"            int byPos \u003d removePriorityString.indexOf(keyword) + 3;"},{"lineNumber":177,"author":{"gitId":"davidcaiqifan"},"content":"            String time \u003d removePriorityString.substring(byPos);"},{"lineNumber":178,"author":{"gitId":"davidcaiqifan"},"content":"            try {"},{"lineNumber":179,"author":{"gitId":"davidcaiqifan"},"content":"                String parsedTime \u003d formatDate(time);"},{"lineNumber":180,"author":{"gitId":"davidcaiqifan"},"content":"                return removePriorityString.substring(0, notePos - 1)"},{"lineNumber":181,"author":{"gitId":"davidcaiqifan"},"content":"                        + keyword + \" \" + parsedTime + priorityString;"},{"lineNumber":182,"author":{"gitId":"davidcaiqifan"},"content":"            } catch (Exception e) {"},{"lineNumber":183,"author":{"gitId":"davidcaiqifan"},"content":"                return echo;"},{"lineNumber":184,"author":{"gitId":"davidcaiqifan"},"content":"            }"},{"lineNumber":185,"author":{"gitId":"davidcaiqifan"},"content":"        } else {"},{"lineNumber":186,"author":{"gitId":"davidcaiqifan"},"content":"            return echo;"},{"lineNumber":187,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":190,"author":{"gitId":"davidcaiqifan"},"content":"    private static Boolean checkEmpty(String input, String keyWord) {"},{"lineNumber":191,"author":{"gitId":"davidcaiqifan"},"content":"        int keywordLength \u003d keyWord.length();"},{"lineNumber":192,"author":{"gitId":"davidcaiqifan"},"content":"        String remainingDescription \u003d input.substring(keywordLength);"},{"lineNumber":193,"author":{"gitId":"davidcaiqifan"},"content":"        if (remainingDescription.length() \u003d\u003d 0) {"},{"lineNumber":194,"author":{"gitId":"davidcaiqifan"},"content":"            return true;"},{"lineNumber":195,"author":{"gitId":"davidcaiqifan"},"content":"        } else if (remainingDescription.length() \u003e 1 \u0026\u0026 remainingDescription.charAt(1) \u003d\u003d 32) {"},{"lineNumber":196,"author":{"gitId":"davidcaiqifan"},"content":"            return true;"},{"lineNumber":197,"author":{"gitId":"davidcaiqifan"},"content":"        } else {"},{"lineNumber":198,"author":{"gitId":"davidcaiqifan"},"content":"            return remainingDescription.length() \u003c\u003d 1;"},{"lineNumber":199,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":200,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":202,"author":{"gitId":"davidcaiqifan"},"content":"    //returns true if there is a description"},{"lineNumber":203,"author":{"gitId":"davidcaiqifan"},"content":"    private static Boolean checkPlan(String input) {"},{"lineNumber":204,"author":{"gitId":"davidcaiqifan"},"content":"        if (input.contains(\"/\")) {"},{"lineNumber":205,"author":{"gitId":"davidcaiqifan"},"content":"            String remainingDescription \u003d input.substring(input.indexOf(\"/\") + 1);"},{"lineNumber":206,"author":{"gitId":"davidcaiqifan"},"content":"            return remainingDescription.length() \u003d\u003d 0;"},{"lineNumber":207,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":208,"author":{"gitId":"davidcaiqifan"},"content":"        return true;"},{"lineNumber":209,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":211,"author":{"gitId":"davidcaiqifan"},"content":"    private static String formatDate(String date) {"},{"lineNumber":212,"author":{"gitId":"davidcaiqifan"},"content":"        LocalDate parseDate \u003d LocalDate.parse(date);"},{"lineNumber":213,"author":{"gitId":"davidcaiqifan"},"content":"        return parseDate.getDayOfWeek() + \" \" + parseDate.getDayOfMonth() + \" \""},{"lineNumber":214,"author":{"gitId":"davidcaiqifan"},"content":"                + parseDate.getMonth() + \" \" + parseDate.getYear();"},{"lineNumber":215,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":217,"author":{"gitId":"davidcaiqifan"},"content":"    @SuppressWarnings(\"checkstyle:Indentation\")"},{"lineNumber":218,"author":{"gitId":"davidcaiqifan"},"content":"    private static Task handlePriority(String input, TaskType taskType) {"},{"lineNumber":219,"author":{"gitId":"davidcaiqifan"},"content":"        String priorityString \u003d input.substring(input.indexOf(\"-PL\") + 3);"},{"lineNumber":220,"author":{"gitId":"davidcaiqifan"},"content":"        System.out.println(input);"},{"lineNumber":221,"author":{"gitId":"davidcaiqifan"},"content":"        String taskDetail \u003d input.substring(0, input.indexOf(\"-PL\"));"},{"lineNumber":222,"author":{"gitId":"davidcaiqifan"},"content":"        int level \u003d 1;"},{"lineNumber":223,"author":{"gitId":"davidcaiqifan"},"content":"        level \u003d Integer.parseInt(priorityString);"},{"lineNumber":224,"author":{"gitId":"davidcaiqifan"},"content":"        Priority priority;"},{"lineNumber":225,"author":{"gitId":"davidcaiqifan"},"content":"        /*switch (level) {"},{"lineNumber":226,"author":{"gitId":"davidcaiqifan"},"content":"            case 2 :"},{"lineNumber":227,"author":{"gitId":"davidcaiqifan"},"content":"            priority \u003d Priority.Medium;"},{"lineNumber":228,"author":{"gitId":"davidcaiqifan"},"content":"            break;"},{"lineNumber":229,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":230,"author":{"gitId":"davidcaiqifan"},"content":"            case 3 :"},{"lineNumber":231,"author":{"gitId":"davidcaiqifan"},"content":"                priority \u003d Priority.HIGH;"},{"lineNumber":232,"author":{"gitId":"davidcaiqifan"},"content":"                break;"},{"lineNumber":233,"author":{"gitId":"davidcaiqifan"},"content":"            default :"},{"lineNumber":234,"author":{"gitId":"davidcaiqifan"},"content":"                priority \u003d Priority.LOW;"},{"lineNumber":235,"author":{"gitId":"davidcaiqifan"},"content":"                break;"},{"lineNumber":236,"author":{"gitId":"davidcaiqifan"},"content":"        }*/"},{"lineNumber":237,"author":{"gitId":"davidcaiqifan"},"content":"        if (level \u003d\u003d 1) {"},{"lineNumber":238,"author":{"gitId":"davidcaiqifan"},"content":"            priority \u003d Priority.LOW;"},{"lineNumber":239,"author":{"gitId":"davidcaiqifan"},"content":"        } else if (level \u003d\u003d 2) {"},{"lineNumber":240,"author":{"gitId":"davidcaiqifan"},"content":"            priority \u003d Priority.MEDIUM;"},{"lineNumber":241,"author":{"gitId":"davidcaiqifan"},"content":"        } else {"},{"lineNumber":242,"author":{"gitId":"davidcaiqifan"},"content":"            priority \u003d Priority.HIGH;"},{"lineNumber":243,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":244,"author":{"gitId":"davidcaiqifan"},"content":"        System.out.println(\"success\");"},{"lineNumber":245,"author":{"gitId":"davidcaiqifan"},"content":"        if (taskType \u003d\u003d TaskType.T) {"},{"lineNumber":246,"author":{"gitId":"davidcaiqifan"},"content":"            return new ToDo(taskDetail, priority);"},{"lineNumber":247,"author":{"gitId":"davidcaiqifan"},"content":"        } else if (taskType \u003d\u003d TaskType.E) {"},{"lineNumber":248,"author":{"gitId":"davidcaiqifan"},"content":"            return new Event(taskDetail, priority);"},{"lineNumber":249,"author":{"gitId":"davidcaiqifan"},"content":"        } else {"},{"lineNumber":250,"author":{"gitId":"davidcaiqifan"},"content":"            return new Deadline(taskDetail, priority);"},{"lineNumber":251,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":252,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":253,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":254,"author":{"gitId":"davidcaiqifan"},"content":"    private static boolean checkPriority(String input) {"},{"lineNumber":255,"author":{"gitId":"davidcaiqifan"},"content":"        return input.contains(\"-PL\");"},{"lineNumber":256,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":257,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":258,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":259,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":259}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"import java.io.BufferedWriter;"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"import java.nio.file.Files;"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"import duke.task.Task;"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"/**/"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":" * Object to enable permanent storing of duke.task list onto hard drive."},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":" */"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"public class Storage {"},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"    private final String filePath;"},{"lineNumber":20,"author":{"gitId":"davidcaiqifan"},"content":"    public Storage(String filePath) {"},{"lineNumber":21,"author":{"gitId":"davidcaiqifan"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":22,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":24,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"davidcaiqifan"},"content":"     * Stores duke.task list provided onto a specified text file."},{"lineNumber":26,"author":{"gitId":"davidcaiqifan"},"content":"     * @param toDoList given duke.task list"},{"lineNumber":27,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"davidcaiqifan"},"content":"    public void save(List\u003cTask\u003e toDoList) {"},{"lineNumber":29,"author":{"gitId":"davidcaiqifan"},"content":"        String path \u003d System.getProperty(\"user.dir\") + filePath;"},{"lineNumber":30,"author":{"gitId":"davidcaiqifan"},"content":"        if (!Files.exists(Paths.get(path))) {"},{"lineNumber":31,"author":{"gitId":"davidcaiqifan"},"content":"            try {"},{"lineNumber":32,"author":{"gitId":"davidcaiqifan"},"content":"                Files.createFile(Paths.get(path));"},{"lineNumber":33,"author":{"gitId":"davidcaiqifan"},"content":"            } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"davidcaiqifan"},"content":"                System.out.println(\"error creating file\");"},{"lineNumber":35,"author":{"gitId":"davidcaiqifan"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"davidcaiqifan"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"davidcaiqifan"},"content":"            new FileWriter(path, false).close();"},{"lineNumber":39,"author":{"gitId":"davidcaiqifan"},"content":"        } catch (IOException e) {"},{"lineNumber":40,"author":{"gitId":"davidcaiqifan"},"content":"            System.out.println(\"error deleting file\");"},{"lineNumber":41,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":43,"author":{"gitId":"davidcaiqifan"},"content":"        int i \u003d 1;"},{"lineNumber":44,"author":{"gitId":"davidcaiqifan"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"davidcaiqifan"},"content":"            FileWriter myWriter \u003d new FileWriter(\"save.txt\");"},{"lineNumber":46,"author":{"gitId":"davidcaiqifan"},"content":"            BufferedWriter out \u003d new BufferedWriter(myWriter);"},{"lineNumber":47,"author":{"gitId":"davidcaiqifan"},"content":"            for (Task s : toDoList) {"},{"lineNumber":48,"author":{"gitId":"davidcaiqifan"},"content":"                String write \u003d i + \". \" + \" [\" + s.getType() + \"] \""},{"lineNumber":49,"author":{"gitId":"davidcaiqifan"},"content":"                        + s.toString() + \" [\" + s.getTaskStatusIcon() + \"]\";"},{"lineNumber":50,"author":{"gitId":"davidcaiqifan"},"content":"                i +\u003d 1;"},{"lineNumber":51,"author":{"gitId":"davidcaiqifan"},"content":"                out.write(write);"},{"lineNumber":52,"author":{"gitId":"davidcaiqifan"},"content":"                out.newLine();"},{"lineNumber":53,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":54,"author":{"gitId":"davidcaiqifan"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"davidcaiqifan"},"content":"            out.close();"},{"lineNumber":56,"author":{"gitId":"davidcaiqifan"},"content":"        } catch (IOException e) {"},{"lineNumber":57,"author":{"gitId":"davidcaiqifan"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":58,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":60,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":61}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":" * Encapsulates the user interface."},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":" */"},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"public class Ui {"},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"    private Scanner scanner;"},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":"    public Ui() {"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"    public Ui(Scanner sc) {"},{"lineNumber":20,"author":{"gitId":"davidcaiqifan"},"content":"        this.scanner \u003d sc;"},{"lineNumber":21,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"davidcaiqifan"},"content":"     * Prints the default welcome message."},{"lineNumber":24,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"davidcaiqifan"},"content":"    public static String printWelcome() {"},{"lineNumber":26,"author":{"gitId":"davidcaiqifan"},"content":"        String welcomeMessage \u003d (\"--------------------------------------\\n\")"},{"lineNumber":27,"author":{"gitId":"davidcaiqifan"},"content":"                + \"Hello from doge\\n\""},{"lineNumber":28,"author":{"gitId":"davidcaiqifan"},"content":"                + \"______________________$$$$$$$$\\n\""},{"lineNumber":29,"author":{"gitId":"davidcaiqifan"},"content":"                + \"_______________$$$$$$$________$$$$$$$$$\\n\""},{"lineNumber":30,"author":{"gitId":"davidcaiqifan"},"content":"                + \"_____________$$________________________$$$$\\n\""},{"lineNumber":31,"author":{"gitId":"davidcaiqifan"},"content":"                + \"____________$$_____________________________$$\\n\""},{"lineNumber":32,"author":{"gitId":"davidcaiqifan"},"content":"                + \"___________$__________________________________$$\\n\""},{"lineNumber":33,"author":{"gitId":"davidcaiqifan"},"content":"                + \"___________$$___________________________________$$\\n\""},{"lineNumber":34,"author":{"gitId":"davidcaiqifan"},"content":"                + \"__________ $$__$$______________________$$__________$$\\n\""},{"lineNumber":35,"author":{"gitId":"davidcaiqifan"},"content":"                + \"________$$__$$___$$$$_________$$$$____$$__________$$$$\\n\""},{"lineNumber":36,"author":{"gitId":"davidcaiqifan"},"content":"                + \"______$$___$$__$$$$__$$_____$$$$__$$_$$_____________$$$\\n\""},{"lineNumber":37,"author":{"gitId":"davidcaiqifan"},"content":"                + \"______$$___$$____$$$$_________$$$$___$$_______________$$\\n\""},{"lineNumber":38,"author":{"gitId":"davidcaiqifan"},"content":"                + \"______$$___$$________________________$$_______________$$\\n\""},{"lineNumber":39,"author":{"gitId":"davidcaiqifan"},"content":"                + \"______$$____$$_______________________$$_____________$$\\n\""},{"lineNumber":40,"author":{"gitId":"davidcaiqifan"},"content":"                + \"________$$__$$____$$$$$$_____________$$___________$$$\\n\""},{"lineNumber":41,"author":{"gitId":"davidcaiqifan"},"content":"                + \"________$$__$$__$$______$$___________$$_________$$\\n\""},{"lineNumber":42,"author":{"gitId":"davidcaiqifan"},"content":"                + \"________$$__$$__$$______$$___________$$_______$$\\n\""},{"lineNumber":43,"author":{"gitId":"davidcaiqifan"},"content":"                + \"__________$$$$____$$$$$$_____________$$$$____$$$$\\n\""},{"lineNumber":44,"author":{"gitId":"davidcaiqifan"},"content":"                + \"__________$$$$_____________________$$__$$____$$$\\n\""},{"lineNumber":45,"author":{"gitId":"davidcaiqifan"},"content":"                + \"___________$$_$$$$$$$$$$$$_____$$$$______$$$$_$$\\n\""},{"lineNumber":46,"author":{"gitId":"davidcaiqifan"},"content":"                + \"_____________$$___$$______$$$$$_______________$$\\n\""},{"lineNumber":47,"author":{"gitId":"davidcaiqifan"},"content":"                + \"_____________$$_____$$$$$$$____________________$$\\n\""},{"lineNumber":48,"author":{"gitId":"davidcaiqifan"},"content":"                + \"_____________$$________________________________$$\\n\""},{"lineNumber":49,"author":{"gitId":"davidcaiqifan"},"content":"                + \"____________$$_________________________________$$\\n\""},{"lineNumber":50,"author":{"gitId":"davidcaiqifan"},"content":"                + \"____________$$_________________________________$$\\n\""},{"lineNumber":51,"author":{"gitId":"davidcaiqifan"},"content":"                + \"____________$$___________________________________$\\n\""},{"lineNumber":52,"author":{"gitId":"davidcaiqifan"},"content":"                + \"____________$$___________________________________$$\\n\""},{"lineNumber":53,"author":{"gitId":"davidcaiqifan"},"content":"                + \"__________$$_________________________$$___________$\\n\""},{"lineNumber":54,"author":{"gitId":"davidcaiqifan"},"content":"                + \"__________$$__________$$___________$$_____________$$\\n\""},{"lineNumber":55,"author":{"gitId":"davidcaiqifan"},"content":"                + \"________$$__$$________$$_________$$_______________$$\\n\""},{"lineNumber":56,"author":{"gitId":"davidcaiqifan"},"content":"                + \"______$$____$$__________$$_______$$_______________$$\\n\""},{"lineNumber":57,"author":{"gitId":"davidcaiqifan"},"content":"                + \"______$$____$$____________$$___$$_________________$$\\n\""},{"lineNumber":58,"author":{"gitId":"davidcaiqifan"},"content":"                + \"____$$______$$_____________$$_$$_______$$_________$$\\n\""},{"lineNumber":59,"author":{"gitId":"davidcaiqifan"},"content":"                + \"____$$______$$________$$____$$$________$$_________$$\\n\""},{"lineNumber":60,"author":{"gitId":"davidcaiqifan"},"content":"                + \"____$$______$$________$$____$$$_______$$__________$$\\n\""},{"lineNumber":61,"author":{"gitId":"davidcaiqifan"},"content":"                + \"____$$______$$________$$_______________$$__________$$\\n\""},{"lineNumber":62,"author":{"gitId":"davidcaiqifan"},"content":"                + \"____$$______$$________$$_______________$$____________$\\n\""},{"lineNumber":63,"author":{"gitId":"davidcaiqifan"},"content":"                + \"_$$$$_______$$________$$_______________$$____________$$\\n\""},{"lineNumber":64,"author":{"gitId":"davidcaiqifan"},"content":"                + \"$___$$______$$________$$$$___________$$$$____________$$\\n\""},{"lineNumber":65,"author":{"gitId":"davidcaiqifan"},"content":"                + \"$___$$______$$________$$__$$_______$$__$$____________$$\\n\""},{"lineNumber":66,"author":{"gitId":"davidcaiqifan"},"content":"                + \"_$$$$$______$$________$$____$$___$$_____$$___________$$\\n\""},{"lineNumber":67,"author":{"gitId":"davidcaiqifan"},"content":"                + \"____$$______$$________$$______$$_______$$___________$$\\n\""},{"lineNumber":68,"author":{"gitId":"davidcaiqifan"},"content":"                + \"____$$______$$________$$_____$$________$$___________$$\\n\""},{"lineNumber":69,"author":{"gitId":"davidcaiqifan"},"content":"                + \"__$$________$$________$$$$$$$$___$$$$$$__$$_________$$\\n\""},{"lineNumber":70,"author":{"gitId":"davidcaiqifan"},"content":"                + \"__$$________$$________$$______$$$______$$$$_________$$\\n\""},{"lineNumber":71,"author":{"gitId":"davidcaiqifan"},"content":"                + \"$$________$$__________$$_________$$$$$$__$$__________$\\n\""},{"lineNumber":72,"author":{"gitId":"davidcaiqifan"},"content":"                + \"$$______$$__________$$$$$$$$$$$$$$$______$$__________$\\n\""},{"lineNumber":73,"author":{"gitId":"davidcaiqifan"},"content":"                + \"$$_$$_$$$__________$$_____________$$$$$$$__$$_________$\\n\""},{"lineNumber":74,"author":{"gitId":"davidcaiqifan"},"content":"                + \"_$$$$$$$___________$$______________________$$________$$\\n\""},{"lineNumber":75,"author":{"gitId":"davidcaiqifan"},"content":"                + \"_____$$__$$__$$__$$_$______________________$$__________$$\\n\""},{"lineNumber":76,"author":{"gitId":"davidcaiqifan"},"content":"                + \"______$$$$__$___$__$$______________________$$____________$\\n\""},{"lineNumber":77,"author":{"gitId":"davidcaiqifan"},"content":"                + \"_______$$___$___$__$________________________$$_$__$$__$$__$\\n\""},{"lineNumber":78,"author":{"gitId":"davidcaiqifan"},"content":"                + \"_________$$$$$$$$$$__________________________$$_$_$$$$$$$$\\n\""},{"lineNumber":79,"author":{"gitId":"davidcaiqifan"},"content":"                + \"What can this good boi do for you?\\n\""},{"lineNumber":80,"author":{"gitId":"davidcaiqifan"},"content":"                + \"--------------------------------------\";"},{"lineNumber":81,"author":{"gitId":"davidcaiqifan"},"content":"        System.out.println(welcomeMessage);"},{"lineNumber":82,"author":{"gitId":"davidcaiqifan"},"content":"        return welcomeMessage;"},{"lineNumber":83,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"davidcaiqifan"},"content":"     * Prints a given string but adds \"Added : \" in front of the message."},{"lineNumber":86,"author":{"gitId":"davidcaiqifan"},"content":"     * @param msg given string"},{"lineNumber":87,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"davidcaiqifan"},"content":"    public String taskPrint(String msg) {"},{"lineNumber":89,"author":{"gitId":"davidcaiqifan"},"content":"        String returnStr \u003d \"Added : \" + msg;"},{"lineNumber":90,"author":{"gitId":"davidcaiqifan"},"content":"        System.out.println(\"Added : \" + msg);"},{"lineNumber":91,"author":{"gitId":"davidcaiqifan"},"content":"        return returnStr;"},{"lineNumber":92,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":94,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":95,"author":{"gitId":"davidcaiqifan"},"content":"    /** Prints out a given ArrayList of tasks in a nice format, with the"},{"lineNumber":96,"author":{"gitId":"davidcaiqifan"},"content":"     * given displayMessage on top."},{"lineNumber":97,"author":{"gitId":"davidcaiqifan"},"content":"     * @param toDoList given todolist"},{"lineNumber":98,"author":{"gitId":"davidcaiqifan"},"content":"     * @param displayMessage message to be displayed"},{"lineNumber":99,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"davidcaiqifan"},"content":"    public String displayList(List\u003cTask\u003e toDoList, String displayMessage) {"},{"lineNumber":101,"author":{"gitId":"davidcaiqifan"},"content":"        StringBuilder returnStr \u003d new StringBuilder(displayMessage + \"\\n\");"},{"lineNumber":102,"author":{"gitId":"davidcaiqifan"},"content":"        System.out.println(displayMessage);"},{"lineNumber":103,"author":{"gitId":"davidcaiqifan"},"content":"        int i \u003d 1;"},{"lineNumber":104,"author":{"gitId":"davidcaiqifan"},"content":"        for (Task s : toDoList) {"},{"lineNumber":105,"author":{"gitId":"davidcaiqifan"},"content":"            String addStr \u003d i + \". \" + \" [\" + s.getType() + \"] \""},{"lineNumber":106,"author":{"gitId":"davidcaiqifan"},"content":"                    + s.toString() + \" [\" + s.getTaskStatusIcon() + \"]\";"},{"lineNumber":107,"author":{"gitId":"davidcaiqifan"},"content":"            System.out.println(addStr);"},{"lineNumber":108,"author":{"gitId":"davidcaiqifan"},"content":"            i +\u003d 1;"},{"lineNumber":109,"author":{"gitId":"davidcaiqifan"},"content":"            returnStr.append(addStr).append(\"\\n\");"},{"lineNumber":110,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"davidcaiqifan"},"content":"        return returnStr.toString();"},{"lineNumber":112,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":114,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"davidcaiqifan"},"content":"     * Prints the completion of a duke.task"},{"lineNumber":116,"author":{"gitId":"davidcaiqifan"},"content":"     * @param task duke.task description"},{"lineNumber":117,"author":{"gitId":"davidcaiqifan"},"content":"     * @param taskStatus icon representing completion of duke.task"},{"lineNumber":118,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"davidcaiqifan"},"content":"    public String checkList(String task, String taskStatus) {"},{"lineNumber":120,"author":{"gitId":"davidcaiqifan"},"content":"        String returnStr;"},{"lineNumber":121,"author":{"gitId":"davidcaiqifan"},"content":"        returnStr \u003d \"--------------------------------------\" + \"\\n\""},{"lineNumber":122,"author":{"gitId":"davidcaiqifan"},"content":"                + \"Such wow! I have completed the following task!\" + \"\\n\""},{"lineNumber":123,"author":{"gitId":"davidcaiqifan"},"content":"                + task + \" [\" + taskStatus + \"]\" + \"\\n\""},{"lineNumber":124,"author":{"gitId":"davidcaiqifan"},"content":"                + \"--------------------------------------\\n\";"},{"lineNumber":125,"author":{"gitId":"davidcaiqifan"},"content":"        System.out.println(returnStr);"},{"lineNumber":126,"author":{"gitId":"davidcaiqifan"},"content":"        return returnStr;"},{"lineNumber":127,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":129,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"davidcaiqifan"},"content":"     * Prints formatted message when duke.task is removed"},{"lineNumber":131,"author":{"gitId":"davidcaiqifan"},"content":"     * @param taskId given duke.task id"},{"lineNumber":132,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"davidcaiqifan"},"content":"    public String removePrint(int taskId) {"},{"lineNumber":134,"author":{"gitId":"davidcaiqifan"},"content":"        assert taskId \u003e 0 : \"Task number provided cannot be less than 1!\";"},{"lineNumber":135,"author":{"gitId":"davidcaiqifan"},"content":"        Task tr \u003d TaskList.getList().get(taskId - 1);"},{"lineNumber":136,"author":{"gitId":"davidcaiqifan"},"content":"        String returnStr;"},{"lineNumber":137,"author":{"gitId":"davidcaiqifan"},"content":"        returnStr \u003d \"Task successfully removed!\" + \"\\n\""},{"lineNumber":138,"author":{"gitId":"davidcaiqifan"},"content":"                + \"-\u003e \" + tr.toString() + \"\\n\";"},{"lineNumber":139,"author":{"gitId":"davidcaiqifan"},"content":"        System.out.println(returnStr);"},{"lineNumber":140,"author":{"gitId":"davidcaiqifan"},"content":"        return returnStr;"},{"lineNumber":141,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":143,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"davidcaiqifan"},"content":"     * Formats and prints input String"},{"lineNumber":145,"author":{"gitId":"davidcaiqifan"},"content":"     * @param print input string"},{"lineNumber":146,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":147,"author":{"gitId":"davidcaiqifan"},"content":"    public String printFormat(String print) {"},{"lineNumber":148,"author":{"gitId":"davidcaiqifan"},"content":"        String returnStr;"},{"lineNumber":149,"author":{"gitId":"davidcaiqifan"},"content":"        returnStr \u003d \"--------------------------------------\" + \"\\n\""},{"lineNumber":150,"author":{"gitId":"davidcaiqifan"},"content":"                + \"Added to list : \" + print + \"\\n\""},{"lineNumber":151,"author":{"gitId":"davidcaiqifan"},"content":"                + \"--------------------------------------\\n\";"},{"lineNumber":152,"author":{"gitId":"davidcaiqifan"},"content":"        System.out.println(returnStr);"},{"lineNumber":153,"author":{"gitId":"davidcaiqifan"},"content":"        return returnStr;"},{"lineNumber":154,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":156,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"davidcaiqifan"},"content":"     * Prints number of tasks left."},{"lineNumber":158,"author":{"gitId":"davidcaiqifan"},"content":"     * @param listSize number of tasks left."},{"lineNumber":159,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"davidcaiqifan"},"content":"    public String printNumberOfTasks(int listSize) {"},{"lineNumber":161,"author":{"gitId":"davidcaiqifan"},"content":"        String returnStr;"},{"lineNumber":162,"author":{"gitId":"davidcaiqifan"},"content":"        returnStr \u003d \"You have a total of \" + listSize + \" tasks\" + \"\\n\""},{"lineNumber":163,"author":{"gitId":"davidcaiqifan"},"content":"                + \"--------------------------------------\";"},{"lineNumber":164,"author":{"gitId":"davidcaiqifan"},"content":"        System.out.println(returnStr);"},{"lineNumber":165,"author":{"gitId":"davidcaiqifan"},"content":"        return returnStr;"},{"lineNumber":166,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":168,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":169,"author":{"gitId":"davidcaiqifan"},"content":"     * Returns Goodbye message."},{"lineNumber":170,"author":{"gitId":"davidcaiqifan"},"content":"     * @return Bye message."},{"lineNumber":171,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":172,"author":{"gitId":"davidcaiqifan"},"content":"    public String byeMessage() {"},{"lineNumber":173,"author":{"gitId":"davidcaiqifan"},"content":"        String returnStr \u003d \"Doge would like to see you soon!\";"},{"lineNumber":174,"author":{"gitId":"davidcaiqifan"},"content":"        if (scanner !\u003d null) {"},{"lineNumber":175,"author":{"gitId":"davidcaiqifan"},"content":"            scanner.close();"},{"lineNumber":176,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"davidcaiqifan"},"content":"        return returnStr;"},{"lineNumber":178,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":179}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"import duke.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":" * Encapsulates a Command to add a new task."},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":" */"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"public class AddCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"    final Task[] myTasks;"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"     * Initializes an instance of AddCommand."},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":"     * @param myTasks A variable number of tasks to be added to the Task List."},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"    public AddCommand(Task ... myTasks) {"},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"        this.myTasks \u003d myTasks;"},{"lineNumber":20,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":22,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"davidcaiqifan"},"content":"     * Consolidated method to perform the following actions."},{"lineNumber":24,"author":{"gitId":"davidcaiqifan"},"content":"     * Adds a duke.task to toDoList in duke.task.TaskList, saves the new duke.task list in a"},{"lineNumber":25,"author":{"gitId":"davidcaiqifan"},"content":"     * txt file and prints a success message."},{"lineNumber":26,"author":{"gitId":"davidcaiqifan"},"content":"     * @param ui a duke.Ui instance to enable calling of duke.Ui functions"},{"lineNumber":27,"author":{"gitId":"davidcaiqifan"},"content":"     * @param storage a duke.Storage instance to enable calling of duke.Storage functions"},{"lineNumber":28,"author":{"gitId":"davidcaiqifan"},"content":"     * @return String being printed."},{"lineNumber":29,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"davidcaiqifan"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"davidcaiqifan"},"content":"    public String execute(Ui ui, Storage storage) {"},{"lineNumber":32,"author":{"gitId":"davidcaiqifan"},"content":"        StringBuilder returnStr \u003d new StringBuilder();"},{"lineNumber":33,"author":{"gitId":"davidcaiqifan"},"content":"        for (Task t : myTasks) {"},{"lineNumber":34,"author":{"gitId":"davidcaiqifan"},"content":"            TaskList.addToList(t);"},{"lineNumber":35,"author":{"gitId":"davidcaiqifan"},"content":"            returnStr.append(ui.printFormat(t.toString()));"},{"lineNumber":36,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"davidcaiqifan"},"content":"        storage.save(TaskList.getList());"},{"lineNumber":38,"author":{"gitId":"davidcaiqifan"},"content":"        returnStr.append(ui.printNumberOfTasks(TaskList.getList().size()));"},{"lineNumber":39,"author":{"gitId":"davidcaiqifan"},"content":"        return returnStr.toString();"},{"lineNumber":40,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"davidcaiqifan"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"davidcaiqifan"},"content":"    public boolean equals(Object o) {"},{"lineNumber":43,"author":{"gitId":"davidcaiqifan"},"content":"        if (o \u003d\u003d this) {"},{"lineNumber":44,"author":{"gitId":"davidcaiqifan"},"content":"            return true;"},{"lineNumber":45,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"davidcaiqifan"},"content":"        if (!(o instanceof AddCommand)) {"},{"lineNumber":47,"author":{"gitId":"davidcaiqifan"},"content":"            return false;"},{"lineNumber":48,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":50,"author":{"gitId":"davidcaiqifan"},"content":"        AddCommand command \u003d (AddCommand) o;"},{"lineNumber":51,"author":{"gitId":"davidcaiqifan"},"content":"        boolean isEqual \u003d true;"},{"lineNumber":52,"author":{"gitId":"davidcaiqifan"},"content":"        for (int i \u003d 0; i \u003c this.myTasks.length; i++) {"},{"lineNumber":53,"author":{"gitId":"davidcaiqifan"},"content":"            System.out.println(this.myTasks[i].getType());"},{"lineNumber":54,"author":{"gitId":"davidcaiqifan"},"content":"            System.out.println(command.myTasks[i].getType());"},{"lineNumber":55,"author":{"gitId":"davidcaiqifan"},"content":"            isEqual \u003d this.myTasks[i].equals(command.myTasks[i]);"},{"lineNumber":56,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"davidcaiqifan"},"content":"        return isEqual;"},{"lineNumber":58,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"davidcaiqifan"},"content":"}"},{"lineNumber":60,"author":{"gitId":"davidcaiqifan"},"content":""}],"authorContributionMap":{"davidcaiqifan":60}},{"path":"src/main/java/duke/commands/CheckCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"import duke.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":" * Encapsulates a Command to check a task off the Task list."},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":" */"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"public class CheckCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"    final int checkInt;"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"     * Initializes instance of CheckCommand."},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":"     * @param checkInt Int input to indicate task to be checked off the Task List."},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"    public CheckCommand(int checkInt) {"},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"        assert checkInt \u003e 0 : \"Task number provided cannot be less than 1!\";"},{"lineNumber":20,"author":{"gitId":"davidcaiqifan"},"content":"        this.checkInt \u003d checkInt;"},{"lineNumber":21,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":23,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"davidcaiqifan"},"content":"     * Marks a duke.task as done and prints a success message."},{"lineNumber":25,"author":{"gitId":"davidcaiqifan"},"content":"     * txt file and prints a success message."},{"lineNumber":26,"author":{"gitId":"davidcaiqifan"},"content":"     * @param ui a duke.Ui instance to enable calling of duke.Ui functions"},{"lineNumber":27,"author":{"gitId":"davidcaiqifan"},"content":"     * @param storage a duke.Storage instance to enable calling of duke.Storage functions"},{"lineNumber":28,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"davidcaiqifan"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"davidcaiqifan"},"content":"    public String execute(Ui ui, Storage storage) {"},{"lineNumber":31,"author":{"gitId":"davidcaiqifan"},"content":"        assert checkInt \u003e 0 : \"Task number provided cannot be less than 1!\";"},{"lineNumber":32,"author":{"gitId":"davidcaiqifan"},"content":"        Task task \u003d TaskList.getList().get(checkInt - 1);"},{"lineNumber":33,"author":{"gitId":"davidcaiqifan"},"content":"        task.markAsDone();"},{"lineNumber":34,"author":{"gitId":"davidcaiqifan"},"content":"        storage.save(TaskList.getList());"},{"lineNumber":35,"author":{"gitId":"davidcaiqifan"},"content":"        return ui.checkList(task.toString(), task.getTaskStatusIcon())"},{"lineNumber":36,"author":{"gitId":"davidcaiqifan"},"content":"                + ui.printNumberOfTasks(TaskList.getList().size());"},{"lineNumber":37,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":38}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":" * Abstract class to represent a command the Parser issues"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":" */"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"public abstract class Command {"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"    public abstract String execute(Ui ui, Storage storage);"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":11}},{"path":"src/main/java/duke/commands/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":" * Encapsulates a Command to print an error."},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":" */"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"public class ErrorCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"    final String errorMessage;"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"     * Initializes an instance of ErrorCommand."},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"     * @param errorMessage String input that will be printed out as the error message."},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":"    public ErrorCommand(String errorMessage) {"},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":"        this.errorMessage \u003d errorMessage;"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":20,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"davidcaiqifan"},"content":"     * Prints out an error message to display to the client."},{"lineNumber":22,"author":{"gitId":"davidcaiqifan"},"content":"     * @param ui a duke.Ui instance to enable calling of duke.Ui functions"},{"lineNumber":23,"author":{"gitId":"davidcaiqifan"},"content":"     * @param storage a duke.Storage instance to enable calling of duke.Storage functions"},{"lineNumber":24,"author":{"gitId":"davidcaiqifan"},"content":"     * @return String being printed."},{"lineNumber":25,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"davidcaiqifan"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"davidcaiqifan"},"content":"    public String execute(Ui ui, Storage storage) {"},{"lineNumber":28,"author":{"gitId":"davidcaiqifan"},"content":"        return ui.taskPrint(errorMessage);"},{"lineNumber":29,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":30}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":" * Encapsulates a Command to exit the client."},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":" */"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"public class ExitCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"     * Terminates the application"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"    public String execute(Ui ui, Storage storage) {"},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"        String returnStr \u003d ui.byeMessage();"},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":"        return returnStr;"},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":18}},{"path":"src/main/java/duke/commands/PrintlistCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":" * Encapsulates a Command to print out the current Task List to the client."},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":" */"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"public class PrintlistCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"     * Prints out all the tasks in the duke.task list."},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"     * @param ui a duke.Ui instance to enable calling of duke.Ui functions"},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"     * @param storage a duke.Storage instance to enable calling of duke.Storage functions"},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"    public String execute(Ui ui, Storage storage) {"},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"        return ui.displayList(TaskList.getList(), \"Check out your missions!\")"},{"lineNumber":20,"author":{"gitId":"davidcaiqifan"},"content":"                + ui.printNumberOfTasks(TaskList.getList().size());"},{"lineNumber":21,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":22}},{"path":"src/main/java/duke/commands/RemoveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"import duke.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":" * Encapusulates a Command to remove a task from the Task List."},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":" */"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"public class RemoveCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"    final int removeInt;"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"     * Initializes a RemoveCommand instance."},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":"     * @param removeInt Int input that represents the Task to be removed."},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"    public RemoveCommand(int removeInt) {"},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"        this.removeInt \u003d removeInt;"},{"lineNumber":20,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":22,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"davidcaiqifan"},"content":"     * Removes a duke.task from the duke.task list, saves the changes to a txt file"},{"lineNumber":24,"author":{"gitId":"davidcaiqifan"},"content":"     * and prints a success message."},{"lineNumber":25,"author":{"gitId":"davidcaiqifan"},"content":"     * @param ui a duke.Ui instance to enable calling of duke.Ui functions"},{"lineNumber":26,"author":{"gitId":"davidcaiqifan"},"content":"     * @param storage a duke.Storage instance to enable calling of duke.Storage functions"},{"lineNumber":27,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"davidcaiqifan"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"davidcaiqifan"},"content":"    public String execute(Ui ui, Storage storage) {"},{"lineNumber":30,"author":{"gitId":"davidcaiqifan"},"content":"        String returnStr \u003d ui.removePrint(removeInt);"},{"lineNumber":31,"author":{"gitId":"davidcaiqifan"},"content":"        TaskList.removeFromList(removeInt);"},{"lineNumber":32,"author":{"gitId":"davidcaiqifan"},"content":"        storage.save(TaskList.getList());"},{"lineNumber":33,"author":{"gitId":"davidcaiqifan"},"content":"        return returnStr + ui.printNumberOfTasks(TaskList.getList().size());"},{"lineNumber":34,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":35}},{"path":"src/main/java/duke/commands/SearchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke.commands;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"public class SearchCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"    final String[] keyword;"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"     * Initializes instance of SearchCommand."},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"     * @param keyword Keyword for search criteria."},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"    public SearchCommand(String[] keyword) {"},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"        assert keyword.length \u003e 0 : \"You must have a keyword for find!\";"},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"davidcaiqifan"},"content":"     * Calls the displayList function in the ui class which prints out a provided"},{"lineNumber":21,"author":{"gitId":"davidcaiqifan"},"content":"     *  list of tasks."},{"lineNumber":22,"author":{"gitId":"davidcaiqifan"},"content":"     * @param ui A duke.Ui instance to enable calling of duke.Ui functions."},{"lineNumber":23,"author":{"gitId":"davidcaiqifan"},"content":"     * @param storage A duke.Storage instance to enable calling of duke.Storage functions."},{"lineNumber":24,"author":{"gitId":"davidcaiqifan"},"content":"     * @return String being printed."},{"lineNumber":25,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"davidcaiqifan"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"davidcaiqifan"},"content":"    public String execute(Ui ui, Storage storage) {"},{"lineNumber":28,"author":{"gitId":"davidcaiqifan"},"content":"        return ui.displayList(TaskList.searchList(this.keyword),"},{"lineNumber":29,"author":{"gitId":"davidcaiqifan"},"content":"                \"Doge found the following tasks you asked for!\");"},{"lineNumber":30,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":31}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":" * Defines a deadline"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":" */"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"    public Deadline(String taskName) {"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"        super(taskName, TaskType.D);"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"    public Deadline(String taskName, Priority priority) {"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"        super(taskName, TaskType.D, priority);"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":13}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":" * Defines an duke.task.Event"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":" */"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"    public Event(String taskName) {"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"        super(taskName, TaskType.E);"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"    public Event(String taskName, Priority priority) {"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"        super(taskName, TaskType.E, priority);"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":13}},{"path":"src/main/java/duke/task/Priority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":" * Enum representing task priority levels."},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":" */"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"public enum Priority {"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"    HIGH,"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"    MEDIUM,"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"    LOW"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":10}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":" * Encapsulates a task for the user"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":" */"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"    private Boolean isDone;"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"    private final String taskDetails;"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"    private final TaskType type;"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"    private Priority priority;"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"     * Creates a duke.task.Task instance"},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"     * @param taskName duke.task description"},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"     * @param type type of duke.task"},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":"    public Task(String taskName, TaskType type) {"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"        this.isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"        this.taskDetails \u003d taskName;"},{"lineNumber":20,"author":{"gitId":"davidcaiqifan"},"content":"        this.type \u003d type;"},{"lineNumber":21,"author":{"gitId":"davidcaiqifan"},"content":"        this.priority \u003d Priority.LOW;"},{"lineNumber":22,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":24,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"davidcaiqifan"},"content":"     * Creates a duke.task.Task instance with priority level."},{"lineNumber":26,"author":{"gitId":"davidcaiqifan"},"content":"     * @param taskName The duke.task description."},{"lineNumber":27,"author":{"gitId":"davidcaiqifan"},"content":"     * @param type Type of duke.task."},{"lineNumber":28,"author":{"gitId":"davidcaiqifan"},"content":"     * @param priority Task priority level."},{"lineNumber":29,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"davidcaiqifan"},"content":"    public Task(String taskName, TaskType type, Priority priority) {"},{"lineNumber":31,"author":{"gitId":"davidcaiqifan"},"content":"        this.isDone \u003d false;"},{"lineNumber":32,"author":{"gitId":"davidcaiqifan"},"content":"        this.taskDetails \u003d taskName;"},{"lineNumber":33,"author":{"gitId":"davidcaiqifan"},"content":"        this.type \u003d type;"},{"lineNumber":34,"author":{"gitId":"davidcaiqifan"},"content":"        this.priority \u003d priority;"},{"lineNumber":35,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":37,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"davidcaiqifan"},"content":"     * Marks current duke.task as done."},{"lineNumber":39,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"davidcaiqifan"},"content":"    public void markAsDone() {"},{"lineNumber":41,"author":{"gitId":"davidcaiqifan"},"content":"        this.isDone \u003d true;"},{"lineNumber":42,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":44,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"davidcaiqifan"},"content":"     * Returns a String symbol representing the completion of the duke.task"},{"lineNumber":46,"author":{"gitId":"davidcaiqifan"},"content":"     * @return a String symbol representing the completion of the duke.task"},{"lineNumber":47,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"davidcaiqifan"},"content":"    public String getTaskStatusIcon() {"},{"lineNumber":49,"author":{"gitId":"davidcaiqifan"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":50,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":52,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"davidcaiqifan"},"content":"     * Returns a String symbol representing the type of duke.task"},{"lineNumber":54,"author":{"gitId":"davidcaiqifan"},"content":"     * @return string symbol representing the type of duke.task"},{"lineNumber":55,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"davidcaiqifan"},"content":"    public String getType() {"},{"lineNumber":57,"author":{"gitId":"davidcaiqifan"},"content":"        return this.type.toString();"},{"lineNumber":58,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":60,"author":{"gitId":"davidcaiqifan"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"davidcaiqifan"},"content":"    public String toString() {"},{"lineNumber":62,"author":{"gitId":"davidcaiqifan"},"content":"        assert this.priority !\u003d null : \"Priority not found!\";"},{"lineNumber":63,"author":{"gitId":"davidcaiqifan"},"content":"        return \"[\" + priority.toString() + \"] \" + this.taskDetails;"},{"lineNumber":64,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":66,"author":{"gitId":"davidcaiqifan"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"davidcaiqifan"},"content":"    public boolean equals(Object o) {"},{"lineNumber":68,"author":{"gitId":"davidcaiqifan"},"content":"        if (o \u003d\u003d this) {"},{"lineNumber":69,"author":{"gitId":"davidcaiqifan"},"content":"            return true;"},{"lineNumber":70,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"davidcaiqifan"},"content":"        if (!(o instanceof Task)) {"},{"lineNumber":72,"author":{"gitId":"davidcaiqifan"},"content":"            return false;"},{"lineNumber":73,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":75,"author":{"gitId":"davidcaiqifan"},"content":"        Task task \u003d (Task) o;"},{"lineNumber":76,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":77,"author":{"gitId":"davidcaiqifan"},"content":"        /*return (this.priority \u003d\u003d task.priority) \u0026\u0026 (this.taskDetails \u003d\u003d task.taskDetails)"},{"lineNumber":78,"author":{"gitId":"davidcaiqifan"},"content":"                \u0026\u0026 (this.type \u003d\u003d task.type) \u0026\u0026 (this.isDone \u003d\u003d task.isDone);*/"},{"lineNumber":79,"author":{"gitId":"davidcaiqifan"},"content":"        return (this.priority.equals(task.priority)) \u0026\u0026 (this.taskDetails.equals(task.taskDetails))"},{"lineNumber":80,"author":{"gitId":"davidcaiqifan"},"content":"                \u0026\u0026 (this.type.equals(task.type)) \u0026\u0026 (this.isDone.equals(task.isDone));"},{"lineNumber":81,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":82}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":" * Encapsulates a list of tasks"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":" */"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"    private static List\u003cTask\u003e toDoList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"     * Adds a given duke.task to the list."},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"     * @param task given duke.task"},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"    public static void addToList(Task task) {"},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":"        toDoList.add(task);"},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"davidcaiqifan"},"content":"     * Removes a duke.task with given duke.task ID from the list."},{"lineNumber":21,"author":{"gitId":"davidcaiqifan"},"content":"     * @param taskId given duke.task ID"},{"lineNumber":22,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"davidcaiqifan"},"content":"    public static void removeFromList(int taskId) {"},{"lineNumber":24,"author":{"gitId":"davidcaiqifan"},"content":"        assert taskId \u003e 0 : \"Task number provided cannot be less than 1!\";"},{"lineNumber":25,"author":{"gitId":"davidcaiqifan"},"content":"        toDoList.remove(taskId - 1);"},{"lineNumber":26,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":28,"author":{"gitId":"davidcaiqifan"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"davidcaiqifan"},"content":"     * Returns an ArrayList of tasks that match the User keyword given"},{"lineNumber":30,"author":{"gitId":"davidcaiqifan"},"content":"     * @param keywords user keyword"},{"lineNumber":31,"author":{"gitId":"davidcaiqifan"},"content":"     * @return ArrayList of tasks"},{"lineNumber":32,"author":{"gitId":"davidcaiqifan"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"davidcaiqifan"},"content":"    public static ArrayList\u003cTask\u003e searchList(String... keywords) {"},{"lineNumber":34,"author":{"gitId":"davidcaiqifan"},"content":"        ArrayList\u003cTask\u003e returnList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":35,"author":{"gitId":"davidcaiqifan"},"content":"        for (String s : keywords) {"},{"lineNumber":36,"author":{"gitId":"davidcaiqifan"},"content":"            for (Task t : toDoList"},{"lineNumber":37,"author":{"gitId":"davidcaiqifan"},"content":"            ) {"},{"lineNumber":38,"author":{"gitId":"davidcaiqifan"},"content":"                if (t.toString().contains(s)) {"},{"lineNumber":39,"author":{"gitId":"davidcaiqifan"},"content":"                    returnList.add(t);"},{"lineNumber":40,"author":{"gitId":"davidcaiqifan"},"content":"                }"},{"lineNumber":41,"author":{"gitId":"davidcaiqifan"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"davidcaiqifan"},"content":"        return returnList;"},{"lineNumber":44,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":46,"author":{"gitId":"davidcaiqifan"},"content":"    public static List\u003cTask\u003e getList() {"},{"lineNumber":47,"author":{"gitId":"davidcaiqifan"},"content":"        return toDoList;"},{"lineNumber":48,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":49}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":" * Enum representing various types of tasks."},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":" */"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"public enum TaskType {"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"    T,"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"    E,"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"    D"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":10}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":" * Defines a todo"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":" */"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"public class ToDo extends Task {"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"    public ToDo(String taskName) {"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"        super(taskName, TaskType.T);"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"    public ToDo(String taskName, Priority priority) {"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"        super(taskName, TaskType.T, priority);"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":13}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: azure; -fx-border-color: goldenrod; -fx-border-width: 4; -fx-background-insets: 4;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"            \u003cInsets left\u003d\"20.0\" right\u003d\"20.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"    \u003c/children\u003e"},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":"    \u003cpadding\u003e"},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"    \u003c/padding\u003e"},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"davidcaiqifan":19}},{"path":"src/main/resources/view/DialogBoxUser.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: aquamarine; -fx-border-color: black; -fx-border-width: 4;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"            \u003cInsets left\u003d\"20.0\" right\u003d\"20.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"    \u003c/children\u003e"},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":"    \u003cpadding\u003e"},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"    \u003c/padding\u003e"},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"davidcaiqifan":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"522.0\" style\u003d\"-fx-background-color: Azure;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"522.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"81.0\" style\u003d\"-fx-background-color: GOLD;\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"556.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"600.0\" prefWidth\u003d\"588.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"davidcaiqifan":19}},{"path":"src/test/java/DogeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"import duke.DukeException;"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"import duke.Parser;"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"import duke.commands.AddCommand;"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"import duke.commands.Command;"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"import duke.task.Task;"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"import duke.task.TaskList;"},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"import duke.task.TaskType;"},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"public class DogeTest {"},{"lineNumber":20,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":21,"author":{"gitId":"davidcaiqifan"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"davidcaiqifan"},"content":"    public void dummyTest() {"},{"lineNumber":23,"author":{"gitId":"davidcaiqifan"},"content":"        assertEquals(2, 2);"},{"lineNumber":24,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":26,"author":{"gitId":"davidcaiqifan"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"davidcaiqifan"},"content":"    public void taskTest() {"},{"lineNumber":28,"author":{"gitId":"davidcaiqifan"},"content":"        Task task \u003d new Task(\"Cycling\", TaskType.E);"},{"lineNumber":29,"author":{"gitId":"davidcaiqifan"},"content":"        task.markAsDone();"},{"lineNumber":30,"author":{"gitId":"davidcaiqifan"},"content":"        assertEquals(\"\\u2713\", task.getTaskStatusIcon());"},{"lineNumber":31,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":33,"author":{"gitId":"davidcaiqifan"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"davidcaiqifan"},"content":"    public void taskListTest() {"},{"lineNumber":35,"author":{"gitId":"davidcaiqifan"},"content":"        Task task \u003d new Task(\"Cycling\", TaskType.E);"},{"lineNumber":36,"author":{"gitId":"davidcaiqifan"},"content":"        TaskList.addToList(task);"},{"lineNumber":37,"author":{"gitId":"davidcaiqifan"},"content":"        assertEquals(task, TaskList.getList().get(0));"},{"lineNumber":38,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":40,"author":{"gitId":"davidcaiqifan"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"davidcaiqifan"},"content":"    public void parserTest() {"},{"lineNumber":42,"author":{"gitId":"davidcaiqifan"},"content":"        boolean isAddCommand \u003d false;"},{"lineNumber":43,"author":{"gitId":"davidcaiqifan"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"davidcaiqifan"},"content":"            Command addCommand \u003d Parser.manage(\"todo feed doge\");"},{"lineNumber":45,"author":{"gitId":"davidcaiqifan"},"content":"            isAddCommand \u003d addCommand instanceof AddCommand;"},{"lineNumber":46,"author":{"gitId":"davidcaiqifan"},"content":"        } catch (DukeException e) {"},{"lineNumber":47,"author":{"gitId":"davidcaiqifan"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":48,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"davidcaiqifan"},"content":"        assertTrue(isAddCommand);"},{"lineNumber":50,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":52,"author":{"gitId":"davidcaiqifan"},"content":"    @Test"},{"lineNumber":53,"author":{"gitId":"davidcaiqifan"},"content":"    public void checkCommaTest() {"},{"lineNumber":54,"author":{"gitId":"davidcaiqifan"},"content":"        String input \u003d \"doge,feed\";"},{"lineNumber":55,"author":{"gitId":"davidcaiqifan"},"content":"        ArrayList\u003cString\u003e commaSeperated \u003d Parser.checkCommas(input);"},{"lineNumber":56,"author":{"gitId":"davidcaiqifan"},"content":"        assertEquals(\"doge\", commaSeperated.get(0));"},{"lineNumber":57,"author":{"gitId":"davidcaiqifan"},"content":"        assertEquals(\"feed\", commaSeperated.get(1));"},{"lineNumber":58,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":59}},{"path":"src/test/java/ParseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"import duke.DukeException;"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"import duke.Parser;"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"import duke.commands.AddCommand;"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"import duke.task.Event;"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"import duke.task.Priority;"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"public class ParseTest {"},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"davidcaiqifan"},"content":"    public void parserSingleEventTest() {"},{"lineNumber":16,"author":{"gitId":"davidcaiqifan"},"content":"        Event event \u003d new Event(\"Cycling on WEDNESDAY 2 DECEMBER 2020 \", Priority.MEDIUM);"},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":"        AddCommand eventAdd \u003d new AddCommand(event);"},{"lineNumber":18,"author":{"gitId":"davidcaiqifan"},"content":"        AddCommand result \u003d new AddCommand(new Event(\"Cycling\", Priority.LOW));"},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"davidcaiqifan"},"content":"            result \u003d (AddCommand) Parser.manage(\"event Cycling /on 2020-12-02 -PL2\");"},{"lineNumber":21,"author":{"gitId":"davidcaiqifan"},"content":"        } catch (DukeException e) {"},{"lineNumber":22,"author":{"gitId":"davidcaiqifan"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":23,"author":{"gitId":"davidcaiqifan"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"davidcaiqifan"},"content":"        assertEquals(result, eventAdd);"},{"lineNumber":25,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":27,"author":{"gitId":"davidcaiqifan"},"content":"    /*@Test"},{"lineNumber":28,"author":{"gitId":"davidcaiqifan"},"content":"    public void parserSingleEventTest() {"},{"lineNumber":29,"author":{"gitId":"davidcaiqifan"},"content":"        Event event1 \u003d new Event(\"Cycling\", Priority.MEDIUM);"},{"lineNumber":30,"author":{"gitId":"davidcaiqifan"},"content":"        Event event2 \u003d new Event(\"Cycling\", Priority.MEDIUM);"},{"lineNumber":31,"author":{"gitId":"davidcaiqifan"},"content":"        Event[] eventArr1 \u003d {event1};"},{"lineNumber":32,"author":{"gitId":"davidcaiqifan"},"content":"        Event[] eventArr2 \u003d {event2};"},{"lineNumber":33,"author":{"gitId":"davidcaiqifan"},"content":"        assertEquals(eventArr1, eventArr2);"},{"lineNumber":34,"author":{"gitId":"davidcaiqifan"},"content":"    }*/"},{"lineNumber":35,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":36,"author":{"gitId":"davidcaiqifan"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"davidcaiqifan"},"content":"    public void checkCommaTest() {"},{"lineNumber":38,"author":{"gitId":"davidcaiqifan"},"content":"        String input \u003d \"doge,feed\";"},{"lineNumber":39,"author":{"gitId":"davidcaiqifan"},"content":"        ArrayList\u003cString\u003e commaSeperated \u003d Parser.checkCommas(input);"},{"lineNumber":40,"author":{"gitId":"davidcaiqifan"},"content":"        assertEquals(\"doge\", commaSeperated.get(0));"},{"lineNumber":41,"author":{"gitId":"davidcaiqifan"},"content":"        assertEquals(\"feed\", commaSeperated.get(1));"},{"lineNumber":42,"author":{"gitId":"davidcaiqifan"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":44,"author":{"gitId":"davidcaiqifan"},"content":"}"}],"authorContributionMap":{"davidcaiqifan":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"davidcaiqifan"},"content":"todo feed doge"},{"lineNumber":2,"author":{"gitId":"davidcaiqifan"},"content":"deadline east coast plan /by 2020-09-02,west coast plan /by 2020-09-02"},{"lineNumber":3,"author":{"gitId":"davidcaiqifan"},"content":"event covid19 /on 2020-12-02,covid20 /on 2020-12-02"},{"lineNumber":4,"author":{"gitId":"davidcaiqifan"},"content":"todo"},{"lineNumber":5,"author":{"gitId":"davidcaiqifan"},"content":"list"},{"lineNumber":6,"author":{"gitId":"davidcaiqifan"},"content":"check 1"},{"lineNumber":7,"author":{"gitId":"davidcaiqifan"},"content":"list"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"remove 2"},{"lineNumber":9,"author":{"gitId":"davidcaiqifan"},"content":"list"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"check 2"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"list"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"bye"}],"authorContributionMap":{"davidcaiqifan":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"davidcaiqifan"},"content":"set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"davidcaiqifan"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"},{"lineNumber":11,"author":{"gitId":"davidcaiqifan"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\task\\*.java"},{"lineNumber":12,"author":{"gitId":"davidcaiqifan"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\commands\\*.java"},{"lineNumber":13,"author":{"gitId":"davidcaiqifan"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":14,"author":{"gitId":"davidcaiqifan"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":16,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":17,"author":{"gitId":"davidcaiqifan"},"content":"    PAUSE"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":19,"author":{"gitId":"-"},"content":")"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":26,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":19,"davidcaiqifan":7}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"davidcaiqifan"},"content":"    PAUSE"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"davidcaiqifan"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":37,"davidcaiqifan":2}}]
