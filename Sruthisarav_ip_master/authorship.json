[
  {
    "path": "src/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "[D][O] cs2101 /by 21/03/2020"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "[E][O] yolo /at 21/04/2019 2134"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "[D][O] test1 /by 25/04/2020 0245"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "[E][O] test3 /at 15/03/2019 1629"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "[T][X] test 4"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "[T][X] addtask"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "[D][X] test5 /by 25/06/2000 1834"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "[D][X] /by 12/03/2020 1534"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "[E][X] /at 24/07/2021 1432"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "[D][X] testing /by 12/03/2012 1453"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "[E][O] testing 123 /at 15/06/2012 2343"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "[D][O] ip /by 26/08/2020"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "[T][X] testing"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "[E][O] orbital splashdown /at 26/08/2020 1830"
      }
    ],
    "authorContributionMap": {
      "Sruthisarav": 14
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * Initializes the Java Duke Program, loads the task list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * from the hard disk and gets the UI running."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * @author (Sruthi)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Initializes instances of TaskList, Storage, Parser and UI"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * and gets the task list from the storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param filePath path of the file from the root"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    Duke(String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        storage \u003d new Storage(filePath, taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        parser \u003d new Parser(taskList, storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        ui \u003d new Ui(parser);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            storage.getTodoList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Starts the user interaction with the Java Duke Program by running the UI"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        ui.run();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Prints the logo of the Java Duke Program and initializes an instance of Duke"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * with the filepath containing the task list before running the Duke Program"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param args args from the terminal"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        Duke duke \u003d new Duke(\"src/data/duke.txt\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sruthisarav": 55,
      "-": 9
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * The DukeException contains the message of the error given"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * @author (Sruthi)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sruthisarav": 12
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * Parser parses the commands inputted by the user into the Java Duke Program"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * and calls the necessary functions in the task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * @author (Sruthi)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Has a taskList and storage object to call the appropriate taskList functions and"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * to overwrite the file containing the tasks at the end of the Java Duke Program"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param taskList list of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param storage storage that stores all the tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public Parser(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Takes in the user input and calls the appropriate taskList functions based on"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * the commands in the input. It then returns the String that needs to be printed"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * to the user, back to the UI. It throws Duke Exception if any error occurred"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * parsing and carrying out the commands."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param input input given by the user"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return String to be printed"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public String scenarios(String input) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        String[] instructions \u003d input.split(\" \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        String command \u003d instructions[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            storage.overwriteTodoList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            return command;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            return taskList.showList();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            return taskList.completeItem(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            return taskList.deleteItem(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            return taskList.findItem(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            String todo \u003d input.substring(4);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            return taskList.addItem(command, todo);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            String deadline \u003d input.substring(8);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            return taskList.addItem(command, deadline);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        case \"event\": {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            String event \u003d input.substring(5);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            return taskList.addItem(command, event);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            throw new DukeException(\"Oops! I\u0027m sorry but I have no idea what that means \u003e.\u003c\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Takes in the String of the date and time inputted by the user and converts it to"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * a LocalDate object which is then returned. It throws a DukeException if any error"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * occurred while formatting."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param dateTime the date and time string inputted by the user"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return LocalDate duedate of the task"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public static LocalDate formatDate(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            String[] split \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            String[] dayMonthYear \u003d split[0].split(\"/\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            String date \u003d dayMonthYear[2] + \"-\" + dayMonthYear[1] + \"-\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            if (dayMonthYear[0].length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "                date +\u003d \"0\" + dayMonthYear[0];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "                date +\u003d dayMonthYear[0];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            return LocalDate.parse(date);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            throw new DukeException(\"Incorrect format of date. It should be: DD/MM/YYYY 2359\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Takes in a LocalDate object and a String containing the date and time inputted by the user"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * and then parses it to the correct format String needed for printing and returns it. It"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * throws a DukeException if any error occurred while parsing."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param dateTime the date and time string inputted by the user"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param dueDate the date the task is due at"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return String to be printed for the date and time of the task due"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public static String formatDateString(LocalDate dateTime, String dueDate) throws DukeException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            String time \u003d \"2359\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            String[] split \u003d dueDate.split(\" \");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            if (split.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "                time \u003d split[1];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            String format \u003d dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            return format + \" \" + formatTime(time);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            throw new DukeException(\"Incorrect format of date. It should be: DD/MM/YY time\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Takes in a String containing the time inputted by the user and parses it to the correct"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * format needed for printing to the User and returns it. It throws a DukeException if any"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * error occurred while parsing."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param time the time string inputted by the user"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return String of the time that the task is due"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public static String formatTime(String time) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        int firstHour \u003d (int) time.charAt(0) - \u00270\u0027;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        int secondHour \u003d (int) time.charAt(1) - \u00270\u0027;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        int hours \u003d firstHour * 10 + secondHour;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        String amPM;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        String convertedTime;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        if (hours \u003c 12) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            amPM \u003d \"am\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            amPM \u003d \"pm\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        hours \u003d hours % 12;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        if (hours \u003d\u003d 0) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            convertedTime \u003d \"12\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            convertedTime \u003d Integer.toString(hours);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        return convertedTime + \".\" + time.substring(2, 4) + amPM;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Takes in the input from the user and a boolean of whether the task is completed or not"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * and parses the input before creating the Deadline object and returning it. It throws a"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * DukeException if any error occurred while parsing the input."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param item the description of the task"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param isCompleted whether the task is completed"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return Deadline the task"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public static Deadline parseDeadline(String item, boolean isCompleted) throws DukeException {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        String[] splitItem \u003d item.split(\"/by \");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        if (splitItem.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            throw new DukeException(\"Incorrect format. Please add a deadline to finish task by.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        LocalDate dueDate \u003d Parser.formatDate(splitItem[1]);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        String dateTime \u003d Parser.formatDateString(dueDate, splitItem[1]);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        return new Deadline(splitItem[0], dateTime, dueDate, splitItem[1], isCompleted);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Takes in the input from the user and a boolean of whether the task is completed or not"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * and parses the input before creating the Event object and returning it. It throws a"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * DukeException if any error occurred while parsing the input."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param item the description of the task"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param isCompleted whether the task is completed"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return Event the task"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public static Event parseEvent(String item, boolean isCompleted) throws DukeException {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        String[] splitItem \u003d item.split(\"/at \");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        if (splitItem.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            throw new DukeException(\"Incorrect format. Please add a time/date the event is held at.\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        LocalDate dueDate \u003d Parser.formatDate(splitItem[1]);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        String dateTime \u003d Parser.formatDateString(dueDate, splitItem[1]);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        return new Event(splitItem[0], dateTime, dueDate, splitItem[1], isCompleted);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sruthisarav": 191
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * Storage deals with loading tasks from a file and saving tasks in the same file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * @author (Sruthi)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private final String OUTPUT_FORMAT \u003d \"  %s\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Takes in the filePath of the file the tasks are saved in and the taskList"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * which will contain the list of tasks of the Java Duke Program"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param filePath path of file from the root"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param taskList list of tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public Storage(String filePath, TaskList taskList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It gets the task list from the file and throws a DukeException if no file is found"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * in the filePath given."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void getTodoList() throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "                String task \u003d s.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "                formatStringToTask(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            throw new DukeException(\"File not found\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It takes in the String of a task from the file and calls the taskList\u0027s add"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * function to add the task to the list of tasks. If any error occurred while"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * adding the task, it is printed to the user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param task the string of task from the file"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void formatStringToTask(String task) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        String[] split \u003d task.split(\" \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        String body \u003d task.substring(6);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            switch (split[0]) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            case \"[T][O]\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "                taskList.addTodoItem(body, true);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            case \"[T][X]\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "                taskList.addTodoItem(body, false);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            case \"[D][O]\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "                taskList.addDeadline(body, true);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            case \"[D][X]\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "                taskList.addDeadline(body, false);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            case \"[E][O]\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "                taskList.addEvent(body, true);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "                taskList.addEvent(body, false);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            System.out.printf(OUTPUT_FORMAT, e.getMessage());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It overwrites the file to include all the tasks in the current task list"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * and if any error occurred while overwriting, the error message is printed"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * to the user."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void overwriteTodoList() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            fw.write(taskList.formatTodoListToString());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sruthisarav": 103
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * Deadline is a task that has a deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * @author (Sruthi)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private final String dateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private final LocalDate dueDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Deadline takes in the description of the task, the date and time,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * due date of the task, the input String by the user and whether the"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * task is completed or not."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param item the description of the Deadline"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param dateTime the date and time inputted by the user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param dueDate the due date of the Deadline"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param input the input given by the user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param isCompleted whether the Deadline is completed"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public Deadline(String item, String dateTime, LocalDate dueDate, String input, boolean isCompleted) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        super(item, isCompleted);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It returns the input given by the user to the Java Duke Program"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return String to be printed to the user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        return \"[D]\" + super.getItem() + \"/by \" + this.input;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It returns the details of the Deadline"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return String to be printed to the user"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public String getItem() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        return \"[D]\" + super.getItem() + \"(by: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sruthisarav": 52
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * Event is a task that has a time this event occurs at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * @author (Sruthi)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private final String dateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private final LocalDate dueDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Event takes in the description of the task, the date and time,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * due date of the task, the input String by the user and whether the"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * task is completed or not."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param item the description of the Event"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param dateTime the date and time inputted by the user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param dueDate the due date of the Event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param input the input given by the user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param isCompleted whether the Event is completed"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public Event(String item, String dateTime, LocalDate dueDate, String input, boolean isCompleted) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        super(item, isCompleted);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It returns the input given by the user to the Java Duke Program"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return String to be printed to the user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public String getItem() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        return \"[E]\" + super.getItem() + \"(at: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It returns the details of the Event"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return String to be printed to the user"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        return \"[E]\" + super.getItem() + \"/at \" + this.input;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sruthisarav": 52
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * Task consists of the details of the item the user wants to complete and"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * a boolean which indicates whether the task is completed or not"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * @author (Sruthi)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private final String item;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private boolean isCompleted;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Task takes in a String which contains the details of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * and a boolean which indicates whether the task is completed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param item description of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param isCompleted whether the task is completed"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    Task(String item, boolean isCompleted) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        this.item \u003d item;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        this.isCompleted \u003d isCompleted;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Sets the task to completed(true)."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        this.isCompleted \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It returns the String to be printed to the user containing"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * the details of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return String to be printed to the user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public String getItem() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        if (isCompleted) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            return \"[O]\" + this.item;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            return \"[X]\" + this.item;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Returns the description of the task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return String description of task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        return this.item;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It returns the String inputted by the user"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return String to be printed to the user"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        return this.item;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sruthisarav": 63
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * Todo is a task that consists of the details of the item the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * wants to complete and a boolean which indicates whether the task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * is completed or not"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * @author (Sruthi)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Todo takes in a String which contains the details of the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * and a boolean which indicates whether the todo is completed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param item description of the todo"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param isCompleted whether the todo is completed"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public Todo(String item, boolean isCompleted) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        super(item, isCompleted);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It returns the String to be printed to the user containing"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * the details of the todo."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return String to be printed to the user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public String getItem() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        return \"[T]\" + super.getItem();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It returns the String inputted by the user for this todo."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return String to be printed to the user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        return \"[T]\" + super.getItem();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sruthisarav": 39
    }
  },
  {
    "path": "src/main/java/taskList/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "package tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * TaskList contains the list of tasks and the functions that change the list of"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * tasks depending on the commands from the user of the Java Duke Program."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * @author (Sruthi)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private final ArrayList\u003cTask\u003e todoList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private int numberOfTasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It creates a new array list for the todo list and sets the counter to 0."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        todoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It creates a String to be printed to the user to show all the tasks in the list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * and returns it."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return String to be printed to the user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public String showList() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        String output \u003d \"  The tasks in your Todo List: \";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        for (Task item : todoList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            output +\u003d \"\\n    \" + count + \". \" + item.getItem();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            count +\u003d 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It finds the task in the task list based on the number given and sets it to"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * completed. It then returns the String to be printed for the user to see."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It throws a DukeException error if the user gives an invalid input."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param input input given by the user"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return String to be printed to the user"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public String completeItem(String input) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        String indexString \u003d input.split(\" \")[1];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            String output \u003d \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            Task item \u003d todoList.get(Integer.valueOf(indexString) - 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            item.completeTask();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            output +\u003d \"     \\\\\\\\(^o^)/ *.*.* \\\\\\\\(^o^)/\"+ \"\\n  Yay! This task has been completed:\" + \"\\n  \" + item.getItem();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            throw new DukeException(\"Oops! Invalid task number. Please try again \u003e.\u003c\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It finds the task in the task list based on the number given and deletes it from"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * the list. It then returns the String to be printed for the user to see."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It throws a DukeException error if the user gives an invalid input."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param input input given by the user"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return String to be printed to the user"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public String deleteItem(String input) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        String indexString \u003d input.split(\" \")[1];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            int index \u003d Integer.valueOf(indexString) - 1;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            Task item \u003d todoList.get(index);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            String output \u003d \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            output +\u003d \"  Noted. This task has now been removed from the list:\" + \"\\n    \" + item.getItem();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            todoList.remove(index);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            numberOfTasks -\u003d 1;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            output +\u003d \"\\n  There are now \" + numberOfTasks + \" todo items in the list\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            throw new DukeException(\"Oops! Invalid task number. Please try again \u003e.\u003c\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It adds a task to the task list based on the command given by calling the appropriate"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * add task functionand then returns the String to be printed to the user. It throws a"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * DukeException when an error occurred while adding a task to the list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param instruction the command given by the user"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param item description of the task"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return String to be printed to the user"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public String addItem(String instruction, String item) throws DukeException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        if (item.equals(\"\") || item.equals(\" \")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            throw new DukeException(\"Oops! The description cannot be empty \u003e.\u003c\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        if (instruction.equals(\"todo\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            output +\u003d addTodoItem(item, false);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        } else if (instruction.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            output +\u003d addDeadline(item, false);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            output +\u003d addEvent(item, false);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        output +\u003d \"\\n  New todo item added to the list!\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        output +\u003d \"\\n  There are now \" + (numberOfTasks + 1) + \" todo items in the list\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It creates a new todo item based on the prams given and returns the String"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * to be printed to the user."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param item description of the todo item"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param isCompleted whether the todo is completed"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return String to be printed to the user"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public String addTodoItem(String item, boolean isCompleted) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        Todo newTask \u003d new Todo(item, isCompleted);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        todoList.add(newTask);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        numberOfTasks +\u003d 1;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        return \"  \" + newTask.getItem();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It creates a new Deadline item based on the params given and returns the String"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * to be printed. It throws a DukeException when an error occurs while adding the"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * task to the list."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param item the description of the Deadline"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param isCompleted whether the Deadline is completed"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return String to be printed to the user"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public String addDeadline(String item, boolean isCompleted) throws DukeException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        Deadline newTask \u003d Parser.parseDeadline(item, isCompleted);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        todoList.add(newTask);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        numberOfTasks +\u003d 1;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        return \"  \" + newTask.getItem();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It creates a new Event item based on the params given and returns the String"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * to be printed. It throws a DukeException when an error occurs while adding the"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * task to the list."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param item description of the Event"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param isCompleted whether the Event is completed"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return String to be printed to the user"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public String addEvent(String item, boolean isCompleted) throws DukeException {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        Event newTask \u003d Parser.parseEvent(item, isCompleted);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        todoList.add(newTask);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        numberOfTasks +\u003d 1;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        return \"  \" + newTask.getItem();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Finds the tasks that match the search keywords inputted by the user"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * and returns the String to be printed to the user."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param input input given by the user"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return String returns all the tasks that match the search query"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public String findItem(String input) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        String query \u003d input.substring(4);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        for (Task task : todoList) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            if (task.getTask().contains(query)) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "                count +\u003d 1;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "                result +\u003d \"\\n    \" + count + \".\" + task.getItem();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        if (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            result \u003d \"  There is no matching tasks in your list.\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            result \u003d \"  Here are the matching tasks in your list: \" + result;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It converts all the tasks in the list to String for ease of printing"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * to the User and returns this String."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return String to be print to the user"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public String formatTodoListToString() {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        String tasks \u003d \"\";"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        for (Task task : todoList) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            tasks +\u003d task.getInput() + \"\\n\";"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sruthisarav": 211
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * UI deals with interactions with the user in the Java Duke Program"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " * @author (Sruthi)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private final String LINE_FORMAT \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private final String OUTPUT_FORMAT \u003d \"  %s\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private boolean isOngoing;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * It sets ongoing to false. ongoing signifies whether the Java Duke Program is running."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param parser parser that is formatting the user\u0027s input to the correct format"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public Ui(Parser parser) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        isOngoing \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        this.parser \u003d parser;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Gets the interaction with the user running by scanning the input from the user first."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        isOngoing \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        greeting();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        while (isOngoing) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            systemOutput(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * The input from the user is then sent to the Parser and the resulting String from"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * calling these functions will be printed to the user. But if the command is \"bye\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * it calles the goodbye function and sets ongoing to false."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * @param input input given by the user"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void systemOutput(String input) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        System.out.println(LINE_FORMAT + \"\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            String output \u003d parser.scenarios(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            if (output.equals(\"bye\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "                isOngoing \u003d false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "                goodBye();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "                System.out.println(output);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "            System.out.printf(OUTPUT_FORMAT, e.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        System.out.println(\"\\n\" + LINE_FORMAT);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Greets the user."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void greeting() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        System.out.println(LINE_FORMAT + \"\\n         (^v^)\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        System.out.printf(OUTPUT_FORMAT, \"Hey there! I\u0027m JavaDuke\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        System.out.printf(OUTPUT_FORMAT, \"What can I do for you?\\n\" + LINE_FORMAT);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Says goodbye to the user."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void goodBye() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        System.out.printf(OUTPUT_FORMAT, \"          *(^v^)\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        System.out.printf(OUTPUT_FORMAT, \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * Shows the loading error message when an error occurs while loading the tasklist from"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     * the file."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        System.out.println(\"An error occurred while loading the task list. Please rerun the program again.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sruthisarav": 90
    }
  },
  {
    "path": "src/test/java/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    LocalDate date1 \u003d LocalDate.parse(\"2020-04-23\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    LocalDate date2 \u003d LocalDate.parse(\"2020-12-05\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void formatDateTest1 () throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        assertEquals(\"Apr 23 2020 11.30pm\", Parser.formatDateString(date1,\"23/04/2020 2330\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void formatDateTest2 () throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        assertEquals(\"Dec 5 2020 5.23am\", Parser.formatDateString(date2, \"5/12/2020 0523\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void formatTimeTest1 () throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        assertEquals(\"11.30pm\", Parser.formatTime(\"2330\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void formatTimeTest2 () throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        assertEquals(\"5.23am\", Parser.formatTime(\"0523\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sruthisarav": 32
    }
  },
  {
    "path": "src/test/java/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    LocalDate date1 \u003d LocalDate.parse(\"2020-12-03\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    Deadline task1 \u003d new Deadline(\"test\", \"Mar 12 2020 12.59pm\", date1, \"03/12/2020 1259\", true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    LocalDate date2 \u003d LocalDate.parse(\"2020-09-05\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    Deadline task2 \u003d new Deadline(\"cs2103 project\", \"Sep 9 2020 3.04am\", date2, \"05/09/2020 0304\", false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void inputTest1(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        assertEquals(\"[D][O]test\" + \"/by \" + \"03/12/2020 1259\", task1.getInput());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void inputTest2(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        assertEquals(\"[D][X]cs2103 project\" + \"/by \" + \"05/09/2020 0304\", task2.getInput());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void itemTest1(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        assertEquals(\"[D][O]test\" + \"(by: \" + \"Mar 12 2020 12.59pm)\", task1.getItem());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void itemTest2(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        assertEquals(\"[D][X]cs2103 project\" + \"(by: \" + \"Sep 9 2020 3.04am)\", task2.getItem());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sruthisarav": 35
    }
  },
  {
    "path": "src/test/java/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    LocalDate date1 \u003d LocalDate.parse(\"2020-12-03\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    Event task1 \u003d new Event(\"test\", \"Mar 12 2020 12.59pm\", date1, \"03/12/2020 1259\", true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    LocalDate date2 \u003d LocalDate.parse(\"2020-09-05\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    Event task2 \u003d new Event(\"project\", \"Sep 9 2020 3.04am\", date2, \"05/09/2020 0304\", false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void inputTest1(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        assertEquals(\"[E][O]test\" + \"/at \" + \"03/12/2020 1259\", task1.getInput());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void inputTest2(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        assertEquals(\"[E][X]project\" + \"/at \" + \"05/09/2020 0304\", task2.getInput());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void itemTest1(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        assertEquals(\"[E][O]test\" + \"(at: \" + \"Mar 12 2020 12.59pm)\", task1.getItem());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void itemTest2(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        assertEquals(\"[E][X]project\" + \"(at: \" + \"Sep 9 2020 3.04am)\", task2.getItem());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sruthisarav": 35
    }
  },
  {
    "path": "src/test/java/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    Task task1 \u003d new Task(\"test\", true);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    Task task2 \u003d new Task(\"test triple words\", false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void itemTest1(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        assertEquals(\"[O]test\", task1.getItem());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void itemTest2(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        assertEquals(\"[X]test triple words\", task2.getItem());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void inputTest1(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        assertEquals(\"test\", task1.getInput());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void inputTest2(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        assertEquals(\"test triple words\", task2.getInput());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sruthisarav": 28
    }
  },
  {
    "path": "src/test/java/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    Todo task1 \u003d new Todo(\"test\", true);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    Todo task2 \u003d new Todo(\"test triple words\", false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void itemTest1(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        assertEquals(\"[T][O]test\", task1.getItem());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void itemTest2(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        assertEquals(\"[T][X]test triple words\", task2.getItem());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void inputTest1(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        assertEquals(\"[T][O]test\", task1.getInput());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    public void inputTest2(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "        assertEquals(\"[T][X]test triple words\", task2.getInput());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sruthisarav": 30
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "todo CS2103T indiv project"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "todo sleep"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "deadline CS3243 tut /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "event project meeting /at Thursday 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Sruthisarav": 9
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sruthisarav"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "Sruthisarav": 1
    }
  }
]
