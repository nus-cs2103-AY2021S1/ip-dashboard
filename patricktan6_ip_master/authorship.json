[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 46
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "T | ✓ | buy"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "D | ✓ | hi | 2020-09-17T18:00"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "E | ✗ | bake | 2020-10-11T09:00"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 3
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ":init"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ":end"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 103
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " * Creates a Duke object that represents a bot that manages a user\u0027s tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Creates a duke object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param filePath The file path that contains the tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Duke(String filePath) { "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Runs the Duke program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                c.execute(this.tasks, this.ui, this.storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Creates a Duke object and runs the program."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 53,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " * Creates a DukeException object to be thrown."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public DukeException(String errMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        super(errMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 10
    }
  },
  {
    "path": "src/main/java/duke/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " * Creates an exception to be thrown when description of an event or deadline is missing."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class MissingDescriptionException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public MissingDescriptionException(String errMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        super(\"\\n     ☹ OOPS!!! The description of \" + errMessage + \" cannot be empty.\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 10
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " * Creates a parser that parses the command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Parses the command and decides the type of the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param fullCommand A string of the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return A command object representing the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @throws DukeException when the command is not valid."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            String[] test \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            if (test[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                if (test.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    throw new DukeException(\"Please select the task that you want to mark done!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                int idx \u003d Integer.parseInt(test[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                return new DoneCommand(idx);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            } else if (test[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                if (test.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    throw new DukeException(\"Please select the task that you want to delete!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                int idx \u003d Integer.parseInt(test[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                return new DeleteCommand(idx);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            } else if (test[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                if (test.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    throw new DukeException(\"Please include the keyword!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                String keyword \u003d test[1];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                return new FindCommand(keyword);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                if (test[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        String description \u003d fullCommand.split(\"todo \")[1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        return new AddCommand(todo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        MissingDescriptionException realError \u003d new MissingDescriptionException(\"a todo\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        throw new DukeException(realError.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                } else if (test[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        String[] str \u003d fullCommand.split(\"deadline \")[1].split(\" /\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        if (str.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The deadline cannot be empty.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                String description \u003d str[0];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                String by \u003d str[1].split(\"by \")[1];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                LocalDateTime byTime \u003d LocalDateTime.parse(by);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                Deadline deadline \u003d new Deadline(description, byTime);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                return new AddCommand(deadline);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                throw new DukeException(\"Format of date and time is incorrect! \" "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                        + \"Please fill in the date and time following the format below. \\n\" "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                        + \"       YYYY-MM-DDTHH:MM:SS\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                throw new DukeException(\"☹ OOPS!!! The deadline cannot be empty.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        MissingDescriptionException realError \u003d new MissingDescriptionException(\"a deadline\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        throw new DukeException(realError.getMessage());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                } else if (test[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        String[] str \u003d fullCommand.split(\"event \")[1].split(\" /at \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        if (str.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                String description \u003d str[0];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                String at \u003d str[1];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                Event event \u003d new Event(description, LocalDateTime.parse(at));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                return new AddCommand(event);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                throw new DukeException(\"Format of date and time is incorrect! Please fill in the date and time following the format below. \\n\" +"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                                        \"       YYYY-MM-DDTHH:MM:SS\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        MissingDescriptionException realError \u003d new MissingDescriptionException(\"an event\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        throw new DukeException(realError.getMessage());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    UnknownInputException ue \u003d new UnknownInputException();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    throw new DukeException(ue.getMessage());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 115
    }
  },
  {
    "path": "src/main/java/duke/Response.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " * Creates a dialog box as a response."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class Response {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    enum Tag {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        LIST,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        ADD,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        REMOVE,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        NORMAL,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        FIND"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Task[] tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String[] texts;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Tag tag;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public int numOfTasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Creates the response of normal texts."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param texts An array of strings. Each string will be printed in one line."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Response(String[] texts) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.texts \u003d texts;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.tag \u003d Tag.NORMAL;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Creates the response after receiving task related commands from the user"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * like adding task to the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param tasks The task to be added or removed."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param tag Removal or addition of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param numOfTasks The number of Tasks in the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Response(Task[] tasks, Tag tag, int numOfTasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.numOfTasks \u003d numOfTasks;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Creates the response after receiving some other task related commands from the user"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * like listing the tasks in the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param tasks The list of the tasks in the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Response(Task[] tasks, Tag tag) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Gets the string representation of the response."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return The string representation of the response from duke."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String getResponse() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        String linesOfText \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        if (this.tag \u003d\u003d Tag.LIST) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            for (int i \u003d 0; i \u003c this.tasks.length; i++) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                linesOfText +\u003d \"     \" + String.format(\"%d. \", i + 1) + this.tasks[i] + \"\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } else if (this.tag \u003d\u003d Tag.ADD) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            for (int i \u003d 0; i \u003c this.tasks.length; i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    linesOfText +\u003d \"     \""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            + \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            + \"       \""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            + this.tasks[i]"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            + \"\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            + \"     \""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            + String.format(\"Now you have %d tasks in the list. \\n\", numOfTasks);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } else if (this.tag \u003d\u003d Tag.REMOVE) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            for (int i \u003d 0; i \u003c this.tasks.length; i++) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                linesOfText +\u003d \"     \""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        + \"Got it. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        + \"       \""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        + this.tasks[i]"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        + \"\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        + \"     \""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        + String.format(\"Now you have %d tasks in the list. \\n\", numOfTasks);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } else if (this.tag \u003d\u003d Tag.FIND ) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                linesOfText +\u003d \"     \""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        + \"Here are the matching tasks in your list: \\n\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                for (int i \u003d 0; i \u003c this.tasks.length; i++) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    linesOfText +\u003d \"       \""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            + this.tasks[i]"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            + \"\\n\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                Response msg \u003d new Response(new String[]{\"There is no matching tasks!\"});"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            for (int i \u003d 0; i \u003c this.texts.length; i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                linesOfText +\u003d \"     \""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        + this.texts[i] + \"\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        String output \u003d linesOfText;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 109
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " * Creates a storage of the tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Loads the content of the file into an array list of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return An array list of tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            Scanner s \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                String[] task \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                if (task[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    Task todo \u003d new Todo(task[2]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    if (task[1].equals(\"✓\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        todo.markDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    tasks.add(todo);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                } else if (task[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    Task deadline \u003d new Deadline(task[2], LocalDateTime.parse(task[3]));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    if (task[1].equals(\"✓\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        deadline.markDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    tasks.add(deadline);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                } else if (task[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    Task event \u003d new Event(task[2], LocalDateTime.parse(task[3]));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    if (task[1].equals(\"✓\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                        event.markDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    tasks.add(event);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            throw new DukeException(\"Folder or file does not exist yet! Please make sure you have data/duke.txt in ip directory. \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Writes the tasks in the TaskList into the file."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param tasks A list of tasks to be written into the file."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void writeFile(TaskList tasks) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.file);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            fw.write(tasks.getList());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 83
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " * Creates a list that keeps the tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Adds a task to the list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Deletes the task with the index of it in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param idx The index of the task to be deleted in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void delete(int idx) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        tasks.remove(idx);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Gets the task of the index passed in."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param idx The index of the task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return The task with the index passed in."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Task get(int idx) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return tasks.get(idx);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Gets an array of the tasks in the task list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return An array of the tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Task[] getArray() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return this.tasks.toArray(new Task[0]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Gets an array list of tasks that contain the keyword."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param keyword The searching keyword."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return An array list of tasks that contain the keyword."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public ArrayList\u003cTask\u003e filter(String keyword) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        ArrayList\u003cTask\u003e satisfiedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            if (tasks.get(i).description.contains(keyword)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                satisfiedTasks.add(tasks.get(i));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return satisfiedTasks;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Gets the string representation of the list of the tasks in the task list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return A string that represents the list of tasks"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String getList() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            list +\u003d t.writeMessage() + \"\\n\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Gets the size of the task list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return The size of the task list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        String str \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            str +\u003d (i + 1) + \": \" + tasks.get(i);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            if (i !\u003d tasks.size() - 1) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                str +\u003d \"\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        if (!(obj instanceof TaskList)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        TaskList tasks \u003d (TaskList) obj;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return tasks.toString().equals(toString());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 125
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " * Creates a ui."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Prints the welcome message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        String logo \u003d \"      ___                __     \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                + \"     |  _ \\\\   ____      |  |    \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                + \"     | |_| | / __  \\\\  __|  |__  \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                + \"     |  _ / | |  |  ||__    __| \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                + \"     | |    | |_/   |   |  |    \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                + \"     |_|     \\\\___/|_|   |__|    \\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        String[] greetingTexts \u003d {\"Hello! I\u0027m Pat\", \"What can I do for you?\"};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        Response greeting \u003d new Response(greetingTexts);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        System.out.println(\"     Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        System.out.println(greeting.getResponse());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Prints a line."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        System.out.println(\"    __________________________________________________________ \\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Reads the string input."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return A string that will be parsed."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        Scanner s \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return s.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Prints the message of adding a task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param tasks The task list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void showAddMessage(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        Response msg \u003d new Response(new Task[]{task}, Response.Tag.ADD, tasks.size());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Prints the message of deleting a task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param task The task to be deleted."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param tasks The task list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void showDeleteMessage(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        Response msg \u003d new Response(new Task[]{task}, Response.Tag.REMOVE, tasks.size());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Prints the list of the tasks."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param tasks The task list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void listTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        Response list \u003d new Response(tasks.getArray(), Response.Tag.LIST);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        System.out.println(list.getResponse());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Prints the done message when marking a task as done."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param task The task to be marked done."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void showDoneMessage(Task task) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        Response msg \u003d new Response(new String[]{\"Nice! I\u0027ve marked this task as done:\", \"  \" + task});"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Prints the list of tasks that match the searching keyword."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param tasks The tasks that match the searching keyword."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void showFindMessage(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        Response msg \u003d new Response(tasks.toArray(new Task[0]), Response.Tag.FIND);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Prints the loading error when loading the local file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        Response msg \u003d new Response(new String[]{\"Folder or file does not exist yet! Please make sure you have data/duke.txt in ip directory. \"});"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Prints the error message."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param errMessage The error message."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void showError(String errMessage) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        Response msg \u003d new Response(new String[]{errMessage});"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Prints the bye message when exiting the program."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void showByeMessage() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        Response msg \u003d new Response(new String[]{\"Bye. Hope to see you again soon!\"});"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        System.out.println(msg.getResponse());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 123
    }
  },
  {
    "path": "src/main/java/duke/UnknownInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " * Creates an exception to be thrown when the input is unknown."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class UnknownInputException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public UnknownInputException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        super(\"\\n     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 10
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " * Creates an add command object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param tasks The list of existing tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param ui The ui that handles user interaction."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param storage The storage that stores the list of existing tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        tasks.add(this.task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        ui.showAddMessage(this.task, tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        storage.writeFile(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Determines if the command is an exit command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return Always false."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        if (!(obj instanceof AddCommand)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        AddCommand command \u003d (AddCommand) obj;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return command.toString().equals(toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 60
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " * Creates a command object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param tasks The list of existing tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param ui The ui that handles user interaction."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param storage The storage that stores the list of existing tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @throws DukeException when the command cannot be executed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Determines whether the command is an exit command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return The status of the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 29
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " * Creates a delete command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    private int idx;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public DeleteCommand(int idx) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.idx \u003d idx - 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param tasks The list of existing tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param ui The ui that handles user interaction."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param storage The storage that stores the list of existing tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @throws DukeException when the command cannot be executed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            Task deletedTask \u003d tasks.get(idx);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            tasks.delete(idx);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            ui.showDeleteMessage(deletedTask, tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            storage.writeFile(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            throw new DukeException(\"The number does not exist!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Determines if the command is an exit command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return Always false."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 46
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " * Creates a done command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    private int idx;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public DoneCommand(int idx) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.idx \u003d idx - 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param tasks The list of existing tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param ui The ui that handles user interaction."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param storage The storage that stores the list of existing tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @throws DukeException when the command cannot be executed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            Task doneTask \u003d tasks.get(idx);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            doneTask.markDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            ui.showDoneMessage(doneTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            storage.writeFile(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            throw new DukeException(\"The number does not exist!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Determines if the command is an exit command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return Always false."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 49
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " * Creates an exit command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param tasks The list of existing tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param ui The ui that handles user interaction."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param storage The storage that stores the list of existing tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) { "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        ui.showByeMessage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Determines if the command is an exit command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return Always true."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 31
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " * Creates a find command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param tasks The list of existing tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param ui The ui that handles user interaction."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param storage The storage that stores the list of existing tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        ui.showFindMessage(tasks.filter(keyword));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Determines if the command is an exit command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return Always false."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 36
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " * Creates a list command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param tasks The list of existing tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param ui The ui that handles user interaction."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param storage The storage that stores the list of existing tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        ui.listTasks(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Determines if the command is an exit command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return Always false."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " * Creates a deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    protected LocalDateTime deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Creates a Deadline object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param deadline The deadline of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Deadline(String description, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Returns the message to be saved into the hard disk."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return The string representation of the task in the local file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String writeMessage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        String done \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            done \u003d \"✓\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            done \u003d \"✗\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return String.format(\"D | %s | %s | %s\", done, this.description, this.deadline);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Returns the string representation of this task to the users when Duke receives list command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return The string representation of this task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            String str \u003d \" (by: \";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            str +\u003d deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            return \"[D][\" + (this.isDone ? \"✓\" : \"✗\") + \"] \" + this.description + str + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " * Creates an event."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    protected LocalDateTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Creates an Event object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param description The description of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param time The time of the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Event(String description, LocalDateTime time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Returns the message to be saved in the hard disk."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return The string representation of the task in the local file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String writeMessage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        String done \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            done \u003d \"✓\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            done \u003d \"✗\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return String.format(\"E | %s | %s | %s\", done, this.description, this.time);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Returns the string representation of the event to the users when Duke receives list command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return The string representation of this task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        String str \u003d \" (at: \";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        str +\u003d time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return \"[E][\" + (this.isDone ? \"✓\" : \"✗\") + \"] \" + this.description + str + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " * Creates a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Creates the message to be written into the local file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return A string representation of the task in the local file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String writeMessage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return \"[\" + (this.isDone ? \"✓\" : \"✗\") + \"] \" + this.description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 36
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " * Creates a todo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Creates a Todo object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Returns the message to be saved in the hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return The string representation of this task in the local file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String writeMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        String done \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            done \u003d \"✓\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            done \u003d \"✗\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return String.format(\"T | %s | %s\", done, this.description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * Returns the string representation of this task to the users when Duke receives list command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     * @return The string representation of this task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        return \"[T][\" + (this.isDone ? \"✓\" : \"✗\") + \"] \" + this.description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 42
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void eventParsing_goodDateFormat_success() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        String command \u003d \"event date with girlfriend!! /at 2020-10-10T13:00\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        Event event \u003d new Event(\"date with girlfriend!!\", LocalDateTime.parse(\"2020-10-10T13:00\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        AddCommand addCommand \u003d new AddCommand(event);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        Command c \u003d Parser.parse(command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        assertEquals(addCommand, c);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void eventParsing_badDateFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        String command \u003d \"event make some sandwiches /at Sunday\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            assertEquals(Parser.parse(command), Parser.parse(command));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "            assertEquals(\"Format of date and time is incorrect! \" "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            + \"Please fill in the date and time following the format below. \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                            + \"       YYYY-MM-DDTHH:MM:SS\", "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "                    e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 36
    }
  },
  {
    "path": "src/test/java/duke/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    public void testSaveAndLoad() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        Storage s \u003d new Storage(\"storageTest.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        tasks.add(new Todo(\"buy a gift\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        tasks.add(new Deadline(\"ask her out\", LocalDateTime.parse(\"2020-10-08T21:00\")));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        tasks.get(1).markDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        s.writeFile(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        TaskList loadedTasks \u003d new TaskList(s.load());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "        assertEquals(tasks, loadedTasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 24
    }
  },
  {
    "path": "src/test/storageTest.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "T | ✗ | buy a gift"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "D | ✓ | ask her out | 2020-10-08T21:00"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 2
    }
  },
  {
    "path": "storageTest.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "T | ✗ | buy a gift"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "D | ✓ | ask her out | 2020-10-08T21:00"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "done"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "delete"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "todo Ask for help"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "deadline IP /by Thursday 2359"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "event Go to Singapore /at Friday 9pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "blah"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "haha"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "delete"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 23
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 5,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/MissingTimeException.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/Response.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/MissingDescriptionException.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/MissingNumberException.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/MissingDeadlineException.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/Todo.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patricktan6"
        },
        "content": "../src/main/java/UnknownInputException.java"
      }
    ],
    "authorContributionMap": {
      "patricktan6": 11
    }
  }
]
