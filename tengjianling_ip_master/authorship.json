[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        sc.useDelimiter(\"\\n\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String str \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        System.out.println(\"    _________________________________\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        System.out.println(\"    Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        System.out.println(\"    What can I do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        System.out.println(\"    _________________________________\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            str \u003d sc.next();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            Task t \u003d new Task(str);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            if (str.isBlank()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                // does not register as an entry"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                System.out.println(\"    _________________________________\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                if (t.getDescription().equals(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    System.out.println(\"    Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        String item \u003d (i + 1) + \". \" + tasks.get(i);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        System.out.println(\"    \" + item);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                } else if (t.isTodo()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        t.validate(); // checks if exception is thrown"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        ToDo todo \u003d new ToDo(t.getDescription());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        tasks.add(todo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        System.out.println(\"    Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        System.out.println(\"        \" + todo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                } else if (t.isDeadline()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        t.validate();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        String date \u003d t.getDate();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        Deadline deadline \u003d new Deadline(t.getDescription(), date);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        tasks.add(deadline);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        System.out.println(\"    Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        System.out.println(\"        \" + deadline);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                } else if (t.isEvent()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        t.validate();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        String date \u003d t.getDate();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        Event event \u003d new Event(t.getDescription(), date);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        tasks.add(event);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        System.out.println(\"    Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        System.out.println(\"        \" + event);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                } else if (t.getFirstWord().equals(\"done\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    int taskNumber \u003d t.getNumber();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    tasks.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    System.out.println(\"    Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    System.out.println(\"        \" + tasks.get(taskNumber - 1));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                } else if (str.equals(\"bye\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    System.out.println(\"    Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    System.out.println(\"    _________________________________\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                } else if (t.getFirstWord().equals(\"delete\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    int taskNumber \u003d t.getNumber();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    System.out.println(\"    Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    System.out.println(\"        \" + tasks.get(taskNumber - 1));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        t.validate();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "                System.out.println(\"    _________________________________\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "tengjianling": 86
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String getFirstWord() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String[] arr \u003d this.description.split(\" \", 2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String firstWord \u003d arr[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return firstWord;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public boolean isTodo() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return this.getFirstWord().equals(\"todo\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public boolean isDeadline() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return this.getFirstWord().equals(\"deadline\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public boolean isEvent() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return this.getFirstWord().equals(\"event\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public int getNumber() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String[] arr \u003d this.description.split(\" \", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        if (arr[0].equals(\"done\") || arr[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            String stringNum \u003d arr[1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return Integer.parseInt(stringNum);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return -1; // this is return when user did not input a \u0027done\u0027 or \u0027delete statement"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String des \u003d this.getDescription();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        if (des.indexOf(\u0027/\u0027) \u003d\u003d -1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return des.substring(des.indexOf(\u0027/\u0027) + 4, des.length());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public boolean isSingleWord() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return !this.description.contains(\" \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public boolean isInvalidTask() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String firstWord \u003d this.getFirstWord();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return !(firstWord.equals(\"todo\") || firstWord.equals(\"deadline\") || firstWord.equals(\"event\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public void validate() throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        if (this.isInvalidTask()) { // checks if input is not to do, deadline, or event"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            throw new DukeException(\"   ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        if (this.isSingleWord()) { // checks if input is only the type of task, but no description"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            throw new DukeException(\"   ☹ OOPS!!! The description of a \" + this.getFirstWord() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        if (!this.getDescription().contains(\"/by\") \u0026\u0026 this.isDeadline()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            // \"/by\" is not in the description, i.e no date"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            throw new DukeException(\"   ☹ OOPS!!! The description of a deadline must contain a date.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        if (!this.getDescription().contains(\"/at\") \u0026\u0026 this.isEvent()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            // \"/at\" is not in the description, i.e no date"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            throw new DukeException(\"   ☹ OOPS!!! The description of an event must contain a date.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String des \u003d this.description;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        String task \u003d des.substring(des.indexOf(\" \"));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        if (this.isTodo()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return \"[\" + this.getStatusIcon() + \"] \" + task;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "            return \"[\" + this.getStatusIcon() + \"] \" + task.substring(0, task.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 99
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengjianling"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "todo borrow book"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "tengjianling": 5
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengjianling"
        },
        "content": "../src/main/java/ToDo.java"
      }
    ],
    "authorContributionMap": {
      "tengjianling": 5
    }
  }
]
