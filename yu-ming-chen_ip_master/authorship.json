[
  {
    "path": "src/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * Main class to run Duke program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * Creates and stores your task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private Storage saveData;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Duke Class constructor. Create a new Ui and TaskList. Load saved data if Storage exist, else create new Storage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param filePath give the path of the save data"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.saveData \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        list \u003d new TaskList(saveData.loadSavedData());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method to run Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        ui.sayHi();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                c.execute(list, ui, saveData);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                ui.saySomthing(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * main method to run Duke class."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 49,
      "-": 3
    }
  },
  {
    "path": "src/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * Duke\u0027s customized Exception class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 15
    }
  },
  {
    "path": "src/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * Parser class that deals with making sense of the user command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Static method that takes in the user\u0027s command and return a Command object. If no command matches, it will throw a DukeException"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param  command input from the user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return      a Command object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        String arr[] \u003d command.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        String keyWord \u003d arr[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (keyWord.equals(\"bye\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new ExitCommand(command);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } else if (keyWord.equals(\"list\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new ShowListCommand(command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } else if(keyWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new AddTodoCommand(command);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } else if(keyWord.equals(\"deadline\")){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new AddDeadlineCommand(command);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } else if (keyWord.equals(\"event\")){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new AddEventCommand(command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } else if(keyWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new CompleteTaskCommand(command);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } else if(keyWord.equals(\"delete\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new DeleteTaskCommand(command);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } else if(keyWord.equals(\"find\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return new FindTaskCommand(command);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! wait..... I don\u0027t understand your order my sir.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 40
    }
  },
  {
    "path": "src/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * Storage class that deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private final String dir_path \u003d \"data\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private final String txt_path \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Storage Class constructor. Create a new directory if there isn\u0027t one at the given path."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param path give the path of the save data"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            createFolder();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            System.out.println(e.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that creates a new folder at the root directory if there isn\u0027t one"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private void createFolder() throws IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        File dir_folder \u003d new File(dir_path);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        File txt \u003d new File(txt_path);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (!dir_folder.exists()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            dir_folder.mkdir();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (!txt.exists()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            txt.createNewFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that load saved data (past records) from the directory"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return      a List of Task objects"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public List\u003cTask\u003e loadSavedData() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            File file \u003d new File(txt_path);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            FileReader fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            while((line \u003d br.readLine()) !\u003d null){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                String[] splited \u003d line.split(\"\u003e\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                Task currTask \u003d null;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                if (splited[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    currTask \u003d new Todo(splited[2]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                } else if (splited[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    currTask \u003d new Event(splited[2], splited[3]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                } else if (splited[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    currTask \u003d new Deadline(splited[2], splited[3]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                if (splited[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    currTask.markAsDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                list.add(currTask);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } catch(IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            System.out.println(e.toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that add Task data to the save data txt file"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param task  task in a String format"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void addTask(String task) throws IOException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        File file \u003d new File(txt_path);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        FileWriter writer \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        writer.write(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        writer.write(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that mark a specific task as complete in the saved data"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param number    index of the Task to be completed"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void completeTask(int number) throws IOException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        File file \u003d new File(txt_path);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        FileReader fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        int line_no \u003d 0;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        String final_line \u003d \"\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        while((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            line_no +\u003d 1;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            if (line_no \u003d\u003d number) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                StringBuilder updated \u003d new StringBuilder(line);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                updated.setCharAt(2, \u00271\u0027);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                final_line +\u003d updated + \"\\n\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                final_line +\u003d line + \"\\n\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        FileWriter writer \u003d new FileWriter(file, false);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        writer.write(final_line);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that delete a specific task from the saved data"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param number    index of the Task to be deleted"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void deleteTask(int number) throws IOException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        File file \u003d new File(txt_path);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        FileReader fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        int line_no \u003d 0;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        String final_line \u003d \"\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        while((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            line_no +\u003d 1;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            if (line_no \u003d\u003d number) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                final_line +\u003d line + \"\\n\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        FileWriter writer \u003d new FileWriter(file, false);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        writer.write(final_line);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 146
    }
  },
  {
    "path": "src/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * UI class that deals with interactions with the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that simply scan the user\u0027s input and change it to a command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return      a user command as String"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        String str \u003d sc.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that load and print the task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param list  a Tasklist object"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void showList(TaskList list) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        String print \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        print +\u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            if (i \u003d\u003d list.size()-1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                print +\u003d String.format(\"%d. \", i+1) + list.get(i);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                print +\u003d String.format(\"%d. \", i + 1) + list.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        saySomthing(print);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that print the welcome message."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void sayHi() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        System.out.println(\"What can I do for you mate?\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that wrap lines around text that Duke send out."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param str   text in String to be wrapped"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void saySomthing(String str) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        System.out.println(\"------------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        System.out.println(str);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        System.out.println(\"------------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that echos whatever the input is."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param input String of input"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void echo(String input) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.saySomthing(input);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that print the exit message."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void byeMessage() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        System.out.println(\"-*-*-*-*-*-*-*-*-*-*-*-*-*--*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*--*-*-*-*-\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!!!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        System.out.println(\"-*-*-*-*-*-*-*-*-*-*-*-*-*--*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*--*-*-*-*-\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 82
    }
  },
  {
    "path": "src/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * AddDeadlineCommand class that represents add deadline commands"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * AddDeadlineCommand Class constructor"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param command the command from the user"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public AddDeadlineCommand(String command) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that execute the current AddDeadlineCommand object"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param list TaskList object from the current Duke instance"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param ui    UI object from the current Duke instance"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param saveData Storage object from the current Duke instance"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage saveData) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            if (this.command.trim().length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Check deadline formatting, include description and /by.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            } else if (!this.command.contains(\"/by\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Check deadline formatting, include /by.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            String holder[] \u003d this.command.split(\"deadline\")[1].split(\"/by \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            String description \u003d holder[0].trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            String by \u003d holder[1].trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            Deadline task \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            list.add(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            ui.saySomthing(\"Got it. I\u0027ve added this task:\\n\" + task.toString() + \"\\n\" + String.format(\"Now you have %d tasks in the list.\", list.size()));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            String save \u003d \"D\u003e0\u003e\"+description+\"\u003e\"+by;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            saveData.addTask(save);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            ui.saySomthing(e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that return isExit of the current Command"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return boolean object showing if Duke should terminate"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 58
    }
  },
  {
    "path": "src/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * AddEventCommand class that represents add event commands"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * AddEventCommand Class constructor"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param command the command from the user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public AddEventCommand(String command) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that execute the current AddEventCommand object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param list TaskList object from the current Duke instance"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param ui    UI object from the current Duke instance"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param saveData Storage object from the current Duke instance"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage saveData) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            if (this.command.trim().length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Check event formatting, include description and /at.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            } else if (!this.command.contains(\"/at\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Check event formatting, include /at.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            String holder[] \u003d this.command.split(\"event\")[1].split(\"/at \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            String description \u003d holder[0].trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            String at \u003d holder[1].trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            Event task \u003d new Event(description, at);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            list.add(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            ui.saySomthing(\"Got it. I\u0027ve added this task:\\n\" + task.toString() + \"\\n\" + String.format(\"Now you have %d tasks in the list.\", list.size()));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            String save \u003d \"E\u003e0\u003e\"+description+\"\u003e\"+at;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            saveData.addTask(save);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            ui.saySomthing(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that return isExit of the current Command"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return boolean object showing if Duke should terminate"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 62
    }
  },
  {
    "path": "src/duke/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * AddTodoCommand class that represents add Todo commands"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class AddTodoCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * AddTodoCommand Class constructor"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param command the command from the user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public AddTodoCommand(String command) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that execute the current AddTodoCommand object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param list TaskList object from the current Duke instance"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param ui    UI object from the current Duke instance"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param saveData Storage object from the current Duke instance"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage saveData) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            if (this.command.trim().length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Check todo formatting, include description\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            Todo task \u003d new Todo(this.command.substring(5));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            list.add(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            ui.saySomthing(\"Got it. I\u0027ve added this task:\\n\" + task.toString() + \"\\n\" + String.format(\"Now you have %d tasks in the list.\", list.size()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            String save \u003d \"T\u003e0\u003e\"+this.command.substring(5);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            saveData.addTask(save);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            ui.saySomthing(e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that return isExit of the current Command"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return boolean object showing if Duke should terminate"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 54
    }
  },
  {
    "path": "src/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * Command abstract class that represents specific commands"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    boolean isExit;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Command Abstract Class constructor"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param command the command from the user"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    Command(String command){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that execute the current Command object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param list TaskList object from the current Duke instance"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param ui    UI object from the current Duke instance"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param saveData Storage object from the current Duke instance"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage saveData){};"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that return isExit of the current Command"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return boolean object showing if Duke should terminate"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    };"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 38
    }
  },
  {
    "path": "src/duke/command/CompleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * CompleteTaskCommand class that represents complete task commands"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class CompleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * CompleteTaskCommand Class constructor"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param command the command from the user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public CompleteTaskCommand(String command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that execute the current CompleteTaskCommand object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param list TaskList object from the current Duke instance"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param ui    UI object from the current Duke instance"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param saveData Storage object from the current Duke instance"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage saveData) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            if (this.command.trim().length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Check done formatting, include which task to complete.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            } else if (Character.getNumericValue(this.command.charAt(5)) \u003e list.size() || Character.getNumericValue(this.command.charAt(5)) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Task not in the list\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            int index \u003d Character.getNumericValue(this.command.charAt(5));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            list.get(index-1).markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            ui.saySomthing(\"Nice! I\u0027ve marked this task as done:\\n\" + list.get(index-1).toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            saveData.completeTask(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            ui.saySomthing(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that return isExit of the current Command"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return boolean object showing if Duke should terminate"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 53
    }
  },
  {
    "path": "src/duke/command/DeleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * DeleteTaskCommand class that represents delete task commands"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class DeleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * DeleteTaskCommand Class constructor"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param command the command from the user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public DeleteTaskCommand(String command) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that execute the current DeleteTaskCommand object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param list TaskList object from the current Duke instance"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param ui    UI object from the current Duke instance"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param saveData Storage object from the current Duke instance"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage saveData) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            if (this.command.trim().length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Check delete formatting, include which task to delete.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            } else if (Character.getNumericValue(this.command.charAt(7)) \u003e list.size() || Character.getNumericValue(this.command.charAt(7)) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Task not in the list\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            int index \u003d Character.getNumericValue(this.command.charAt(7));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            Task toRemove \u003d list.get(index-1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            list.remove(index-1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            ui.saySomthing(\"Noted. I\u0027ve removed this task:\\n\" + toRemove.toString() + \"\\n\" + String.format(\"Now you have %d tasks in the list.\", list.size()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            saveData.deleteTask(index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            ui.saySomthing(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that return isExit of the current Command"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return boolean object showing if Duke should terminate"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 58
    }
  },
  {
    "path": "src/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * ExitCommand class that represents exit commands"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * ExitCommand Class constructor"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param command the command from the user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public ExitCommand(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that execute the current ExitCommand object"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param list TaskList object from the current Duke instance"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param ui    UI object from the current Duke instance"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param saveData Storage object from the current Duke instance"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage saveData) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        ui.byeMessage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that return true"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return boolean object true"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 37
    }
  },
  {
    "path": "src/duke/command/FindTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * FindTaskCommand class that represents find task commands"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class FindTaskCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * FindTaskCommand Class constructor"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param command the command from the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public FindTaskCommand(String command) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that execute the current FindTaskCommand object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param list TaskList object from the current Duke instance"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param ui    UI object from the current Duke instance"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param saveData Storage object from the current Duke instance"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage saveData) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            if (this.command.trim().length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Check find formatting, include keyword\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            String keyword \u003d this.command.substring(5);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            TaskList searchedList \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                if (list.get(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                    searchedList.add(list.get(i));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            ui.showList(searchedList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            ui.saySomthing(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that return isExit of the current Command"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return boolean object showing if Duke should terminate"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 53
    }
  },
  {
    "path": "src/duke/command/ShowListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * ShowListCommand class that represents show list commands"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class ShowListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * ShowListCommand Class constructor"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param command the command from the user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public ShowListCommand(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that execute the current ShowListCommand object"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param list TaskList object from the current Duke instance"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param ui    UI object from the current Duke instance"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param saveData Storage object from the current Duke instance"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage saveData) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        ui.showList(list);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that return isExit of the current Command"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return boolean object showing if Duke should terminate"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 37
    }
  },
  {
    "path": "src/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * Deadline class that represents a deadline task for the user"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    protected boolean isFormatted \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Deadline Class constructor. Create a new Deadline with task description and time to be completed."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param description give the description of the Task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param by    the deadline of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            String[] arr \u003d by.split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            this.date \u003d LocalDate.parse(arr[0]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            this.time \u003d LocalTime.parse(arr[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            this.isFormatted \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            System.out.println(\"Date format wrong! eg. 2020-12-12 18:00\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            this.by \u003d by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * To String method of deadline"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return  a String that describes the deadline task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        if (isFormatted) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \" +this.time.format(DateTimeFormatter.ofPattern(\"hh:mm a\")) + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 49
    }
  },
  {
    "path": "src/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * Event class that represents an event task for the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Event Class constructor. Create a new Event with task description and time of the event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param description give the description of the event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param at    the time of the event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * To String method of event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return  a String that describes the event task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 29
    }
  },
  {
    "path": "src/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * Task class that represents a task for the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Task Class constructor. Create a new Task with task description and isDone status."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param description give the description of the Task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that generate the status icon of whether or not the task is completed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return  a String of the status icon"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that mark the current task as completed"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that get the description of the Task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return  a String that describes the Task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * To String method of Task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return  a String that describes the Task"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 52
    }
  },
  {
    "path": "src/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * TaskList class that represents a TaskList that stores all the Task under Duke"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * TaskList Class constructor. Create a new empty TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * TaskList Class constructor. Create a TaskList with Tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param add a list of Task to be added to TaskList"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public TaskList(List\u003cTask\u003e add) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        this.list \u003d add;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that return the specific task at the given index."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param index index of task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return  a specific task object"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return list.get(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that remove a specific task at the given index."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param index index of task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        list.remove(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that return the number of Task in the TaskList"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return  the number of Task in the TaskList"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Method that add a Task to the TaskList."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param task the Task to be added into the TaskList"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 62
    }
  },
  {
    "path": "src/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " * Todo class that represents a todo task for the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * Todo Class constructor. Create a new Todo task with task description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @param description give the description of the Todo Task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * To String method of Todo Task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     * @return  a String that describes the Todo Task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 24
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void deadlineTest1() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"return book\", \"2020-12-12 14:23\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(\"[D][✘] return book (by: Dec 12 2020 02:23 pm)\", deadline.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void deadlineTest2() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"return book\", \"tomorrow\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(\"[D][✘] return book (by: tomorrow)\", deadline.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void todoTest1() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Todo todo \u003d new Todo(\"return book\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(\"[T][✘] return book\", todo.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void completeTaskTest1() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Todo todo \u003d new Todo(\"return book\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(\"[T][✘] return book\", todo.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        todo.markAsDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(\"[T][✓] return book\", todo.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void taskListTest1() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Todo todo \u003d new Todo(\"return book\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        list.add(todo);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(\"[T][✘] return book\", list.get(0).toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        list.get(0).markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(\"[T][✓] return book\", list.get(0).toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void eventTest1() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Event event \u003d new Event(\"party\", \"2020-12-12\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertEquals(\"[E][✘] party (at: 2020-12-12)\", event.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void checkListCommandTest1() throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            Command c \u003d Parser.parse(\"list\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            assertTrue(c instanceof ShowListCommand);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void checkInvalidCommandTest1() throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            Command c \u003d Parser.parse(\"bananananannaa\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "            assertEquals(\"☹ OOPS!!! wait..... I don\u0027t understand your order my sir.\", e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    public void checkExitCommandTest1() throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        Command c \u003d Parser.parse(\"bye\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "        assertTrue(c instanceof ExitCommand);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 81
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yu-ming-chen"
        },
        "content": "if ! javac -cp ../src -encoding ISO-8859-1 -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "yu-ming-chen": 1,
      "-": 37
    }
  }
]
