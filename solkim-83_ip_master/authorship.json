[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    configFile \u003d rootProject.file(\"config/checkstyle.xml\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 1,
      "-": 46
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * handles the \"bye\" commands"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * Constructor for ByeCommand"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @throws IllegalArgumentException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public ByeCommand(String description) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * terminates the bot"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public void execute(TaskList taskList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        TextUi.printMessage(\"Bye bye! Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 25
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * contains information from the commands"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    private LocalDateTime taskDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * Constructor of Commands"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param taskName"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public Command(String taskName) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * Constructor for Deadline and Event Commands"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param taskName"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param taskDateTime"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public Command(String taskName, LocalDateTime taskDateTime) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        this.taskDateTime \u003d taskDateTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * getter for the name of the tasks"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return task name"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return this.taskName;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * getter for the deadline/ event date and time"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return deadline/ event date and time"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public LocalDateTime getTaskDateTime() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return this.taskDateTime;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * performs actions based on the tasks in the tasklist"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public void execute(TaskList taskList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        throw new UnsupportedOperationException(\"This method is to be implemented by child classes\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 56
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * Deadline class as the child class of Task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * contains the information of deadline such as deadline name"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * and deadline date and time"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class Deadline extends Task implements Serializable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    protected LocalDateTime deadlineDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * Constructor of Deadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param deadlineName"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param deadlineDateTime"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public Deadline(String deadlineName, LocalDateTime deadlineDateTime) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(deadlineName);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        this.deadlineDateTime \u003d deadlineDateTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * formats the user input of the date and time"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return date and time of the deadline task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @throws DateTimeParseException"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public String getDeadlineDateTime() throws DateTimeParseException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy hh:mm a\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return deadlineDateTime.format(outputFormat);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * shows the deadline description, date and time, as well as the icon"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return the string format of deadline"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return \"[D]\" + \"[\" + getStatusIcon() + \"] \" + getDescription() + \"(by: \" + getDeadlineDateTime() + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 48
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * handles the \"deadline\" commands"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * Constructor for DeadlineCommand"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param deadlineName"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param deadlineDateTime"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @throws IllegalArgumentException"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public DeadlineCommand(String deadlineName, LocalDateTime deadlineDateTime) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(deadlineName, deadlineDateTime);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * shows the deadline task added, updates the total number of tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public void execute(TaskList taskList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(this.getTaskName(), this.getTaskDateTime());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        taskList.addTask(newDeadline);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        String deadlineTask \u003d newDeadline.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        TextUi.printNewTasks(deadlineTask);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        TextUi.printTaskSummary(taskList.getTaskLength());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 31
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * handles the \"delete\" commands"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * Constructor for DeleteCommand"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @throws IllegalArgumentException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public DeleteCommand(String description) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(description); //the task number to delete"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * delete the tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public void execute(TaskList taskList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        int taskNumber;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        taskNumber \u003d Integer.parseInt(this.getTaskName());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        Task deletedTask \u003d taskList.getTask(taskNumber);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        taskList.removeTask(deletedTask);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        TextUi.printMessage(\"Noted. I\u0027ve removed this task:\" + deletedTask);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 28
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * handles \"done\" Commands"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * Constructor for DoneCommand"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @throws IllegalArgumentException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public DoneCommand(String description) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(description); //the task number to mark it as done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * marks the tasks as done and shows the done tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public void execute(TaskList taskList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        int taskNumber;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        taskNumber \u003d Integer.parseInt(this.getTaskName());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        Task doneTask \u003d taskList.getTask(taskNumber);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        TextUi.printMessage(\"Nice! I\u0027ve marked this task as done: \" + doneTask);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "solkim-83": 29
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * main place where the actions take place"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * 1. asks for user input with greeting message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * 2. categorise the user input into different tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * 3. print necessary commands/ outputs based on the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * 4. store the inputs in Duke.txt file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param args Unused"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @throws IOException            if ObjectInputStream unable to read inputs"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @throws ClassNotFoundException if ObjectInputStream unable to read Object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static void main(String[] args) throws IOException, ClassNotFoundException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        TextUi.printHello();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        TaskList taskList \u003d Storage.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                Command command \u003d Parser.decideCategory(input);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                command.execute(taskList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                Storage.store(taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            } catch (IllegalArgumentException | DateTimeParseException exception) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                TextUi.printError(exception);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "solkim-83": 43,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * Event class as the child class of Task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * contains information such as the date and time of the event, and event name"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class Event extends Task implements Serializable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    protected LocalDateTime eventDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * Constructor of Event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param eventName"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param eventDateTime"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public Event(String eventName, LocalDateTime eventDateTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(eventName);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        this.eventDateTime \u003d eventDateTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * formats the user input"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return the formatted output of date and time"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @throws DateTimeParseException when the user input format of the date and time is wrong"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public String getEventDateTime() throws DateTimeParseException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\" dd-MMM-yyyy hh:mm a\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return eventDateTime.format(outputFormat);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * shows the event description, event date and time, and event icon"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return the string format of Event"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return \"[E]\" + \"[\" + getStatusIcon() + \"] \" + getDescription() + \"(at:\" + getEventDateTime() + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 46
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * handles the \"event\" commands"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * Constructor for EventCommand"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param deadlineName"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param deadlineDateTime"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @throws IllegalArgumentException"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public EventCommand(String deadlineName, LocalDateTime deadlineDateTime) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(deadlineName, deadlineDateTime);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * shows the event task added, updates the total number of tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public void execute(TaskList taskList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        Event newEvent \u003d new Event(this.getTaskName(), this.getTaskDateTime());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        taskList.addTask(newEvent);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        TextUi.printNewTasks(newEvent.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        TextUi.printTaskSummary(taskList.getTaskLength());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 30
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * handles the \"find\" commands"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * Constructor for FindCommand"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @throws IllegalArgumentException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public FindCommand(String description) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * shows the entire task list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public void execute(TaskList taskList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        String keyWord \u003d this.getTaskName();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        TaskList keyWordTaskList \u003d taskList.getTasksWithKeyWords(keyWord);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        TextUi.printMessage(\"Here are the matching tasks in your list:\\n\" + keyWordTaskList.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        TextUi.printTaskSummary(keyWordTaskList.getTaskLength());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 27
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * handles the \"list\" commands"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * Constructor for ListCommand"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @throws IllegalArgumentException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public ListCommand(String description) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * shows the entire task list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public void execute(TaskList taskList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        TextUi.printMessage(\"Here are the tasks in your list:\\n\" + taskList.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        TextUi.printTaskSummary(taskList.getTaskLength());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 25
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * handles the parsing of information, from user input to different commands"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * parses the user input into commands based on the type of tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return the command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @throws IllegalArgumentException"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static Command decideCategory(String input) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        String category \u003d getCategory(input);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        String description \u003d getDescription(input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        switch (category) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            return parseTodoCommand(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            return parseDeadlineCommand(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            return parseEventCommand(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            return parseDoneCommand(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            return parseDeleteCommand(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            return parseListCommand(description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            return parseByeCommand(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            return parseFindCommand(description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            throw new IllegalArgumentException(\"Invalid input.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * getter for the category/ type of the task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return the type of the task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @throws IllegalArgumentException"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static String getCategory(String input) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        String[] wordsArray \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        String categoryWord \u003d wordsArray[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return categoryWord;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * getter for the description of the task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return the task description"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static String getDescription(String input) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        String[] wordsArray \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        String description \u003d wordsArray.length \u003d\u003d 2 ? wordsArray[1] : \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * parse user input into TodoCommand"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return TodoCommand"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static TodoCommand parseTodoCommand(String description) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            throw new IllegalArgumentException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            return new TodoCommand(description);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * parse user input into DeadlineCommand"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return DeadlineCommand"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static DeadlineCommand parseDeadlineCommand(String description) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        String[] descriptionArray \u003d description.split(\"/by\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        String deadlineName \u003d descriptionArray[0];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        if (deadlineName \u003d\u003d null) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            throw new IllegalArgumentException(\"The description of a deadline cannot be empty. \");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        } else if (descriptionArray.length \u003d\u003d 1) { //no \"/at\" present"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            throw new IllegalArgumentException(\"Invalid input, no deadline stated. \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        } else if (descriptionArray.length \u003e 2) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            throw new IllegalArgumentException(\"Invalid input, multiple deadlines stated. \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\" dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(descriptionArray[1], inputFormat);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            return new DeadlineCommand(deadlineName, deadlineDateTime);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * parse user input into EventCommand"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return EventCommand"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static EventCommand parseEventCommand(String description) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        String[] descriptionArray \u003d description.split(\"/at\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        String eventName \u003d descriptionArray[0];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        if (eventName \u003d\u003d null) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            throw new IllegalArgumentException(\"The description of an event cannot be empty. \");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        } else if (descriptionArray.length \u003d\u003d 1) { //no \"/at\" present"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            throw new IllegalArgumentException(\"Invalid input, no event time stated. \");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        } else if (descriptionArray.length \u003e 2) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            throw new IllegalArgumentException(\"Invalid input, multiple deadlines stated. \");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\" dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            LocalDateTime eventDateTime \u003d LocalDateTime.parse(descriptionArray[1], inputFormat);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            return new EventCommand(eventName, eventDateTime);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * parse user input into DoneCommand"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return DoneCommand"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static DoneCommand parseDoneCommand(String description) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        if (description \u003d\u003d null) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            throw new IllegalArgumentException(\"Not sure which task is to be indicated as done. \");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            return new DoneCommand(description);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * parse user input into DeleteCommand"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return DeleteCommand"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static DeleteCommand parseDeleteCommand(String description) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        if (description \u003d\u003d null) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            throw new IllegalArgumentException(\"Not sure which task is to be deleted. \");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            return new DeleteCommand(description);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * parse user input into ListCommand"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return ListCommand"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static ListCommand parseListCommand(String description) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        if (!description.equals(\"\")) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            throw new IllegalArgumentException(\" Invalid input. \");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            return new ListCommand(null);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * parse user input into ListCommand"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return ByeCommand"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static ByeCommand parseByeCommand(String description) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        if (!description.equals(\"\")) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            throw new IllegalArgumentException(\" Invalid input. \");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            return new ByeCommand(null);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * parse user input into FindCommand"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return FindCommand"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static FindCommand parseFindCommand(String description) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        if (description \u003d\u003d null) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            throw new IllegalArgumentException(\"No keyword found. \");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            return new FindCommand(description);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "solkim-83": 194
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * handles the storing and loading of information (task list)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    private final long serialVersionUID \u003d 1234L;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * loads the tasklist that user keyed in before terminating the bot"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * hence, previous tasklist made available when the user runs the bot"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return the tasklist in Duke.txt file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @throws ClassNotFoundException"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static TaskList load() throws IOException, ClassNotFoundException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            FileInputStream fin \u003d new FileInputStream(\"Duke.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            ObjectInputStream ois \u003d new ObjectInputStream(fin);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            TaskList taskList \u003d (TaskList) ois.readObject();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            ois.close();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            System.out.println(\"Sorry, Duke.txt file does not exist :( \\n Created a new file!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            TaskList newTaskList \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            Storage.store(newTaskList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            return newTaskList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * stores the tasks (user inputs) into Duke.txt file"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static void store(TaskList taskList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            FileOutputStream fos \u003d new FileOutputStream(\"Duke.txt\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            oos.writeObject(taskList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 52
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * contains necessary information of a task (e.g. whether the task is done)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * Constructor of Task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * getter for the icon status."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * tick if the task is done; cross if the task is not done"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return string format of the icon"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * marks the incomplete tasks as done"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * getter for the task name"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return task name"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * shows the task name, taskIcon"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return the string format of the task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + getDescription();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 55
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * stores the tasks in a list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class TaskList implements Serializable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    @SuppressWarnings(\"checkstyle:AbbreviationAsWordInName\")"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    private final long serialVersionUID \u003d 1089785654636785606L;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * prints the tasks in the taskList"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return string format of the task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        String taskListString \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            taskListString +\u003d counter + \". \" + task + \"\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return taskListString;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * returns the total number of tasks in the task list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return the number of tasks"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public int getTaskLength() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * getter for the task of a particular number"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param index of the task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return the task that user wants to retrieve (based on task number)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return taskList.get(index - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * removes the tasks"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public void removeTask(Task task) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        taskList.remove(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * adds the tasks"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * shows the task list of tasks with keywords"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param keyword"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return task list of tasks with keywords"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public TaskList getTasksWithKeyWords(String keyword) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        TaskList newTaskList \u003d new TaskList();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                newTaskList.addTask(task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return newTaskList;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "solkim-83": 82
    }
  },
  {
    "path": "src/main/java/TextUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * deals with the interaction with the user"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * prints necessary messages/ outputs"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * prints hello message with DUKE logo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static void printHello() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        String logo \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        System.out.println(DIVIDER + \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\" + DIVIDER);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * prints messages when new task is added"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static void printNewTasks(String description) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        System.out.println(DIVIDER + \"Got it. I\u0027ve added this task: \\n\" + description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * prints messages as a summary when taskList is updated"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param taskLength"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static void printTaskSummary(int taskLength) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        System.out.println(String.format(\"Now you have %d tasks in the list. \\n\", taskLength) + DIVIDER);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * prints messages when error is encountered"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param exception"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static void printError(Exception exception) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        System.out.println(DIVIDER + \"☹ OOPS!!!\" + exception.getMessage() + \"Try again!\\n\" + DIVIDER);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * prints message for Done, Delete, List, Bye commands"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public static void printMessage(String description) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        System.out.println(DIVIDER + description + \"\\n\" + DIVIDER);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 57
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * Todo as a child class of Task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * contains information such as the task description"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * Constructor for Todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param description of the todo task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * shows the task name, taskIcon"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @return the string format of the todo"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        return \"[T]\" + \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 26
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " * handles the \"todo\" commands"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * Constructor for TodoCommand"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @throws IllegalArgumentException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public TodoCommand(String description) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * shows the task added, updates the total number of tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public void execute(TaskList taskList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        Todo newTask \u003d new Todo(this.getTaskName());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        taskList.addTask(newTask);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        TextUi.printNewTasks(newTask.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        TextUi.printTaskSummary(taskList.getTaskLength());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 27
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public void testGetTaskLength(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        assertEquals(0, new TaskList().getTaskLength());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        List\u003cTask\u003e taskListTest \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        taskListTest.add(new Todo(\"a\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        taskListTest.add(new Todo(\"b\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        taskListTest.add(new Todo(\"c\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        assertEquals(3, taskListTest.size());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public void testGetTask() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        TaskList taskListTest \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        Todo todoA \u003d new Todo(\"a\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        Todo todoB \u003d new Todo(\"b\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        taskListTest.addTask(todoA);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        taskListTest.addTask(todoB);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        assertEquals(todoA, taskListTest.getTask(1));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public void testAddTask() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        TaskList taskListTest \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        Todo todoA \u003d new Todo(\"a\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        Todo todoB \u003d new Todo(\"b\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        taskListTest.addTask(todoA);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        taskListTest.addTask(todoB);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        assertEquals(2, taskListTest.getTaskLength());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 39
    }
  },
  {
    "path": "src/test/java/TextUiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "public class TextUiTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public void testPrintEventWithNoEventTime() throws IllegalArgumentException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            Event eventA \u003d new Event(\"a\", null);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            TextUi.printNewTasks(\"a\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        } catch (IllegalArgumentException exception) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            String errorMessage \u003d \"Invalid input, no event time stated\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            assertEquals(errorMessage, exception.getMessage());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    public void testPrintDeadlineWithNoName() throws IllegalArgumentException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            Deadline deadlineA \u003d new Deadline(null, null);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            TextUi.printNewTasks(\"deadline\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        } catch (IllegalArgumentException exception) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            String errorMessage \u003d \"Invalid input, no deadline stated\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "            assertEquals(errorMessage, exception.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 28
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "deadline read book /by 6pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "event read book /at 4-6pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "remove 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "done"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "hello"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 9
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "#set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "solkim-83"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "if !  ("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "  )"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT 2\u003e\u00261"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 9,
      "-": 31
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/TaskList.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/EventCommand.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/ByeCommand.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/DeleteCommand.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/ListCommand.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/Command.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/TodoCommand.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/DeadlineCommand.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/TodoException.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/DoneCommand.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/Todo.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "solkim-83"
        },
        "content": "../src/main/java/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "solkim-83": 16
    }
  }
]
