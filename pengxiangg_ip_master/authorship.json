[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    Task task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    protected AddCommand(Task task) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        ui.printAddTask(task, tasks.size());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        storage.writeToFile(tasks.getTasks());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 14
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 8
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    protected boolean isTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public Deadline (String description, Date date, boolean isTime) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        this.isTime \u003d isTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public Deadline (String description, Date date, boolean isTime, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        this.isTime \u003d isTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public boolean getIsTime() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return isTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String s \u003d isTime ? \"MMM dd yyyy hh:mma\" : \"MMM dd yyyy\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + new SimpleDateFormat(s).format(date) + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public String toStoredTextString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String s \u003d isTime ? \"MMM dd yyyy hh:mma\" : \"MMM dd yyyy\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return \"D | \" + super.toStoredTextString() + \" | \" + new SimpleDateFormat(s).format(date) + \" | \" + (isTime ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 40
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    int taskNumber;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    protected DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            Task task \u003d tasks.deleteTaskFromList(taskNumber);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            ui.printDeletedTask(task, tasks.size());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            storage.writeToFile(tasks.getTasks());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 17
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    int taskNumber;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    protected DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            Task task \u003d tasks.markTaskDoneInList(taskNumber);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            ui.printMarkedTask(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            storage.writeToFile(tasks.getTasks());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 18
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        taskList \u003d new TaskList(storage.readFile());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        ui.printGreeting();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                String userInput \u003d ui.readInput();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                Command c \u003d new Parser().parse(userInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                ui.printString(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        Duke duke \u003d new Duke(\"/data/duke.txt\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 47,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    protected boolean isTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public Event (String description, Date date, boolean isTime) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        this.isTime \u003d isTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public Event (String description, Date date, boolean isTime, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        this.isTime \u003d isTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public boolean getIsTime() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return isTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String s \u003d isTime ? \"MMM dd yyyy hh:mma\" : \"MMM dd yyyy\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + new SimpleDateFormat(s).format(date) + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public String toStoredTextString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String s \u003d isTime ? \"MMM dd yyyy hh:mma\" : \"MMM dd yyyy\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return \"E | \" + super.toStoredTextString() + \" | \" + new SimpleDateFormat(s).format(date) + \" | \" + (isTime ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 40
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    protected ExitCommand() {}"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        ui.printGoodbye();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 14
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    protected ListCommand(){}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        ui.printList(tasks.getTasks());"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 9
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.security.Key;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    private static final SimpleDateFormat dateTimeFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    private static final SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    protected Parser() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public Command parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String[] userInputArr \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String userKeyword \u003d userInputArr[0];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            switch (userKeyword) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                if (userInputArr.length \u003c 2) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    throw new DukeException(\"Please enter a task number to be selected\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                String taskNumber \u003d userInputArr[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                int taskNumberInt \u003d Integer.parseInt(taskNumber) - 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                if (userKeyword.equals(\"done\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    return new DoneCommand(taskNumberInt);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    return new DeleteCommand(taskNumberInt);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                if (userInputArr.length \u003c 2) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                String todoName \u003d userInput.substring(5);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                ToDo todo \u003d new ToDo(todoName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                return new AddCommand(todo);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                if (userInput.length() \u003c 2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                String deadlineString \u003d userInput.substring(9);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                String[] deadlineArr \u003d deadlineString.split(\" /by \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                if (deadlineArr.length \u003c 2) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The date of a deadline cannot be empty.\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                Date date;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                boolean isTime;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                if (deadlineArr[1].split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    date \u003d dateFormat.parse(deadlineArr[1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    isTime \u003d false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    date \u003d dateTimeFormat.parse(deadlineArr[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    isTime \u003d true;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                Deadline deadline \u003d new Deadline(deadlineArr[0], date, isTime);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                return new AddCommand(deadline);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                if (userInput.length() \u003c 2) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                String eventString \u003d userInput.substring(6);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                String[] eventArr \u003d eventString.split(\" /at \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                if (eventArr.length \u003c 2) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The date of an event cannot be empty.\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                Date dateEvent;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                boolean isTimeEvent;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                if (eventArr[1].split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    dateEvent \u003d dateFormat.parse(eventArr[1]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    isTimeEvent \u003d false;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    dateEvent \u003d dateTimeFormat.parse(eventArr[1]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    isTimeEvent \u003d true;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                Event event \u003d new Event(eventArr[0], dateEvent, isTimeEvent);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                return new AddCommand(event);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            throw new DukeException(\"Please enter a date and time in the format of \\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    + \"dd/MM/2020 HHmm (e.g. 02/12/2020 1530) \""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    + \"or dd/MM/2020 (e.g. 15/02/2020)\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            throw new DukeException(\"Please enter a task number in numeric format\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 109
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    private Path filepath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    private static final SimpleDateFormat dateTimeConverterFormat \u003d new SimpleDateFormat(\"MMM dd yyyy hh:mma\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    private static final SimpleDateFormat dateConverterFormat \u003d new SimpleDateFormat(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        this.filepath \u003d Paths.get(System.getProperty(\"user.dir\") + filepath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public ArrayList\u003cTask\u003e readFile() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        //From https://www.sghill.net/how-do-i-make-cross-platform-file-paths-in-java.html"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        if (!Files.isRegularFile(filepath)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            createFile();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            File f \u003d new File(filepath.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                while (s.hasNext()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    String string \u003d s.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    String[] arr \u003d string.split(\" \\\\| \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    boolean isDone \u003d arr[1].equals(\"1\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    boolean isTime;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    Date date;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    switch (arr[0]) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        tasks.add(new ToDo(arr[2], isDone));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        isTime \u003d arr[4].equals(\"1\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        date \u003d (isTime) ? dateTimeConverterFormat.parse(arr[3]) : dateConverterFormat.parse(arr[3]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        tasks.add(new Deadline(arr[2], date, isTime, isDone));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        isTime \u003d arr[4].equals(\"1\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        date \u003d (isTime) ? dateTimeConverterFormat.parse(arr[3]) : dateConverterFormat.parse(arr[3]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        tasks.add(new Event(arr[2], date, isTime, isDone));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                System.out.println(\"Unable to find file :(\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                createFile();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                System.out.println(\"Unable to parse date :(\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public void createFile() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        if (!Files.isDirectory(filepath.getParent())) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                Files.createDirectory(filepath.getParent());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                System.out.println(\"Failed to create directory\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            Files.createFile(filepath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            System.out.println(\"Failed to create file\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public void writeToFile(ArrayList\u003cTask\u003e arrayList) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filepath.toString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            for (Task task : arrayList) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                fw.write(task.toStoredTextString() + \"\\n\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            System.out.println(\"Unable to write to file\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 94
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author CS2103T-week2-project-task3"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "//Reused from https://nus-cs2103-ay2021s1.github.io/website/schedule/week2/project.html"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public String toStoredTextString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String done \u003d (isDone) ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return done + \" | \" + description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 15,
      "-": 20
    }
  },
  {
    "path": "src/main/java/TaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "public class TaskException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    TaskException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 11
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    protected TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    protected TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public Task markTaskDoneInList(int taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        if (taskNumber \u003c 0 || taskNumber \u003e tasks.size()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            throw new DukeException(\"Please enter a valid task number\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            Task task \u003d tasks.get(taskNumber);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            task.markDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public Task deleteTaskFromList(int taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        if (taskNumber \u003c 0 || taskNumber \u003e tasks.size()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            throw new DukeException(\"Please enter a valid task number\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            Task task \u003d tasks.get(taskNumber);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            tasks.remove(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 46
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public String toStoredTextString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return \"T | \" + super.toStoredTextString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 20
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    Scanner scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    protected Ui() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public void printGreeting() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String intro1 \u003d \"Hello! I\u0027m Duke \\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String intro2 \u003d \"What can I do for you? \\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        //String greeting \u003d addDividers(formatString(intro1) + formatString(intro2));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String greeting \u003d formatString(intro1 + intro2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    private String addDividers(String s) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String divider \u003d \"____________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String dividerFormatted \u003d String.format(\"%\" + (5 + divider.length()) + \"s\", divider);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return dividerFormatted + s + dividerFormatted;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public String formatString(String s) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        Scanner scanner \u003d new Scanner(s);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            String formattedLine \u003d String.format(\"%\" + (6 + line.length()) + \"s\", line);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            output \u003d output + formattedLine + \"\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return addDividers(output);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public void printString(String s) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        System.out.println(formatString(s));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public void printAddTask(Task task, int size) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String s \u003d \"Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                task.toString() + \u0027\\n\u0027 +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                \"Now you have \" + size + \" tasks in the list. \\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        System.out.println(formatString(s));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public void printGoodbye() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String goodbye \u003d \"Bye. Hope to see you again soon! \\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        System.out.println(formatString(goodbye));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public void printDeletedTask(Task task, int size) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String success \u003d \"Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                + \"Now you have \" + size + \" tasks in the list. \\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        System.out.println(formatString(success));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public void printMarkedTask(Task task) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String success \u003d \"Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                + task + \"\\n\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        System.out.println(formatString(success));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public void printList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String printedList \u003d \"\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        if (list.size() \u003e 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                String lineItem \u003d (i + 1) + \". \" + list.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                printedList \u003d printedList + lineItem;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            printedList \u003d \"List is empty \\n\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        System.out.println(formatString(printedList));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 90
    }
  },
  {
    "path": "text-ui-test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "T | 0 | borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "E | 1 | project meeting | Dec 05 2020 04:00pm | 1"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "deadline return book /by 02/12/2020"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "event project meeting /at 05/12/2020 1600"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "done"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "done a"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "delete"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "delete a"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 14
    }
  },
  {
    "path": "text-ui-test/input2.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 2
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "del data\\duke.txt"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "java -classpath ..\\bin Duke \u003c input2.txt \u003e\u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 5,
      "-": 20
    }
  }
]
