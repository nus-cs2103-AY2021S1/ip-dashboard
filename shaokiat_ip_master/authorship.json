[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "clean{"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    delete \u0027data\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 20,
      "-": 44
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "T|1|read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "D|0|buy book |2020-10-10 12:12"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 2
    }
  },
  {
    "path": "ip_data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "T|1|buy things"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "T|0|helloworld"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "D|0|123 |2020-10-10 10:10"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 3
    }
  },
  {
    "path": "output/artifacts/ip_jar/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "T|0|hello"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 1
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.InvalidFileException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * Duke class which initialize a Duke object that handles"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * all of the bot logic sequences."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * Duke constructor to take initialize Storage, TaskList and Ui."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param filePath path to saved file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        } catch (InvalidFileException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            ui.showErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * Main method for Duke to start running its processors."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String run(String input) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        String result \u003d ui.showLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            Command c \u003d Parser.parseCommand(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            return result + c.execute(tasks, ui, storage) + \"\\n\" + ui.showLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            return ui.showErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String showWelcomeMessage() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return this.ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return run(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 57
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 9
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().showWelcomeMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 32
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        String welcomeMessage \u003d duke.showWelcomeMessage();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                DialogBox.getDukeDialog(welcomeMessage, dukeImage));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 57
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * Parser class to parse user input into respective command lines."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * Parse user input into useful commands."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param userInput String input by user through the Ui."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @return respective command that will be executed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @throws DukeException exceptions thrown by parsing user inputs."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public static Command parseCommand(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        if (userInput.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            return new DoneCommand(userInput);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        } else if (userInput.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            return new DeleteCommand(userInput);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        } else if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            return new ExitCommand(userInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        } else if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            return new ListCommand(userInput);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        } else if (userInput.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            return new FindCommand(userInput);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            return addCommand(userInput);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * Differentiate user input into commands that add their respective"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * tasks into the task list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param command user input."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @return respective Command."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @throws DukeException unable to read user input."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public static Command addCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            return new TodoCommand(command);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            return new DeadlineCommand(command);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            return new EventCommand(command);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry,\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                    + \" but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 61
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.InvalidFileException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * Storage class that contains save and load methods to keep task list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * updated."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public final String path;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    private DateTimeFormatter formatter \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public Storage(String storagePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        this.path \u003d storagePath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * Save task list into path specified."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param taskList task list to be saved."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @throws InvalidFileException failed to save."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public void save(TaskList taskList) throws InvalidFileException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        ArrayList\u003cTask\u003e currTaskList \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        File saved \u003d new File(this.path);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(saved));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            for (Task t : currTaskList) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                bw.write(t.getState());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                bw.newLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                bw.flush();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            throw new InvalidFileException(\"Failed to save\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * Load saved file into task list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @return TaskList"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @throws InvalidFileException failed to load, read or create new file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public TaskList load() throws InvalidFileException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        File dir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        if (!dir.exists()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            dir.mkdir();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            File saved \u003d new File(this.path);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            if (!saved.exists()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                    saved.createNewFile();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                } catch (IOException exception) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                    exception.printStackTrace();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(saved));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            String currLine;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            while ((currLine \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                String[] readLine \u003d currLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                boolean taskDone \u003d readLine[1].equals(\"1\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                Task newTask \u003d new Task(\"\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                String type \u003d readLine[0];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                    newTask \u003d new Todo(readLine[2]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                    newTask \u003d new Deadline(readLine[2],"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                            LocalDateTime.parse(readLine[3], formatter));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                    newTask \u003d new Event(readLine[2],"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                            LocalDateTime.parse(readLine[3], formatter));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                taskList.addTask(newTask);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                if (taskDone) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                    newTask.markAsDone();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            throw new InvalidFileException(\"Failed to load\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 114
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * Ui class to handle the user input and user interface."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * Includes method that will prompt the user for their input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    private static String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String showLine() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return (\"________________________ \\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * Display welcome message with duke logo to user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String showWelcomeMessage() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return \"Hello from\\n\" + logo"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                + \"\\nHello! I\u0027m Duke \\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String showExitMessage() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return (\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String showErrorMessage(String message) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String printMessage(String message) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return (message);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "shaokiat": 52
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.InvalidFileException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.InvalidInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * Abstract Command class which executes specific commands."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * Takes in input from the Parser."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public final String input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public Command(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * Execute specific commands."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param tasks TaskList of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param ui Ui object from the Ui class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param storage Storage object from the Storage class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @throws InvalidInputException when the input cannot be read."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @throws InvalidFileException when the file cannot be read or written."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            throws InvalidInputException, InvalidFileException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * To indicate if command is an exit command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @return true if command exits Duke and false otherwise."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 38
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.InvalidFileException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.InvalidInputException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * Deadline Command class to execute command that adds a deadline to"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * the TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public static final String MESSAGE_PARSE_ERROR \u003d \"Invalid date and time format.\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            + \"Please enter date and time in the format: yyyy-MM-dd HH:mm\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public DeadlineCommand(String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * Execute a Deadline Command to add a Deadline into TaskList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param tasks TaskList of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param ui Ui object from the Ui class."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param storage Storage object from the Storage class."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @throws InvalidInputException rejects empty deadline or incorrect date and time format."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @throws InvalidFileException throws an error when method fails to save."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            throws InvalidInputException, InvalidFileException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        if (super.input.length() \u003c\u003d 8) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            throw new InvalidInputException(\"☹ OOPS!!! The description of a deadline cannot be empty.\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            String[] split \u003d super.input.substring(9).split(\"/by \", 2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            LocalDateTime date \u003d LocalDateTime.parse(split[1], formatter);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            Task deadline \u003d new Deadline(split[0], date);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            tasks.addTask(deadline);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            return ui.printMessage(MESSAGE_SUCCESS + deadline.toString()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                    + \"\\nNow you have \" + tasks.taskListSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            throw new InvalidInputException(MESSAGE_PARSE_ERROR);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 62
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.InvalidFileException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.InvalidInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * Delete Command class to execute command that deletes a task in"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * the TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public DeleteCommand(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * Execute a Delete Command to delete a task in the task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param tasks TaskList of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param ui Ui object from the Ui class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param storage Storage object from the Storage class."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @throws InvalidInputException incorrect input after delete command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @throws InvalidFileException failed to save file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            throws InvalidInputException, InvalidFileException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        if (super.input.length() \u003c\u003d 7) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            throw new InvalidInputException("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                    \"☹ OOPS!!! The description of a delete operation cannot be empty / invalid index.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        int index \u003d Integer.parseInt(super.input.substring(7)) - 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        Task taskDeleted \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        tasks.removeTask(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return ui.printMessage(MESSAGE_SUCCESS + taskDeleted);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 48
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.InvalidFileException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.InvalidInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * DoneCommand class to execute command that mark a task in the task list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * as done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public DoneCommand(String input) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * Execute a command to mark a task as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param tasks TaskList of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param ui Ui object from the Ui class."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param storage Storage object from the Storage class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @throws InvalidInputException incorrect input following the done command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @throws InvalidFileException failed to save file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            throws InvalidInputException, InvalidFileException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        if (super.input.length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            throw new InvalidInputException("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                    \"☹ OOPS!!! Please choose a task to be completed.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        int index \u003d Integer.parseInt(super.input.substring(5)) - 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        Task taskDone \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        tasks.markAsDone(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return ui.printMessage(MESSAGE_SUCCESS + taskDone);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 49
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.InvalidFileException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.InvalidInputException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * EventCommand class to execute command that add an event into"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * the TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public static final String MESSAGE_PARSE_ERROR \u003d \"Invalid date and time format.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            + \"Please enter date and time in the format: yyyy-MM-dd HH:mm\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public EventCommand(String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * Execute the command to add an event into the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param tasks TaskList of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param ui Ui object from the Ui class."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param storage Storage object from the Storage class."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @throws InvalidInputException incorrect input or wrong format for date and time."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @throws InvalidFileException failed to save file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            throws InvalidInputException, InvalidFileException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        if (super.input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            throw new InvalidInputException("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                    \"☹ OOPS!!! The description of a event cannot be empty.\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            String[] split \u003d super.input.substring(6).split(\"/at \", 2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            LocalDateTime date \u003d LocalDateTime.parse(split[1], formatter);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            Task event \u003d new Event(split[0], date);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            tasks.addTask(event);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            return ui.printMessage(MESSAGE_SUCCESS + event.toString() + \"\\nNow you have \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                    + tasks.taskListSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            throw new InvalidInputException(MESSAGE_PARSE_ERROR);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 61
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.InvalidFileException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.InvalidInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * ExitCommand class to execute command to quit and exit Duke."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting...\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public ExitCommand(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * Execute the exit process."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param tasks TaskList of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param ui Ui object from the Ui class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param storage Storage object from the Storage class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @throws InvalidFileException failed to save file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            throws InvalidInputException, InvalidFileException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return ui.showExitMessage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 38
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.InvalidFileException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.InvalidInputException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * FindCommand class to execute command that search for tasks in the"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * task list using keywords."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    private static final String TASK_FOUND_MESSAGE \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    private static final String NO_TASK_FOUND \u003d \"There are no matching task!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public FindCommand(String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * Execute the find command to search the task list for task with similar keywords."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param tasks TaskList of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param ui Ui object from the Ui class."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param storage Storage object from the Storage class."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @throws InvalidInputException incorrect input after find command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @throws InvalidFileException failed to save file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            throws InvalidInputException, InvalidFileException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        if (super.input.length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            throw new InvalidInputException(\"Please select task to find!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        String keywords \u003d super.input.substring(5);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        List\u003cTask\u003e tasksFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        for (Task t: tasks.getTaskList()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            if (t.getWordsInTask().contains(keywords)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                tasksFound.add(t);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        if (tasksFound.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            return ui.printMessage(NO_TASK_FOUND);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            String result \u003d ui.printMessage(TASK_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            for (int j \u003d 0; j \u003c tasksFound.size(); j++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                result \u003d result + ui.printMessage((j + 1) + \".\" + tasksFound.get(j));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 65
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.InvalidInputException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * ListCommand class to execute command that list out all tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * in the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public ListCommand(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * Execute the command to list out all tasks in a specific format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param tasks TaskList of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param ui Ui object from the Ui class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param storage Storage object from the Storage class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            throws InvalidInputException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        if (tasks.taskListSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            return ui.printMessage(\"List is empty! Start adding to your task list!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            String result \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.taskListSize(); i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                result \u003d result + \"\\n\" + ui.printMessage((i + 1) + \".\" + tasks.getTask(i));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 42
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.InvalidFileException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.InvalidInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * TodoCommand class to execute command that adds a todo to"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * the TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public TodoCommand(String input) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * Execute command that adds a todo task into the task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param tasks TaskList of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param ui Ui object from the Ui class."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @param storage Storage object from the Storage class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @throws InvalidInputException incorrect input with the todo command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @throws InvalidFileException failed to save file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            throws InvalidInputException, InvalidFileException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        if (super.input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            throw new InvalidInputException("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                    \"☹ OOPS!!! The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        Task todoTask \u003d new Todo(super.input.substring(5));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        tasks.addTask(todoTask);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return ui.printMessage(MESSAGE_SUCCESS + todoTask.toString()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                + \"\\nNow you have \" + tasks.taskListSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 49
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * DukeException class to customize exceptions for Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 10
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * InvalidFileException is thrown when the file fails to save or load."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class InvalidFileException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public InvalidFileException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 10
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * InvalidInputException is thrown when a command has an incorrect"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * input."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public InvalidInputException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 11
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * Deadline class which extends from the Task class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " * User can add a Deadline with specific date and time using this class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    protected LocalDateTime date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public Deadline(String description, LocalDateTime date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * Method call for a standardise way of storing the Deadline task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     * @return data of the deadline which can be read in the Storage Class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String getState() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return \"D|\" + (this.isDone ? \"1\" : \"0\") + \"|\" + this.description"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                + \"|\" + this.date.toString().replace(\"T\", \" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by:\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm a\")) + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 32
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    protected LocalDateTime date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public Event(String description, LocalDateTime date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String getState() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return \"E|\" + (this.isDone ? \"1\" : \"0\") + \"|\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                + this.description + \"|\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                + this.date.toString().replace(\"T\", \" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return \"[E]\" + super.toString()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                + \"(at: \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm a\")) + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 28
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String getState() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public List\u003cString\u003e getWordsInTask() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return Arrays.asList(description.split(\" \"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 35
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public TaskList(TaskList list) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        this.taskList \u003d list.getTaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public void markAsDone(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        taskList.get(index).markAsDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public int taskListSize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return this.taskList.get(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public void showAllTasks() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        String allTasks \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            System.out.println((i + 1) + \".\" + taskList.get(i));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 47
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String getState() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return \"T|\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                + (this.isDone ? \"1\" : \"0\") + \"|\" + this.description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 19
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 19
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public void testParseCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            Parser.parseCommand(\"event read book /at 2020-10-10 20:00\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            assertTrue(true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public void testParseError() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            Parser.parseCommand(\"even read book 2020-10-10 20:00\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "            assertTrue(true);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 32
    }
  },
  {
    "path": "src/test/java/duke/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public void constructorTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        Deadline deadlineTask \u003d new Deadline(\"read book \","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                LocalDateTime.parse(\"2020-10-10 10:10\", formatter));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        assertEquals(\"[D][\\u2718] read book (by:10/10/2020 10:10 AM)\", deadlineTask.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    void getState() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        Deadline deadlineTask \u003d new Deadline(\"read book \","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "                LocalDateTime.parse(\"2020-10-10 10:10\", formatter));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        assertEquals(\"D|0|read book |2020-10-10 10:10\", deadlineTask.getState());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 28
    }
  },
  {
    "path": "src/test/java/duke/tasks/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    public void constructorTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        Todo todoTask \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        assertEquals(\"[T][\\u2718] read book\", todoTask.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    void getState() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        Todo todoTask \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        assertEquals(\"T|0|read book\", todoTask.getState());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    void doneTask() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        Todo todoTask \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        todoTask.markAsDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "        assertEquals(\"[T][\\u2713] read book\", todoTask.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaokiat": 29
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaokiat"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaokiat"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "shaokiat": 4,
      "-": 20
    }
  }
]
