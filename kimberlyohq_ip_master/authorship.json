[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    TODO(\"todo\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private String value;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private Command(String value) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        this.value \u003d value;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private static Map\u003cString, Command\u003e commandsMap;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        commandsMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        for(Command command : Command.values()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            commandsMap.put(command.value, command);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public static Command getCommand(String command) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return Command.commandsMap.get(command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return this.value;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 37
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    String deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    DeadlineTask(String description, String deadline) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + description + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    void greet() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    void addTask(String task, String date, TaskType taskType) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        switch(taskType) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            case TODO: {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                t \u003d new TodoTask(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            case DEADLINE: {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                t \u003d new DeadlineTask(task, date);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            case EVENT: {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                t \u003d new EventTask(task, date);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                throw new DukeException(\"Invalid Task Type\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n \" + t);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    void listTasks() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i ++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            System.out.println(i + \". \" + tasks.get(i - 1));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    void completeTask(int index) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        Task completedTask \u003d tasks.get(index -1 );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        completedTask.markAsDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n \" + completedTask);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    void deleteTask (int index) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        Task deletedTask \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        tasks.remove(index - 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + deletedTask);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    void exit() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    void initializeChatbot() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        boolean hasEnded \u003d false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        while (!hasEnded) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            Command command \u003d Command.getCommand(sc.next());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                //Check if command is invalid"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                if (command \u003d\u003d null ) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    throw new InvalidCommandException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                switch(command) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    case BYE: {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        exit();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        hasEnded \u003d true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    case LIST: {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        listTasks();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    case TODO: {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        String task \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        if (task.isEmpty()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                            throw new InvalidInputException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        addTask(task,null,TaskType.TODO);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    case DEADLINE: {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        String[] task \u003d sc.nextLine().trim().split(\" /by \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        if (task[0].isEmpty()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                            throw new InvalidInputException(\"☹ OOPS!!! The description of a deadline task cannot be empty.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        if (task.length \u003c 2) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                            throw new InvalidInputException(\"☹ OOPS!!! The deadline of a deadline task cannot be empty.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        addTask(task[0], task[1], TaskType.DEADLINE);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    case EVENT: {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        String[] task \u003d sc.nextLine().trim().split(\" /at \");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        if (task[0].isEmpty()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                            throw new InvalidInputException(\"☹ OOPS!!! The description of an event task cannot be empty.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        if (task.length \u003c 2) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                            throw new InvalidInputException(\"☹ OOPS!!! The timing of an event task cannot be empty.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        addTask(task[0], task[1], TaskType.EVENT);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    case DONE: {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        int index \u003d sc.nextInt();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        if (index \u003e tasks.size() || index \u003c 1) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                            throw new InvalidIndexException(\"☹ OOPS!!! There is no such task.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        completeTask(index);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    case DELETE: {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        int index \u003d sc.nextInt();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        if (index \u003e tasks.size() || index \u003c 1) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                            throw new InvalidIndexException(\"☹ OOPS!!! There is no such task.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        deleteTask(index);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "                System.out.println(ex);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        duke.initializeChatbot();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 5,
      "kimberlyohq": 141
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 11
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    String timing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    EventTask(String description, String timing) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + description + \" (at: \" + timing + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 14
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 7
    }
  },
  {
    "path": "src/main/java/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    InvalidIndexException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 6
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    InvalidInputException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 23
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 5
    }
  },
  {
    "path": "src/main/java/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    TodoTask(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "kimberlyohq": 8
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kimberlyohq"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "kimberlyohq": 1
    }
  }
]
