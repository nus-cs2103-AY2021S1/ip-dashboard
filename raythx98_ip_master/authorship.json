[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    archiveBaseName \u003d \"Launcher\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 21,
      "-": 43
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "![Grandma application](https://i.imgur.com/Ge20QYq.png)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "### Customised for young punks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "The grandma task mananger application caters to the younger generation using crude language and gen Y humour."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "### Help - view the list of available commands."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    help"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "### Adding \"to do\" task - adds a to do task into grandma."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    todo {description} #{tag} /by DDMMYY HHMM"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003e**entries are case sensitive**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "### Adding \"deadline\" task - adds a task with deadline into grandma."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    deadline {description} #{tag} /by DDMMYY HHMM"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003e**entries are case sensitive**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "### Adding \"event\" task - adds an event task into grandma."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    event {description} #{tag} /at DDMMYY HHMM"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003e**entries are case sensitive**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "### Delete task - delete a task from grandma."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    delete {task number}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003e*task number can be viewed using list*"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "### Complete task - mark a task as complete in grandma."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    done {task number}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003e*task number can be viewed using list*"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "### List tasks - view the list of tasks in grandma."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    list"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "### Find tasks - view the list of tasks in grandma that contains the keyword."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    find {keyword}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003e*the find function is case insensitive*"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "### Exit grandma - Save information and leave the application."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    bye"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "## Examples"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "todo something #fun"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    Got it, here yur task bij [T] [✘] something #fun"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "deadline homework #sad /by 311220 2021"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    Got it, here yur task bij [D] [✘] homework #sad (by: Dec 31 2020, 8:21 pm)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raythx98"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    okcan mark completed: [T] [✓] something #fun Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raythx98"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    okcan deleted: [D] [✘] homework #sad (by: Dec 31 2020, 8:21 pm) Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "raythx98"
        },
        "content": "list"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    Here yur tasks faggit: 1. [T] [✓] something #fun Now you have 2 tasks in the list"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "raythx98"
        },
        "content": "### Contact raythx98@gmail.com or @raythx98 regarding any enquiries"
      }
    ],
    "authorContributionMap": {
      "raythx98": 71,
      "-": 12
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.javafx.Main;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * The launcher class kick starts the application."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 11
    }
  },
  {
    "path": "src/main/java/raythx/grandma/Grandma.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents the grandma bot."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Grandma {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * initialises Grandma and other class variables."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param filePath specified filepath to store the task information."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Grandma(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            ui.getError(exception);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            tasks \u003d storage.newTasks();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Takes a string as an input from user and returns string to output in Grandma."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param input string input from user."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return string to be shown on the screen."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            ui.resetTextOnScreen();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            Command command \u003d parser.parse(tasks, input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return ui.getTextOnScreen();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return ui.getError(exception);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (Exception exception) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return ui.getUncheckedException();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Get greeting message from ui."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return a greeting message String."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String getGreeting() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return ui.greetingMessage();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 66
    }
  },
  {
    "path": "src/main/java/raythx/grandma/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents an abstract Add Command from which other Add Commands inherit."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public abstract class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected final String taskDescriptionDeadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public AddCommand(String taskDescriptionDeadline) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.taskDescriptionDeadline \u003d taskDescriptionDeadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 17
    }
  },
  {
    "path": "src/main/java/raythx/grandma/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.MissingDetailsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.WrongDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents a Add Deadline Command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class AddDeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public AddDeadlineCommand(String taskDescriptionDeadline) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(taskDescriptionDeadline);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String[] descriptionSplit \u003d taskDescriptionDeadline.split(\" /by \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String[] hashtagSplit \u003d descriptionSplit[0].split(\" #\", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (hashtagSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new MissingDetailsException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else if (descriptionSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            task \u003d new Deadline(hashtagSplit[0], hashtagSplit[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else if (descriptionSplit.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            task \u003d new Deadline(hashtagSplit[0], hashtagSplit[1], descriptionSplit[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new WrongDescriptionException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui.appendMessage(\"Got it, here yur task bij\\n    \" + task.toString()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 38
    }
  },
  {
    "path": "src/main/java/raythx/grandma/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.MissingDetailsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.WrongDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents a Add Event Command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class AddEventCommand extends AddCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public AddEventCommand(String taskDescriptionDeadline) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(taskDescriptionDeadline);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String[] descriptionSplit \u003d taskDescriptionDeadline.split(\" /at \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String[] hashtagSplit \u003d descriptionSplit[0].split(\" #\", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (hashtagSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new MissingDetailsException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else if (descriptionSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            task \u003d new Event(hashtagSplit[0], hashtagSplit[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else if (descriptionSplit.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            task \u003d new Event(hashtagSplit[0], hashtagSplit[1], descriptionSplit[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new WrongDescriptionException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui.appendMessage(\"Got it, here yur task bij\\n    \" + task.toString()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 38
    }
  },
  {
    "path": "src/main/java/raythx/grandma/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.MissingDetailsException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.WrongDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents a Add To do Command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class AddTodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public AddTodoCommand(String taskDescriptionDeadline) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(taskDescriptionDeadline);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String[] descriptionSplit \u003d taskDescriptionDeadline.split(\" /by \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String[] hashtagSplit \u003d descriptionSplit[0].split(\" #\", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (hashtagSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new MissingDetailsException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else if (descriptionSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            task \u003d new ToDo(hashtagSplit[0], hashtagSplit[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else if (descriptionSplit.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            task \u003d new ToDo(hashtagSplit[0], hashtagSplit[1], descriptionSplit[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new WrongDescriptionException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui.appendMessage(\"Got it, here yur task bij\\n    \" + task.toString()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 38
    }
  },
  {
    "path": "src/main/java/raythx/grandma/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents an abstract Command from which other Commands inherit."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Executes the given command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param tasks tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param storage the storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 22
    }
  },
  {
    "path": "src/main/java/raythx/grandma/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents a Delete Command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private final int deleteIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public DeleteCommand (int deleteIndex) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.deleteIndex \u003d deleteIndex;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui.appendMessage(\"okcan deleted:\\n    \" + tasks.removeTask(deleteIndex)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 21
    }
  },
  {
    "path": "src/main/java/raythx/grandma/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents a Done Command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private final int doneIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public DoneCommand (int doneIndex) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.doneIndex \u003d doneIndex;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui.appendMessage(\"okcan mark completed:\\n    \" + tasks.getTask(doneIndex).markAsDone()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 21
    }
  },
  {
    "path": "src/main/java/raythx/grandma/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents a Exit Command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui.appendFarewellMessage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        PauseTransition delay \u003d new PauseTransition(Duration.seconds(5));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        delay.setOnFinished(event -\u003e Platform.exit());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        delay.play();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 24
    }
  },
  {
    "path": "src/main/java/raythx/grandma/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents a Find Command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private String keyWord;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public FindCommand (String keyWord) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        assert keyWord !\u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui.appendMessage(\"Got it, here yur search results bij: \\n\" + tasks.findTask(keyWord));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 22
    }
  },
  {
    "path": "src/main/java/raythx/grandma/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents a Help Command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui.appendHelpMessage();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 14
    }
  },
  {
    "path": "src/main/java/raythx/grandma/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents a List Command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui.appendMessage(\"Here yur tasks faggit: \\n\" + tasks.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 14
    }
  },
  {
    "path": "src/main/java/raythx/grandma/exception/AdditionalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Checked exception as a result of an additional arguments."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class AdditionalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public AdditionalArgumentException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(\"Wtf why got extra stuff one... Wake up ur bloody idea...\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 10
    }
  },
  {
    "path": "src/main/java/raythx/grandma/exception/DateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Checked exception as a result of invalid date and time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class DateTimeException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public DateTimeException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(\"Error when loading date and time details...\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 10
    }
  },
  {
    "path": "src/main/java/raythx/grandma/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Checked exceptions for all errors as a result of Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 10
    }
  },
  {
    "path": "src/main/java/raythx/grandma/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Checked exception as a result of an empty description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public EmptyDescriptionException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(\"Empty description la... Wut u wan me do with dis grr...\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 10
    }
  },
  {
    "path": "src/main/java/raythx/grandma/exception/InsufficientArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Checked exception as a result of insufficient arguments."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class InsufficientArgumentException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public InsufficientArgumentException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(\"Not enuff inputs leh... Wake up ur bloody idea...\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 10
    }
  },
  {
    "path": "src/main/java/raythx/grandma/exception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Checked exception as a result of an invalid index."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public InvalidIndexException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(\"Wrung index la... Choose a task tat exist pls grr...\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 10
    }
  },
  {
    "path": "src/main/java/raythx/grandma/exception/MissingDetailsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Checked exception as a result of missing description or tag."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class MissingDetailsException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public MissingDetailsException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(\"Sumtin wong with yur description or #tag..?\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 10
    }
  },
  {
    "path": "src/main/java/raythx/grandma/exception/ParseDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Checked exception as a result of invalid date and time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class ParseDateTimeException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public ParseDateTimeException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(\"Cannot understand ur weird dinosaur timing lah...\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 10
    }
  },
  {
    "path": "src/main/java/raythx/grandma/exception/TaskLoadingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Checked exception as a result of being unable to load task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class TaskLoadingException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public TaskLoadingException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(\"Task loading error...\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 10
    }
  },
  {
    "path": "src/main/java/raythx/grandma/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Checked exception as a result of an unknown command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public UnknownCommandException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(\"Wtf yu typing to mi? Even grandma type bettur than yu\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 10
    }
  },
  {
    "path": "src/main/java/raythx/grandma/exception/WrongArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Checked exception as a result of a wrong argument."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class WrongArgumentException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public WrongArgumentException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(\"Wrong input la... Wut u wan me do with dis grr...\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 10
    }
  },
  {
    "path": "src/main/java/raythx/grandma/exception/WrongDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Checked exception as a result of a wrong description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class WrongDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public WrongDescriptionException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(\"Wrong description la... Wut u wan me do with dis grr...\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 10
    }
  },
  {
    "path": "src/main/java/raythx/grandma/javafx/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.javafx;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            exception.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 57
    }
  },
  {
    "path": "src/main/java/raythx/grandma/javafx/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.javafx;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.Grandma;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Grandma grandma \u003d new Grandma(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setGrandma(grandma);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            stage.getIcons().add(new Image(\"/images/BombIcon.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            stage.setTitle(\"Grandma\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            exception.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 35
    }
  },
  {
    "path": "src/main/java/raythx/grandma/javafx/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.javafx;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.Grandma;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Grandma grandma;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Image grandmaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaGrandma.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void setGrandma(Grandma d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        grandma \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                DialogBox.getDukeDialog(d.getGreeting(), grandmaImage)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String response \u003d grandma.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                DialogBox.getDukeDialog(response, grandmaImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 51
    }
  },
  {
    "path": "src/main/java/raythx/grandma/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.command.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.command.AddTodoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.command.HelpCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.command.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.AdditionalArgumentException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.InsufficientArgumentException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.UnknownCommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.WrongArgumentException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.TaskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Deals with making sense of user inputs."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Parses the user data by making processing input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param tasks List of tasks at the moment."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param input String to be parsed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Command parse(TaskList tasks, String input) throws DukeException, NumberFormatException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String[] splitBySpace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (input.isEmpty()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        switch (splitBySpace[0]) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (splitBySpace.length \u003e 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new AdditionalArgumentException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (splitBySpace.length \u003e 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new AdditionalArgumentException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (splitBySpace.length \u003e 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new AdditionalArgumentException();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (splitBySpace.length \u003c 2) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new InsufficientArgumentException();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            int doneIndex;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                doneIndex \u003d Integer.parseInt(splitBySpace[1]) - 1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            } catch (NumberFormatException exception) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new WrongArgumentException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (doneIndex \u003c 0 || doneIndex \u003e tasks.getSize() - 1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new InvalidIndexException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return new DoneCommand(doneIndex);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (splitBySpace.length \u003c 2) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new InsufficientArgumentException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            int deleteIndex;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                deleteIndex \u003d Integer.parseInt(splitBySpace[1]) - 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            } catch (NumberFormatException exception) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new WrongArgumentException();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (deleteIndex \u003c 0 || deleteIndex \u003e tasks.getSize() - 1) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new InvalidIndexException();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return new DeleteCommand(deleteIndex);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (splitBySpace.length \u003c 2) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return new FindCommand(splitBySpace[1]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (splitBySpace.length \u003c 2) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                return new AddTodoCommand(splitBySpace[1]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (splitBySpace.length \u003c 2) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                return new AddDeadlineCommand(splitBySpace[1]);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (splitBySpace.length \u003c 2) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                return new AddEventCommand(splitBySpace[1]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new UnknownCommandException();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 110
    }
  },
  {
    "path": "src/main/java/raythx/grandma/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.UnknownCommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.task.ToDo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Deals with the manipulation of loading and saving data."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static final String TODO \u003d \"T\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static final String DEADLINE \u003d \"D\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static final String EVENT \u003d \"E\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Constructor for Storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param filepath path of file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public TaskList newTasks() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Save current information of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void save() throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (tasks.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            Writer.overwrite(filepath, tasks.getTask(0).encodeTask());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            for (int i \u003d 1; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                Writer.writeOn(filepath, \"\\n\" + tasks.getTask(i).encodeTask());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Load information of tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return tasks loaded."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public TaskList load() throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        File myObj \u003d new File(filepath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        Scanner myReader \u003d new Scanner(myObj);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        while (myReader.hasNextLine()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            String taskInformation \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            String[] taskInformationSplit \u003d taskInformation.split(\"\\\\|\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            assert !taskInformationSplit[0].isEmpty();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            switch (taskInformationSplit[0]) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                tasks.addTask(new ToDo(taskInformationSplit));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                tasks.addTask(new Deadline(taskInformationSplit));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                tasks.addTask(new Event(taskInformationSplit));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new UnknownCommandException();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        myReader.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 80
    }
  },
  {
    "path": "src/main/java/raythx/grandma/storage/Writer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Writer {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Overwrites the current filepath."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param filepath path of file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param input the content to be overwritten with."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static void overwrite(String filepath, String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            FileWriter writer \u003d new FileWriter(new File(filepath), false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            writer.write(input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            File file \u003d new File(\"data\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            boolean fileCreated \u003d file.mkdir();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (fileCreated) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                overwrite(filepath, input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            exception.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Appends on the current filepath."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param filepath path of file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param input the content to append."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static void writeOn(String filepath, String input) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            FileWriter writer \u003d new FileWriter(new File(filepath), true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            writer.write(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            File file \u003d new File(\"data\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            boolean fileCreated \u003d file.mkdir();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (fileCreated) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                overwrite(filepath, input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            exception.printStackTrace();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 53
    }
  },
  {
    "path": "src/main/java/raythx/grandma/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.DateTimeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.ParseDateTimeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.TaskLoadingException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents a specific task which has a deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected LocalDate date \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected LocalTime time \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Constructor for Deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param period date and time of task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @throws ParseDateTimeException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Deadline(String description, String taskTag, String period) throws ParseDateTimeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(description, taskTag);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d DEADLINE_TAG;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String[] splitPeriod \u003d period.split(\" \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            date \u003d LocalDate.parse(splitPeriod[0], DateTimeFormatter.ofPattern(DATE_FORMAT));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (splitPeriod.length \u003e 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                this.time \u003d LocalTime.parse(splitPeriod[1], DateTimeFormatter.ofPattern(TIME_FORMAT));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new ParseDateTimeException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (DateTimeParseException exception) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new ParseDateTimeException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Constructor for Deadline."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Deadline(String description, String taskTag) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(description, taskTag);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d DEADLINE_TAG;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Constructor for Deadline."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param taskInformation a varargs of taskInformation."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Deadline(String ... taskInformation) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(taskInformation[2], taskInformation[3]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d DEADLINE_TAG;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (taskInformation.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            //Nothing else to handle"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else if (taskInformation.length \u003d\u003d 6) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.date \u003d LocalDate.parse(taskInformation[4]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.time \u003d LocalTime.parse(taskInformation[5]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new TaskLoadingException();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (taskInformation[1].equals(TICK_BINARY)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.markAsDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Encodes the task to be saved upon exit."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return encoded task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String encodeTask() throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (time \u003d\u003d null) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            assert date \u003d\u003d null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return super.encodeTask();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else if (time !\u003d null) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "raythx98"
        },
        "content": "          assert date !\u003d null;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return super.encodeTask() + \"|\" + date + \"|\" + time;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new DateTimeException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (time \u003d\u003d null) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            assert date \u003d\u003d null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return \"[\" + tag + \"] \" + super.toString();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return \"[\" + tag + \"] \" + super.toString() + \"\\n            (by: \""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    + date.format(DateTimeFormatter.ofPattern(OUTPUT_DATE_FORMAT))"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    + \", \" + time.format(DateTimeFormatter.ofPattern(OUTPUT_TIME_FORMAT)) + \")\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 104
    }
  },
  {
    "path": "src/main/java/raythx/grandma/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.DateTimeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.ParseDateTimeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.TaskLoadingException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents a specific task which is an event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected LocalDate date \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected LocalTime time \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Constructor for Event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param period date and time of task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @throws ParseDateTimeException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Event(String description, String taskType, String period) throws ParseDateTimeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d EVENT_TAG;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String[] splitPeriod \u003d period.split(\" \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            date \u003d LocalDate.parse(splitPeriod[0], DateTimeFormatter.ofPattern(DATE_FORMAT));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (splitPeriod.length \u003e 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                this.time \u003d LocalTime.parse(splitPeriod[1], DateTimeFormatter.ofPattern(TIME_FORMAT));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new ParseDateTimeException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (DateTimeParseException exception) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new ParseDateTimeException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Constructor for Event."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Event(String description, String taskType) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d EVENT_TAG;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Constructor for Event."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param taskInformation a varargs of taskInformation"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Event(String ... taskInformation) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(taskInformation[2], taskInformation[3]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d EVENT_TAG;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (taskInformation.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            //Nothing else to handle"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else if (taskInformation.length \u003d\u003d 6) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.date \u003d LocalDate.parse(taskInformation[4]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.time \u003d LocalTime.parse(taskInformation[5]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new TaskLoadingException();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (taskInformation[1].equals(TICK_BINARY)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.markAsDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Encodes the task to be saved upon exit."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return encoded task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String encodeTask() throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (date \u003d\u003d null \u0026\u0026 time \u003d\u003d null) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            assert date \u003d\u003d null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return super.encodeTask();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else if (time !\u003d null) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            assert date !\u003d null;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return super.encodeTask() + \"|\" + date + \"|\" + time;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new DateTimeException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (time \u003d\u003d null) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            assert date \u003d\u003d null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return \"[\" + tag + \"] \" + super.toString();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return \"[\" + tag + \"] \" + super.toString() + \"\\n            (at: \""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    + date.format(DateTimeFormatter.ofPattern(OUTPUT_DATE_FORMAT))"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    + \", \" + time.format(DateTimeFormatter.ofPattern(OUTPUT_TIME_FORMAT)) + \")\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 104
    }
  },
  {
    "path": "src/main/java/raythx/grandma/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static final String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static final String CROSS \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static final int TICK_BINARY \u003d 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static final int CROSS_BINARY \u003d 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static final String TODO_TAG \u003d \"T\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static final String DEADLINE_TAG \u003d \"D\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static final String EVENT_TAG \u003d \"E\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static final String TIME_FORMAT \u003d \"HHmm\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static final String DATE_FORMAT \u003d \"ddMMyy\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static final String OUTPUT_TIME_FORMAT \u003d \"h:mm a\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public static final String OUTPUT_DATE_FORMAT \u003d \"MMM dd yyyy\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected String tag \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected String taskTag;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Constructor for tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Task(String description, String taskTag) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        this.taskTag \u003d taskTag;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String getTaskTag() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return taskTag;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        //return tick or X symbols"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return isDone ? TICK : CROSS;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public int getBinaryStatus() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return isDone ? TICK_BINARY : CROSS_BINARY;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Marks the task as done, and returns the String representation of the task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return a String representation of the task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String markAsDone() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return toString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String encodeTask() throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return tag + \"|\" + getBinaryStatus() + \"|\" + getDescription() + \"|\" + getTaskTag();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * String representation of the task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return String representation of the task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription() + \" #\" + getTaskTag();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 77
    }
  },
  {
    "path": "src/main/java/raythx/grandma/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Removes a task from List of tasks based on the index."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param index Index of task to be removed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return String which represents the task removed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String removeTask (int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Returns a string representation of the list of all tasks that match the key word."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return String representation of the list of all tasks that match the key word"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String findTask(String keyWord) throws InvalidIndexException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        TaskList matchedTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        for (Task i: tasks) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            String taskDescription \u003d i.getDescription().toLowerCase();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            String taskTag \u003d i.getTaskTag().toLowerCase();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            String lowerCaseTaskDescription \u003d keyWord.toLowerCase();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (taskDescription.contains(lowerCaseTaskDescription) || taskTag.contains(lowerCaseTaskDescription)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                matchedTasks.addTask(i);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (matchedTasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return matchedTasks.toString();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Returns a string representation of the tasks."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return String representation of the tasks."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String task \u003d \"\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (getSize() \u003e\u003d 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            task \u003d \"    1. \" + tasks.get(0).toString();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            for (int i \u003d 2; i \u003c\u003d getSize(); i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                task \u003d task + \"\\n    \" + i + \". \" + tasks.get(i - 1).toString();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            task \u003d \"empty\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 77
    }
  },
  {
    "path": "src/main/java/raythx/grandma/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.DateTimeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.ParseDateTimeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.TaskLoadingException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Represents a specific task which is a to do."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected LocalDate date \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    protected LocalTime time \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Constructor for Todo."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param period date and time of task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @throws ParseDateTimeException"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public ToDo(String description, String taskType, String period) throws ParseDateTimeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d TODO_TAG;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String[] splitPeriod \u003d period.split(\" \", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            date \u003d LocalDate.parse(splitPeriod[0], DateTimeFormatter.ofPattern(DATE_FORMAT));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            if (splitPeriod.length \u003e 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                this.time \u003d LocalTime.parse(splitPeriod[1], DateTimeFormatter.ofPattern(TIME_FORMAT));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                throw new ParseDateTimeException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } catch (DateTimeParseException exception) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new ParseDateTimeException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Constructor for Deadline."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public ToDo(String description, String taskType) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d TODO_TAG;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Constructor for Deadline."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param taskInformation a varargs of taskInformation."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public ToDo(String ... taskInformation) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        super(taskInformation[2], taskInformation[3]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tag \u003d TODO_TAG;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (taskInformation.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            //Nothing else to handle"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else if (taskInformation.length \u003d\u003d 6) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.date \u003d LocalDate.parse(taskInformation[4]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.time \u003d LocalTime.parse(taskInformation[5]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new TaskLoadingException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (taskInformation[1].equals(TICK_BINARY)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            this.markAsDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Encodes the task to be saved upon exit."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return encoded task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String encodeTask() throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (time \u003d\u003d null) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            assert date \u003d\u003d null;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return super.encodeTask();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else if (time !\u003d null) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            assert date !\u003d null;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return super.encodeTask() + \"|\" + date + \"|\" + time;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            throw new DateTimeException();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        if (time \u003d\u003d null) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            assert date \u003d\u003d null;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return \"[\" + tag + \"] \" + super.toString();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            return \"[\" + tag + \"] \" + super.toString() + \"\\n            (by: \""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    + date.format(DateTimeFormatter.ofPattern(OUTPUT_DATE_FORMAT))"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                    + \", \" + time.format(DateTimeFormatter.ofPattern(OUTPUT_TIME_FORMAT)) + \")\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 105
    }
  },
  {
    "path": "src/main/java/raythx/grandma/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": " * Deals with the user interface."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private String textOnScreen \u003d \"\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Returns a greeting message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return greeting message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String greetingMessage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return \"Hello mah dud, itza ol\u0027 grandma robo speakin :D \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + appendHelpMessage()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"\\nwhat duh hell du yu wan?\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * appends a farewell message to textOnScreen."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void appendFarewellMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        textOnScreen +\u003d \"Never come back,\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"dun wanna see yu ever agin.\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"Exiting in 5... \\n\\nminutes? hours? idk you\u0027ll find out \\nlul GTFO\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * append and return a help message to textOnScreen."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return help message."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String appendHelpMessage() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        textOnScreen +\u003d \"These r wud u tell your ol\u0027 grandma here...\\nYu wan add more tasks\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"        todo {description} #{tag} \\n                /by {DDMMYY HHmm}\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"        deadline {description} #{tag} \\n                /by {DDMMYY HHmm}\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"        event {description} #{tag} \\n                /at {DDMMYY HHmm}\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"Yu wan remove tasks coz incompetent\\n        delete {task number}\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"Yu wan mark task as completed\\n        done {task number}\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"Yu wan see ur tasks coz u forget\\n        list\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"Yu wan find ur tasks coz u noob\\n        find {keyword}\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"Yu wanna gtfo\\n        bye\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return textOnScreen;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * reset textOnScreen to an empty String."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void resetTextOnScreen() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        textOnScreen \u003d \"\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Appends a string to textOnScreen."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param message the string to be appended."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void appendMessage(String message) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        textOnScreen +\u003d message;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Return textOnScreen."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return String textOnScreen."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String getTextOnScreen() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return textOnScreen;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Returns the error message."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @param exception the Exception to be handled."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return the error message."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String getError(Exception exception) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return exception.getMessage();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Return an error message."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * @return Error message."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public String getUncheckedException() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        return \"Wtf kind of error u giving me\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 91
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"386.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-radius: 10; -fx-border-radius: 10; -fx-background-color: #DCDCDC; -fx-border-style: solid; -fx-border-color: grey;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003cFont name\u003d\"Calibri\" size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" style\u003d\"fx-background-radius: 100;\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "raythx98": 29
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.effect.DropShadow?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: DIMGRAY;\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\" fx:controller\u003d\"raythx.grandma.javafx.MainWindow\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"6.0\" layoutY\u003d\"553.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-color: GAINSBORO; -fx-background-radius: 10; -fx-border-radius: 10; -fx-border-style: solid; -fx-border-width: 1;\" AnchorPane.bottomAnchor\u003d\"6.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003cFont name\u003d\"Calibri\" size\u003d\"16.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"337.0\" layoutY\u003d\"553.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"56.0\" style\u003d\"-fx-background-color: dimgrey; -fx-background-radius: 10; -fx-border-radius: 10;\" text\u003d\"Send\" textFill\u003d\"WHITE\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003ceffect\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003cDropShadow height\u003d\"10.0\" radius\u003d\"4.5\" width\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003c/effect\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003cFont name\u003d\"Calibri Bold\" size\u003d\"16.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"7.0\" layoutY\u003d\"8.0\" prefHeight\u003d\"538.0\" prefWidth\u003d\"386.0\" style\u003d\"-fx-background-color: LIGHTPINK; -fx-background-radius: 10; -fx-border-radius: 10; -fx-border-style: solid;\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"400.0\" prefWidth\u003d\"386.0\" style\u003d\"-fx-background-color: lightpink; -fx-border-radius: 0; -fx-background-radius: 0;\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raythx98"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raythx98"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "raythx98": 37
    }
  },
  {
    "path": "src/test/java/raythx/grandma/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private final PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author raythx98-reused"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    //Reused from https://www.baeldung.com/java-testing-system-out-println with minor modifications"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            task \u003d new ToDo(\"Something\", \"Cute\", \"311220 2029\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            exception.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public void tearDown() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        System.setOut(standardOut);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Something."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void addTask_emptyList_createdCorrectly() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String expectedResult \u003d task.toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String actualResult \u003d tasks.getTask(0).toString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Something."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void deleteTask_singleList_deletedCorrectly() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String actualResult \u003d tasks.removeTask(0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String expectedResult \u003d task.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Something."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void getSize_emptyList_retrievedCorrectly() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        int actualResult \u003d tasks.getSize();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        int expectedResult \u003d 0;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 57,
      "-": 17
    }
  },
  {
    "path": "src/test/java/raythx/grandma/ui/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raythx98"
        },
        "content": "package raythx.grandma.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raythx98"
        },
        "content": "import raythx.grandma.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raythx98"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private final PrintStream standardOut \u003d System.out;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author raythx98-reused"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    //Reused from https://www.baeldung.com/java-testing-system-out-println with minor modifications"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        System.setOut(new PrintStream(outputStreamCaptor));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.appendMessage(\"This is a test string.\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void tearDown() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        System.setOut(standardOut);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Something."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void resetTextOnScreen_testString_resetCorrectly() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui.resetTextOnScreen();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String expectedResult \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String actualResult \u003d ui.getTextOnScreen();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Something."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void appendHelpMessage_testString_appendCorrectly() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        ui.appendHelpMessage();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String expectedResult \u003d \"This is a test string.\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"These r wud u tell your ol\u0027 grandma here...\\nYu wan add more tasks\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"        todo {description} #{tag} \\n                /by {DDMMYY HHmm}\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"        deadline {description} #{tag} \\n                /by {DDMMYY HHmm}\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"        event {description} #{tag} \\n                /at {DDMMYY HHmm}\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"Yu wan remove tasks coz incompetent\\n        delete {task number}\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"Yu wan mark task as completed\\n        done {task number}\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"Yu wan see ur tasks coz u forget\\n        list\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"Yu wan find ur tasks coz u noob\\n        find {keyword}\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raythx98"
        },
        "content": "                + \"Yu wanna gtfo\\n        bye\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String actualResult \u003d ui.getTextOnScreen();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raythx98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     * Something."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raythx98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    public void getError_invalidIndexException_messagePrinted() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String actualResult \u003d ui.getError(new InvalidIndexException());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        String expectedResult \u003d new InvalidIndexException().getMessage();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raythx98"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raythx98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raythx98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raythx98": 62,
      "-": 14
    }
  }
]
