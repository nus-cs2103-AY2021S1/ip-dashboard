[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    mainClassName \u003d \"Main\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "run {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 19,
      "-": 43
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "D | true | homework  | 2020-01-02"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "T | false | work "
      }
    ],
    "authorContributionMap": {
      "divakarmal": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "Duke is an application to manage tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "### Add Task "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "Add todo, deadline and event tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "### View Tasks "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "View all tasks in task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "### Mark task as done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "Mark specified task as done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "### Delete Task "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "Delete specified task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "### Find Task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "Find task with keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "### Save Task list "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "Task list is automatially saved on any change."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "### `list` - Lists all the tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "### `done \u003cindex\u003e` - Marks task at given index done"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "### `delete \u003cindex\u003e` - Deletes task at given index"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "### `todo \u003cdescription\u003e` - Adds a todo task to the list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "### `deadline \u003cdescription\u003e /by \u003cdate\u003e` - Adds a deadline task to the list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "### `event \u003cdescription\u003e /by \u003cdate\u003e` - Adds an event task to the list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "### `find \u003ckeyword\u003e` - Shows tasks with the given keyword"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "### `bye` - Exits and saves the tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "Describe action and its outcome."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "`keyword (optional arguments)`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "`outcome`"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 33,
      "-": 17
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private final String[] inputLine;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private boolean bye \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * Constructor for Command object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param inputLine"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public Command(String[] inputLine){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.inputLine \u003d inputLine;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public boolean isBye(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return this.bye;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * method to execute the commands as inputted by user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param tasks TaskList object which contains the list of tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param ui Ui object for ui"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param storage Storage object for reading and writing onto hard disk"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @throws DukeException for invalid commands"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @throws IOException for reading and writing"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        switch (inputLine[0]){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            case \"bye\" :"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                this.bye \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                return ui.bye();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            case \"list\" :"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                return ui.uiForList(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            case \"done\" : {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                int index;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                if (inputLine.length \u003c 2) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    return new DukeException(\"\", DukeExceptionType.NO_DESCRIPTION, Commands.DONE).getMessage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    index \u003d Integer.parseInt(inputLine[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    return new DukeException(\"\", DukeExceptionType.WRONG_DESCRIPTION, Commands.DONE).getMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                if (index \u003c 1 || index \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    return new DukeException(\"\", DukeExceptionType.WRONG_DESCRIPTION, Commands.DONE).getMessage();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                tasks.markDone(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                return ui.uiForDone(tasks.getTask(index));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            case \"delete\" : {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                int index;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                if (inputLine.length \u003c 2) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    return new DukeException(\"\", DukeExceptionType.NO_DESCRIPTION, Commands.DELETE).getMessage();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    index \u003d Integer.parseInt(inputLine[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    return new DukeException(\"\", DukeExceptionType.WRONG_DESCRIPTION, Commands.DELETE).getMessage();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                if (index \u003c 1 || index \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    return new DukeException(\"\", DukeExceptionType.WRONG_DESCRIPTION, Commands.DELETE).getMessage();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                Task task \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                tasks.deleteTask(index);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                return ui.uiForDelete(tasks, task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            case \"todo\" : {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                if (inputLine.length \u003c 2) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    return new DukeException(\"todo needs description\", DukeExceptionType.NO_DESCRIPTION, Commands.TODO).getMessage();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    StringBuilder description \u003d new StringBuilder();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    for(int i \u003d 1; i \u003c inputLine.length; i++){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        description.append(inputLine[i]).append(\" \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    Task task \u003d new TodoTask(description.toString(), false);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    tasks.addTask(task);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    storage.save(tasks);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    return ui.uiForAdd(tasks,task);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            case \"deadline\" : {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                StringBuilder description \u003d new StringBuilder();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                StringBuilder deadline \u003d new StringBuilder();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                if (inputLine.length \u003c 2) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    throw new DukeException(\"\", DukeExceptionType.NO_DESCRIPTION, Commands.DEADLINE);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                int index \u003d 1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                while(!inputLine[index].equals(\"/by\")){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    description.append(inputLine[index]).append(\" \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    if(index \u003d\u003d inputLine.length){"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        return new DukeException(\"\", DukeExceptionType.EMPTY_TIME, Commands.DEADLINE).getMessage();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    if(description.length() \u003c 1){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        return new DukeException(\"\", DukeExceptionType.NO_DESCRIPTION, Commands.DEADLINE).getMessage();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                while(index \u003c inputLine.length){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    deadline.append(inputLine[index]).append(\" \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                if(deadline.length() \u003c 1){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    return new DukeException(\"\", DukeExceptionType.EMPTY_TIME, Commands.DEADLINE).getMessage();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                deadline.deleteCharAt(deadline.length() - 1);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    task \u003d new DeadlineTask(description.toString(),false, deadline.toString());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    tasks.addTask(task);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    storage.save(tasks);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    return ui.uiForAdd(tasks, task);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                } catch (DateTimeParseException e){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    System.err.println(\"Please use yyyy-mm-dd\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    return new DukeException(\"Please use dd-MM-yyyy\", DukeExceptionType.WRONG_TIME, Commands.DEADLINE).getMessage();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            case \"event\" :{"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                StringBuilder description \u003d new StringBuilder();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                StringBuilder time \u003d new StringBuilder();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                if (inputLine.length \u003c 2) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    return new DukeException(\"\", DukeExceptionType.NO_DESCRIPTION, Commands.EVENT).getMessage();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                int index \u003d 1;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                while(!inputLine[index].equals(\"/at\")){"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    description.append(inputLine[index]).append(\" \");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    if(index \u003d\u003d inputLine.length){"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        return new DukeException(\"\", DukeExceptionType.EMPTY_TIME, Commands.EVENT).getMessage();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                if(description.length() \u003c 1){"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    return new DukeException(\"\", DukeExceptionType.NO_DESCRIPTION, Commands.EVENT).getMessage();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                while(index \u003c inputLine.length){"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    time.append(inputLine[index]).append(\" \");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                if(time.length() \u003c 1){"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    return new DukeException(\"\", DukeExceptionType.EMPTY_TIME, Commands.EVENT).getMessage();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                time.deleteCharAt(time.length() - 1);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    task \u003d new EventTask(description.toString(),false, time.toString());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    tasks.addTask(task);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    storage.save(tasks);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    return ui.uiForAdd(tasks, task);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                } catch (DateTimeParseException e){"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    System.err.println(\"Please use yyyy-mm-dd format for time\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    return new DukeException(\"Please use dd-MM-yyyy HHmm format\", DukeExceptionType.WRONG_TIME, Commands.EVENT).getMessage();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            case \"find\" : {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                if (inputLine.length \u003c 2) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    return new DukeException(\"find needs keyword\", DukeExceptionType.NO_DESCRIPTION, Commands.FIND).getMessage();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    StringBuilder description \u003d new StringBuilder();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    for (int i \u003d 1; i \u003c inputLine.length; i++) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        description.append(inputLine[i]).append(\" \");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    List\u003cTask\u003e filteredList \u003d tasks.search(description.toString());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    return ui.uiForFind(new TaskList(filteredList));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                return new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", DukeExceptionType.INVALID_TASK).getMessage();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 179
    }
  },
  {
    "path": "src/main/java/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public enum Commands {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    FIND"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 8
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public class DeadlineTask extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private LocalDate deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * Constructor for deadline task object"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param name description of the task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param isCompleted is it completed or not"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param deadline deadline for the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public DeadlineTask(String name, boolean isCompleted, String deadline) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        super(name,isCompleted);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.deadline \u003d LocalDate.parse(deadline);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String getType(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return this.deadline.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 30
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        assert text !\u003d null : \"Text should not be null\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        assert img !\u003d null : \"Image should not be null\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        assert text !\u003d null : \"Text should not be null\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        assert img !\u003d null : \"Image should not be null\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 63
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * Constructor for a Duke object"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param filePath"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public Duke(String filePath){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        } catch(IOException e){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * runs the process until terminated"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        boolean isBye \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        while (!isBye){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                String command \u003d ui.read();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                Command cmd \u003d Parser.parse(command);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                cmd.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                isBye \u003d cmd.isBye();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            } catch (DukeException e){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                System.err.println(e);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public static void main(String[] args) throws IOException, DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        new Duke(\"./data\\\\duke.txt\").run();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    String getResponse(String input) throws IOException, DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        assert input !\u003d null : \"Input shouldn\u0027t be empty\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        Command cmd \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return cmd.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 61,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    protected DukeExceptionType exceptionType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    protected Commands command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * constructor for a DukeException object"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param e error name"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param exceptionType type of error"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public DukeException(String e, DukeExceptionType exceptionType){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        super(e);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.exceptionType \u003d exceptionType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * constructor for a DukeException object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param e error name"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param exceptionType type of error"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param command the command which results in the error"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public DukeException(String e, DukeExceptionType exceptionType, Commands command) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        super(e);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.exceptionType \u003d exceptionType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        String error \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        switch (exceptionType){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            case EMPTY_TIME:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                switch (command){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        error+\u003d \"Deadline task requires a time\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        error+\u003d \"Event task requires a time\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            case INVALID_TASK:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                error+\u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            case NO_DESCRIPTION:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        error+\u003d \"Deadline task description cannot be empty\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    case TODO:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        error+\u003d \"Todo task description cannot be empty\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        error+\u003d \"Event task description cannot be empty\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    case DONE:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        error+\u003d \"Done task description cannot be empty\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            case WRONG_DESCRIPTION:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        error+\u003d \"Deadline command must be followed by \u0027/by\u0027 and then a deadline\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        error+\u003d \"Event command must be followed by \u0027/at\u0027 and then a duration\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    case DONE:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        error+\u003d \"Such a task does not exist, please only follow done by the serial number of the task to be marked done\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                    case DELETE:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        error+\u003d \"Such a task does not exist, please only follow delete by the serial number of the task to be marked deleted\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return error;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 80
    }
  },
  {
    "path": "src/main/java/DukeExceptionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public enum DukeExceptionType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    NO_DESCRIPTION,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    INVALID_TASK,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    WRONG_DESCRIPTION,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    EMPTY_TIME,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    WRONG_TAG,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    TOO_FEW_ARGUMENTS,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    WRONG_TIME,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    NO_MATCHING_TASKS"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 10
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public class EventTask extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * Constructor for event task object"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param name description of the task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param isCompleted is it completed or not"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param time time for the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public EventTask(String name, boolean isCompleted, String time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        super(name, isCompleted);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.time \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String getType(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return this.time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 30
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private void handleUserInput() throws IOException, DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.setDuke(new Duke(\"./data\\\\duke.txt\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        if(input.equals(\"bye\")){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 57
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * method to split user input into an array separated by spaces"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param command user input"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @return returns a command object with input as the required String array"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public static Command parse(String command){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return new Command(command.split(\" \"));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 10
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * constructor for Storage object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param filePath path of the data file"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     public Storage(String filePath){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "         this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * method to read from hard disk"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @return reads the txt file amd converts it into a list of taskd"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @throws IOException if file/path does not exist"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     public List\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "         List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "         File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "         if(!file.exists()){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "             return taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "         }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "         BufferedReader reader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "         String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "         while(line !\u003d null){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "             String[] splitLine \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "             switch (splitLine[0]){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                 case \"E\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                     taskList.add(new EventTask(splitLine[2], Boolean.parseBoolean(splitLine[1]),splitLine[3]));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                     break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                 case \"T\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                     taskList.add(new TodoTask(splitLine[2], Boolean.parseBoolean(splitLine[1])));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                     break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                 case \"D\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                     taskList.add(new DeadlineTask(splitLine[2], Boolean.parseBoolean(splitLine[1]),splitLine[3]));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                     break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "             }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "             line \u003d reader.readLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "         }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "         return taskList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * method to save tasks to hard disk"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param tasks writes the tasks onto the txt file"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @throws IOException if file/path does not exist"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     public void save(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "         String line \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "         File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "         if(!file.exists()){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "             file.createNewFile();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "         }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "         BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "         for(Task task : tasks.getList()){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "             String type \u003d task.getType();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "             switch (type){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                 case \"E\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                 case \"D\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                     line \u003d type + \" | \" + task.isDone() +\" | \" + task.getName() + \" | \" + task.getTime();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                     break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                 case \"T\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                     line \u003d type + \" | \" + task.isDone() +\" | \" + task.getName();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                     break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "             }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "             writer.write(line);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "             writer.newLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "             line\u003d\"\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "         }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "         writer.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 78
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private boolean isCompleted;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * constructor for Task object"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param name description of the task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param isCompleted boolean which tells if task is completed or not"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public Task(String name, boolean isCompleted){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.isCompleted \u003d isCompleted;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * method to mark a task as done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public void markDone(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.isCompleted \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String getIcon(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        String icon \u003d isCompleted ? \"\\u2713\" : \"\\u2717\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return String.format(\"[%s]\", icon);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String getName(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String getType(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String isDone(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return String.valueOf(this.isCompleted);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    };"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return this.getIcon() + this.name;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 48
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public class TaskList{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private final List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * Constructor for a TaskList object"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * Constructor for a TaskList object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.taskList \u003d tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * method to get the list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @return returns the List of tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public List\u003cTask\u003e getList(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * method to get a Task from the list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param index index of the task to be fetched"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @return returns the required task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public Task getTask(int index){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return this.taskList.get(index - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * method for marking a task as done"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param index index of task to be marked done"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public void markDone(int index){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.taskList.get(index - 1).markDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * method to add a task to the list"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param task task to be added"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public void addTask(Task task){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        assert task !\u003d null : \"Task should not be null\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "  "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * method to delete a task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param index index of the task to be deleted"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public void deleteTask(int index){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        this.taskList.remove(index - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * method to get size"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @return returns the size of the task list"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public List\u003cTask\u003e search(String keyword) throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        List\u003cTask\u003e tasksWithKeyword \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        for(Task task: this.taskList){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            if(task.getName().contains(keyword)){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                tasksWithKeyword.add(task);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        if(tasksWithKeyword.isEmpty()){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            throw new DukeException(\"no such matching tasks\", DukeExceptionType.NO_MATCHING_TASKS);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        } else {return tasksWithKeyword;}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 85
    }
  },
  {
    "path": "src/main/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public void taskList_addTask_taskAdded() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        list.addTask(new TodoTask(\"description\", false));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        assertEquals(list.getSize(), 1);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        assertEquals(list.getTask(1).toString(), \"[T][✗] description\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public void taskList_deleteTask_taskDeleted() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        var list \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        list.addTask(new TodoTask(\"task1\", false));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        list.addTask(new TodoTask(\"task2\", false));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        list.deleteTask(1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        assertEquals(list.getSize(), 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public void taskList_addDeadlineTask_taskAdded() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        list.addTask(new DeadlineTask(\"description\", false, \"2019-05-06\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        assertEquals(list.getSize(), 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        assertEquals(list.getTask(1).toString(), \"[D][✗] description(by: May 6 2019)\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "divakarmal"
        },
        "content": " */"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 35
    }
  },
  {
    "path": "src/main/java/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * constructor for a Todo object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param name description of the todo task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     * @param isComplete is it completed or not"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public TodoTask(String name, boolean isComplete) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        super(name, isComplete);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String getType(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 20
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String uiForAdd(TaskList tasks, Task task){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task:\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + \"\\n       \" + task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + String.format(\"\\n   Now you have %d task(s) in the list.\", tasks.getSize());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public void greet(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        String greeting \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                \"\\n   Hi, I\u0027m Duke!\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + \"\\n   How can I help you today?\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String bye(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        String output \u003d \"\\n   \" + \"Bye. Hope to see you again soon!\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + \"\\n   \";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String uiForDone(Task task){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        String output \u003d \"\\n   \" + \"Nice! I\u0027ve marked this task as done:\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + \"\\n   \" + task;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String uiForDelete(TaskList tasks, Task task){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        String output \u003d\"\\n   \" + \"Noted. I\u0027ve removed this task: \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + \"\\n   \" + task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                + String.format(\"\\n   Now you have %d task(s) in the list.\", tasks.getSize());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String uiForList(TaskList tasks){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        if(tasks.getSize() \u003d\u003d 0){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            System.out.println(\"\\n   \" + \"You have no tasks\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            return \"no tasks\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            StringBuilder output \u003d new StringBuilder(\"   \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                output.append(\"\\n    \").append(i + 1).append(\". \").append(tasks.getTask(i + 1));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            System.out.println(output);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            return output.toString();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String uiForFind(TaskList tasks){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        if(tasks.getSize() \u003d\u003d 0){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            return (\"\\n   \" + \"You have no tasks\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            StringBuilder output \u003d new StringBuilder(\"\\n Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                output.append(\"\\n    \").append(i + 1).append(\". \").append(tasks.getTask(i + 1));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            output.append(\"\\n   \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            System.out.println(output);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            return output.toString();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String uiForError(){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    public String read(){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 92
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "divakarmal"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "todo work"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "deadline homework /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "divakarmal"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "divakarmal": 1,
      "-": 20
    }
  }
]
