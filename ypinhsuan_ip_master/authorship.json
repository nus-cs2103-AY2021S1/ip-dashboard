[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.0.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    configFile \u003d rootProject.file(\u0027config/checkstyle/checkstyle.xml\u0027)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 20,
      "-": 43
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "Duke is a Personal Assistant Chatbot that helps users keep track of tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "1. Add new tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "2. List out all the tasks"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "3. Delete tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "4. Mark tasks as done"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "5. Find tasks with specified keyword"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "6. Sort events or deadlines in ascending order by date"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "### `help` - Shows help page"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "Displays a help page with all available commands."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "Example usage: "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "### `todo` - Add new todo"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "Add a new todo with the details given."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "Example usage: "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "`todo tutorial`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "### `event` - Add new event"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "Add a new event with the details and time given."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "Example usage: "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "`event meeting /at 2020/10/09 1800 to 2020/10/09 2000`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "### `deadline` - Add new deadline"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "Add a new deadline with the details and time given."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "Example usage: "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "`event meeting /by 2020/10/09 1800`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "### `done` - Mark task as done"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "Mark task with the specified number as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "Example usage: "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "### `delete` - Delete a task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "Delete task with the specified number."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "Example usage: "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "### `list` - List out all tasks"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "List out all tasks stored."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "Example usage: "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "### `find` - Find tasks by keyword"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "Find all tasks with the specified keyword."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "Example usage: "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "`find book`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "### `sort` - List out the tasks after sorting"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "Sorts events or deadlines in ascending order by date"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "Example usage: "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "`sort event`"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 73,
      "-": 11
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * The Duke program chat bot which can help users keep track of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /** The path where the tasks are saved. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private static final Path PATH \u003d java.nio.file.Paths.get(\".\", \"data.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /** Creates and initializes Duke. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.storage \u003d new Storage(PATH);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Sets the ui of Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param dialogContainer The dialogContainer for Ui."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void setUi(VBox dialogContainer) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.ui \u003d new Ui(dialogContainer);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Gets the response from Duke."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param input Input of user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return The response of Duke."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public boolean getResponse(String input) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            c.execute(taskList, storage, ui);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            return c.isExit();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /** Greets the user. */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assert ui !\u003d null : \"Ui not specified!\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 55,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * Represent exceptions specific to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public DukeException (String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 10
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 32
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.command.SortCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * The Parser class takes in inputs from the user and convert into commands."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private static final List\u003cString\u003e DATE_FORMATS \u003d Arrays.asList(\"yyyy/MM/dd HHmm\", \"y/M/d HHmm\", \"y-M-d HHmm\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private static final String SORT \u003d \"sort\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private static final String HELP \u003d \"help\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /** Returns the command based on user input. */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        int i \u003d input.trim().indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String command \u003d input.trim().toLowerCase();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String detail \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        if (i \u003e 0) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            command \u003d input.substring(0, i);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            detail \u003d input.substring(i).trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            return new DoneCommand(parseNumber(detail));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            return new TodoCommand(parseTodo(detail));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            return new EventCommand(parseEvent(detail));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            return new DeadlineCommand(parseDeadline(detail));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            return new DeleteCommand(parseNumber(detail));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            return new FindCommand(detail);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        case SORT:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            return new SortCommand(detail);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        case HELP:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            throw new DukeException(\"Oops! I\u0027m sorry, but I don\u0027t know what that means\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Parses the date given by user."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param dateString Date provided by user in the form of string."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return Date in LocalDateTime."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public static LocalDateTime parseDate(String dateString) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        for (String format : DATE_FORMATS) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                return LocalDateTime.parse(dateString, DateTimeFormatter.ofPattern(format));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                e.getMessage();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Returns the ToDo the user specified."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param todoDetail The todo details given by user."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return A ToDo with the input given."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public static ToDo parseTodo(String todoDetail) throws DukeException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        if (todoDetail.equals(\"\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            throw new DukeException(\"Oops! Todo cannot be empty\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return new ToDo(todoDetail);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Returns the Deadline the user specified."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param deadlineDetail The deadline details given by user."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return A Deadline with the input given."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public static Deadline parseDeadline(String deadlineDetail) throws DukeException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        if (deadlineDetail.equals(\"\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            throw new DukeException(\"Oops! Deadline cannot be empty\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String[] arr \u003d deadlineDetail.split(\"/by\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String detail \u003d arr[0].trim();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        if (arr.length \u003d\u003d 1 || detail.equals(\"\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            throw new DukeException(\"Oops! You need to include both detail and time.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        LocalDateTime date \u003d parseDate(arr[1].trim());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            throw new DukeException(\"Oops! Format of date and time might be wrong.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return new Deadline(detail, date);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Returns the Event the user specified."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param eventDetail The event details given by user."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return A Event with the input given."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public static Event parseEvent(String eventDetail) throws DukeException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        if (eventDetail.trim().equals(\"\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            throw new DukeException(\"Oops! Event cannot be empty\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String[] arr \u003d eventDetail.split(\"/at\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String detail \u003d arr[0].trim();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        if (arr.length \u003d\u003d 1 || detail.equals(\"\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            throw new DukeException(\"Oops! You need to include both detail and time.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String startAndEndDates \u003d arr[1].trim();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String[] dates \u003d startAndEndDates.split(\"to\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        if (dates.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            throw new DukeException(\"Oops! You need to include both start and end dates.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        LocalDateTime startDate \u003d parseDate(dates[0].trim());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        LocalDateTime endDate \u003d parseDate(dates[1].trim());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        if (startDate \u003d\u003d null || endDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            throw new DukeException(\"Oops! Format of date and time might be wrong.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return new Event(detail, startDate, endDate);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Parses the number given by user."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param number The number given by user in string."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return An integer representing task number."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public static int parseNumber(String number) throws DukeException {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            return Integer.parseInt(number.trim());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            throw new DukeException(\"Oops! Please provide a number!\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 173
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.io.OutputStreamWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * The Storage class deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private static final String TODO \u003d \"T\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private static final String EVENT \u003d \"E\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private static final String DEADLINE \u003d \"D\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private Path path;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Creates and initialises a storage object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param path The path where data are saved."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public Storage(Path path) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Returns the list of task saved in file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return list of task saved in file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        boolean directoryExists \u003d java.nio.file.Files.exists(path);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            if (directoryExists) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                FileReader fileReader \u003d new FileReader(String.valueOf(path));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                BufferedReader buffReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                readData(buffReader, list);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                Files.createFile(path);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Adds data to the file."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param data Data to be added."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void addData(String data) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(new OutputStreamWriter("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                    new FileOutputStream(String.valueOf(path), true), \"UTF-8\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            bufferedWriter.write(data + \"\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Updates the data in file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param data Data to be updated."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param taskNumber Task number of the data."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void updateData(String data, int taskNumber) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assert taskNumber \u003e 0;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(String.valueOf(path)));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            String newData \u003d \"\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            String oldData;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            int lineNumber \u003d 1;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            while (br.ready()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                oldData \u003d br.readLine();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                if (lineNumber \u003d\u003d taskNumber) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                    newData +\u003d data.equals(\"\") ? data : data + \"\\n\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                    newData +\u003d oldData + \"\\n\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                lineNumber++;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(String.valueOf(path)));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            bw.write(newData);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private void readData(BufferedReader buffReader, List\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        while (buffReader.ready()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            String savedTask \u003d buffReader.readLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            String type \u003d savedTask.substring(0, 1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            String isDone \u003d savedTask.substring(2, 3);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            assert isDone.equals(\"T\") || isDone.equals(\"F\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                loadTodo(list, savedTask, isDone.equals(\"T\"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                loadDeadline(list, savedTask, isDone.equals(\"T\"));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                loadEvent(list, savedTask, isDone.equals(\"T\"));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                // Execution should never reach here"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                assert false : savedTask;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private void loadTodo(List\u003cTask\u003e list, String savedTask, boolean isDone) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        list.add(new ToDo(savedTask.substring(4).trim(), isDone));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private void loadDeadline(List\u003cTask\u003e list, String savedTask, boolean isDone) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String deadlineDetails \u003d savedTask.substring(4);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        // Split the savedTask string into description and date in order to create a Deadline object."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        // deadlineArr[0] contains description of deadline"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        // deadlineArr[1] contains date of deadline"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String[] deadlineArr \u003d deadlineDetails.split(\"/by\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        Deadline deadline \u003d new Deadline("
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                deadlineArr[0].trim(),"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                isDone,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                LocalDateTime.parse(deadlineArr[1].trim()));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        list.add(deadline);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private void loadEvent(List\u003cTask\u003e list, String savedTask, boolean isDone) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String eventDetails \u003d savedTask.substring(4);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        // Split the savedTask string into description and date in order to create a Deadline object."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        // eventArr[0] contains description of event"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        // eventArr[1] contains start and end dates of event"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String[] eventArr \u003d eventDetails.split(\"/at\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String detail \u003d eventArr[0].trim();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String[] dates \u003d eventArr[1].trim().split(\"to\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        Event event \u003d new Event("
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                detail,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                isDone,"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                LocalDateTime.parse(dates[0].trim()),"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                LocalDateTime.parse(dates[1].trim()));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        list.add(event);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 165
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * The TaskList class contains the task list and operations on the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Creates and initialises a task list with the given list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param list List of tasks to be added."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /** Returns string representation all the tasks in the task list. */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public String list() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String result \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        result +\u003d listToString(list);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Returns the size of the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return Size of list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Returns the task at the specified position."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param taskNumber The position of the task in the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return The task at that position."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assert taskNumber \u003e 0;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return list.get(taskNumber - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Adds the task to the list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param task Task to be added to list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Removes the task with the specified position in the list and return"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * the task that is removed."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param taskNumber The position of the task to be deleted."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return The task that is deleted."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public Task removeTask(int taskNumber) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return list.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Returns string representation of tasks with the specified keyword."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param keyword Keyword to be searched."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public String find(String keyword) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        List\u003cTask\u003e filteredList \u003d list.stream()"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                .filter(t -\u003e t.getDetails().contains(keyword))"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String result \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        result +\u003d listToString(filteredList);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Sort the deadlines in the taskList by ascending order according to dates."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return String representation of sorted deadline list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public String sortDeadline() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        List\u003cTask\u003e sortedList \u003d list.stream()"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                .filter(task -\u003e task instanceof Deadline)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                .map(deadline -\u003e (Deadline) deadline)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                .sorted()"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String result \u003d \"Here are your deadlines sorted in order:\\n\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        result +\u003d listToString(sortedList);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Sort the events in the taskList by ascending order according to dates."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return String representation of sorted event list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public String sortEvent() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        List\u003cTask\u003e sortedList \u003d list.stream()"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                .filter(task -\u003e task instanceof Event)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                .map(event -\u003e (Event) event)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                .sorted()"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String result \u003d \"Here are your events sorted in order:\\n\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        result +\u003d listToString(sortedList);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Returns string representation of the provided list."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param list List to be converted to string."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return String representation of the list."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private String listToString(List\u003c? extends Task\u003e list) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        Iterator\u003c? extends Task\u003e iterator \u003d list.iterator();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        while (iterator.hasNext()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            result +\u003d count + \". \" + iterator.next().toString() + \"\\n\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 136
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * The ByeCommand class contains methods pertaining to the ByeCommand."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void execute(TaskList taskList, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 21
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * The Command class contains methods pertaining to the Command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * The actions to be carried out after the command is given."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param taskList TaskList containing all the tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param storage Storage object which handles storing of data."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param ui Ui that interact with user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public abstract void execute(TaskList taskList, Storage storage, Ui ui);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Returns true if the command is ByeCommand."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return True if the command is ByeCommand"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 26
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * The DeadlineCommand class contains methods pertaining to the DeadlineCommand."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private Deadline deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public DeadlineCommand(Deadline deadline) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void execute(TaskList taskList, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        taskList.addTask(deadline);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        ui.addTask(deadline, taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        storage.addData(deadline.store());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 30
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * The DeleteCommand class contains methods pertaining to the DeleteCommand."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void execute(TaskList taskList, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            if (taskList.size() \u003e\u003d taskNumber \u0026\u0026 taskNumber \u003e 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                Task task \u003d taskList.removeTask(taskNumber);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                storage.updateData(\"\", taskNumber);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                ui.deleteTask(task, taskList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                throw new DukeException(\"Oops! No such task!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 39
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * The DoneCommand class contains methods pertaining to the DoneCommand."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void execute(TaskList taskList, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            if (taskList.size() \u003e\u003d taskNumber \u0026\u0026 taskNumber \u003e 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                Task task \u003d taskList.getTask(taskNumber);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                storage.updateData(task.store(), taskNumber);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                ui.done(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                throw new DukeException(\"Oops! No such task!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 40
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * The EventCommand class contains methods pertaining to the EventCommand."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private Event event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public EventCommand(Event event) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.event \u003d event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void execute(TaskList taskList, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        taskList.addTask(event);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        ui.addTask(event, taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        storage.addData(event.store());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 30
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * The FindCommand class contains methods pertaining to the FindCommand."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void execute(TaskList taskList, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        ui.print(taskList.find(keyword));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 27
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * The HelpCommand class contains methods pertaining to the HelpCommand."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void execute(TaskList taskList, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        ui.print(\"1. bye --- exit the program\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + \"2. list --- see the list of task saved\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + \"3. done x --- mark task numbered x as done\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + \"4. todo {details} --- add a todo with the given details\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + \"5. event {details} /at {date} to {date} --- add an event with the given details and time\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + \"6. deadline {deadline} /by {date} --- add a deadline with the given details and time\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + \"7. delete x --- deletes the task numbered x\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + \"8. find {keyword} --- find all tasks with the keyword\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + \"9. sort event/deadline --- sort events or deadlines in ascending order by date\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + \"The format of dates accepted are yyyy/MM/dd HHmm, y/M/d HHmm, y-M-d HHmm\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + \"E.g. 2020/09/08 1430, 2020/9/8 1430, 2020-9-8 1430\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 31
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * The ListCommand class contains methods pertaining to the ListCommand."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void execute(TaskList taskList, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        ui.print(taskList.list());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 21
    }
  },
  {
    "path": "src/main/java/duke/command/SortCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class SortCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public SortCommand(String taskType) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.taskType \u003d taskType.toLowerCase();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void execute(TaskList taskList, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            if (taskType.equals(DEADLINE)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                ui.print(taskList.sortDeadline());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            } else if (taskType.equals(EVENT)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                ui.print(taskList.sortEvent());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                throw new DukeException(\"Oops! I can only sort Deadlines or Events!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 38
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * The TodoCommand class contains methods pertaining to the TodoCommand."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private ToDo todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public TodoCommand(ToDo todo) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.todo \u003d todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void execute(TaskList taskList, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        taskList.addTask(todo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        ui.addTask(todo, taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        storage.addData(todo.store());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * The Deadline class encapsulates information and methods pertaining to a"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * Deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class Deadline extends Task implements Comparable\u003cDeadline\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private LocalDateTime date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Creates a Deadline with the given details and date."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * The Deadline is set as not done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param details Details of deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param date Date of the deadline."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public Deadline(String details, LocalDateTime date) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        super(details);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Creates a Deadline with the given details and date."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * The Deadline is set as done if isDone is true."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param details Details of the deadline."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param isDone True if the deadline is done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param date Date of the deadline."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public Deadline(String details, boolean isDone, LocalDateTime date) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        super(details, isDone);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Returns a string representation of the Deadline to be saved in hard disk."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return string representation of the Deadline"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public String store() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return \"D \" + super.store() + \" /by \" + this.date;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Returns a string representation of the Deadline to be printed."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return string representation of the Deadline"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\", Locale.ENGLISH)) + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public int compareTo(Deadline deadline) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return this.date.compareTo(deadline.date);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 64
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * The Event class encapsulates information and methods pertaining to an Event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class Event extends Task implements Comparable\u003cEvent\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private LocalDateTime startDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private LocalDateTime endDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Creates a Event with the given details and date."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * The Event is set as not done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param details Details of event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param startDate Starting date and time of the event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param endDate Ending date and time of the event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public Event(String details, LocalDateTime startDate, LocalDateTime endDate) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        super(details);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Creates a Event with the given details and date."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * The Event is set as done if isDone is true."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param details Details of the deadline."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param isDone True if the deadline is done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param startDate Starting date and time of the event."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param endDate Ending date and time of the event."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public Event(String details, boolean isDone, LocalDateTime startDate, LocalDateTime endDate) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        super(details, isDone);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Returns a string representation of the Event to be saved in hard disk."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return String representation of the Event."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public String store() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return \"E \" + super.store() + \" /at \" + startDate + \" to \" + endDate;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Returns a string representation of the Event to be printed."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return String representation of the Event."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\", Locale.ENGLISH))"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + \" to \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\", Locale.ENGLISH))"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public int compareTo(Event event) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return this.startDate.compareTo(event.startDate);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 71
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * The Task class encapsulates information and methods pertaining to a Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    protected String details;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Creates a Task with the given details."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * The Task is set as not done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param details Details of task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public Task(String details) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Creates a ToDo with the given details and date."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * The ToDo is set as done if isDone is true."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param details Details of the todo."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param isDone True if the todo is done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public Task(String details, boolean isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Returns the details of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return Details of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /** Marks the task as done. */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Returns a string representation of the Task to be saved in hard disk."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return String representation of the Task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public String store() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String done \u003d this.isDone ? \"T \" : \"F \";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return done + this.details;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Returns a string representation of the ToDo to be printed."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return String representation of the ToDo."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String s \u003d this.isDone ? \"[\\u2713] \" : \"[\\u2717] \";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return s + this.details;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 67
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * The ToDo class encapsulates information and methods pertaining to a ToDo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Creates a ToDo with the given details."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * The ToDo is set as not done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param details Details of todo."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public ToDo(String details) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        super(details);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Creates a ToDo with the given details and date."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * The ToDo is set as done if isDone is true."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param details Details of the todo."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param isDone True if the todo is done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public ToDo(String details, boolean isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        super(details, isDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Returns a string representation of the ToDo to be saved in hard disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return String representation of the ToDo."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public String store() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return \"T \" + super.store();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Returns a string representation of the ToDo to be printed."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return String representation of the ToDo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 48
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private Circle displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Creates a DialogBox with the given text and image."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param text Text to be displayed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param img Image of person."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        displayPicture.setFill(new ImagePattern(img));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /** Flips the dialog box such that the ImageView is on the left and text on the right. */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Returns a dialog box for user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param text The text entered by user."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param img Image of user."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return DialogBox for user."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Returns a dialog box for Duke."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param text The response from Duke."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param img Image of Duke."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param isErrorMessage True if the message is an error message."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @return DialogBox for Duke."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img, boolean isErrorMessage) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        if (isErrorMessage) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            db.setErrorDialog();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            db.setNormalDialog();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private void setErrorDialog() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        dialog.setStyle(\"-fx-background-color: #F27474; \""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + \"-fx-border-color: #F27474; -fx-border-radius: 10; \""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + \"-fx-border-width: 10; -fx-background-radius: 10\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private void setNormalDialog() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        dialog.setStyle(\"-fx-background-color: #D1FDA4; \""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + \"-fx-border-color: #D1FDA4; -fx-border-radius: 10; \""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + \"-fx-border-width: 10; -fx-background-radius: 10\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 98
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.util.concurrent.CompletableFuture;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    // Image retrieved from https://line.fandom.com/wiki/Cony"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/cony.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Sets up Duke."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param duke"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void setDuke(Duke duke) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        duke.setUi(dialogContainer);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        duke.greet();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        if (duke.getResponse(input)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            CompletableFuture\u003cVoid\u003e completableFuture \u003d CompletableFuture.runAsync(() -\u003e {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                    Thread.sleep(1000);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            });"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            completableFuture.thenRun(() -\u003e Platform.exit());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 66
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " * The Ui class deals with interactions with the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    //Image retrieved from https://line.fandom.com/wiki/Brown"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/brown.png\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /** Creates and initiates an Ui object. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public Ui(VBox dialogContainer) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        this.dialogContainer \u003d dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /** Greets the user. */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                \"Hello! I\u0027m Duke\\nWhat can I do for you?\\nType help to see the list of commands available.\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                dukeImage,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                false));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /** Say bye to the user. */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                \"Bye. Hope to see you again soon!\", dukeImage, false));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Informs user that the task is marked as done."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param task The task that has being marked as done."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void done(Task task) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String text \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + task.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(text, dukeImage, false));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Displays the error message."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param message The message to be displayed."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(message, dukeImage, true));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Informs the user that the task is deleted."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param task The task that has being deleted."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param taskList The list of task remaining."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void deleteTask(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String text \u003d \"Noted. I\u0027ve removed this task:\" + \"\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + String.format(\"Now you have %d tasks in the list.\", taskList.size());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(text, dukeImage, false));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Informs the user that the task is added to the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param task The task that is added."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param taskList The list containing all tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void addTask(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        String text \u003d \"Got it! I have added this task to the list!\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                + String.format(\"Now you have %d tasks in the list.\", taskList.size());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(text, dukeImage, false));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * Prints the text given."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     * @param text Text to be printed."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    public void print(String text) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(text, dukeImage, false));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 90
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"600.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/10.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" \u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-border-style: solid inside; -fx-border-radius: 10; -fx-border-width: 10; -fx-border-color: #AEFCFB; -fx-background-color: #AEFCFB; -fx-background-radius: 10;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        \u003cCircle fx:id\u003d\"displayPicture\" fill\u003d\"WHITE\" radius\u003d\"50.0\" stroke\u003d\"WHITE\" strokeType\u003d\"INSIDE\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        \u003c/Circle\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 24
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" maxWidth\u003d\"-Infinity\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"77.0\" AnchorPane.leftAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\" fitToWidth\u003d\"true\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42.0\" AnchorPane.topAnchor\u003d\"1.0\" \u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"588.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 19
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    void testStringConversion() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                \"[D][\\u2717] borrow book (by: Aug 25 2020 02:30 PM)\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                new Deadline(\"borrow book\", LocalDateTime.parse(\"2020-08-25T14:30\")).toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                \"[D][\\u2713] return book (by: Aug 31 2020 08:00 PM)\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                new Deadline(\"return book\", true, LocalDateTime.parse(\"2020-08-31T20:00\")).toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    void store() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                \"D F borrow book /by 2020-08-25T14:30\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                new Deadline(\"borrow book\", LocalDateTime.parse(\"2020-08-25T14:30\")).store());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                \"D T return book /by 2020-08-31T20:00\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                new Deadline(\"return book\", true, LocalDateTime.parse(\"2020-08-31T20:00\")).store());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    void compareTo() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        Deadline deadline1 \u003d new Deadline("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                \"return book\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                LocalDateTime.parse(\"2020-09-15T14:00\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        Deadline deadline2 \u003d new Deadline("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                \"assignment\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                LocalDateTime.parse(\"2020-09-10T12:30\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assertTrue(deadline1.compareTo(deadline2) \u003e 0);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 42
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    void testStringConversion() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                \"[E][\\u2717] borrow book (at: Aug 25 2020 02:30 PM to Aug 25 2020 04:30 PM)\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                new Event("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                        \"borrow book\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                        LocalDateTime.parse(\"2020-08-25T14:30\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                        LocalDateTime.parse(\"2020-08-25T16:30\"))"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                        .toString()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                \"[E][\\u2713] return book (at: Aug 31 2020 08:00 PM to Aug 31 2020 09:00 PM)\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                new Event("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                        \"return book\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                        true,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                        LocalDateTime.parse(\"2020-08-31T20:00\"),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                        LocalDateTime.parse(\"2020-08-31T21:00\"))"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                        .toString()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    void store() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                \"E F borrow book /at 2020-08-25T14:30 to 2020-08-25T18:00\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                new Event(\"borrow book\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                        LocalDateTime.parse(\"2020-08-25T14:30\"),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                        LocalDateTime.parse(\"2020-08-25T18:00\"))"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                        .store()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                \"E T return book /at 2020-08-31T20:00 to 2020-08-31T22:35\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                new Event("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                        \"return book\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                        true,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                        LocalDateTime.parse(\"2020-08-31T20:00\"),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                        LocalDateTime.parse(\"2020-08-31T22:35\"))"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                        .store()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    void compareTo() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        Event event1 \u003d new Event("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                \"meeting\","
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                LocalDateTime.parse(\"2020-09-25T14:30\"),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                LocalDateTime.parse(\"2020-09-25T16:00\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        Event event2 \u003d new Event("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                \"project\","
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                LocalDateTime.parse(\"2020-09-30T12:30\"),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "                LocalDateTime.parse(\"2020-09-30T13:00\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assertTrue(event1.compareTo(event2) \u003c 0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 64
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assertEquals(\"[\\u2717] return book\", new Task(\"return book\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assertEquals(\"[\\u2713] borrow book\", new Task(\"borrow book\", true).toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    void store() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assertEquals(\"F return book\", new Task(\"return book\").store());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assertEquals(\"T borrow book\", new Task(\"borrow book\", true).store());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        Task task \u003d new Task(\"homework\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assertEquals(\"[\\u2713] homework\", task.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 26
    }
  },
  {
    "path": "src/test/java/duke/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assertEquals(\"[T][\\u2717] return book\", new ToDo(\"return book\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assertEquals(\"[T][\\u2713] borrow book\", new ToDo(\"borrow book\", true).toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    void store() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assertEquals(\"T F return book\", new ToDo(\"return book\").store());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "        assertEquals(\"T T borrow book\", new ToDo(\"borrow book\", true).store());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "deadline return book /by 2020/08/30 2359"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "event project meeting /at 2020-9-1 1400"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "event group project"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "find project meeting"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "find book"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "find homework"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "hey"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "blah"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "chcp 65001"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "javac -encoding utf-8 -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ypinhsuan"
        },
        "content": "del DATA.TXT"
      }
    ],
    "authorContributionMap": {
      "ypinhsuan": 8,
      "-": 19
    }
  }
]
