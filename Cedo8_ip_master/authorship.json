[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":27,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":28,"author":{"gitId":"Cedo8"},"content":"# Acknowledgements"},{"lineNumber":29,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":30,"author":{"gitId":"Cedo8"},"content":"1. Background retrieved from https://www.jakpost.travel/vwall/JThbJw_worlds-okayest-bard-i-made-a-d-d/"},{"lineNumber":31,"author":{"gitId":"Cedo8"},"content":"2. Bearimy profile picture retrieved from https://www.pngegg.com/en/png-ssxae"},{"lineNumber":32,"author":{"gitId":"Cedo8"},"content":"3. User profile picture retrieved from https://www.pngegg.com/en/png-pvyoa"}],"authorContributionMap":{"Cedo8":6,"-":26}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":16,"author":{"gitId":"Cedo8"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":18,"author":{"gitId":"Cedo8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"Cedo8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"Cedo8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"Cedo8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"Cedo8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"Cedo8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"Cedo8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"Cedo8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"Cedo8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"Cedo8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"Cedo8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"Cedo8"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"Cedo8"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"Cedo8"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Cedo8":17,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"Are you tired of forgetting what you are supposed to do? Need someone to help keep track of your work progress?\\"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":"Say hi to Bearimy, your personal assistant that will help you keep track of all your tasks! Read on to find out what he is capable of."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":"## **Features** "},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":"### Feature 1: Add tasks"},{"lineNumber":9,"author":{"gitId":"Cedo8"},"content":"This is the fundamental feature of Bearimy. You may specify a `todo`, `deadline` or `event` type task, whichever best suits a particular task."},{"lineNumber":10,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":11,"author":{"gitId":"Cedo8"},"content":"### Feature 2: Delete tasks"},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":"List of tasks getting too long? Don\u0027t worry, the `delete` feature helps to get rid of unwanted tasks to free up space."},{"lineNumber":13,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":14,"author":{"gitId":"Cedo8"},"content":"### Feature 3: Mark tasks"},{"lineNumber":15,"author":{"gitId":"Cedo8"},"content":"Indicates a completed task with \u0027O\u0027."},{"lineNumber":16,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":17,"author":{"gitId":"Cedo8"},"content":"### Feature 4: Listing"},{"lineNumber":18,"author":{"gitId":"Cedo8"},"content":"Displays a list of all existing tasks that were stored by Bearimy."},{"lineNumber":19,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":20,"author":{"gitId":"Cedo8"},"content":"### Feature 5: Finding tasks"},{"lineNumber":21,"author":{"gitId":"Cedo8"},"content":"Displays a list of all existing tasks that contain the keyword that you have specified."},{"lineNumber":22,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":23,"author":{"gitId":"Cedo8"},"content":"### Feature 6: Handling tasks with the same name"},{"lineNumber":24,"author":{"gitId":"Cedo8"},"content":"Allows you to decide whether to keep a task that is already stored by Bearimy."},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"Cedo8"},"content":"### `todo` - Creates a todo task"},{"lineNumber":29,"author":{"gitId":"Cedo8"},"content":"Format: `todo \u003c*name of task*\u003e`\\"},{"lineNumber":30,"author":{"gitId":"Cedo8"},"content":"Example of usage: `todo read a book`\\"},{"lineNumber":31,"author":{"gitId":"Cedo8"},"content":"Expected outcome: `todo added to list`"},{"lineNumber":32,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":33,"author":{"gitId":"Cedo8"},"content":"### `deadline` - Creates a deadline task"},{"lineNumber":34,"author":{"gitId":"Cedo8"},"content":"Format: `deadline \u003c*name of task*\u003e /by \u003c*YYYY-MM-DD HHmm*\u003e`\\"},{"lineNumber":35,"author":{"gitId":"Cedo8"},"content":"Example of usage: `deadline submit proposal /by 2020-09-13 2300`\\"},{"lineNumber":36,"author":{"gitId":"Cedo8"},"content":"Expected outcome: `deadline added to list`"},{"lineNumber":37,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":38,"author":{"gitId":"Cedo8"},"content":"### `event` - Creates an event task"},{"lineNumber":39,"author":{"gitId":"Cedo8"},"content":"Format: `event \u003c*name of task*\u003e /at \u003c*description*\u003e`\\"},{"lineNumber":40,"author":{"gitId":"Cedo8"},"content":"Example of usage: `event attend workshop /at 12.30pm`\\"},{"lineNumber":41,"author":{"gitId":"Cedo8"},"content":"Expected outcome: `event added to list`"},{"lineNumber":42,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":43,"author":{"gitId":"Cedo8"},"content":"### `delete` - Removes a specified task"},{"lineNumber":44,"author":{"gitId":"Cedo8"},"content":"Format: `delete \u003c*task number*\u003e`\\"},{"lineNumber":45,"author":{"gitId":"Cedo8"},"content":"Example of usage: `delete 2`\\"},{"lineNumber":46,"author":{"gitId":"Cedo8"},"content":"Expected outcome: `task 2 deleted from list`"},{"lineNumber":47,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":48,"author":{"gitId":"Cedo8"},"content":"### `done` - Marks a specified task"},{"lineNumber":49,"author":{"gitId":"Cedo8"},"content":"Format: `done \u003c*task number*\u003e`\\"},{"lineNumber":50,"author":{"gitId":"Cedo8"},"content":"Example of usage: `done 5`\\"},{"lineNumber":51,"author":{"gitId":"Cedo8"},"content":"Expected outcome: `task 5 marked on list (with \u0027O\u0027)`"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"Cedo8"},"content":"### `list` - Displays list of existing tasks"},{"lineNumber":54,"author":{"gitId":"Cedo8"},"content":"Format: `list`\\"},{"lineNumber":55,"author":{"gitId":"Cedo8"},"content":"Example of usage: `list`\\"},{"lineNumber":56,"author":{"gitId":"Cedo8"},"content":"Expected outcome: `list of tasks displayed`"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"Cedo8"},"content":"### `find` - Finds all tasks that contain the specified keyword"},{"lineNumber":59,"author":{"gitId":"Cedo8"},"content":"Format: `find \u003c*keyword*\u003e`\\"},{"lineNumber":60,"author":{"gitId":"Cedo8"},"content":"Example of usage: `find run`\\"},{"lineNumber":61,"author":{"gitId":"Cedo8"},"content":"Expected outcome: `list of tasks with \"run\" keyword displayed`"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"Cedo8"},"content":"### `yes` - Creates a task (only when prompted by Bearimy)"},{"lineNumber":64,"author":{"gitId":"Cedo8"},"content":"Format: `yes`\\"},{"lineNumber":65,"author":{"gitId":"Cedo8"},"content":"Example of usage: `yes`\\"},{"lineNumber":66,"author":{"gitId":"Cedo8"},"content":"Expected outcome: `duplicate task added to list as per normal`"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"Cedo8"},"content":"### `no` - Ignores input task (only when prompted by Bearimy)"},{"lineNumber":69,"author":{"gitId":"Cedo8"},"content":"Format: `no`\\"},{"lineNumber":70,"author":{"gitId":"Cedo8"},"content":"Example of usage: `no`\\"},{"lineNumber":71,"author":{"gitId":"Cedo8"},"content":"Expected outcome: `duplicate task will not be added to list`"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"Cedo8"},"content":"### `bye` - Exits the application"},{"lineNumber":74,"author":{"gitId":"Cedo8"},"content":"Format: `bye`\\"},{"lineNumber":75,"author":{"gitId":"Cedo8"},"content":"Example of usage: `bye`\\"},{"lineNumber":76,"author":{"gitId":"Cedo8"},"content":"Expected outcome: `application terminates`"}],"authorContributionMap":{"Cedo8":65,"-":11}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"Cedo8"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"Cedo8"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"Cedo8"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"Cedo8"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"Cedo8"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"Cedo8"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":17,"author":{"gitId":"Cedo8"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"Cedo8"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"Cedo8"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"Cedo8"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"Cedo8"},"content":" */"},{"lineNumber":22,"author":{"gitId":"Cedo8"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"Cedo8"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"Cedo8"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"Cedo8"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"Cedo8"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":28,"author":{"gitId":"Cedo8"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"Cedo8"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"Cedo8"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"Cedo8"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"Cedo8"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"Cedo8"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"Cedo8"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"Cedo8"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":38,"author":{"gitId":"Cedo8"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"Cedo8"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":42,"author":{"gitId":"Cedo8"},"content":"    private DialogBox(String text) {"},{"lineNumber":43,"author":{"gitId":"Cedo8"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"Cedo8"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":45,"author":{"gitId":"Cedo8"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":46,"author":{"gitId":"Cedo8"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":47,"author":{"gitId":"Cedo8"},"content":"            fxmlLoader.load();"},{"lineNumber":48,"author":{"gitId":"Cedo8"},"content":"        } catch (IOException e) {"},{"lineNumber":49,"author":{"gitId":"Cedo8"},"content":"            e.printStackTrace();"},{"lineNumber":50,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":52,"author":{"gitId":"Cedo8"},"content":"        dialog.setText(text);"},{"lineNumber":53,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":55,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"Cedo8"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":57,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"Cedo8"},"content":"    private void flip() {"},{"lineNumber":59,"author":{"gitId":"Cedo8"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":60,"author":{"gitId":"Cedo8"},"content":"        Collections.reverse(tmp);"},{"lineNumber":61,"author":{"gitId":"Cedo8"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":62,"author":{"gitId":"Cedo8"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":63,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":65,"author":{"gitId":"Cedo8"},"content":"    public static DialogBox getDialogBox(String text) {"},{"lineNumber":66,"author":{"gitId":"Cedo8"},"content":"        var db \u003d new DialogBox(text);"},{"lineNumber":67,"author":{"gitId":"Cedo8"},"content":"        db.setMinSize(DialogBox.USE_PREF_SIZE, DialogBox.USE_PREF_SIZE);"},{"lineNumber":68,"author":{"gitId":"Cedo8"},"content":"        return new DialogBox(text);"},{"lineNumber":69,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":71,"author":{"gitId":"Cedo8"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":72,"author":{"gitId":"Cedo8"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":73,"author":{"gitId":"Cedo8"},"content":"        db.setMinSize(DialogBox.USE_PREF_SIZE, DialogBox.USE_PREF_SIZE);"},{"lineNumber":74,"author":{"gitId":"Cedo8"},"content":"        return new DialogBox(text, img);"},{"lineNumber":75,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":77,"author":{"gitId":"Cedo8"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":78,"author":{"gitId":"Cedo8"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":79,"author":{"gitId":"Cedo8"},"content":"        db.flip();"},{"lineNumber":80,"author":{"gitId":"Cedo8"},"content":"        db.setMinSize(DialogBox.USE_PREF_SIZE, DialogBox.USE_PREF_SIZE);"},{"lineNumber":81,"author":{"gitId":"Cedo8"},"content":"        return db;"},{"lineNumber":82,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"Cedo8"},"content":"}"}],"authorContributionMap":{"Cedo8":83}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":" * Main class that runs the Duke program"},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":" */"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":10,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":11,"author":{"gitId":"Cedo8"},"content":"    private static TaskList tasks;"},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":"    private final Storage storage;"},{"lineNumber":13,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":14,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Cedo8"},"content":"     * Constructor for creating Duke object"},{"lineNumber":16,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"Cedo8"},"content":"     * @param filePath relative directory of the storage file"},{"lineNumber":18,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Cedo8"},"content":"    public Duke(String filePath) {"},{"lineNumber":20,"author":{"gitId":"Cedo8"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":21,"author":{"gitId":"Cedo8"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":22,"author":{"gitId":"Cedo8"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"Cedo8"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":24,"author":{"gitId":"Cedo8"},"content":"        } catch (IOException e) {"},{"lineNumber":25,"author":{"gitId":"Cedo8"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":26,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":29,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Cedo8"},"content":"     * Generates a response to user input"},{"lineNumber":31,"author":{"gitId":"Cedo8"},"content":"     * @param input user input"},{"lineNumber":32,"author":{"gitId":"Cedo8"},"content":"     * @return duke\u0027s reply"},{"lineNumber":33,"author":{"gitId":"Cedo8"},"content":"     * @throws IOException if filePath does not exist"},{"lineNumber":34,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Cedo8"},"content":"    public String getResponse(String input) throws IOException {"},{"lineNumber":36,"author":{"gitId":"Cedo8"},"content":"        Parser.setTasks(tasks);"},{"lineNumber":37,"author":{"gitId":"Cedo8"},"content":"        Parser.setStorage(storage);"},{"lineNumber":38,"author":{"gitId":"Cedo8"},"content":"        return Parser.parse(input);"},{"lineNumber":39,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":41,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"Cedo8"},"content":"     * Getter to retrieve tasks"},{"lineNumber":43,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"Cedo8"},"content":"     * @return list of tasks"},{"lineNumber":45,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"Cedo8"},"content":"    public static TaskList getTasks() {"},{"lineNumber":47,"author":{"gitId":"Cedo8"},"content":"        return tasks;"},{"lineNumber":48,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":50,"author":{"gitId":"Cedo8"},"content":"    public void run() throws IOException {"},{"lineNumber":51,"author":{"gitId":"Cedo8"},"content":"        Parser.setTasks(tasks);"},{"lineNumber":52,"author":{"gitId":"Cedo8"},"content":"        Parser.setStorage(storage);"},{"lineNumber":53,"author":{"gitId":"Cedo8"},"content":"        boolean isExit \u003d false;"},{"lineNumber":54,"author":{"gitId":"Cedo8"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":55,"author":{"gitId":"Cedo8"},"content":"        while (!isExit) {"},{"lineNumber":56,"author":{"gitId":"Cedo8"},"content":"            String command \u003d sc.nextLine();"},{"lineNumber":57,"author":{"gitId":"Cedo8"},"content":"            System.out.println(\"_____________________________________\");"},{"lineNumber":58,"author":{"gitId":"Cedo8"},"content":"            System.out.println(Parser.parse(command));"},{"lineNumber":59,"author":{"gitId":"Cedo8"},"content":"            isExit \u003d Parser.getExitStatus();"},{"lineNumber":60,"author":{"gitId":"Cedo8"},"content":"            System.out.println(\"_____________________________________\");"},{"lineNumber":61,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":64,"author":{"gitId":"Cedo8"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":65,"author":{"gitId":"Cedo8"},"content":"        new Duke(\"./duke.txt\").run();"},{"lineNumber":66,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Cedo8":65,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":" * Handles any exception arising from wrong commands"},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":"     * Constructor from creating DukeException object"},{"lineNumber":9,"author":{"gitId":"Cedo8"},"content":"     * @param message error message"},{"lineNumber":10,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"Cedo8"},"content":"    public DukeException(String message) {"},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":"        super(message);"},{"lineNumber":13,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Cedo8"},"content":"}"}],"authorContributionMap":{"Cedo8":14}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":"public class Launcher {"},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Cedo8"},"content":"}"}],"authorContributionMap":{"Cedo8":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"Cedo8"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":11,"author":{"gitId":"Cedo8"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"Cedo8"},"content":" */"},{"lineNumber":14,"author":{"gitId":"Cedo8"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":16,"author":{"gitId":"Cedo8"},"content":"    private final Duke duke \u003d new Duke(\"./duke.txt\");"},{"lineNumber":17,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":18,"author":{"gitId":"Cedo8"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"Cedo8"},"content":"    public void start(Stage stage) {"},{"lineNumber":20,"author":{"gitId":"Cedo8"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"Cedo8"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":22,"author":{"gitId":"Cedo8"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":23,"author":{"gitId":"Cedo8"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":24,"author":{"gitId":"Cedo8"},"content":"            stage.setScene(scene);"},{"lineNumber":25,"author":{"gitId":"Cedo8"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":26,"author":{"gitId":"Cedo8"},"content":"            stage.show();"},{"lineNumber":27,"author":{"gitId":"Cedo8"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"Cedo8"},"content":"            e.printStackTrace();"},{"lineNumber":29,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Cedo8"},"content":"}"}],"authorContributionMap":{"Cedo8":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":"import javafx.application.Platform;"},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":"import javafx.fxml.FXML;"},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":"import javafx.scene.control.Button;"},{"lineNumber":9,"author":{"gitId":"Cedo8"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":10,"author":{"gitId":"Cedo8"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":11,"author":{"gitId":"Cedo8"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":13,"author":{"gitId":"Cedo8"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":14,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":15,"author":{"gitId":"Cedo8"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"Cedo8"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":17,"author":{"gitId":"Cedo8"},"content":" */"},{"lineNumber":18,"author":{"gitId":"Cedo8"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":19,"author":{"gitId":"Cedo8"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"Cedo8"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":21,"author":{"gitId":"Cedo8"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"Cedo8"},"content":"    private VBox dialogContainer;"},{"lineNumber":23,"author":{"gitId":"Cedo8"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"Cedo8"},"content":"    private TextField userInput;"},{"lineNumber":25,"author":{"gitId":"Cedo8"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"Cedo8"},"content":"    private Button sendButton;"},{"lineNumber":27,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":28,"author":{"gitId":"Cedo8"},"content":"    private Duke duke;"},{"lineNumber":29,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":30,"author":{"gitId":"Cedo8"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/cony_user.png\"));"},{"lineNumber":31,"author":{"gitId":"Cedo8"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/brown_duke.png\"));"},{"lineNumber":32,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":33,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Cedo8"},"content":"     * Loads the start up screen of the application"},{"lineNumber":35,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"Cedo8"},"content":"    @FXML"},{"lineNumber":37,"author":{"gitId":"Cedo8"},"content":"    public void initialize() {"},{"lineNumber":38,"author":{"gitId":"Cedo8"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":39,"author":{"gitId":"Cedo8"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(\"Hello, I\u0027m Bearimy! How can I help you today?\","},{"lineNumber":40,"author":{"gitId":"Cedo8"},"content":"                dukeImage));"},{"lineNumber":41,"author":{"gitId":"Cedo8"},"content":"        if (!Duke.getTasks().getListOfTasks().isEmpty()) {"},{"lineNumber":42,"author":{"gitId":"Cedo8"},"content":"            String savedTasks \u003d \"Welcome back! Here are the tasks in your list:\\n\";"},{"lineNumber":43,"author":{"gitId":"Cedo8"},"content":"            for (Task task : Duke.getTasks().getListOfTasks()) {"},{"lineNumber":44,"author":{"gitId":"Cedo8"},"content":"                savedTasks +\u003d task + \"\\n\";"},{"lineNumber":45,"author":{"gitId":"Cedo8"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"Cedo8"},"content":"            dialogContainer.getChildren().add(DialogBox.getDialogBox(savedTasks));"},{"lineNumber":47,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":50,"author":{"gitId":"Cedo8"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":51,"author":{"gitId":"Cedo8"},"content":"        duke \u003d d;"},{"lineNumber":52,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":54,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"Cedo8"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":56,"author":{"gitId":"Cedo8"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":57,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"Cedo8"},"content":"    @FXML"},{"lineNumber":59,"author":{"gitId":"Cedo8"},"content":"    public void handleUserInput() throws IOException {"},{"lineNumber":60,"author":{"gitId":"Cedo8"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":61,"author":{"gitId":"Cedo8"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":62,"author":{"gitId":"Cedo8"},"content":"            Platform.exit();"},{"lineNumber":63,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"Cedo8"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":65,"author":{"gitId":"Cedo8"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":66,"author":{"gitId":"Cedo8"},"content":"                DialogBox.getUserDialog(\"[User] \" + input, userImage),"},{"lineNumber":67,"author":{"gitId":"Cedo8"},"content":"                DialogBox.getDukeDialog(\"[Bearimy] \" + response, dukeImage)"},{"lineNumber":68,"author":{"gitId":"Cedo8"},"content":"        );"},{"lineNumber":69,"author":{"gitId":"Cedo8"},"content":"        userInput.clear();"},{"lineNumber":70,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"Cedo8"},"content":"}"}],"authorContributionMap":{"Cedo8":71}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":"import java.time.DateTimeException;"},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":"import duke.task.Deadline;"},{"lineNumber":9,"author":{"gitId":"Cedo8"},"content":"import duke.task.Event;"},{"lineNumber":10,"author":{"gitId":"Cedo8"},"content":"import duke.task.Task;"},{"lineNumber":11,"author":{"gitId":"Cedo8"},"content":"import duke.task.ToDo;"},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":13,"author":{"gitId":"Cedo8"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"Cedo8"},"content":" * Deals with making sense of the user command"},{"lineNumber":15,"author":{"gitId":"Cedo8"},"content":" */"},{"lineNumber":16,"author":{"gitId":"Cedo8"},"content":"public class Parser {"},{"lineNumber":17,"author":{"gitId":"Cedo8"},"content":"    private static boolean isExit \u003d false;"},{"lineNumber":18,"author":{"gitId":"Cedo8"},"content":"    private static TaskList tasks;"},{"lineNumber":19,"author":{"gitId":"Cedo8"},"content":"    private static Storage storage;"},{"lineNumber":20,"author":{"gitId":"Cedo8"},"content":"    private static Task currentTask;"},{"lineNumber":21,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":22,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Cedo8"},"content":"     * Sets Parser\u0027s tasks to that of Duke\u0027s"},{"lineNumber":24,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Cedo8"},"content":"     * @param tasks from Duke"},{"lineNumber":26,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Cedo8"},"content":"    public static void setTasks(TaskList tasks) {"},{"lineNumber":28,"author":{"gitId":"Cedo8"},"content":"        Parser.tasks \u003d tasks;"},{"lineNumber":29,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":31,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"Cedo8"},"content":"     * Sets Parser\u0027s storage to that of Duke\u0027s"},{"lineNumber":33,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"Cedo8"},"content":"     * @param storage from Duke"},{"lineNumber":35,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"Cedo8"},"content":"    public static void setStorage(Storage storage) {"},{"lineNumber":37,"author":{"gitId":"Cedo8"},"content":"        Parser.storage \u003d storage;"},{"lineNumber":38,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":40,"author":{"gitId":"Cedo8"},"content":"    public static boolean getExitStatus() {"},{"lineNumber":41,"author":{"gitId":"Cedo8"},"content":"        return Parser.isExit;"},{"lineNumber":42,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":44,"author":{"gitId":"Cedo8"},"content":"    private static String outputDoneMessage(int taskToMark) throws IOException {"},{"lineNumber":45,"author":{"gitId":"Cedo8"},"content":"        String output \u003d \"Task Accomplished! I\u0027ve marked this task as done:\\n\";"},{"lineNumber":46,"author":{"gitId":"Cedo8"},"content":"        tasks.get(taskToMark).markAsDone();"},{"lineNumber":47,"author":{"gitId":"Cedo8"},"content":"        output +\u003d tasks.get(taskToMark);"},{"lineNumber":48,"author":{"gitId":"Cedo8"},"content":"        storage.refresh(tasks);"},{"lineNumber":49,"author":{"gitId":"Cedo8"},"content":"        return output;"},{"lineNumber":50,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":52,"author":{"gitId":"Cedo8"},"content":"    private static String outputDeleteMessage(int taskToDelete) throws IOException {"},{"lineNumber":53,"author":{"gitId":"Cedo8"},"content":"        String output \u003d \"Alright! I\u0027ve removed this task:\\n\";"},{"lineNumber":54,"author":{"gitId":"Cedo8"},"content":"        output +\u003d tasks.remove(taskToDelete) + \"\\n\";"},{"lineNumber":55,"author":{"gitId":"Cedo8"},"content":"        output +\u003d \"Now you have \" + tasks.size() + \" tasks in your list.\";"},{"lineNumber":56,"author":{"gitId":"Cedo8"},"content":"        storage.refresh(tasks);"},{"lineNumber":57,"author":{"gitId":"Cedo8"},"content":"        return output;"},{"lineNumber":58,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":60,"author":{"gitId":"Cedo8"},"content":"    private static String outputTaskMessage(Task currentTask) throws IOException {"},{"lineNumber":61,"author":{"gitId":"Cedo8"},"content":"        String output \u003d \"Got it! I\u0027ve added this task:\\n\";"},{"lineNumber":62,"author":{"gitId":"Cedo8"},"content":"        tasks.add(currentTask);"},{"lineNumber":63,"author":{"gitId":"Cedo8"},"content":"        storage.append(currentTask);"},{"lineNumber":64,"author":{"gitId":"Cedo8"},"content":"        output +\u003d tasks.get(tasks.size() - 1) + \"\\n\";"},{"lineNumber":65,"author":{"gitId":"Cedo8"},"content":"        output +\u003d \"Now you have \" + tasks.size() + \" tasks in your list.\";"},{"lineNumber":66,"author":{"gitId":"Cedo8"},"content":"        return output;"},{"lineNumber":67,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":69,"author":{"gitId":"Cedo8"},"content":"    private static String outputDuplicateMessage(Task task) {"},{"lineNumber":70,"author":{"gitId":"Cedo8"},"content":"        String duplicateMessage \u003d \"The existing tasks have the same description:\\n\";"},{"lineNumber":71,"author":{"gitId":"Cedo8"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {"},{"lineNumber":72,"author":{"gitId":"Cedo8"},"content":"            Task currentTask \u003d tasks.get(i - 1);"},{"lineNumber":73,"author":{"gitId":"Cedo8"},"content":"            if (currentTask.getDescription().equals(task.getDescription())) {"},{"lineNumber":74,"author":{"gitId":"Cedo8"},"content":"                duplicateMessage +\u003d i + \". \" + currentTask + \"\\n\";"},{"lineNumber":75,"author":{"gitId":"Cedo8"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"Cedo8"},"content":"        duplicateMessage +\u003d \"Enter \\\"yes\\\" if you wish to keep task or \\\"no\\\" otherwise.\";"},{"lineNumber":78,"author":{"gitId":"Cedo8"},"content":"        Parser.currentTask \u003d task;"},{"lineNumber":79,"author":{"gitId":"Cedo8"},"content":"        return duplicateMessage;"},{"lineNumber":80,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":82,"author":{"gitId":"Cedo8"},"content":"    private static boolean hasDuplicates(String taskString) {"},{"lineNumber":83,"author":{"gitId":"Cedo8"},"content":"        for (Task task : tasks.getListOfTasks()) {"},{"lineNumber":84,"author":{"gitId":"Cedo8"},"content":"            if (task.getDescription().equals(taskString)) {"},{"lineNumber":85,"author":{"gitId":"Cedo8"},"content":"                return true;"},{"lineNumber":86,"author":{"gitId":"Cedo8"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"Cedo8"},"content":"        return false;"},{"lineNumber":89,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":91,"author":{"gitId":"Cedo8"},"content":"    private static String executeExit() {"},{"lineNumber":92,"author":{"gitId":"Cedo8"},"content":"        Parser.isExit \u003d true;"},{"lineNumber":93,"author":{"gitId":"Cedo8"},"content":"        return \"Goodbye, have a nice day :D\";"},{"lineNumber":94,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":96,"author":{"gitId":"Cedo8"},"content":"    private static String executeList() {"},{"lineNumber":97,"author":{"gitId":"Cedo8"},"content":"        String output \u003d \"Here are the tasks in your list:\" + \"\\n\";"},{"lineNumber":98,"author":{"gitId":"Cedo8"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {"},{"lineNumber":99,"author":{"gitId":"Cedo8"},"content":"            output +\u003d i + \". \" + tasks.get(i - 1) + \"\\n\";"},{"lineNumber":100,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"Cedo8"},"content":"        return output;"},{"lineNumber":102,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":104,"author":{"gitId":"Cedo8"},"content":"    private static String executeDone(String command) throws IOException {"},{"lineNumber":105,"author":{"gitId":"Cedo8"},"content":"        if (command.trim().length() \u003d\u003d 4) {"},{"lineNumber":106,"author":{"gitId":"Cedo8"},"content":"            return new DukeException(\"Hold up! Please specify which task is done.\").getMessage();"},{"lineNumber":107,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"Cedo8"},"content":"        int taskToMark \u003d Integer.parseInt(command.substring(5)) - 1;"},{"lineNumber":109,"author":{"gitId":"Cedo8"},"content":"        if (taskToMark \u003e\u003d tasks.size()) {"},{"lineNumber":110,"author":{"gitId":"Cedo8"},"content":"            return new DukeException(\"Hold up! Please specify a valid task number.\").getMessage();"},{"lineNumber":111,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":113,"author":{"gitId":"Cedo8"},"content":"        return outputDoneMessage(taskToMark);"},{"lineNumber":114,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":116,"author":{"gitId":"Cedo8"},"content":"    private static String executeDelete(String command) throws IOException {"},{"lineNumber":117,"author":{"gitId":"Cedo8"},"content":"        if (command.trim().length() \u003d\u003d 6) {"},{"lineNumber":118,"author":{"gitId":"Cedo8"},"content":"            return new DukeException(\"Hold up! Please specify which task to delete.\").getMessage();"},{"lineNumber":119,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"Cedo8"},"content":"        int taskToDelete \u003d Integer.parseInt(command.substring(7)) - 1;"},{"lineNumber":121,"author":{"gitId":"Cedo8"},"content":"        if (taskToDelete \u003e\u003d tasks.size()) {"},{"lineNumber":122,"author":{"gitId":"Cedo8"},"content":"            return new DukeException(\"Hold up! Please specify a valid task number.\").getMessage();"},{"lineNumber":123,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":125,"author":{"gitId":"Cedo8"},"content":"        return outputDeleteMessage(taskToDelete);"},{"lineNumber":126,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":128,"author":{"gitId":"Cedo8"},"content":"    private static String executeFind(String command) {"},{"lineNumber":129,"author":{"gitId":"Cedo8"},"content":"        if (command.trim().length() \u003d\u003d 4) {"},{"lineNumber":130,"author":{"gitId":"Cedo8"},"content":"            return new DukeException(\"Hold up! Please specify keyword.\").getMessage();"},{"lineNumber":131,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":133,"author":{"gitId":"Cedo8"},"content":"        String output \u003d \"Here are the matching tasks in your list:\\n\";"},{"lineNumber":134,"author":{"gitId":"Cedo8"},"content":"        final int outputLength \u003d output.length();"},{"lineNumber":135,"author":{"gitId":"Cedo8"},"content":"        String keyword \u003d command.substring(5);"},{"lineNumber":136,"author":{"gitId":"Cedo8"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {"},{"lineNumber":137,"author":{"gitId":"Cedo8"},"content":"            Task currentTask \u003d tasks.get(i - 1);"},{"lineNumber":138,"author":{"gitId":"Cedo8"},"content":"            if (currentTask.toString().contains(keyword)) {"},{"lineNumber":139,"author":{"gitId":"Cedo8"},"content":"                output +\u003d i + \". \" + currentTask + \"\\n\";"},{"lineNumber":140,"author":{"gitId":"Cedo8"},"content":"            }"},{"lineNumber":141,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"Cedo8"},"content":"        return (output.length() \u003d\u003d outputLength) ? \"There are no matching tasks!\" : output;"},{"lineNumber":143,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":145,"author":{"gitId":"Cedo8"},"content":"    private static String executeTodo(String command) throws IOException {"},{"lineNumber":146,"author":{"gitId":"Cedo8"},"content":"        if (command.trim().length() \u003d\u003d 4) {"},{"lineNumber":147,"author":{"gitId":"Cedo8"},"content":"            return new DukeException(\"Hold up! The description of todo cannot be empty...\").getMessage();"},{"lineNumber":148,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":150,"author":{"gitId":"Cedo8"},"content":"        String taskString \u003d command.substring(5);"},{"lineNumber":151,"author":{"gitId":"Cedo8"},"content":"        ToDo currentTask \u003d new ToDo(taskString);"},{"lineNumber":152,"author":{"gitId":"Cedo8"},"content":"        if (hasDuplicates(taskString)) {"},{"lineNumber":153,"author":{"gitId":"Cedo8"},"content":"            return outputDuplicateMessage(currentTask);"},{"lineNumber":154,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"Cedo8"},"content":"        return outputTaskMessage(currentTask);"},{"lineNumber":156,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":158,"author":{"gitId":"Cedo8"},"content":"    private static String executeDeadline(String command) throws IOException {"},{"lineNumber":159,"author":{"gitId":"Cedo8"},"content":"        if (command.trim().length() \u003d\u003d 8) {"},{"lineNumber":160,"author":{"gitId":"Cedo8"},"content":"            return new DukeException(\"Hold up! The description of deadline cannot be empty...\").getMessage();"},{"lineNumber":161,"author":{"gitId":"Cedo8"},"content":"        } else if (!command.contains(\"/by\")) {"},{"lineNumber":162,"author":{"gitId":"Cedo8"},"content":"            return new DukeException(\"Please specify deadline using: /by (deadline)\").getMessage();"},{"lineNumber":163,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":165,"author":{"gitId":"Cedo8"},"content":"        int endIndex \u003d command.indexOf(\"/by\") - 1;"},{"lineNumber":166,"author":{"gitId":"Cedo8"},"content":"        String taskString \u003d command.substring(9, endIndex);"},{"lineNumber":167,"author":{"gitId":"Cedo8"},"content":"        String dateTimeString \u003d command.substring(endIndex + 5);"},{"lineNumber":168,"author":{"gitId":"Cedo8"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":169,"author":{"gitId":"Cedo8"},"content":"        try {"},{"lineNumber":170,"author":{"gitId":"Cedo8"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeString, formatter);"},{"lineNumber":171,"author":{"gitId":"Cedo8"},"content":"            Deadline currentTask \u003d new Deadline(taskString,"},{"lineNumber":172,"author":{"gitId":"Cedo8"},"content":"                    dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")));"},{"lineNumber":173,"author":{"gitId":"Cedo8"},"content":"            if (hasDuplicates(taskString)) {"},{"lineNumber":174,"author":{"gitId":"Cedo8"},"content":"                return outputDuplicateMessage(currentTask);"},{"lineNumber":175,"author":{"gitId":"Cedo8"},"content":"            }"},{"lineNumber":176,"author":{"gitId":"Cedo8"},"content":"            return outputTaskMessage(currentTask);"},{"lineNumber":177,"author":{"gitId":"Cedo8"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":178,"author":{"gitId":"Cedo8"},"content":"            return new DukeException(\"Please specify date \u0026 time in the form yyyy-MM-dd HHmm\").getMessage();"},{"lineNumber":179,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":180,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":182,"author":{"gitId":"Cedo8"},"content":"    private static String executeEvent(String command) throws IOException {"},{"lineNumber":183,"author":{"gitId":"Cedo8"},"content":"        if (command.trim().length() \u003d\u003d 5) {"},{"lineNumber":184,"author":{"gitId":"Cedo8"},"content":"            return new DukeException(\"Hold up! The description of event cannot be empty...\").getMessage();"},{"lineNumber":185,"author":{"gitId":"Cedo8"},"content":"        } else if (!command.contains(\"/at\")) {"},{"lineNumber":186,"author":{"gitId":"Cedo8"},"content":"            return new DukeException(\"Please specify timing using: /at (timing)\").getMessage();"},{"lineNumber":187,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":189,"author":{"gitId":"Cedo8"},"content":"        int endIndex \u003d command.indexOf(\"/at\") - 1;"},{"lineNumber":190,"author":{"gitId":"Cedo8"},"content":"        String taskString \u003d command.substring(6, endIndex);"},{"lineNumber":191,"author":{"gitId":"Cedo8"},"content":"        String atString \u003d command.substring(endIndex + 5);"},{"lineNumber":192,"author":{"gitId":"Cedo8"},"content":"        Event currentTask \u003d new Event(taskString, atString);"},{"lineNumber":193,"author":{"gitId":"Cedo8"},"content":"        if (hasDuplicates(taskString)) {"},{"lineNumber":194,"author":{"gitId":"Cedo8"},"content":"            return outputDuplicateMessage(currentTask);"},{"lineNumber":195,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"Cedo8"},"content":"        return outputTaskMessage(currentTask);"},{"lineNumber":197,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":199,"author":{"gitId":"Cedo8"},"content":"    private static String executeTask(String command) throws IOException {"},{"lineNumber":200,"author":{"gitId":"Cedo8"},"content":"        if (command.startsWith(\"todo\")) {"},{"lineNumber":201,"author":{"gitId":"Cedo8"},"content":"            return executeTodo(command);"},{"lineNumber":202,"author":{"gitId":"Cedo8"},"content":"        } else if (command.startsWith(\"deadline\")) {"},{"lineNumber":203,"author":{"gitId":"Cedo8"},"content":"            return executeDeadline(command);"},{"lineNumber":204,"author":{"gitId":"Cedo8"},"content":"        } else if (command.startsWith(\"event\")) {"},{"lineNumber":205,"author":{"gitId":"Cedo8"},"content":"            return executeEvent(command);"},{"lineNumber":206,"author":{"gitId":"Cedo8"},"content":"        } else {"},{"lineNumber":207,"author":{"gitId":"Cedo8"},"content":"            return new DukeException(\"Sorry, I\u0027m not sure what you mean by that :(\").getMessage();"},{"lineNumber":208,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":209,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":211,"author":{"gitId":"Cedo8"},"content":"    private static String executeDuplicateHandling(String command) throws IOException {"},{"lineNumber":212,"author":{"gitId":"Cedo8"},"content":"        assert command.equals(\"yes\") || command.equals(\"no\");"},{"lineNumber":213,"author":{"gitId":"Cedo8"},"content":"        String output \u003d \"\";"},{"lineNumber":214,"author":{"gitId":"Cedo8"},"content":"        if (Parser.currentTask \u003d\u003d null) { // scenario where the user entered \"yes\" or \"no\" randomly"},{"lineNumber":215,"author":{"gitId":"Cedo8"},"content":"            return \"Invalid command\";"},{"lineNumber":216,"author":{"gitId":"Cedo8"},"content":"        } else if (command.equals(\"yes\")) {"},{"lineNumber":217,"author":{"gitId":"Cedo8"},"content":"            output +\u003d outputTaskMessage(Parser.currentTask);"},{"lineNumber":218,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":219,"author":{"gitId":"Cedo8"},"content":"        Parser.currentTask \u003d null; // clears Parser.currentTask each time duplicate handling is completed"},{"lineNumber":220,"author":{"gitId":"Cedo8"},"content":"        return output.length() \u003d\u003d 0 ? \"Noted! The task will not be added.\" : output;"},{"lineNumber":221,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":222,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":223,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":224,"author":{"gitId":"Cedo8"},"content":"     * Takes in a single line of command. isExit becomes true when the String \"bye\" is entered,"},{"lineNumber":225,"author":{"gitId":"Cedo8"},"content":"     * prompting the main program to exit."},{"lineNumber":226,"author":{"gitId":"Cedo8"},"content":"     * Program stores user inputs as Tasks and returns the list when the String \"list\" is entered."},{"lineNumber":227,"author":{"gitId":"Cedo8"},"content":"     * Tasks are categorised into \"todo\", \"deadline\" (to specify \"by\") and \"event\"  (to specify \"at\")."},{"lineNumber":228,"author":{"gitId":"Cedo8"},"content":"     * When \"done xx\" is entered, Task xx in the list is marked as done."},{"lineNumber":229,"author":{"gitId":"Cedo8"},"content":"     * When \"delete xx\" is entered, Task xx in the list is removed from the list."},{"lineNumber":230,"author":{"gitId":"Cedo8"},"content":"     * When \"find xx\" is entered, tasks in the task list containing keyword xx will be shown."},{"lineNumber":231,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":232,"author":{"gitId":"Cedo8"},"content":"     * @param command user input"},{"lineNumber":233,"author":{"gitId":"Cedo8"},"content":"     * @return duke\u0027s reply"},{"lineNumber":234,"author":{"gitId":"Cedo8"},"content":"     * @throws IOException if filePath does not exist"},{"lineNumber":235,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":236,"author":{"gitId":"Cedo8"},"content":"    public static String parse(String command) throws IOException {"},{"lineNumber":237,"author":{"gitId":"Cedo8"},"content":"        assert tasks.size() \u003e\u003d 0;"},{"lineNumber":238,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":239,"author":{"gitId":"Cedo8"},"content":"        if (command.equals(\"bye\")) {"},{"lineNumber":240,"author":{"gitId":"Cedo8"},"content":"            return executeExit();"},{"lineNumber":241,"author":{"gitId":"Cedo8"},"content":"        } else if (command.equals(\"list\")) {"},{"lineNumber":242,"author":{"gitId":"Cedo8"},"content":"            return executeList();"},{"lineNumber":243,"author":{"gitId":"Cedo8"},"content":"        } else if (command.equals(\"yes\") || command.equals(\"no\")) {"},{"lineNumber":244,"author":{"gitId":"Cedo8"},"content":"            return executeDuplicateHandling(command);"},{"lineNumber":245,"author":{"gitId":"Cedo8"},"content":"        } else if (command.startsWith(\"done\")) {"},{"lineNumber":246,"author":{"gitId":"Cedo8"},"content":"            return executeDone(command);"},{"lineNumber":247,"author":{"gitId":"Cedo8"},"content":"        } else if (command.startsWith(\"delete\")) {"},{"lineNumber":248,"author":{"gitId":"Cedo8"},"content":"            return executeDelete(command);"},{"lineNumber":249,"author":{"gitId":"Cedo8"},"content":"        } else if (command.startsWith(\"find\")) {"},{"lineNumber":250,"author":{"gitId":"Cedo8"},"content":"            return executeFind(command);"},{"lineNumber":251,"author":{"gitId":"Cedo8"},"content":"        } else {"},{"lineNumber":252,"author":{"gitId":"Cedo8"},"content":"            return executeTask(command);"},{"lineNumber":253,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":254,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":255,"author":{"gitId":"Cedo8"},"content":"}"}],"authorContributionMap":{"Cedo8":255}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":9,"author":{"gitId":"Cedo8"},"content":"import duke.task.Deadline;"},{"lineNumber":10,"author":{"gitId":"Cedo8"},"content":"import duke.task.Event;"},{"lineNumber":11,"author":{"gitId":"Cedo8"},"content":"import duke.task.Task;"},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":"import duke.task.ToDo;"},{"lineNumber":13,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":14,"author":{"gitId":"Cedo8"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"Cedo8"},"content":" *  Deals with loading tasks from the file and saving tasks in the file"},{"lineNumber":16,"author":{"gitId":"Cedo8"},"content":" */"},{"lineNumber":17,"author":{"gitId":"Cedo8"},"content":"public class Storage {"},{"lineNumber":18,"author":{"gitId":"Cedo8"},"content":"    private final String filePath;"},{"lineNumber":19,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":20,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Cedo8"},"content":"     * Constructor for creating storage object"},{"lineNumber":22,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"Cedo8"},"content":"     * @param filePath relative directory of the storage file"},{"lineNumber":24,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Cedo8"},"content":"    public Storage(String filePath) {"},{"lineNumber":26,"author":{"gitId":"Cedo8"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":27,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":29,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Cedo8"},"content":"     * Generates a Task object given string of form: [Type of Task][symbol] description (by: )/(at: )"},{"lineNumber":31,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"Cedo8"},"content":"     * @param string task in string form"},{"lineNumber":33,"author":{"gitId":"Cedo8"},"content":"     * @return corresponding Task object"},{"lineNumber":34,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Cedo8"},"content":"    public static Task genTaskFromString(String string) {"},{"lineNumber":36,"author":{"gitId":"Cedo8"},"content":"        assert string.charAt(1) \u003d\u003d \u0027T\u0027 || string.charAt(1) \u003d\u003d \u0027D\u0027 || string.charAt(1) \u003d\u003d \u0027E\u0027;"},{"lineNumber":37,"author":{"gitId":"Cedo8"},"content":"        boolean status \u003d (string.charAt(4) \u003d\u003d \u0027O\u0027);"},{"lineNumber":38,"author":{"gitId":"Cedo8"},"content":"        char taskType \u003d string.charAt(1);"},{"lineNumber":39,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":40,"author":{"gitId":"Cedo8"},"content":"        if (taskType \u003d\u003d \u0027T\u0027) {"},{"lineNumber":41,"author":{"gitId":"Cedo8"},"content":"            return new ToDo(string.substring(7), status);"},{"lineNumber":42,"author":{"gitId":"Cedo8"},"content":"        } else if (taskType \u003d\u003d \u0027D\u0027) {"},{"lineNumber":43,"author":{"gitId":"Cedo8"},"content":"            int endIndex \u003d string.indexOf(\"(by:\") - 1;"},{"lineNumber":44,"author":{"gitId":"Cedo8"},"content":"            String taskString \u003d string.substring(7, endIndex);"},{"lineNumber":45,"author":{"gitId":"Cedo8"},"content":"            String dateTimeString \u003d string.substring(endIndex + 6, string.length() - 1);"},{"lineNumber":46,"author":{"gitId":"Cedo8"},"content":"            return new Deadline(taskString, dateTimeString, status);"},{"lineNumber":47,"author":{"gitId":"Cedo8"},"content":"        } else {"},{"lineNumber":48,"author":{"gitId":"Cedo8"},"content":"            int endIndex \u003d string.indexOf(\"(at:\") - 1;"},{"lineNumber":49,"author":{"gitId":"Cedo8"},"content":"            String taskString \u003d string.substring(7, endIndex);"},{"lineNumber":50,"author":{"gitId":"Cedo8"},"content":"            String atString \u003d string.substring(endIndex + 6, string.length() - 1);"},{"lineNumber":51,"author":{"gitId":"Cedo8"},"content":"            return new Event(taskString, atString, status);"},{"lineNumber":52,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":55,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"Cedo8"},"content":"     * Clears the storage file"},{"lineNumber":57,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"Cedo8"},"content":"     * @throws IOException if filePath does not exist"},{"lineNumber":59,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"Cedo8"},"content":"    public void clear() throws IOException {"},{"lineNumber":61,"author":{"gitId":"Cedo8"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);"},{"lineNumber":62,"author":{"gitId":"Cedo8"},"content":"        fw.write(\"\");"},{"lineNumber":63,"author":{"gitId":"Cedo8"},"content":"        fw.close();"},{"lineNumber":64,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":66,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"Cedo8"},"content":"     * Saves the given task list to the storage filePath"},{"lineNumber":68,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"Cedo8"},"content":"     * @param tasksToSave a TaskList of all existing tasks"},{"lineNumber":70,"author":{"gitId":"Cedo8"},"content":"     * @throws IOException if filePath does not exist"},{"lineNumber":71,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"Cedo8"},"content":"    public void save(TaskList tasksToSave) throws IOException {"},{"lineNumber":73,"author":{"gitId":"Cedo8"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath, true);"},{"lineNumber":74,"author":{"gitId":"Cedo8"},"content":"        for (Task task : tasksToSave.getListOfTasks()) {"},{"lineNumber":75,"author":{"gitId":"Cedo8"},"content":"            fw.write(task.toString() + System.lineSeparator());"},{"lineNumber":76,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"Cedo8"},"content":"        fw.close();"},{"lineNumber":78,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":80,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"Cedo8"},"content":"     * Adds a task to the storage filePath"},{"lineNumber":82,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"Cedo8"},"content":"     * @param task task to be added"},{"lineNumber":84,"author":{"gitId":"Cedo8"},"content":"     * @throws IOException if filePath does not exist"},{"lineNumber":85,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"Cedo8"},"content":"    public void append(Task task) throws IOException {"},{"lineNumber":87,"author":{"gitId":"Cedo8"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath, true);"},{"lineNumber":88,"author":{"gitId":"Cedo8"},"content":"        fw.write(task.toString() + System.lineSeparator());"},{"lineNumber":89,"author":{"gitId":"Cedo8"},"content":"        fw.close();"},{"lineNumber":90,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":92,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"Cedo8"},"content":"     * Carries out clear() and save() sequentially"},{"lineNumber":94,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":95,"author":{"gitId":"Cedo8"},"content":"     * @param tasksToRefresh a TaskList of all existing tasks"},{"lineNumber":96,"author":{"gitId":"Cedo8"},"content":"     * @throws IOException if filePath does not exist"},{"lineNumber":97,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"Cedo8"},"content":"    public void refresh(TaskList tasksToRefresh) throws IOException {"},{"lineNumber":99,"author":{"gitId":"Cedo8"},"content":"        this.clear();"},{"lineNumber":100,"author":{"gitId":"Cedo8"},"content":"        this.save(tasksToRefresh);"},{"lineNumber":101,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":103,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"Cedo8"},"content":"     * Locate the storage file (creating a new file if it does not exist) and adds"},{"lineNumber":105,"author":{"gitId":"Cedo8"},"content":"     * all the existing tasks in the file to an ArrayList"},{"lineNumber":106,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"Cedo8"},"content":"     * @return ArrayList of all existing tasks"},{"lineNumber":108,"author":{"gitId":"Cedo8"},"content":"     * @throws IOException if filePath does not exist"},{"lineNumber":109,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"Cedo8"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {"},{"lineNumber":111,"author":{"gitId":"Cedo8"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":112,"author":{"gitId":"Cedo8"},"content":"        File f \u003d new File(this.filePath);"},{"lineNumber":113,"author":{"gitId":"Cedo8"},"content":"        if (!f.exists()) {"},{"lineNumber":114,"author":{"gitId":"Cedo8"},"content":"            f.createNewFile();"},{"lineNumber":115,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"Cedo8"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":117,"author":{"gitId":"Cedo8"},"content":"        while (s.hasNext()) {"},{"lineNumber":118,"author":{"gitId":"Cedo8"},"content":"            String currentTask \u003d s.nextLine();"},{"lineNumber":119,"author":{"gitId":"Cedo8"},"content":"            tasks.add(genTaskFromString(currentTask));"},{"lineNumber":120,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"Cedo8"},"content":"        return tasks;"},{"lineNumber":122,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"Cedo8"},"content":"}"}],"authorContributionMap":{"Cedo8":123}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":" * contains the task list"},{"lineNumber":9,"author":{"gitId":"Cedo8"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Cedo8"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"Cedo8"},"content":"    private final ArrayList\u003cTask\u003e listOfTasks;"},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":13,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Cedo8"},"content":"     * Constructor for creating TaskList object"},{"lineNumber":15,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"Cedo8"},"content":"     * @param listOfTasks list of input tasks"},{"lineNumber":17,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"Cedo8"},"content":"    public TaskList(ArrayList\u003cTask\u003e listOfTasks) {"},{"lineNumber":19,"author":{"gitId":"Cedo8"},"content":"        this.listOfTasks \u003d listOfTasks;"},{"lineNumber":20,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":22,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Cedo8"},"content":"     * Alternative constructor for empty list"},{"lineNumber":24,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Cedo8"},"content":"    public TaskList() {"},{"lineNumber":26,"author":{"gitId":"Cedo8"},"content":"        this.listOfTasks \u003d null;"},{"lineNumber":27,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":29,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Cedo8"},"content":"     * Getter for retrieving list of tasks"},{"lineNumber":31,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"Cedo8"},"content":"     * @return list of tasks"},{"lineNumber":33,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"Cedo8"},"content":"    public ArrayList\u003cTask\u003e getListOfTasks() {"},{"lineNumber":35,"author":{"gitId":"Cedo8"},"content":"        return this.listOfTasks;"},{"lineNumber":36,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":38,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Cedo8"},"content":"     * Retrieves task at a specified index"},{"lineNumber":40,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"Cedo8"},"content":"     * @param index position of task in list"},{"lineNumber":42,"author":{"gitId":"Cedo8"},"content":"     * @return corresponding task"},{"lineNumber":43,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"Cedo8"},"content":"    public Task get(int index) {"},{"lineNumber":45,"author":{"gitId":"Cedo8"},"content":"        assert this.listOfTasks !\u003d null;"},{"lineNumber":46,"author":{"gitId":"Cedo8"},"content":"        return this.listOfTasks.get(index);"},{"lineNumber":47,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":49,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"Cedo8"},"content":"     * Removes task at a specified index"},{"lineNumber":51,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"Cedo8"},"content":"     * @param index position of task in list"},{"lineNumber":53,"author":{"gitId":"Cedo8"},"content":"     * @return corresponding task"},{"lineNumber":54,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"Cedo8"},"content":"    public Task remove(int index) {"},{"lineNumber":56,"author":{"gitId":"Cedo8"},"content":"        assert this.listOfTasks !\u003d null;"},{"lineNumber":57,"author":{"gitId":"Cedo8"},"content":"        return this.listOfTasks.remove(index);"},{"lineNumber":58,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":60,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"Cedo8"},"content":"     * Retrieves number of tasks in the list"},{"lineNumber":62,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"Cedo8"},"content":"     * @return number of tasks"},{"lineNumber":64,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"Cedo8"},"content":"    public int size() {"},{"lineNumber":66,"author":{"gitId":"Cedo8"},"content":"        assert this.listOfTasks !\u003d null;"},{"lineNumber":67,"author":{"gitId":"Cedo8"},"content":"        return this.listOfTasks.size();"},{"lineNumber":68,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":70,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"Cedo8"},"content":"     * Adds a task to the list"},{"lineNumber":72,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"Cedo8"},"content":"     * @param task task to be added"},{"lineNumber":74,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"Cedo8"},"content":"    public void add(Task task) {"},{"lineNumber":76,"author":{"gitId":"Cedo8"},"content":"        assert this.listOfTasks !\u003d null;"},{"lineNumber":77,"author":{"gitId":"Cedo8"},"content":"        this.listOfTasks.add(task);"},{"lineNumber":78,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"Cedo8"},"content":"}"}],"authorContributionMap":{"Cedo8":79}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":" * Deals with interactions with the user"},{"lineNumber":9,"author":{"gitId":"Cedo8"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Cedo8"},"content":"public class Ui {"},{"lineNumber":11,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":"     * Shows line divider"},{"lineNumber":13,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"Cedo8"},"content":"    public void showLine() {"},{"lineNumber":15,"author":{"gitId":"Cedo8"},"content":"        System.out.println("},{"lineNumber":16,"author":{"gitId":"Cedo8"},"content":"                \"_____________________________________________________________\");"},{"lineNumber":17,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":19,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Cedo8"},"content":"     * Shows welcome message and prints list of loaded tasks"},{"lineNumber":21,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Cedo8"},"content":"    public void showWelcome() {"},{"lineNumber":23,"author":{"gitId":"Cedo8"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":24,"author":{"gitId":"Cedo8"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":25,"author":{"gitId":"Cedo8"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":26,"author":{"gitId":"Cedo8"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":27,"author":{"gitId":"Cedo8"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":28,"author":{"gitId":"Cedo8"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":29,"author":{"gitId":"Cedo8"},"content":"        showLine();"},{"lineNumber":30,"author":{"gitId":"Cedo8"},"content":"        System.out.println(\"Beep Boop! Hello there!\\n\""},{"lineNumber":31,"author":{"gitId":"Cedo8"},"content":"                + \"What can I do for you?\");"},{"lineNumber":32,"author":{"gitId":"Cedo8"},"content":"        showLine();"},{"lineNumber":33,"author":{"gitId":"Cedo8"},"content":"        System.out.println(\"Welcome back! Here are the tasks in your list:\");"},{"lineNumber":34,"author":{"gitId":"Cedo8"},"content":"        for (Task task : Duke.getTasks().getListOfTasks()) {"},{"lineNumber":35,"author":{"gitId":"Cedo8"},"content":"            System.out.println(task);"},{"lineNumber":36,"author":{"gitId":"Cedo8"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"Cedo8"},"content":"        showLine();"},{"lineNumber":38,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":40,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"Cedo8"},"content":"     * Shows exit message"},{"lineNumber":42,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"Cedo8"},"content":"    public void showGoodbye() {"},{"lineNumber":44,"author":{"gitId":"Cedo8"},"content":"        System.out.println(\"Goodbye, have a nice day :D\");"},{"lineNumber":45,"author":{"gitId":"Cedo8"},"content":"        showLine();"},{"lineNumber":46,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":48,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"Cedo8"},"content":"     * Shows loading error message"},{"lineNumber":50,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"Cedo8"},"content":"    public void showLoadingError() {"},{"lineNumber":52,"author":{"gitId":"Cedo8"},"content":"        System.out.println(\"File not found\");"},{"lineNumber":53,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":55,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"Cedo8"},"content":"     * Takes in user input using scanner"},{"lineNumber":57,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"Cedo8"},"content":"     * @return string of user input"},{"lineNumber":59,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"Cedo8"},"content":"    public String readCommand() {"},{"lineNumber":61,"author":{"gitId":"Cedo8"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":62,"author":{"gitId":"Cedo8"},"content":"        return sc.nextLine();"},{"lineNumber":63,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Cedo8"},"content":"}"}],"authorContributionMap":{"Cedo8":64}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":" * A type of Task that has description and a \"by\" date"},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":"    protected String by;"},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":9,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"Cedo8"},"content":"     * Constructor for creating Deadline object"},{"lineNumber":11,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":"     * @param description name of task"},{"lineNumber":13,"author":{"gitId":"Cedo8"},"content":"     * @param by deadline date and time"},{"lineNumber":14,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Cedo8"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":16,"author":{"gitId":"Cedo8"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"Cedo8"},"content":"        this.by \u003d by;"},{"lineNumber":18,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":20,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Cedo8"},"content":"     * Alternative constructor that accounts for progress of task"},{"lineNumber":22,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"Cedo8"},"content":"     * @param description name of task"},{"lineNumber":24,"author":{"gitId":"Cedo8"},"content":"     * @param by deadline date and time"},{"lineNumber":25,"author":{"gitId":"Cedo8"},"content":"     * @param isDone whether task is completed"},{"lineNumber":26,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Cedo8"},"content":"    public Deadline(String description, String by, boolean isDone) {"},{"lineNumber":28,"author":{"gitId":"Cedo8"},"content":"        super(description);"},{"lineNumber":29,"author":{"gitId":"Cedo8"},"content":"        this.by \u003d by;"},{"lineNumber":30,"author":{"gitId":"Cedo8"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":31,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":33,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Cedo8"},"content":"     * toString method for Deadline"},{"lineNumber":35,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"Cedo8"},"content":"     * @return task in string form"},{"lineNumber":37,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Cedo8"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"Cedo8"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"Cedo8"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":41,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Cedo8"},"content":"}"}],"authorContributionMap":{"Cedo8":42}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":" * A type of Task that has description and an \"at\" date"},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":"    protected String at;"},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":9,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"Cedo8"},"content":"     * Constructor for creating Event object"},{"lineNumber":11,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":"     * @param description name of task"},{"lineNumber":13,"author":{"gitId":"Cedo8"},"content":"     * @param at event date and time"},{"lineNumber":14,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Cedo8"},"content":"    public Event(String description, String at) {"},{"lineNumber":16,"author":{"gitId":"Cedo8"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"Cedo8"},"content":"        this.at \u003d at;"},{"lineNumber":18,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":20,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Cedo8"},"content":"     * Alternative constructor that accounts for progress of task"},{"lineNumber":22,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"Cedo8"},"content":"     * @param description name of task"},{"lineNumber":24,"author":{"gitId":"Cedo8"},"content":"     * @param at event date and time"},{"lineNumber":25,"author":{"gitId":"Cedo8"},"content":"     * @param isDone whether task is completed"},{"lineNumber":26,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Cedo8"},"content":"    public Event(String description, String at, boolean isDone) {"},{"lineNumber":28,"author":{"gitId":"Cedo8"},"content":"        super(description);"},{"lineNumber":29,"author":{"gitId":"Cedo8"},"content":"        this.at \u003d at;"},{"lineNumber":30,"author":{"gitId":"Cedo8"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":31,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":33,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Cedo8"},"content":"     * toString method for Event"},{"lineNumber":35,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"Cedo8"},"content":"     * @return task in string form"},{"lineNumber":37,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Cedo8"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"Cedo8"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"Cedo8"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":41,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Cedo8"},"content":"}"}],"authorContributionMap":{"Cedo8":42}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":" * Parent class for the various types of tasks"},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":10,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"Cedo8"},"content":"     * Constructor for creating Task object"},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"Cedo8"},"content":"     * @param description name of task"},{"lineNumber":14,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Cedo8"},"content":"    public Task(String description) {"},{"lineNumber":16,"author":{"gitId":"Cedo8"},"content":"        this.description \u003d description.trim();"},{"lineNumber":17,"author":{"gitId":"Cedo8"},"content":"        this.isDone \u003d false;"},{"lineNumber":18,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":20,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Cedo8"},"content":"     * Retrieves status icon (tick or cross)"},{"lineNumber":22,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"Cedo8"},"content":"     * @return status icon"},{"lineNumber":24,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Cedo8"},"content":"    public String getStatusIcon() {"},{"lineNumber":26,"author":{"gitId":"Cedo8"},"content":"        //return tick or X symbols"},{"lineNumber":27,"author":{"gitId":"Cedo8"},"content":"        return (isDone ? \"O\" : \"X\");"},{"lineNumber":28,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":30,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Cedo8"},"content":"     * Retrieves description of task"},{"lineNumber":32,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"Cedo8"},"content":"     * @return description of task"},{"lineNumber":34,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Cedo8"},"content":"    public String getDescription() {"},{"lineNumber":36,"author":{"gitId":"Cedo8"},"content":"        return this.description;"},{"lineNumber":37,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":39,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"Cedo8"},"content":"     * Marks completed task as done"},{"lineNumber":41,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Cedo8"},"content":"    public void markAsDone() {"},{"lineNumber":43,"author":{"gitId":"Cedo8"},"content":"        this.isDone \u003d true;"},{"lineNumber":44,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":46,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"Cedo8"},"content":"     * toString method for Task"},{"lineNumber":48,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"Cedo8"},"content":"     * @return task in string form"},{"lineNumber":50,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"Cedo8"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"Cedo8"},"content":"    public String toString() {"},{"lineNumber":53,"author":{"gitId":"Cedo8"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":54,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Cedo8"},"content":"}"}],"authorContributionMap":{"Cedo8":55}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":" * A type of Task that has description only"},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":"public class ToDo extends Task {"},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":"     * Constructor for creating ToDo object"},{"lineNumber":9,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"Cedo8"},"content":"     * @param description name of task"},{"lineNumber":11,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":"    public ToDo(String description) {"},{"lineNumber":13,"author":{"gitId":"Cedo8"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":16,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Cedo8"},"content":"     * Alternative constructor that accounts for progress of task"},{"lineNumber":18,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Cedo8"},"content":"     * @param description name of task"},{"lineNumber":20,"author":{"gitId":"Cedo8"},"content":"     * @param isDone whether task is completed"},{"lineNumber":21,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Cedo8"},"content":"    public ToDo(String description, boolean isDone) {"},{"lineNumber":23,"author":{"gitId":"Cedo8"},"content":"        super(description);"},{"lineNumber":24,"author":{"gitId":"Cedo8"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":25,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":27,"author":{"gitId":"Cedo8"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"Cedo8"},"content":"     * toString method for ToDo"},{"lineNumber":29,"author":{"gitId":"Cedo8"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"Cedo8"},"content":"     * @return task in string form"},{"lineNumber":31,"author":{"gitId":"Cedo8"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Cedo8"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"Cedo8"},"content":"    public String toString() {"},{"lineNumber":34,"author":{"gitId":"Cedo8"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":35,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Cedo8"},"content":"}"}],"authorContributionMap":{"Cedo8":36}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"Cedo8"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"Cedo8"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" style\u003d\"-fx-background-color: PAPAYAWHIP; -fx-background-radius: 5; -fx-border-radius: 5;\" text\u003d\"Label\" textFill\u003d\"#673503\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"Cedo8"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"Cedo8"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"Cedo8"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"Cedo8"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"Cedo8"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"Cedo8":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":"\u003c?import javafx.scene.effect.InnerShadow?\u003e"},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":9,"author":{"gitId":"Cedo8"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":10,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":11,"author":{"gitId":"Cedo8"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":"    \u003cchildren\u003e"},{"lineNumber":13,"author":{"gitId":"Cedo8"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter a command\" style\u003d\"-fx-border-color: #da8f56; -fx-border-radius: 5; -fx-border-width: 2; -fx-background-color: BISQUE;\" AnchorPane.bottomAnchor\u003d\"0.7999999999999545\" /\u003e"},{"lineNumber":14,"author":{"gitId":"Cedo8"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #da8f56; -fx-background-radius: 2;\" text\u003d\"Send\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\"\u003e"},{"lineNumber":15,"author":{"gitId":"Cedo8"},"content":"         \u003cfont\u003e"},{"lineNumber":16,"author":{"gitId":"Cedo8"},"content":"            \u003cFont name\u003d\"SansSerif Bold\" size\u003d\"15.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"Cedo8"},"content":"         \u003c/font\u003e"},{"lineNumber":18,"author":{"gitId":"Cedo8"},"content":"         \u003ceffect\u003e"},{"lineNumber":19,"author":{"gitId":"Cedo8"},"content":"            \u003cInnerShadow height\u003d\"7.8\" radius\u003d\"3.45\" width\u003d\"8.0\" /\u003e"},{"lineNumber":20,"author":{"gitId":"Cedo8"},"content":"         \u003c/effect\u003e\u003c/Button\u003e"},{"lineNumber":21,"author":{"gitId":"Cedo8"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":22,"author":{"gitId":"Cedo8"},"content":"            \u003ccontent\u003e"},{"lineNumber":23,"author":{"gitId":"Cedo8"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-image: url(\u0027/images/background.png\u0027);\" /\u003e"},{"lineNumber":24,"author":{"gitId":"Cedo8"},"content":"            \u003c/content\u003e"},{"lineNumber":25,"author":{"gitId":"Cedo8"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":26,"author":{"gitId":"Cedo8"},"content":"    \u003c/children\u003e"},{"lineNumber":27,"author":{"gitId":"Cedo8"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"Cedo8":27}},{"path":"src/test/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":9,"author":{"gitId":"Cedo8"},"content":"class StorageTest {"},{"lineNumber":10,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":11,"author":{"gitId":"Cedo8"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":"    void genTaskFromString_undoneDeadline_correctDeadline() {"},{"lineNumber":13,"author":{"gitId":"Cedo8"},"content":"        String input \u003d \"[D][\\u2718] Submit iP (by: Aug 24 2020 2359)\";"},{"lineNumber":14,"author":{"gitId":"Cedo8"},"content":"        assertEquals(new Deadline(\"Submit iP\", \"Aug 24 2020 2359\", false).toString(), Storage.genTaskFromString(input).toString());"},{"lineNumber":15,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":17,"author":{"gitId":"Cedo8"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"Cedo8"},"content":"    void genTaskFromString_doneEvent_correctDeadline() {"},{"lineNumber":19,"author":{"gitId":"Cedo8"},"content":"        String input \u003d \"[E][\\u2713] Work on iP (at: Aug 24 2020 0900)\";"},{"lineNumber":20,"author":{"gitId":"Cedo8"},"content":"        assertEquals(new Event(\"Work on iP\", \"Aug 24 2020 0900\", true).toString(), Storage.genTaskFromString(input).toString());"},{"lineNumber":21,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Cedo8"},"content":"}"}],"authorContributionMap":{"Cedo8":22}},{"path":"src/test/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":9,"author":{"gitId":"Cedo8"},"content":"import duke.task.Task;"},{"lineNumber":10,"author":{"gitId":"Cedo8"},"content":"import duke.task.ToDo;"},{"lineNumber":11,"author":{"gitId":"Cedo8"},"content":"import duke.task.Deadline;"},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":"import duke.task.Event;"},{"lineNumber":13,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":14,"author":{"gitId":"Cedo8"},"content":"class TaskListTest {"},{"lineNumber":15,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":16,"author":{"gitId":"Cedo8"},"content":"    ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(Arrays.asList( new ToDo(\"Read\"),"},{"lineNumber":17,"author":{"gitId":"Cedo8"},"content":"            new Deadline(\"Submit Proposal\", \"Oct 30 2020 2359\"),"},{"lineNumber":18,"author":{"gitId":"Cedo8"},"content":"            new Event(\"Book Fair\" , \"Aug 30 1200-1400\")));"},{"lineNumber":19,"author":{"gitId":"Cedo8"},"content":"    TaskList taskList \u003d new TaskList(tasks);"},{"lineNumber":20,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":21,"author":{"gitId":"Cedo8"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"Cedo8"},"content":"    void getListOfTasks() {"},{"lineNumber":23,"author":{"gitId":"Cedo8"},"content":"        assertEquals(new ArrayList\u003c\u003e(Arrays.asList( new ToDo(\"Read\"),"},{"lineNumber":24,"author":{"gitId":"Cedo8"},"content":"                new Deadline(\"Submit Proposal\", \"Oct 30 2020 2359\"),"},{"lineNumber":25,"author":{"gitId":"Cedo8"},"content":"                new Event(\"Book Fair\" , \"Aug 30 1200-1400\"))).toString(), taskList.getListOfTasks().toString());"},{"lineNumber":26,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":28,"author":{"gitId":"Cedo8"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"Cedo8"},"content":"    void get() {"},{"lineNumber":30,"author":{"gitId":"Cedo8"},"content":"        assertEquals(new Deadline(\"Submit Proposal\", \"Oct 30 2020 2359\").toString(), taskList.get(1).toString());"},{"lineNumber":31,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":33,"author":{"gitId":"Cedo8"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"Cedo8"},"content":"    void remove() {"},{"lineNumber":35,"author":{"gitId":"Cedo8"},"content":"        assertEquals(new Event(\"Book Fair\" , \"Aug 30 1200-1400\").toString(), taskList.get(2).toString());"},{"lineNumber":36,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":38,"author":{"gitId":"Cedo8"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"Cedo8"},"content":"    void size() {"},{"lineNumber":40,"author":{"gitId":"Cedo8"},"content":"        assertEquals(3, taskList.size());"},{"lineNumber":41,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":43,"author":{"gitId":"Cedo8"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"Cedo8"},"content":"    void add() {"},{"lineNumber":45,"author":{"gitId":"Cedo8"},"content":"        tasks.add(new ToDo(\"Meditate\"));"},{"lineNumber":46,"author":{"gitId":"Cedo8"},"content":"        taskList.add(new ToDo(\"Meditate\"));"},{"lineNumber":47,"author":{"gitId":"Cedo8"},"content":"        assertEquals(tasks.toString(), taskList.getListOfTasks().toString());"},{"lineNumber":48,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Cedo8"},"content":"}"}],"authorContributionMap":{"Cedo8":49}},{"path":"src/test/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":"class DeadlineTest {"},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":9,"author":{"gitId":"Cedo8"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"Cedo8"},"content":"    void testToString_doneDeadline() {"},{"lineNumber":11,"author":{"gitId":"Cedo8"},"content":"        assertEquals(\"[D][\\u2713] Submit homework (by: Aug 29 2020 1200)\","},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":"                new Deadline(\"Submit homework\", \"Aug 29 2020 1200\", true).toString());"},{"lineNumber":13,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":15,"author":{"gitId":"Cedo8"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"Cedo8"},"content":"    void testToString_undoneDeadline() {"},{"lineNumber":17,"author":{"gitId":"Cedo8"},"content":"        assertEquals(\"[D][\\u2718] Submit essay (by: Aug 29 2020 2359)\","},{"lineNumber":18,"author":{"gitId":"Cedo8"},"content":"                new Deadline(\"Submit essay\", \"Aug 29 2020 2359\", false).toString());"},{"lineNumber":19,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Cedo8"},"content":"}"}],"authorContributionMap":{"Cedo8":20}},{"path":"src/test/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":"class EventTest {"},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":9,"author":{"gitId":"Cedo8"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"Cedo8"},"content":"    void testToString_doneEvent() {"},{"lineNumber":11,"author":{"gitId":"Cedo8"},"content":"        assertEquals(\"[E][\\u2713] Submit homework (at: Aug 29 2020 1200)\","},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":"                new Event(\"Submit homework\", \"Aug 29 2020 1200\", true).toString());"},{"lineNumber":13,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":15,"author":{"gitId":"Cedo8"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"Cedo8"},"content":"    void testToString_undoneEvent() {"},{"lineNumber":17,"author":{"gitId":"Cedo8"},"content":"        assertEquals(\"[E][\\u2718] Submit essay (at: Aug 29 2020 2359)\","},{"lineNumber":18,"author":{"gitId":"Cedo8"},"content":"                new Event(\"Submit essay\", \"Aug 29 2020 2359\", false).toString());"},{"lineNumber":19,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Cedo8"},"content":"}"}],"authorContributionMap":{"Cedo8":20}},{"path":"src/test/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":"class ToDoTest {"},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":9,"author":{"gitId":"Cedo8"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"Cedo8"},"content":"    void testToString_doneToDo() {"},{"lineNumber":11,"author":{"gitId":"Cedo8"},"content":"        assertEquals(\"[T][\\u2713] Submit homework\","},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":"                new ToDo(\"Submit homework\", true).toString());"},{"lineNumber":13,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":15,"author":{"gitId":"Cedo8"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"Cedo8"},"content":"    void testToString_undoneToDo() {"},{"lineNumber":17,"author":{"gitId":"Cedo8"},"content":"        assertEquals(\"[T][\\u2718] Submit proposal\","},{"lineNumber":18,"author":{"gitId":"Cedo8"},"content":"                new ToDo(\"Submit proposal\", false).toString());"},{"lineNumber":19,"author":{"gitId":"Cedo8"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Cedo8"},"content":"}"}],"authorContributionMap":{"Cedo8":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Cedo8"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"Cedo8"},"content":"deadline return book /by Monday"},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"event book fair /at Tuesday 2-4pm"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":"todo write report"},{"lineNumber":5,"author":{"gitId":"Cedo8"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"Cedo8"},"content":"delete 3"},{"lineNumber":7,"author":{"gitId":"Cedo8"},"content":"list"},{"lineNumber":8,"author":{"gitId":"Cedo8"},"content":"bye"}],"authorContributionMap":{"Cedo8":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"Cedo8"},"content":"SET JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"},{"lineNumber":4,"author":{"gitId":"Cedo8"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":6,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":9,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":12,"author":{"gitId":"Cedo8"},"content":"javac  -cp C:\\Users\\Cedric\\Desktop\\Repo\\iP\\src -Xlint:none -d ..\\bin C:\\Users\\Cedric\\Desktop\\Repo\\iP\\src\\main\\java\\*.java"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":16,"author":{"gitId":"-"},"content":")"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":20,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"Cedo8":3,"-":20}}]
