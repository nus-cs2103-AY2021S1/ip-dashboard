[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    protected String connector;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    protected boolean hasTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    Deadline(String description, int id, String dueDateTime, boolean stored) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        super(description, id);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        if (stored) { // stored data"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"d/MMM/yyyy\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"h:mma\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            String[] dateTime \u003d dueDateTime.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            this.connector \u003d dateTime[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            if (dateTime.length \u003e 4) { // if user inputs time after date"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                String date \u003d dateTime[1] + \"/\" + dateTime[2] + \"/\" + dateTime[3].substring(0, dateTime[3].length() - 1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                this.date \u003d LocalDate.parse(date, dateFormat);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                this.time \u003d LocalTime.parse(dateTime[4], timeFormat);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                this.hasTime \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                String date \u003d dateTime[1] + \"/\" + dateTime[2] + \"/\" + dateTime[3];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                this.date \u003d LocalDate.parse(date, dateFormat);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                this.hasTime \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            String[] dateTime \u003d dueDateTime.split(\" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            this.connector \u003d dateTime[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            this.date \u003d LocalDate.parse(dateTime[1], dateFormat);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            if (dateTime.length \u003d\u003d 3) { // if user inputs time after date"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                this.time \u003d LocalTime.parse(dateTime[2], timeFormat);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                this.hasTime \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                this.hasTime \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        if (hasTime) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            return \"[D][\" + this.getStatusIcon() + \"] \" + this.description + \"(\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    this.connector + \" \" + this.date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    \", \" + this.time.format(DateTimeFormatter.ofPattern(\"h:mma\")) + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            return \"[D][\" + this.getStatusIcon() + \"] \" + this.description + \"(\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    this.connector + \" \" + this.date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lerxcl": 54
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    private HandleFile handleFile;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        ListOfItems listOfItems \u003d new ListOfItems();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        handleFile \u003d new HandleFile(listOfItems);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        parser \u003d new Parser(listOfItems, handleFile);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        ui \u003d new Ui(parser);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "lerxcl": 13,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lerxcl": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    protected String connector;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    protected LocalTime startTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    protected LocalTime endTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    Event(String description, int id, String duration, boolean stored) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        super(description, id);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        if (stored) { //stored data"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"d/MMM/yyyy\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"h:mma\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            String[] dateTime \u003d duration.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            this.connector \u003d dateTime[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            String date \u003d dateTime[1] + \"/\" + dateTime[2] + \"/\" + dateTime[3].substring(0, dateTime[3].length() - 1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            this.date \u003d LocalDate.parse(date, dateFormat);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            this.startTime \u003d LocalTime.parse(dateTime[4], timeFormat);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            this.endTime \u003d LocalTime.parse(dateTime[6], timeFormat);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            String[] dateTime \u003d duration.split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            this.connector \u003d dateTime[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            this.date \u003d LocalDate.parse(dateTime[1], dateFormat);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            String[] times \u003d dateTime[2].split(\"-\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            this.startTime \u003d LocalTime.parse(times[0], timeFormat);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            this.endTime \u003d LocalTime.parse(times[1], timeFormat);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        return \"[E][\" + this.getStatusIcon() + \"] \" + this.description + \"(\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                this.connector + \" \" + this.date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                \", \" + this.startTime.format(DateTimeFormatter.ofPattern(\"h:mma\")) + \" - \" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                this.endTime.format(DateTimeFormatter.ofPattern(\"h:mma\")) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lerxcl": 44
    }
  },
  {
    "path": "src/main/java/HandleFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "public class HandleFile {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    File storedData;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    ListOfItems list;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    HandleFile(ListOfItems list) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        this.storedData \u003d new File(\"stored.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        this.checkFile();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    void checkFile() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            if (!this.storedData.exists()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                this.storedData.createNewFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                readFile();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    void readFile() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            Scanner sc \u003d new Scanner(this.storedData);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            while(sc.hasNextLine()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                this.list.addStored(sc.nextLine());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    void writeFile(ListOfItems listOfItems) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            List\u003cTask\u003e list \u003d listOfItems.list;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.storedData);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                Task task \u003d list.get(i);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                String taskText \u003d task.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                bw.write(taskText);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                bw.write(\"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        } catch(IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lerxcl": 59
    }
  },
  {
    "path": "src/main/java/ListOfItems.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "public class ListOfItems {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    String divider \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    String tabSpacing \u003d \"   \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    ListOfItems() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        this.index \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    void addStored(String input) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        char type \u003d input.charAt(1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        boolean isDone \u003d input.charAt(4) \u003d\u003d \u0027✓\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        if (type \u003d\u003d \u0027T\u0027) { //To-do"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            String description \u003d input.substring(7);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            Todo todo \u003d new Todo(description, index + 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            if (isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                todo.markedDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            list.add(index, todo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        } else if (type \u003d\u003d \u0027D\u0027) { //Deadline"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            String[] info \u003d input.split(\"[(]\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            String description \u003d info[0].substring(7);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            String dueDateTime \u003d info[1].substring(0, info[1].length() - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            Deadline deadline \u003d new Deadline(description, index + 1, dueDateTime, true);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            if (isDone) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                deadline.markedDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            list.add(index, deadline);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        } else { //Event"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            String[] info \u003d input.split(\"[(]\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            String description \u003d info[0].substring(7);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            String duration \u003d info[1].substring(0, info[1].length() - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            Event event \u003d new Event(description, index + 1, duration, true);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            if (isDone) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                event.markedDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            list.add(index, event);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    void getList() throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            throw new DukeException(\"List is empty, you have free time (for now)! YAY :D\" + \"\\n\" + divider);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            System.out.println(\"Here are the task(s) in your list: \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            for (int i \u003d 0; i \u003c index; i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                System.out.println(list.get(i).id + \".\" + list.get(i));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    void doneItem(String input) throws DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            int number \u003d Integer.parseInt(input.substring(5)); // retrieve number after \"done \""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            Task task \u003d list.get(number - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            if (task.isDone) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                System.out.println(\"Task already done!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                task.markedDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                String message \u003d \"Good job! I\u0027ve marked this task as done: \";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                System.out.println(divider + \"\\n\" + message + \"\\n\" + tabSpacing +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                        task + \"\\n\" + divider);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            throw new DukeException(\"\\n\" + divider + \"\\n\" + \"Sorry, you did not enter a valid number. Please try again.\" +"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    \"\\n\" + divider);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    void deleteItem(String input) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            int number \u003d Integer.parseInt(input.substring(7));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            Task task \u003d list.get(number - 1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            for (int i \u003d number; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                list.get(i).id \u003d list.get(i).id - 1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            list.remove(task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            index--;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            System.out.println(divider);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            System.out.println(tabSpacing + task);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            System.out.println(\"Now you have \" + index + \" tasks in the list.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            System.out.println(divider);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            throw new DukeException(\"\\n\" + divider + \"\\n\" + \"Whoops, you did not enter a valid number.\" +"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    \"\\n\" + divider);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    void addItem(String input) throws DukeException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        String addedMessage \u003d \"Got it. I\u0027ve added this task: \";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        String totalMessage \u003d \"Now you have \" + (index + 1) + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        if (input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                String description \u003d input.substring(5);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                Todo todo \u003d new Todo(description, index + 1);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                System.out.println(divider + \"\\n\" + addedMessage);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                list.add(index, todo);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                System.out.println(tabSpacing + list.get(index));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                System.out.println(totalMessage + \"\\n\" + divider);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                throw new DukeException(\"\\n\" + divider + \"\\n\" +"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                        \"Whoops, you did not fill in the details of the Todo properly :(\" +"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                        \"\\n\" + divider);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        } else if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                String[] info \u003d input.split(\"/\", 2);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                String description \u003d info[0].substring(9);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                String dueDateTime \u003d info[1];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                Deadline deadline \u003d new Deadline(description, index + 1, dueDateTime, false);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                System.out.println(divider + \"\\n\" + addedMessage);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                list.add(index, deadline);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                System.out.println(tabSpacing + list.get(index));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                System.out.println(totalMessage + \"\\n\" + divider);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                throw new DukeException(\"\\n\" + divider + \"\\n\" +"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                        \"Whoops, you did not fill in the details of the Deadline properly :(\" +"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                        \"\\n\" + divider);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                throw new DukeException(\"\\n\" + divider + \"\\n\" +"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                        \"Whoops, you did not fill in the due date/time of the Deadline.\" +"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                        \"\\n\" + divider);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        } else if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                String[] info \u003d input.split(\"/\", 2);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                String description \u003d info[0].substring(6);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                String duration \u003d info[1];"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                Event event \u003d new Event(description, index + 1, duration, false);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                System.out.println(divider + \"\\n\" + addedMessage);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                list.add(index, event);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                System.out.println(tabSpacing + list.get(index));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                System.out.println(totalMessage + \"\\n\" + divider);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                throw new DukeException(\"\\n\" + divider + \"\\n\" +"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                        \"Whoops, you did not fill in the details of the Event properly :(\" +"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                        \"\\n\" + divider);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                throw new DukeException(\"\\n\" + divider + \"\\n\" +"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                        \"Whoops, you did not fill in the duration of the Event.\" +"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                        \"\\n\" + divider);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            throw new DukeException(\"\\n\" + divider + \"\\n\" +"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    \"Sorry, you did not enter a valid command! Please try again.\" +"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    \"\\n\" + divider);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    void checkBy(String input) throws DukeException {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            boolean hasResults \u003d false;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            String info \u003d input.substring(13);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(info, dateFormat);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            System.out.println(divider);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            System.out.println(\"Task(s) due by \" + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \" :\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            for (int i \u003d 0; i \u003c this.list.size(); i++) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                if ((this.list.get(i) instanceof Deadline \u0026\u0026 ((Deadline) this.list.get(i)).date.equals(date)) ||"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                        (this.list.get(i) instanceof Event \u0026\u0026 ((Event) this.list.get(i)).date.equals(date))) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    hasResults \u003d true;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    System.out.println(this.list.get(i));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            if (!hasResults) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                System.out.println(\"- No tasks due on \" + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \" -\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            System.out.println(divider);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            throw new DukeException(\"\\n\" + divider + \"\\n\" +"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    \"Sorry, you did not enter a valid date (DD/MM/YYYY)! \""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    + \"\\n\" + \"Please try again.\""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    + \"\\n\" + divider);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    void checkBefore(String input) throws DukeException {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            boolean hasResults \u003d false;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            String info \u003d input.substring(17);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            if (info.length() \u003c\u003d 10) { // only consists of date"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(info, dateFormat);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                System.out.println(divider);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                System.out.println(\"Task(s) due before \" + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \" :\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                for (int i \u003d 0; i \u003c this.list.size(); i++) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    if ((this.list.get(i) instanceof Deadline \u0026\u0026 !((Deadline) this.list.get(i)).date.isAfter(date)) ||"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                            (this.list.get(i) instanceof Event \u0026\u0026 !((Event) this.list.get(i)).date.isAfter(date)))  {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                        hasResults \u003d true;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                        System.out.println(this.list.get(i));"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                if (!hasResults) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    System.out.println(\"- No tasks due before \" + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \" -\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                System.out.println(divider);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            } else { // date + time"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(info.split(\" \")[0], dateFormat);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                LocalTime time \u003d LocalTime.parse(info.split(\" \")[1], timeFormat);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                System.out.println(divider);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                System.out.println(\"Task(s) due before \" + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"))"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                        + \", \" + time.format(DateTimeFormatter.ofPattern(\"h:mma\")) + \" :\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                for (int i \u003d 0; i \u003c this.list.size(); i++) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    if ((this.list.get(i) instanceof Deadline \u0026\u0026 !((Deadline) this.list.get(i)).date.isAfter(date)"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                        \u0026\u0026 ((Deadline) this.list.get(i)).time !\u003d null \u0026\u0026 !((Deadline) this.list.get(i)).time.isAfter(time))"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                            || (this.list.get(i) instanceof Event \u0026\u0026 !((Event) this.list.get(i)).date.isAfter(date)"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    \u0026\u0026 ((Event) this.list.get(i)).endTime !\u003d null \u0026\u0026 !((Event) this.list.get(i)).endTime.isAfter(time)))  {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                        hasResults \u003d true;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                        System.out.println(this.list.get(i));"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                if (!hasResults) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    System.out.println(\"- No tasks due before \" + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"))"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                            + \", \" + time.format(DateTimeFormatter.ofPattern(\"h:mma\")) + \" -\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                System.out.println(divider);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            throw new DukeException(\"\\n\" + divider + \"\\n\""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    + \"Sorry, you did not enter a valid date (DD/MM/YYYY) and/or time (HHmm)! \""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    + \"\\n\" + \"Please try again.\""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                    + \"\\n\" + divider);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lerxcl": 250
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    HandleFile handleFile;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    ListOfItems listOfItems;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    Parser(ListOfItems list, HandleFile handleFile) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        this.handleFile \u003d handleFile;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        this.listOfItems \u003d list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    void run(String input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                listOfItems.getList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                listOfItems.doneItem(input);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                handleFile.writeFile(listOfItems);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                listOfItems.deleteItem(input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                handleFile.writeFile(listOfItems);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            } else if (input.contains(\"items due by\")) { // check items due on a specific date"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                listOfItems.checkBy(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            } else if (input.contains(\"items due before\")) { // check items due before a specific date + time"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                listOfItems.checkBefore(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                listOfItems.addItem(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                handleFile.writeFile(listOfItems);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "lerxcl": 34
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    protected int id;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    public Task(String description, int id) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        //return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    public void markedDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lerxcl": 21
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    Todo(String description, int id) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        super(description, id);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        return \"[T][\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lerxcl": 11
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    Parser parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    String divider \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    public Ui(Parser parser) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        this.parser \u003d parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        this.hello();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        this.run();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    void hello() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        String intro \u003d \"Hello! I\u0027m Bob\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "                \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        System.out.println(divider + \"\\n\" + intro + \"\\n\" + divider);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    void run() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            this.parser.run(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        this.goodbye();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    void goodbye() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        String message \u003d \"Bye. Hope to see you again soon! :)\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "        System.out.println(divider + \"\\n\" + message + \"\\n\" + divider);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lerxcl": 34
    }
  },
  {
    "path": "stored.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "[T][✓] a"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "[D][✘] hw (by 23 Aug 2020)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "[E][✘] tut (from 24 Aug 2020, 10:00AM - 12:00PM)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "[D][✘] proj (by 25 Aug 2020, 11:59PM)"
      }
    ],
    "authorContributionMap": {
      "lerxcl": 4
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "lalala"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "todo App"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "deadline HW"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "deadline HW /by Thursday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "event Meeting"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "event Meeting /on Tuesday 10am"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "done 1 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "lerxcl": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lerxcl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lerxcl"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "lerxcl": 3,
      "-": 20
    }
  }
]
