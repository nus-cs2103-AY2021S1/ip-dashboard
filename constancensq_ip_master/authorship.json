[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "constancensq"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public Deadline markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        Deadline doneDeadline \u003d new Deadline(this.description, this.by, true);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        System.out.println(\" ____________________________________________________________\\n \" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                \"Nice! I\u0027ve marked this task as done:\\n    \" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                doneDeadline.toString() +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                \"\\n ____________________________________________________________\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        return doneDeadline;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "constancensq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "constancensq": 29
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "constancensq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "constancensq"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "constancensq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    // Constants"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public static final String LOGO \u003d"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "constancensq"
        },
        "content": "            \" ____        _\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "constancensq"
        },
        "content": "            + \" |  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "constancensq"
        },
        "content": "            + \" | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "constancensq"
        },
        "content": "            + \" | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "constancensq"
        },
        "content": "            + \" |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public static final String TOP_LINE \u003d \" ____________________________________________________________\\n \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public static final String BOTTOM_LINE \u003d \"\\n ____________________________________________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    // Static variables"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public static int numTasks \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    // Add top and bottom lines to provided message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public static String formatMessage(String msg) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        return TOP_LINE + msg + BOTTOM_LINE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    // Check if given string can be parsed into an integer"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public static boolean isInteger(String secondWord) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "constancensq"
        },
        "content": "            Integer.parseInt(secondWord);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "constancensq"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "constancensq"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    // Loop through tasks array and print tasks in order"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public static void printTasks() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        if (numTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "constancensq"
        },
        "content": "            System.out.println(formatMessage(\"There are currently no tasks in your list.\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "constancensq"
        },
        "content": "            String tasksList \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "constancensq"
        },
        "content": "            for (int i \u003d 0; i \u003c numTasks; i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    tasksList \u003d \" 1. \" + tasks.get(i);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    tasksList \u003d tasksList + \"\\n \" + (i + 1) + \". \" + tasks.get(i);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "constancensq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "constancensq"
        },
        "content": "            System.out.println(formatMessage(\"Task(s) in your list:\\n\" + tasksList));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    // Receives commands from user input and executes them accordingly"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public static void getInput() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "constancensq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                String inputData \u003d sc.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                String[] inputDataWords \u003d inputData.split(\" \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                String firstWord \u003d inputDataWords[0];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                if (inputData.equals(\"list\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    printTasks();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                } else if (firstWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    if (inputDataWords.length !\u003d 2) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        throw new DukeException(\"Invalid command provided. Please try again.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        // check if second word is an integer"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        if (isInteger(inputDataWords[1])) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                            int taskNumber \u003d Integer.parseInt(inputDataWords[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                            // then check if the taskNumber provided is in range"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                            if (taskNumber \u003e numTasks || taskNumber \u003c\u003d 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                                throw new DukeException(\"Please enter a valid task number.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                            } else if (tasks.get(taskNumber - 1).isDone) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                                throw new DukeException(\"You have already marked this task as done!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                                tasks.set(taskNumber - 1, tasks.get(taskNumber - 1).markAsDone());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                            throw new DukeException(\"Please enter a valid task number.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                } else if (firstWord.equals(\"delete\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    if (inputDataWords.length !\u003d 2) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        throw new DukeException(\"Invalid command provided. Please try again.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        // check if second word is an integer"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        if (isInteger(inputDataWords[1])) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                            int taskNumber \u003d Integer.parseInt(inputDataWords[1]);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                            // then check if the taskNumber provided is in range"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                            if (taskNumber \u003e numTasks || taskNumber \u003c\u003d 0) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                                throw new DukeException(\"Please enter a valid task number.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                                numTasks--;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                                System.out.println(formatMessage(\"Noted. I\u0027ve removed this task:\\n    \" +"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                                        tasks.get(taskNumber - 1) +"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                                        \"\\n Now you have \" + numTasks + \" task(s) in the list.\"));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                                tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                            throw new DukeException(\"Please enter a valid task number.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                } else if (firstWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    if (inputDataWords.length \u003c 2) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        throw new DukeException(\"The description of a \" + firstWord + \" cannot be empty.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        tasks.add(numTasks, new ToDo(inputData.split(\"todo \")[1]));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        System.out.println(formatMessage(\"Got it. I\u0027ve added this task:\\n    \" +"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                                tasks.get(numTasks) +"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                                \"\\n Now you have \" + (numTasks + 1) + \" task(s) in the list.\"));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        numTasks++;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                } else if (firstWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    if (inputDataWords.length \u003c 2) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        throw new DukeException(\"The description of a \" + firstWord + \" cannot be empty.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    } else if (inputData.split(\"/by \").length \u003c 2 || inputDataWords[1].equals(\"/by\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        throw new DukeException(\"The deadline of this task is not provided.\\n\" +"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                                \"   Please re-enter the desired deadline task\\n\" +"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                                \"   (e.g. deadline xxx /by zzz)\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        tasks.add(numTasks, new Deadline(inputData.split(\"deadline \")[1].split(\"/by \")[0],"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                                inputData.split(\"/by \")[1]));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        System.out.println(formatMessage(\"Got it. I\u0027ve added this task:\\n    \" +"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                                tasks.get(numTasks) +"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                                \"\\n Now you have \" + (numTasks + 1) + \" task(s) in the list.\"));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        numTasks++;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                } else if (firstWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    if (inputData.split(\" \").length \u003c 2 || inputDataWords[1].equals(\"/at\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        throw new DukeException(\"The description of a \" + firstWord + \" cannot be empty.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    } else if (inputData.split(\"/at \").length \u003c 2) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        throw new DukeException(\"The duration of this task cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                                \"   Please re-enter the desired event task\\n\" +"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                                \"   (e.g. event xxx /at zzz)\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        tasks.add(numTasks, new Event(inputData.split(\"event \")[1].split(\"/at \")[0],"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                                inputData.split(\"/at \")[1]));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        System.out.println(formatMessage(\"Got it. I\u0027ve added this task:\\n    \" +"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                                        tasks.get(numTasks) +"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                                        \"\\n Now you have \" + (numTasks + 1) + \" task(s) in the list.\"));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                        numTasks++;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                } else if (inputData.equals(\"bye\")) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    System.out.println(formatMessage(\" Goodbye! See you again!\"));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    sc.close();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    // invalid commands"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                    throw new DukeException(\"Invalid command provided. Please try again.\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "constancensq"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "constancensq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        System.out.println(formatMessage(LOGO +"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                \" Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                \" What can I do for you today?\"));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        getInput();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "constancensq": 176
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "constancensq"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    DukeException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        super(\" ____________________________________________________________\\n \" +"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                \"☹ ERROR: \" + msg +"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                \"\\n ____________________________________________________________\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "constancensq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "constancensq": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "constancensq"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public Event(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public Event markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        Event doneEvent \u003d new Event(this.description, this.at, true);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        System.out.println(\" ____________________________________________________________\\n \" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                \"Nice! I\u0027ve marked this task as done:\\n    \" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                doneEvent.toString() +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                \"\\n ____________________________________________________________\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        return doneEvent;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "constancensq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "constancensq": 29
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "constancensq"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        System.out.println(\" ____________________________________________________________\\n \" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                \"Nice! I\u0027ve marked this task as done:\\n    \" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                \"    [\" + \"\\u2713\" + \"] \" + this.toString() +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                \"\\n ____________________________________________________________\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        return new Task(this.description, true);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "constancensq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "constancensq": 32
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "constancensq"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public ToDo markAsDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        ToDo doneToDo \u003d new ToDo(this.description, true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        System.out.println(\" ____________________________________________________________\\n \" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                \"Nice! I\u0027ve marked this task as done:\\n    \" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                doneToDo.toString() +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "constancensq"
        },
        "content": "                \"\\n ____________________________________________________________\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        return doneToDo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "constancensq"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "constancensq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "constancensq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "constancensq": 25
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "constancensq"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "constancensq"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "constancensq"
        },
        "content": "read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "constancensq"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "constancensq"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "constancensq"
        },
        "content": "event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "constancensq"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "constancensq"
        },
        "content": "deadline /by when"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "constancensq"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "constancensq"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "constancensq"
        },
        "content": "event /at when"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "constancensq"
        },
        "content": "event book launch"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "constancensq"
        },
        "content": "list all"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "constancensq"
        },
        "content": "todo borrow english book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "constancensq"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "constancensq"
        },
        "content": "deadline return book /by Sunday 10pm"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "constancensq"
        },
        "content": "event book launch /at Monday 2-4pm"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "constancensq"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "constancensq"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "constancensq"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "constancensq"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "constancensq"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "constancensq"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "constancensq"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "constancensq"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "constancensq"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "constancensq": 26
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "constancensq"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "constancensq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "constancensq"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "constancensq": 3
    }
  }
]
