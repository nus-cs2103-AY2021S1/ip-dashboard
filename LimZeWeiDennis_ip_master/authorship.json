[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "-": 24,
      "LimZeWeiDennis": 2
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 9
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " * Duke is the name of this program. It is an CLI app that reads and save"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " * the user Tasks. The user can use it to keep tabs on their tasks and"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " * and can mark them as done when they deem fit."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private final static String DIRECTORY \u003d  System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Creates a Duke object"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public Duke(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        storage \u003d new Storage(this.DIRECTORY);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Runs the programme, using a Duke Object"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public void run() throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        ui.startMessage();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        storage.loadTasks(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        while  (scanner.hasNext()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                Command executable \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                String output \u003d executable.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                if (executable.isComplete()){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                ui.lineFormatter(output);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            } catch (DukeException e){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                ui.lineFormatter(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 58
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.exceptions.DeadlineException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.exceptions.EventException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.exceptions.IncompleteCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.net.PasswordAuthentication;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public AddCommand(String description){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String execute (TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        Task newTask \u003d new Task(\"Do Something\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        String[] inputList \u003d description.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if (inputList.length !\u003d 2) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            throw new IncompleteCommandException();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if (Parser.isToDo(inputList[0].trim())){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            newTask \u003d new ToDo(inputList[1].trim());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if (Parser.isDeadline(inputList[0].trim())){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            String[] task_deadline \u003d inputList[1].trim().split(\"/by\", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            if (task_deadline.length !\u003d 2){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                throw new DeadlineException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            // check for date time format"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                newTask \u003d new Deadline(task_deadline[0].trim(), task_deadline[1].trim());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            } catch (Exception e){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                throw new DeadlineException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if (Parser.isEvent(inputList[0].trim())){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            String[] task_event \u003d inputList[1].trim().split(\"/at\", 2);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            if (task_event.length !\u003d 2){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                throw new EventException();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            // check for date time format"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                newTask \u003d new Event(task_event[0].trim(), task_event[1].trim());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            } catch (Exception e){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                throw new EventException();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        taskList.addTask(newTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return ui.newTaskItem(newTask);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public boolean isComplete() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 73
    }
  },
  {
    "path": "src/main/java/duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.exceptions.IncompleteCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class ByeCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public ByeCommand(String description){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        String[] inputList \u003d description.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if (inputList.length \u003e 1){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            throw new IncompleteCommandException();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        storage.saveTasks(taskList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return ui.byeGreetings();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public boolean isComplete(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 29
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public final String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    Command(String description){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public abstract boolean isComplete();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 18
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.exceptions.DeleteException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public DeleteCommand(String description){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        String[] inputList \u003d description.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        int currentIndex \u003d Integer.parseInt(inputList[1]) - 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if  (currentIndex + 1 \u003e taskList.getSize() || currentIndex + 1 \u003c\u003d 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            throw new DeleteException(currentIndex, taskList.getSize());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            Task deletedTask \u003d taskList.removeTask(currentIndex);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return ui.taskDeleted(deletedTask);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public boolean isComplete(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 31
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.exceptions.DoneException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.exceptions.TaskAlreadyDoneException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public DoneCommand(String description){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String execute (TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        String[] inputList \u003d description.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        int currentIndex \u003d Integer.parseInt(inputList[1]) - 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if (currentIndex + 1 \u003e taskList.getSize() || currentIndex + 1 \u003c\u003d 0){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            throw new DoneException(currentIndex, taskList.getSize());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            Task task \u003d taskList.getTask(currentIndex);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            // to check if  the task is already done"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            if (task.getStatus()){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                throw new TaskAlreadyDoneException(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                taskList.getTask(currentIndex).markAsDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                return ui.taskDone(taskList.getTask(currentIndex));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public boolean isComplete(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 40
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class FindCommand extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static TaskList temporaryList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public FindCommand(String description){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        String[] inputList \u003d description.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        temporaryList \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            Task toAdd \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            if (toAdd.getTask().contains(inputList[1].trim())) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                temporaryList.addTask(toAdd);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if (temporaryList.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            ui.lineFormatter(\"There are no tasks found in this find!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return \"There are no tasks found in this find!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            StringBuffer stringBuffer \u003d new StringBuffer();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            stringBuffer.append(\"There were \" + temporaryList.getSize() + \" tasks found\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            for (int j \u003d 0; j \u003c temporaryList.getSize(); j++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                Task currentTask \u003d temporaryList.getTask(j);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                stringBuffer.append((j + 1) + \".\" + currentTask.toString() + \"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            ui.lineFormatter(stringBuffer.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return stringBuffer.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public boolean isComplete(){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 50
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.exceptions.IncompleteCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public ListCommand(String description){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        String[] inputList \u003d description.split(\" \", 2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if ( inputList.length \u003e 1){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            throw new IncompleteCommandException();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        StringBuffer result \u003d new StringBuffer();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        //to add in the starting line of the section"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        result.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            // getting the current task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            Task currentTask \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            // adding the current task into the taskList"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            result.append((i + 1) + \". \" + currentTask.toString() + \"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        ui.lineFormatter(result.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return result.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public boolean isComplete(){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 43
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "// Exception for wrong deadline format"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class DeadlineException extends DukeException{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public DeadlineException (){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(\"Please key in the deadline in the following format:\\n\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                \"\\\u0027deadline task name /at date\\\u0027 \\n\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                \"With the date in the following format :\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                \"YYYY-MM-DD HHMM OR YYYY-MM-DD\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 17
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "// Exception for wrong delete command format"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class DeleteException extends DukeException{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public DeleteException(int currentTask, int totalTask){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(\"You do not have \" + (currentTask + 1) + \" tasks!\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                + \"Choose a number less than equals to \" + totalTask + \"!\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 16
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "// Exception for wrong done command format"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class DoneException extends DukeException{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public DoneException(int currentTask, int totalTask){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(\"You do not have \" + (currentTask + 1) + \" tasks!\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                + \"Choose a number less than equals to \" + totalTask + \"!\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 16
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " * Main exception class in the Duke application, that allows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " * the other exceptions to extend from."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"Please use the appropriate commands\" ;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 15
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "// Exception for wrong event command format"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class EventException extends DukeException{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public EventException(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(\"Please key in the event in the following format:\\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                \"\\\u0027event task name /at date\\\u0027 \\n\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                \"With the date in the following format :\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                \"YYYY-MM-DD HHMM OR YYYY-MM-DD\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 16
    }
  },
  {
    "path": "src/main/java/duke/exceptions/IncompleteCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "// Exception for incomplete/ inappropriate command given"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class IncompleteCommandException extends DukeException{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public IncompleteCommandException(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(\"Please enter an appropriate command!\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 14
    }
  },
  {
    "path": "src/main/java/duke/exceptions/TaskAlreadyDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "// Exception to check if task is already done"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class TaskAlreadyDoneException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public TaskAlreadyDoneException(Task task){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(\"This task is already done!\\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                task.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 18
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.exceptions.IncompleteCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " * A Parser Class does all the checking required in the programme"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private final static String BYE_KEY \u003d \"bye\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private final static String LIST_KEY \u003d \"list\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private final static String DONE_KEY \u003d \"done\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private final static String TODO_KEY \u003d \"todo\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private final static String DEADLINE_KEY \u003d \"deadline\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private final static String EVENT_KEY \u003d \"event\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private final static String DELETE_KEY \u003d \"delete\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private final static String FIND_KEY \u003d \"find\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Checks for BYE Command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param checker"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static boolean isBye(String checker) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return checker.equals(BYE_KEY);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Checks for LIST Command"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param checker"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static boolean isList(String checker) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return checker.equals(LIST_KEY);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Checks for DONE Command"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param checker"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static boolean isComplete(String checker) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return checker.equals(DONE_KEY);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Checks for TODO Command"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param checker"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static boolean isToDo(String checker) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return checker.equals(TODO_KEY);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Checks for DEADLINE Command"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param checker"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static boolean isDeadline(String checker) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return checker.equals(DEADLINE_KEY);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Checks for EVENT Command"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param checker"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static boolean isEvent(String checker) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return checker.equals(EVENT_KEY);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Checks for DELETE Command"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param checker"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static boolean isDelete(String checker) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return checker.equals(DELETE_KEY);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Checks for FIND Command"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param checker"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static boolean isFind(String checker) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return checker.equals(FIND_KEY);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Checks if input is a number"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param num"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static boolean isNum(String num){"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            int check \u003d Integer.parseInt(num);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        } catch (NumberFormatException e){"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static Command parse (String input) throws DukeException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        String[] inputList \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if (isBye(inputList[0].trim())){"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return new ByeCommand(input);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if (isList(inputList[0].trim())){"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return new ListCommand(input);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if (isDelete(inputList[0].trim())){"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return new DeleteCommand(input);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if (isFind(inputList[0].trim())){"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return new FindCommand(input);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if (isComplete(inputList[0].trim())){"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return new DoneCommand(input);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if (isEvent(inputList[0].trim()) || isDeadline(inputList[0].trim()) || isToDo(inputList[0].trim())){"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return new AddCommand(input);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        throw new IncompleteCommandException();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 157
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " * A Storage class creates a storage object that"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " * Saves the TaskList of Tasks into a txt file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " * Loads the list of Tasks from a txt file into a TaskList Object"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static String directory;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Creates a storage object"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param directory"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public Storage(String directory){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.directory \u003d directory;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Saves the list of Tasks in the TaskList object into a txt file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public void saveTasks(TaskList taskList){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        Path path \u003d  Paths.get(this.directory, \"Data\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            // Check if the file path exists, if not, create a new directory"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            if(!Files.exists(path)){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                Files.createDirectories(path);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            Path filePath \u003d Paths.get(directory,\"Data\",\"taskList.txt\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            File taskFile \u003d filePath.toFile();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            // Check if the file exists, if not, create a new file"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            if(!taskFile.exists()){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                taskFile.createNewFile();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(taskFile);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                bufferedWriter.write(taskList.getTask(i).getOriginal());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                bufferedWriter.write(\"~\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                if(taskList.getTask(i).getStatus()){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    bufferedWriter.write(\"1\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                } else{"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    bufferedWriter.write(\"0\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                bufferedWriter.write(\"++\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            //System.out.println(SAVED);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Loads the list of Tasks in the txt file into the TaskList object"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public void loadTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        Path filePath \u003d Paths.get(this.directory, \"Data\", \"taskList.txt\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if(filePath.toFile().exists()){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                BufferedReader reader \u003d Files.newBufferedReader(filePath);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                String data \u003d reader.readLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                if(data !\u003d null) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    String[] tasks \u003d data.split(\"\\\\+\\\\+\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    for (int i \u003d 0; i \u003c tasks.length; i++) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        //split the individual tasks"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        String[] doneList \u003d tasks[i].split(\"~\", 2);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        String[] nameList\u003d doneList[0].split(\" \", 2);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        if (Parser.isDeadline(nameList[0].trim().toLowerCase())){"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            String[] task_deadline \u003d nameList[1].trim().split(\"/by\", 2);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            Task newTask \u003d new Deadline(task_deadline[0].trim(),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                                    task_deadline[1].trim(), checkDone(doneList[1]));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            taskList.addTask(newTask);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        } else if (Parser.isEvent(nameList[0].trim().toLowerCase())) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            String[] task_event \u003d nameList[1].trim().split(\"/at\", 2);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            Task newTask \u003d new Event(task_event[0].trim(), task_event[1].trim(),checkDone(doneList[1]));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            taskList.addTask(newTask);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        } else if (Parser.isToDo(nameList[0].toLowerCase())) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            Task newTask \u003d new ToDo(nameList[1].trim(), checkDone(doneList[1]));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                            taskList.addTask(newTask);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            } catch (IOException e){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            File createFile \u003d new File(\"/Data/duke.txt\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // check if the task was done before"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private static boolean checkDone (String checker){"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return checker.equals(\"1\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 128
    }
  },
  {
    "path": "src/main/java/duke/taskList/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.taskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // add tasks to taskList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public void addTask(Task task){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // return length of taskList"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    //return task from taskList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public Task getTask(int i){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return taskList.get(i);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    //remove task from taskList and return the deleted Task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public Task removeTask(int i){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        Task deletedTask \u003d taskList.remove(i);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return deletedTask;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 35
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " * A Deadline class is a children object of the Task class"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " * with the additional abilities to"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " * returns due date of the Deadline"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " * returns original command of the Deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Creates a Deadline Object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param by"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Creates a Deadline Object"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param by"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public Deadline(String description, String by, boolean isDone){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Returns the due date of the Deadline"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @return date"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Returns the original command used to create the Deadline"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @return original command"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String getOriginal() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"deadline \" + getTask() + \" /by \" + getDate();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Returns the due date in the form of dd MMM yyyy HHmm"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @return due date of the Deadline"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String getDeadlineDate() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        String[] dateList \u003d this.by.split(\" \",2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        LocalDate deadlineDate \u003d LocalDate.parse(dateList[0]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        DateTimeFormatter FormatDate \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if(dateList.length \u003e 1){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            String deadlineTime \u003d dateList[1];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return deadlineDate.format(FormatDate) + \" \" + deadlineTime;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return deadlineDate.format(FormatDate);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Returns the Deadline with StatusIcon"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @return Deadline with StatusIcon"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getDeadlineDate() + \")\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 82
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " * A Event class is a children object of the Task class"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " * with the additional abilities to"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " * returns date of the Event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " * returns original command of the Event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Creates a Event Object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param at"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Creates a Event Object"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param at"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public Event(String description, String at, boolean isDone){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Returns the date of the Event"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @return date"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Returns the original command used to create the Event"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @return original command"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String getOriginal() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"event \" + getTask() + \" /at \" + getTime();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Returns the date in the form of dd MMM yyyy HHmm"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @return due date of the Event"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private String getEventDate() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        String[] dateList \u003d this.at.split(\" \",2);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        LocalDate eventDate \u003d LocalDate.parse(dateList[0]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        DateTimeFormatter FormatDate \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        if(dateList.length \u003e 1){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            String eventTime \u003d dateList[1];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return eventDate.format(FormatDate) + \" \" + eventTime;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            return eventDate.format(FormatDate);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Returns the Event with StatusIcon"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @return Event with StatusIcon"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + getEventDate() + \")\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 87
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "//Adapted from CS2103T website\u0027s duke.Tasks.Task class"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public Task (String description){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public Task (String description, boolean isDone){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public boolean getStatus(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String getOriginal(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"task \" + getTask();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getTask();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 40
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " * A ToDo class is a children object of the Task class"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " * with the additional abilities to"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " * returns original command of the Deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Creates a ToDo object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Creates a ToDo object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @param isDone"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public ToDo(String description, boolean isDone){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Returns the original command used to create the ToDo"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @return original command"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String getOriginal(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"todo \" + getTask();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * Returns the ToDo with StatusIcon"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     * @return ToDo with StatusIcon"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return \"[T]\" + super.toString() ;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 48
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private final static String LONG_LINE \u003d \"________________________________________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    private final static String LOGO \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static void startMessage(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        System.out.println(\"Hello from\\n\" + LOGO);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        lineFormatter(\"Hello!!!! I\u0027m duke.Duke\\nWhat can I do for you?!?!?!\" );"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    //method to segment every String that is being fed into this method"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static void lineFormatter (String printable){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        System.out.println(LONG_LINE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        System.out.println(printable);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        System.out.println(LONG_LINE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    // standardised goodbye greeting"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static String byeGreetings () {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        String statement \u003d \"Bye! Hope to see you soon again?!\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        lineFormatter(statement);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return statement;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    //method to mark tasks as done"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static String taskDone(Task task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        String statement \u003d \"Nice! This task is getting done!!\\n\" + \"[\" + task.getStatusIcon() + \"] \" + task.getTask();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        lineFormatter(statement);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return statement;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    //method to mark tasks as deleted"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static String taskDeleted(Task task) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        String statement \u003d \"The following duke.Tasks.Task is removed from the duke.TaskList.duke.TaskList!!\\n\" + \"[\" + task.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                + task.getTask() + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        lineFormatter(statement);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return statement;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    //method for formatting inputs into the taskList"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public static String newTaskItem (Task task){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        String statement \u003d \"Now you have a new task! :\\n\" + task.toString() +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                \"\\nType \\\u0027list\\\u0027 to check your Tasklist\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        lineFormatter(statement);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        return statement;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 62
    }
  },
  {
    "path": "src/test/java/duke/deadline/DeadlineTester.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import org.junit.jupiter.api.DisplayName;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class DeadlineTester {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @DisplayName(\"Testing getDeadlineDate method in Deadline class\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public void testGetDeadlineDate() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        LocalDate testDate \u003d LocalDate.parse(\"2020-08-26\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        String result \u003d testDate.format(formatter);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        assertEquals(new Deadline(\"Do something\", \"2020-08-26\").getDeadlineDate(), result);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @DisplayName(\"Testing getOriginal method in Deadline class\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public void testGetOriginal() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        String testTask \u003d \"deadline dosomething /by 2020-08-26 1800\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        assertEquals(new Deadline(\"dosomething\", \"2020-08-26 1800\").getOriginal(),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "                testTask);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 30
    }
  },
  {
    "path": "src/test/java/duke/taskList/TaskListTester.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "package duke.taskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import org.junit.jupiter.api.DisplayName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "public class TaskListTester {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @DisplayName(\"Testing addTask and getSize method in TaskList class\")"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public void testGetDeadlineDate() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        Task testTask \u003d new ToDo(\"Do Something\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        taskList.addTask(testTask);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        int result \u003d taskList.getSize();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        assertEquals(result, 1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    @DisplayName(\"Testing removeTask method in Deadline class\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        Task testTask \u003d new ToDo(\"Do Something\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        taskList.addTask(testTask);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        taskList.removeTask(0);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        int result \u003d taskList.getSize();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "        assertEquals(result, 0);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 32
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "todo Read a book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "deadline Finish ES2660 Essay /by Tuesday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "event Dinner at Grandma\u0027s /at Monday 6PM"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "deadline CS2103T iP"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "event CS2103T Tutorial"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "list 2"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "delete"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "LimZeWeiDennis": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "-": 21,
      "LimZeWeiDennis": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LimZeWeiDennis"
        },
        "content": "    echo \"** BUILD FAILURE **\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 35,
      "LimZeWeiDennis": 7
    }
  }
]
