[
  {
    "path": "data/dataFile.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "T | 1 | borrow books"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "T | 1 | borrow books"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "D | 0 | return book | 2020-10-05"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "T | 1 | borrow books"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "D | 0 | return book | 2020-10-05"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "E | 0 | project meeting | 2020-08-09"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "D | 0 | do homework | 2020-09-10"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "T | 1 | borrow books"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "D | 0 | return book | 2020-10-05"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "E | 0 | project meeting | 2020-08-09"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "D | 0 | do homework | 2020-09-10"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 11
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private Storage listStorage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public Duke(String fileName) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.listStorage \u003d new Storage(fileName);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.ui \u003d new Ui(this.listStorage, this.taskList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.ui.printWelcome();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.listStorage.loadData(this.taskList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.ui.loadFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        while(!isExit) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            String command \u003d this.ui.getInput();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            Command c \u003d Parser.parse(command);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if (c!\u003d null) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                c.execute(this.ui, this.listStorage, this.taskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                isExit \u003d c.canExit();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        new Duke(\"dataFile.txt\").run();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 33,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private final String DATA_FILE_DIRECTORY \u003d System.getProperty(\"user.dir\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            + (System.getProperty(\"user.dir\").endsWith(\"text-ui-test\") ? \"/../data/\" : \"/data/\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private File storageFile;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public Storage(String fileName) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.storageFile \u003d new File(DATA_FILE_DIRECTORY + fileName);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void loadData(TaskList currTaskList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.checkHistory();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        BufferedReader rb \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            rb \u003d new BufferedReader(new FileReader(this.storageFile));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            System.out.println(\"File cannot be found\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String newLine \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            newLine \u003d rb.readLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            while (newLine !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                String[] taskInput \u003d newLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                if (taskInput[0].charAt(0) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    ToDo pastToDo \u003d new ToDo(taskInput[2].trim());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    if (Integer.parseInt(taskInput[1].trim()) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                        pastToDo.markDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    currTaskList.add(pastToDo);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    newLine \u003d rb.readLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                } else if (newLine.charAt(0) \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    Event pastEvent \u003d new Event(taskInput[2].trim(), LocalDate.parse(taskInput[3].trim()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    if (Integer.parseInt(taskInput[1].trim()) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                        pastEvent.markDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    currTaskList.add(pastEvent);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    newLine \u003d rb.readLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                } else if (newLine.charAt(0) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    Deadline pastDeadline \u003d new Deadline(taskInput[2].trim(),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                            LocalDate.parse(taskInput[3].trim()));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    if (Integer.parseInt(taskInput[1].trim()) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                        pastDeadline.markDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    currTaskList.add(pastDeadline);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    newLine \u003d rb.readLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            rb.close();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private void checkHistory() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            FileReader readFile \u003d new FileReader(DATA_FILE_DIRECTORY);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            File newData \u003d new File(DATA_FILE_DIRECTORY);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if(!newData.exists()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                newData.mkdirs();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                Ui.addDirectory();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if(this.storageFile.createNewFile()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                Ui.addDataFile();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            System.out.println(\"Unable to create file\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        FileWriter fw \u003d null;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            fw \u003d new FileWriter(this.storageFile,true);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if (newTask instanceof ToDo) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                fw.write(((ToDo)newTask).getDataStorageName() + \"\\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            } else if (newTask instanceof Deadline) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                fw.write(((Deadline)newTask).getDataStorageName() + \"\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            } else if (newTask instanceof Event) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                fw.write(((Event)newTask).getDataStorageName() + \"\\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void editTask(Task editedTask, int taskIndex, TaskList currentList) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        File toBeDeleted \u003d new File (DATA_FILE_DIRECTORY + \"dataList1.txt\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        BufferedReader readerBuffer \u003d null;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            readerBuffer \u003d new BufferedReader(new FileReader(this.storageFile));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            BufferedWriter writerBuffer \u003d new BufferedWriter(new FileWriter(toBeDeleted));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            String readingLine \u003d readerBuffer.readLine();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            String lineToEdit \u003d \"\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            String lineToChangeTo \u003d \"\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if (editedTask instanceof Deadline) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                lineToEdit \u003d ((Deadline) editedTask).getDataStorageName();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                currentList.get(taskIndex).markDone();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                lineToChangeTo \u003d ((Deadline) editedTask).getDataStorageName();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            } else if (editedTask instanceof Event) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                lineToEdit \u003d ((Event) editedTask).getDataStorageName();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                currentList.get(taskIndex).markDone();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                lineToChangeTo \u003d ((Event) editedTask).getDataStorageName();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                lineToEdit \u003d ((ToDo) editedTask).getDataStorageName();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                currentList.get(taskIndex).markDone();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                lineToChangeTo \u003d ((ToDo) editedTask).getDataStorageName();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            while (readingLine !\u003d null) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                if (readingLine.equals(lineToEdit)) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    writerBuffer.write(lineToChangeTo + \"\\n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    readingLine \u003d readerBuffer.readLine();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                writerBuffer.write(readingLine + \"\\n\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                readingLine \u003d readerBuffer.readLine();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            writerBuffer.close();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            readerBuffer.close();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if (this.storageFile.delete()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                // Rename the output file to the input file"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                if (!toBeDeleted.renameTo(this.storageFile)) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    throw new IOException(\"Could not rename to update data file\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                throw new IOException(\"Could not delete old data file\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void deleteTask(Task removedTask) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            File removed \u003d new File (DATA_FILE_DIRECTORY + \"dataList1.txt\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(this.storageFile));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(removed));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            String currentLine \u003d reader.readLine();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            String lineToRemove \u003d \"\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if (removedTask instanceof Deadline) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                lineToRemove \u003d ((Deadline) removedTask).getDataStorageName();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            } else if (removedTask instanceof Event) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                lineToRemove \u003d ((Event) removedTask).getDataStorageName();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                lineToRemove \u003d ((ToDo) removedTask).getDataStorageName();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            while (currentLine !\u003d null) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                if (currentLine.equals(lineToRemove)) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    currentLine \u003d reader.readLine();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                writer.write(currentLine + \"\\n\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                currentLine \u003d reader.readLine();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if (this.storageFile.delete()) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                // Rename the output file to the input file"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                if (!removed.renameTo(this.storageFile)) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    throw new IOException(\"Could not rename to update data file\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                throw new IOException(\"Could not delete old data file\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 205
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void add(Task newTask) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return this.taskList.get(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public int getNumTask() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void listItems() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        for(int i \u003d 0; i \u003c this.taskList.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            String currentLine \u003d \"      \"+ (i + 1) + \". \" + this.taskList.get(i);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            System.out.println(currentLine);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return this.taskList.remove(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 39
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.exception.InvalidCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String logo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String lines;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String defaultGreeting;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private static final Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private Parser commandParser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public Ui(Storage listStorage, TaskList taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.logo \u003d \" .d8888b.  888               888    888                  888888b.            888    \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"d88P  Y88b 888               888    888                  888  \\\"88b           888    \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"888    888 888               888    888                  888  .88P           888    \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"888        88888b.   8888b.  888888 888888 888  888      8888888K.   .d88b.  888888 \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"888        888 \\\"88b     \\\"88b 888    888    888  888      888  \\\"Y88b d88\\\"\\\"88b 888    \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"\\n\" + \"888    888 888  888 .d888888 888    888    888  888      888    888 888  888 888  \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"  \\n\" + \"Y88b  d88P 888  888 888  888 Y88b.  Y88b.  Y88b 888      \" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                \"888   d88P Y88..88P Y88b. \" + \" \\n\" + \" \\\"Y8888P\\\"  888  888 \\\"Y888888  \\\"Y888  \\\"Y888  \" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                \"\\\"Y88888      8888888P\\\"   \" + \"\\\"Y88P\\\"   \" + \"\\\"Y888 \\n\" + \"                   \" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                \"                             888\" + \"                            \" + \"     \" + \"\\n\" + \"  \" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                \"                                       \" + \"  Y8b d88P                                 \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"                                       \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + \"     \\\"Y88P\\\"                                  \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.lines \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.defaultGreeting \u003d this.lines + \"\\n\" + \"     Hello! I\u0027m Chatty Bot \\n\" + \"     \" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                \"What can I do for you?\\n\" + lines + \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.commandParser \u003d new Parser();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String nextLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return nextLine;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void printWelcome() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(\"Hello from\\n\" + this.logo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(defaultGreeting);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void loadFile() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(this.lines);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(\"     Previously saved list (if any) loaded. You may enter your commands now:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(this.lines);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public static void addDirectory() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(\"     I see that you do not have a directory to store data. \" +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                \"Created one for you before we proceed.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public static void addDataFile() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(\"     I see that this is your first time using Chatty Bot, \" +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                \"I have created a file to log your history from now on!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void markAsDone(int taskIndex, TaskList currList) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(this.lines);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(\"       \" + currList.get(taskIndex));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(this.lines);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void addTask(Task newTask, TaskList currList) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(this.lines + \"\\n\" + \"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(\"       \" + newTask);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(\"     Now you have \" + String.valueOf(currList.getNumTask()) +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                \" task(s) in the list.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(this.lines);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void listItems(TaskList currList) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(this.lines);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        currList.listItems();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(this.lines);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void deleteTask(Task removeTask, TaskList currList) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(this.lines);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(\"     Alright, the following task has been removed\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(\"     \" + removeTask);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(\"     Now you have \" + String.valueOf(currList.getNumTask()) +"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                \" task(s) in the list.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(this.lines);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public static void commandError(InvalidCommand ex) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(\"     \"  + ex);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void goodBye() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        String end_Greeting \u003d this.lines + \"\\n\" + \"     Bye. Hope to see you again soon!\\n\" + this.lines;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(end_Greeting);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void printFoundItems(TaskList foundTasks, String keyword) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(this.lines);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(\"     Here are the matching tasks for keyword \\\"\" + keyword + \"\\\" in your list:\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        foundTasks.listItems();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        System.out.println(lines);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 115
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents a command to add task into task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private Task newTask;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates command with task given."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param newTask New Task to be added."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public AddCommand(Task newTask) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.newTask \u003d newTask;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Executes main logic to add task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Updates both current list and storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Displays item successfully added message to user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param ui Ui used to generate messages to users."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param listStorage Backend storage to store items in the task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskList List of tasks added by users so far."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void execute (Ui ui, Storage listStorage, TaskList taskList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        taskList.add(this.newTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        listStorage.addTask(this.newTask);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        ui.addTask(this.newTask, taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 39
    }
  },
  {
    "path": "src/main/java/duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents the command to exit the bot."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Represents a command to exit the bot."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public ByeCommand () {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Executes main logic to exit the bot."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Displays bye message to user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param ui Ui used to generate messages to users."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param listStorage Backend storage to store items in the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskList List of tasks added by users so far."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void execute(Ui ui, Storage listStorage, TaskList taskList) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        ui.goodBye();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 34
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents the Command object to handle logic of user inputs."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Abstract class to be implemented by AddCommand, ByeCommand, DeleteCommand,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * DoneCommand and ListCommand."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Creates appropriate command to handle the logic of the bot."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private int itemIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.itemIndex \u003d -1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns boolean value signalling if the command should terminate the bot."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return isExit property of the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public boolean canExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public abstract void execute(Ui ui, Storage listStorage, TaskList taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 32
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.exception.InvalidCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents a command to delete task from the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private int itemIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates DeleteCommand with given index."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param itemIndex Index of item to be deleted in the current task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public DeleteCommand (int itemIndex) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.itemIndex \u003d itemIndex;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Executes main logic to delete task from the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Displays task deleted message to user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param ui Ui used to generate messages to users."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param listStorage Backend storage to store items in the task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskList List of tasks added by users so far."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void execute(Ui ui, Storage listStorage, TaskList taskList) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            Task removedTask \u003d taskList.removeTask(itemIndex - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            listStorage.deleteTask(removedTask);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            ui.deleteTask(removedTask, taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch(IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                throw new InvalidCommand(\"Please enter a valid task number.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            } catch (InvalidCommand invalidCommand) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                invalidCommand.printStackTrace();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 48
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.exception.InvalidCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents a command to mark a task done in the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates DoneCommand with given index."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskIndex Index of item to be mark as done in the current task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public DoneCommand(int taskIndex) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Executes main logic to mark a task done from the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Displays task marked successfully message to user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param ui Ui used to generate messages to users."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param listStorage Backend storage to store items in the task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskList List of tasks added by users so far."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void execute(Ui ui, Storage listStorage, TaskList taskList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            Task editedTask \u003d taskList.get(this.taskIndex);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            listStorage.editTask(editedTask, this.taskIndex, taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            ui.markAsDone(this.taskIndex, taskList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                throw new InvalidCommand(\"Please enter a valid task number.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            } catch (InvalidCommand invalidCommand) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                invalidCommand.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 47
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void execute(Ui ui, Storage listStorage, TaskList taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        TaskList keywordTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        for(int i \u003d 0; i \u003c taskList.getNumTask(); i++) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            Task nextTask \u003d taskList.get(i);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if (nextTask.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                keywordTasks.add(nextTask);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        ui.printFoundItems(keywordTasks, this.keyword);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 26
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents a command to list all tasks in the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Executes main logic to list tasks in the task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Displays current tasks and their respective status to users."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param ui Ui used to generate messages to users."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param listStorage Backend storage to store items in the task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskList List of tasks added by users so far."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void execute(Ui ui, Storage listStorage, TaskList taskList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        ui.listItems(taskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 29
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents exception to be thrown when users enters any invalid command ot the bot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class InvalidCommand extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates an InvalidCommand object with appripriate error message to be displayed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param errorMessage Error message to be displayed to users."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public InvalidCommand(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Displays InvalidCommand as the customised error message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Error Message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return this.errorMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 27
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.exception.InvalidCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.commands.AddCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.commands.ByeCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.commands.FindCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents parser to parse and create appropriate Command object to handle"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * the commands given by user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Generates the correct Command object to be executed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param command User\u0027s input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Appropriate command to execute logic of input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public static Command parse(String command) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            if (command.contains(\"done\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                String[] doneInputs \u003d command.split(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                if (doneInputs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    throw new InvalidCommand(\"OOPS!!! Please enter at least 1 task number\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                } else if (doneInputs.length \u003e 2) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    throw new InvalidCommand(\"OOPS!!! Please enter 1 task number only\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                } else if (doneInputs.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                        Integer.parseInt(doneInputs[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                        throw new InvalidCommand(\"Please enter task number instead of task name!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    int taskToDo \u003d Integer.parseInt(doneInputs[1]) - 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    DoneCommand dc \u003d new DoneCommand(taskToDo);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    return dc;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            } else if (command.contains(\"todo\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    String taskToDo \u003d command.substring(5);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    if (taskToDo.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                        throw new InvalidCommand(\"OOPS!!! Please specify your task.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    ToDo newToDo \u003d new ToDo(taskToDo);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    AddCommand ac \u003d new AddCommand(newToDo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    return ac;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                } catch(StringIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    throw new InvalidCommand(\"OOPS!!! Please specify your task.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                } catch (InvalidCommand invalidCommand) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    Ui.commandError(invalidCommand);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            } else if (command.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    String deadlineInput \u003d command.substring(9);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    int indexSeparator \u003d deadlineInput.indexOf(\"/by\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    if (indexSeparator \u003d\u003d -1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                        throw new InvalidCommand(\"Please include your deadline using /by !\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    String deadlineTaskName \u003d deadlineInput.substring(0, indexSeparator - 1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    String deadlineTime \u003d deadlineInput.substring(indexSeparator + 4);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    LocalDate deadlineDate \u003d LocalDate.parse(deadlineTime);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    Deadline newDeadline \u003d new Deadline(deadlineTaskName, deadlineDate);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    AddCommand ac \u003d new AddCommand(newDeadline);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    return ac;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                } catch (StringIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    throw new InvalidCommand(\"OOPS!!! Please specify your task.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            } else if (command.contains(\"event\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    String eventInput \u003d command.substring(6);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    int indexSeparator \u003d eventInput.indexOf(\"/at\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    if (indexSeparator \u003d\u003d -1) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                        throw new InvalidCommand(\"Please include your event date using /at !\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    String eventTaskName \u003d eventInput.substring(0, indexSeparator - 1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    String eventTime \u003d eventInput.substring(indexSeparator + 4);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    LocalDate eventDate \u003d LocalDate.parse(eventTime);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    Event newEvent \u003d new Event(eventTaskName, eventDate);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    AddCommand ac \u003d new AddCommand(newEvent);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    return ac;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                } catch (StringIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    throw new InvalidCommand(\"OOPS!!! Please specify your task.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            } else if (command.contains(\"list\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                if (command.split(\" \").length \u003e 1) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    throw new InvalidCommand(\"You have to view your entire to-do list!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                ListCommand lc \u003d new ListCommand();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                return lc;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            } else if (command.contains(\"delete\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                String[] deleteInput \u003d command.split(\" \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                if (deleteInput.length \u003e 2) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    throw new InvalidCommand(\"Please only input 1 task number!\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    int deleteIndex \u003d Integer.parseInt(deleteInput[1]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    DeleteCommand dc \u003d new DeleteCommand(deleteIndex);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    return dc;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                        throw new InvalidCommand(\"Please enter a valid task number\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    } catch (InvalidCommand invalidCommand) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                        Ui.commandError(invalidCommand);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            } else if (command.contains(\"bye\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            } else if (command.contains(\"find\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    String requestKeywords \u003d command.substring(5);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    if (requestKeywords.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                        throw new InvalidCommand(\"OOPS!!! Please specify your task.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    FindCommand fc \u003d new FindCommand(requestKeywords);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    return fc;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                } catch(StringIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    throw new InvalidCommand(\"OOPS!!! Please specify your task.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                } catch (InvalidCommand invalidCommand) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                    Ui.commandError(invalidCommand);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                throw new InvalidCommand(\"Please enter the correct command\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        } catch(InvalidCommand ex) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "            Ui.commandError(ex);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 142
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents deadline tasks created by users."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates Deadline object with relevant task name and deadline time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskName Task name."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param time Time that the task is due (YYYY-MM-DD format)."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public Deadline(String taskName, LocalDate time) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns String representation of deadline task in backend data storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Representation of deadline task in backend data storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String getDataStorageName() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return \"D | \" + (super.getStatus() \u003d\u003d \"\\u2713\" ? \"1\" : \"0\") + \" | \" + super.getTaskName() + \" | \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + this.time;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns String representation of task to be displayed in task list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Representation of task in task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 44
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents event tasks created by users."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates Event object with relevant task name and event time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskName Task name."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param time Time that the task is due (YYYY-MM-DD format)."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public Event(String taskName, LocalDate time) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns String representation of event task in backend data storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Representation of event task in backend data storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String getDataStorageName() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return \"E | \" + (super.getStatus() \u003d\u003d \"\\u2713\" ? \"1\" : \"0\") + \" | \" + super.getTaskName() + \" | \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + this.time;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns String representation of event task to be displayed in task list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Representation of event task in task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "                + this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 44
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents tasks created by users."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * To be inherited by Deadline, Event and ToDo classes."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private boolean hasCompleted;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates Task with relevant task name."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param name Task Name."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.taskName \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.hasCompleted \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns symbol corresponding to status of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Current status of task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    protected String getStatus() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return (this.hasCompleted ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Edits status of the task to completed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        this.hasCompleted \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns task name of the selected task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Task name."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    protected String getTaskName() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return this.taskName;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns String representation of task to be displayed in task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Representation of task in task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return \"[\" + getStatus() + \"] \" + this.taskName;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 57
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " * Represents to-do tasks created by users."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Creates ToDo object with relevant task name."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @param taskName Task name."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public ToDo(String taskName) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns String representation of to-do task in backend data storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Representation of to-do task in backend data storage."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String getDataStorageName() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return \"T | \" + (super.getStatus() \u003d\u003d \"\\u2713\" ? \"1\" : \"0\") + \" | \" + super.getTaskName();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * Returns String representation of to-do task to be displayed in task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     * @return Representation of to-do task in task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 35
    }
  },
  {
    "path": "src/test/java/duke/tasks/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void markDone_taskMarkAsDone_taskStatusShowsTick(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        Task testTask \u003d new Task(\"Testing\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        testTask.markDone();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        assertEquals(\"[\" + \"\\u2713\" + \"] Testing\", testTask.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 13
    }
  },
  {
    "path": "src/test/java/duke/tasks/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void dataStorage_displaysCorrectStorageName_displayZeroForUndone() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        ToDo testToDoUndone \u003d new ToDo(\"Testing\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        assertEquals(\"T | 0 | Testing\", testToDoUndone.getDataStorageName());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    public void dataStorage_displaysCorrectStorageNameForDone_displayOneForDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        ToDo testToDoUndone \u003d new ToDo(\"Testing\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        testToDoUndone.markDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "        assertEquals(\"T | 1 | Testing\", testToDoUndone.getDataStorageName());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "todo borrow books"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "deadline return book /by 2020-10-05"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "event project meeting /at 2020-08-09"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "deadline do homework /by 2020-09-10"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "SET JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tohyuting"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tohyuting"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "tohyuting": 7,
      "-": 19
    }
  }
]
