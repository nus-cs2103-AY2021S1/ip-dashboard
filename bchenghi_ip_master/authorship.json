[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "T | 1 | description"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "T | 0 | description"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "T | 0 | description"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "E | 1 | description | 2012-02-12 | 16:30"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 4
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * Task types used in Duke."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public enum TaskType {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        TODO(\"todo\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        EVENT(\"event\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        DEADLINE(\"deadline\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        public final String name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        private TaskType(String name) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            this.name \u003d name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * Initializes a Duke object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * @param pathName The path for the storage file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public Duke(String pathName) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        storage \u003d new Storage(pathName);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * Runs the Duke object."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        boolean isRunning \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        while (isRunning) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                isRunning \u003d !c.isExitCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "bchenghi": 65
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tTask taskToAdd;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Initializes an AddCommand with the task to be added as the input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param taskToAdd The task to be added."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic AddCommand(Task taskToAdd) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tthis.taskToAdd \u003d taskToAdd;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Adds the taskToAdd to the TaskList, prints a message in the Ui and updates the Storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param tasks The TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param ui The Ui."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param storage The Storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @throws DukeException If storage could not be updated."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttasks.addTask(taskToAdd);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tstorage.updateStorage(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tui.printMessage(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t+ taskToAdd.toString() + \"\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\t+ \"Now you have \" + tasks.numberOfTasks() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 37
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * A method to execute the command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param tasks The TaskList used by Duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param ui The Ui used by Duke."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param storage The Storage used by Duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @throws DukeException If a DukeException occurs during execution by child classes."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Returns whether the command object is the ExitCommand."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @return A boolean of whether the command is an ExitCommand and default set to false."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic boolean isExitCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 27
    }
  },
  {
    "path": "src/main/java/duke/command/DateAndTimeListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class DateAndTimeListCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tLocalDate localDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tLocalTime localTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Initializes the command with the LocalDate and LocalTime to find in TaskList."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param localDate The LocalDate to match with tasks in the TaskLise."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param localTime The LocalTime to match with tasks in the TaskList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic DateAndTimeListCommand(LocalDate localDate, LocalTime localTime) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tthis.localDate \u003d localDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tthis.localTime \u003d localTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Searches for tasks that have the same date and time as localDate and localTime"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * and prints them in the Ui."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param taskList The TaskList used by Duke."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param ui The Ui used by Duke."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param storage The Storage used by Duke."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @throws DukeException"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tint numberOfTasksFound \u003d 0;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tStringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tstringBuilder.append(\"Here are the tasks with the date: \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t+ localDate.toString() + \" and time: \" + localTime.toString() + \"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tfor (int i \u003d 0; i \u003c taskList.numberOfTasks(); i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tTask currentTask \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tif (currentTask instanceof Deadline) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tDeadline deadline \u003d (Deadline) currentTask;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tif (deadline.getLocalDate().equals(localDate)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\t\t\u0026\u0026 deadline.getLocalTime().equals(localTime)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\tstringBuilder.append((i + 1) + \". \" + deadline.toString() + \"\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\tnumberOfTasksFound++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t} else if (currentTask instanceof Event) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tEvent event \u003d (Event) currentTask;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tif (event.getLocalDate().equals(localDate)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\t\t\u0026\u0026 event.getLocalTime().equals(localTime)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\tstringBuilder.append((i + 1) + \". \" + event.toString() + \"\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\tnumberOfTasksFound++;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tif (numberOfTasksFound \u003e 0) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tui.printMessage(stringBuilder.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tui.printMessage(\"There are no tasks with the date: \" + localDate.toString()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\t+ \" and time: \" + localTime.toString());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 71
    }
  },
  {
    "path": "src/main/java/duke/command/DateListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class DateListCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tLocalDate localDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Initializes the command with the LocalDate to match with the tasks in TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param localDate"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic DateListCommand(LocalDate localDate) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tthis.localDate \u003d localDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Searches for tasks that have the same date and time as localDate"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * and prints them in the Ui."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param taskList The TaskList used by Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param ui The Ui used by Duke."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param storage The Storage used by Duke."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @throws DukeException"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tStringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tint numberOfTasksFound \u003d 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tstringBuilder.append(\"Here are the tasks with the date: \" + localDate.toString() + \"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tfor (int i \u003d 0; i \u003c taskList.numberOfTasks(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tTask currentTask \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tif (currentTask instanceof Deadline) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tDeadline deadline \u003d (Deadline) currentTask;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tif (deadline.getLocalDate().equals(localDate)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\tstringBuilder.append((i + 1) + \". \" + deadline.toString() + \"\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\tnumberOfTasksFound++;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t} else if (currentTask instanceof Event) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tEvent event \u003d (Event) currentTask;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tif (event.getLocalDate().equals(localDate)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\tstringBuilder.append((i + 1) + \". \" + event.toString() + \"\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\tnumberOfTasksFound++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tif (numberOfTasksFound \u003e 0) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tui.printMessage(stringBuilder.toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tui.printMessage(\"There are no tasks with the date: \" + localDate.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 63
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tint indexOfTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Initializes the command with the index of the task to delete."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param indexOfTask The index of the task to delete."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic DeleteCommand(int indexOfTask) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tthis.indexOfTask \u003d indexOfTask;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Deletes the task in the TaskList, prints a message in the Ui, and updates the Storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param taskList The TaskList used by Duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param ui The Ui used by Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param storage The Storage used by Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @throws DukeException If fail to delete or to update storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tTask taskToDelete \u003d taskList.getTask(indexOfTask);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\ttaskList.deleteTask(indexOfTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tstorage.updateStorage(taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tui.printMessage(\"Noted. I\u0027ve removed this task.\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\t+ taskToDelete.toString() + \"\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\t\t+ \"Now you have \" + taskList.numberOfTasks() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tthrow new DukeException(\"Oops! Sorry, I couldn\u0027t find the task.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 42
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tint indexOfTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Initializes the command with the index of task to set as done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param indexOfTask Index of the task to set as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic DoneCommand(int indexOfTask) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tthis.indexOfTask \u003d indexOfTask;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Sets the task at the indexOfTask in the TaskList as done, prints a message in the Ui"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * and updates the Storage."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param taskList The TaskList used by Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param ui The Ui used by Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param storage The Storage used by Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @throws DukeException If unable to find the task or update the storage."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tTask taskToSetDone \u003d taskList.getTask(indexOfTask);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttaskList.setTaskDone(indexOfTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tstorage.updateStorage(taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tui.printMessage(\"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t+ taskToSetDone.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 38
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tstatic String EXIT_MESSAGE \u003d \"Goodbye! Hope to see you again soon!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Prints exit message on the Ui."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param taskList The TaskList used by Duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param ui The Ui used by Duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param storage The Storage used by Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tui.printMessage(EXIT_MESSAGE);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Returns true since this is a ExitCommand."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @return true."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic boolean isExitCommand() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\treturn true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 32
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tString keyWord;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Initializes a command with the keyword to search for in the TaskList as input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param keyWord The keyword to find for in the list of tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic FindCommand(String keyWord) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tthis.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Prints all tasks in the TaskList that contain the keyWord."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param taskList The TaskList used by Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param ui The Ui used by Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param storage The Storage used by Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @throws DukeException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tif (taskList.numberOfTasks() \u003e 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tArrayList\u003cTask\u003e tasksWithKeyWord \u003d taskList.find(keyWord);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tif (tasksWithKeyWord.size() \u003e 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tStringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tstringBuilder.append(\"Here are the tasks with \\\"\" + keyWord + \"\\\" in your list:\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tfor (int i \u003d 0; i \u003c tasksWithKeyWord.size(); i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\tTask currentTask \u003d tasksWithKeyWord.get(i);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\tstringBuilder.append((i + 1) + \". \" + currentTask.toString() + \"\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tui.printMessage(stringBuilder.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tui.printMessage(\"No tasks with \\\"\" + keyWord + \"\\\" in your list.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tui.printMessage(\"There are no tasks yet!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 52
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Formats all tasks in the TaskList into a message form, and prints the"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * list in the Ui."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param taskList The TaskList used by Duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param ui The Ui used by Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param storage The Storage used by Duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @throws DukeException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tif (taskList.numberOfTasks() \u003e 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tStringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tstringBuilder.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tfor (int i \u003d 0; i \u003c taskList.numberOfTasks(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tTask currentTask \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tstringBuilder.append((i + 1) + \". \" + currentTask.toString() + \"\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tui.printMessage(stringBuilder.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tui.printMessage(\"There are no tasks yet!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 36
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * Initializes a DukeException object of the String input as its error message."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * @param errorMessage The error message for the exception."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 12
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import static java.lang.Integer.parseInt;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Parses the command from CLI and returns a corresponding Command object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @return A command object corresponding to the input command string."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @throws DukeException If unknown command or error in command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\treturn parseAndReturnCommand(command);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tstatic boolean stringIsInt(String string) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tparseInt(string);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\treturn true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\treturn false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tstatic Command parseAndReturnCommand(String string) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tString[] splitString \u003d string.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tif (string.equals(\"bye\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\treturn new ExitCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t} else if (string.equals(\"list\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\treturn new ListCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t} else if (splitString.length \u003d\u003d 2 \u0026\u0026"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\tsplitString[0].equals(\"done\") \u0026\u0026 stringIsInt(splitString[1])) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tint index \u003d parseInt(splitString[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\treturn new DoneCommand(index - 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t} else if (splitString.length \u003d\u003d 2 \u0026\u0026"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\tsplitString[0].equals(\"delete\") \u0026\u0026 stringIsInt(splitString[1])) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tint index \u003d parseInt(splitString[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\treturn new DeleteCommand(index - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t} else if (splitString.length \u003d\u003d 2 \u0026\u0026 splitString[0].equals(\"date\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tLocalDate date \u003d parseDateStringToLocalDate(splitString[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\treturn new DateListCommand(date);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t} else if (splitString.length \u003d\u003d 3 \u0026\u0026 splitString[0].equals(\"dateAndTime\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tLocalDate date \u003d parseDateStringToLocalDate(splitString[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tLocalTime time \u003d parseTimeStringToLocalTime(splitString[2]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\treturn new DateAndTimeListCommand(date, time);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t} else if (splitString[0].equals(Duke.TaskType.TODO.name)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t|| splitString[0].equals(Duke.TaskType.DEADLINE.name)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\t|| splitString[0].equals(Duke.TaskType.EVENT.name)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\treturn createAddCommand(splitString);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t} else if (splitString[0].equals(\"find\") \u0026\u0026 splitString.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\treturn new FindCommand(splitString[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tthrow new DukeException(\"Oops! I\u0027m sorry, I don\u0027t know what that means.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tstatic AddCommand createAddCommand(String[] stringArray) throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tTask taskToAdd \u003d null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tif (stringArray[0].equals(Duke.TaskType.TODO.name)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\ttaskToAdd \u003d todo(stringArray);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} else if (stringArray[0].equals(Duke.TaskType.DEADLINE.name)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\ttaskToAdd \u003d deadline(stringArray);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} else if (stringArray[0].equals(Duke.TaskType.EVENT.name)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\ttaskToAdd \u003d event(stringArray);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\treturn new AddCommand(taskToAdd);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tstatic ToDo todo(String[] stringArray) throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tif (stringArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tthrow new DukeException(\"Oops! A todo task needs a description.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tString description \u003d stringArrayToString(stringArray,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\t1, stringArray.length);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tToDo todoTask \u003d new ToDo(description);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\treturn todoTask;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tstatic Deadline deadline(String[] stringArray) throws DukeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tint indexOfBy \u003d -1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tfor (int i \u003d 0; i \u003c stringArray.length; i++) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tif (stringArray[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tindexOfBy \u003d i;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tif (indexOfBy \u003d\u003d 1 || stringArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tthrow new DukeException(\"Oops! A deadline task needs a description\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} else if (indexOfBy \u003d\u003d stringArray.length - 1 || indexOfBy \u003d\u003d -1) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tthrow new DukeException(\"Oops! A deadline task needs a deadline date and time\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} else if (stringArray.length \u003c indexOfBy + 3) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tthrow new DukeException(\"Oops! Date or time is missing from deadline\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tString dateString \u003d stringArray[indexOfBy + 1];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tString timeString \u003d stringArray[indexOfBy + 2];"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tString description \u003d stringArrayToString(stringArray, 1, indexOfBy);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tLocalDate localDate \u003d parseDateStringToLocalDate(dateString);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tLocalTime localTime \u003d parseTimeStringToLocalTime(timeString);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tDeadline deadline \u003d new Deadline(description, localDate, localTime);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\treturn deadline;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t// Takes input as a string array, then adds a new event to list, then prints the message"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tstatic Event event(String[] stringArray) throws DukeException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tint indexOfAt \u003d -1;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tfor (int i \u003d 0; i \u003c stringArray.length; i++) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tif (stringArray[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tindexOfAt \u003d i;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tif (indexOfAt \u003d\u003d 1 || stringArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tthrow new DukeException(\"Oops! An event task needs a description\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}  else if (indexOfAt \u003d\u003d stringArray.length - 1 || indexOfAt \u003d\u003d -1) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tthrow new DukeException(\"Oops! An event task needs a date and time\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}else if (stringArray.length \u003c indexOfAt + 3) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tthrow new DukeException(\"Oops! Date or time is missing from event\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tString dateString \u003d stringArray[indexOfAt + 1];"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tString timeString \u003d stringArray[indexOfAt + 2];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tString description \u003d stringArrayToString(stringArray, 1, indexOfAt);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tLocalDate localDate \u003d parseDateStringToLocalDate(dateString);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tLocalTime localTime \u003d parseTimeStringToLocalTime(timeString);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tEvent event \u003d new Event(description, localDate, localTime);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\treturn event;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "// ---------------------------- Methods for date and time ---------------------------"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t// Assumes input to be dd/mm/yyyy, returns in yyyy-mm-dd format"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tstatic LocalDate parseDateStringToLocalDate(String dateString) throws DukeException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tString[] stringArray \u003d dateString.split(\"/\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tString day \u003d stringArray[0];"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tString month \u003d stringArray[1];"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tString year \u003d stringArray[2];"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\twhile (day.length() \u003c 2) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tday \u003d \"0\" + day;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\twhile (month.length() \u003c 2) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tmonth \u003d \"0\" + month;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tString editedDateString \u003d day + \"/\" + month + \"/\" + year;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tDateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tLocalDate localDate \u003d LocalDate.parse(editedDateString, formatter);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\treturn localDate;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tthrow new DukeException(\"Date: \" + dateString + \" is not formatted correctly\\n\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\t+ \"Please use dd/mm/yyyy format.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tthrow new DukeException(\"Date: \" + dateString + \" is not formatted correctly\\n\""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\t+ \"Please use dd/mm/yyyy format.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tstatic LocalTime parseTimeStringToLocalTime(String timeString) throws DukeException {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tDateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"kkmm\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tLocalTime localTime \u003d LocalTime.parse(timeString, formatter);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\treturn localTime;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tthrow new DukeException(\"Time: \" + timeString + \" is not formatted correctly.\\n\""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\t+ \"Please use HHMM format.\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t// ----------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tstatic String stringArrayToString(String[] arr, int startIndex, int endIndex) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tif (endIndex \u003e startIndex) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tStringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tfor (int i \u003d startIndex; i \u003c endIndex - 1; i++) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\tstringBuilder.append(arr[i] + \" \");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tstringBuilder.append(arr[endIndex - 1]);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\treturn stringBuilder.toString();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\treturn null;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\treturn null;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 202
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tstatic String SAVED_TASK_PATH;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Initializes Storage with the input path as the location for the storage file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param path The path to store the storage file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic Storage(String path) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tSAVED_TASK_PATH \u003d path;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Returns an ArrayList of tasks from the storage file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @return The ArrayList of tasks from the storage file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @throws DukeException If the storage file cannot be read, found or created if not created yet."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\treturn readAndLoadFromFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tTask createTaskFromFile(String[] strArray) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tboolean done \u003d strArray[1].equals(\"1\") ? true : false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tString description \u003d strArray[2];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tTask task;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tif (strArray[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\ttask \u003d new ToDo(description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t} else if (strArray[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tString date \u003d strArray[3];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tString time \u003d strArray[4];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tLocalDate localDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tLocalTime localTime \u003d LocalTime.parse(time);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\ttask \u003d new Deadline(description, localDate, localTime);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t} else if (strArray[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tString date \u003d strArray[3];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tString time \u003d strArray[4];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tLocalDate localDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tLocalTime localTime \u003d LocalTime.parse(time);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\ttask \u003d new Event(description, localDate, localTime);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tthrow new DukeException(\"Saved file task type cannot be understood.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tif (done) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\ttask.markAsDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\treturn task;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tthrow new DukeException(\"Saved file text format error\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tArrayList\u003cTask\u003e readAndLoadFromFile() throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tif (fileExists(SAVED_TASK_PATH)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tFile file \u003d new File(SAVED_TASK_PATH);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t//System.out.println(file.getAbsolutePath());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tScanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\twhile (s.hasNext()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\tString[] strArray \u003d s.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\tTask task \u003d createTaskFromFile(strArray);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\ttaskList.add(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\treturn taskList;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tcreateFile();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\treturn new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tthrow new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tthrow new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t// fix input file?"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tboolean fileExists(String path) throws DukeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tString fullPath \u003d new File(path).getAbsolutePath();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tString[] pathStringArray \u003d path.split(\"/\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tStringBuilder currentPath \u003d new StringBuilder();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tboolean directoryNotFound \u003d false;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tFile fileInDirectory \u003d null;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tfor (int i \u003d 0; i \u003c pathStringArray.length; i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tif (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tcurrentPath.append(pathStringArray[i]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tcurrentPath.append(\"/\" + pathStringArray[i]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tfileInDirectory \u003d new File(currentPath.toString());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tif (!fileInDirectory.exists()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tdirectoryNotFound \u003d true;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tif (directoryNotFound) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\treturn false;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\treturn true;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void updateStorage(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tFileWriter fw \u003d new FileWriter(SAVED_TASK_PATH);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tString textForUpdate \u003d convertTaskListToSaveFormat(tasks);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tfw.write(textForUpdate);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tfw.close();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tthrow new DukeException(\"Could not write to file\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tvoid createFile() throws DukeException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tFile newFile \u003d new File(SAVED_TASK_PATH);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tString[] pathStringArray \u003d SAVED_TASK_PATH.split(\"/\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tStringBuilder currentPath \u003d new StringBuilder();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tnewFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tif (newFile.createNewFile()) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t// successfully created new file"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tthrow new DukeException(\"Could not create a save file at \" + newFile.getAbsolutePath());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tSystem.out.println(e.getMessage());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tthrow new DukeException(\"Could not create a save file at \" + newFile.getAbsolutePath());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tString convertTaskListToSaveFormat(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tStringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tfor (int i \u003d 0; i \u003c taskList.numberOfTasks(); i++) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tTask task \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tString saveTaskString \u003d convertTaskToSaveFormat(task);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tstringBuilder.append(saveTaskString + \"\\n\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\treturn stringBuilder.toString();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tString convertTaskToSaveFormat(Task task) throws DukeException {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tString taskType;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tString description \u003d task.getDescription();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tint taskDone \u003d task.isDone() ? 1 : 0;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tString resultString;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tif (task instanceof ToDo) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\ttaskType \u003d \"T\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tresultString \u003d taskType + \" | \" + taskDone + \" | \" + description;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tDeadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\ttaskType \u003d \"D\";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tString date \u003d deadline.getLocalDate().toString();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tString time \u003d deadline.getLocalTime().toString();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tresultString \u003d taskType + \" | \" + taskDone + \" | \" + description + \" | \" + date + \" | \" + time;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} else if (task instanceof Event) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tEvent event \u003d (Event) task;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\ttaskType \u003d \"E\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tString date \u003d event.getLocalDate().toString();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tString time \u003d event.getLocalTime().toString();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tresultString \u003d taskType + \" | \" + taskDone + \" | \" + description + \" | \" + date + \" | \" + time;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tthrow new DukeException(\"Unable to save task, unknown task type\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\treturn resultString;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 187
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * Returns deadline date and time as a String."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * @return The deadline date and time as a String."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * Initializes the Deadline with a description, LocalDate and LocalTime as its deadline."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * @param description The description of the deadline."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * @param date The date of the deadline."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * @param time The time of the deadline."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public Deadline(String description, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        this.by \u003d convertDateAndTimeToString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    // Date time format is dd/MM/yyyy tttt"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    String convertDateAndTimeToString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        String str \u003d date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \" + time;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * Returns the LocalDate of the deadline."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * @return The LocalDate of the deadline."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public LocalDate getLocalDate() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * Returns the LocalTime of the deadline."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * @return The LocalTime of the deadline."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public LocalTime getLocalTime() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return \"[D]\" + super.toString() +  \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 62
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * Returns the date and time of the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * @return The date and time of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * Initializes an event task with its description, LocalDate and LocalTime for"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * the date and time of event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * @param description The description of the event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * @param date The date of the event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * @param time The time of the event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public Event(String description, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        this.at \u003d convertDateAndTimeToString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    String convertDateAndTimeToString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        String str \u003d date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \" + time;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * Returns the date of the event."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * @return The date of the event."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public LocalDate getLocalDate() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * Returns the time of the event."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * @return The time of the event."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public LocalTime getLocalTime() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 64
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * Initializes the Task with a description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * Returns a tick if done, cross if not."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * @return A tick or cross String."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * @return The description of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * Returns whether the task is done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * @return A boolean whether the task is done."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 54
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/** The list of tasks */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Initializes an empty list for tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/** Initializes the given list of tasks for the TaskList */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic TaskList(ArrayList\u003cTask\u003e tasksForInit) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttasks \u003d tasksForInit;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Adds a task to the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param task The task to be added to the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void addTask(Task task) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttasks.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Deletes the task at the index."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param index The index of the task to delete."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void deleteTask(int index) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttasks.remove(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Sets the task at index as done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param index The index of the task in the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void setTaskDone(int index) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tTask task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttask.markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Returns the task at the input index."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param index The index of the task in the list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @return The Task corresponding to the index."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @throws DukeException If index is out of bounds."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic Task getTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tif (index \u003e\u003d tasks.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tthrow new DukeException(\"There are no tasks at index \" + (index + 1));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\treturn tasks.get(index);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Returns the number of tasks in the list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @return The number of tasks in the list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic int numberOfTasks() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\treturn tasks.size();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic ArrayList\u003cTask\u003e find(String keyWord) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tfor (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tTask task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tif (task.toString().contains(keyWord)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\tfoundTasks.add(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\treturn foundTasks;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 85
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * Initializes a ToDo task with a description."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     * @param description The description for the task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 17
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tstatic String INDENTATION \u003d \"    \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tstatic String LINE \u003d \"-------------------------------------------------------------\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tstatic String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t+ \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t+ \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t+ \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t+ \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tstatic String OPENING \u003d \"Hello from\\n\" + LOGO;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tScanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Prints the entire opening message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void showWelcome() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tSystem.out.println(OPENING);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tprintMessage(\"Hello! I\u0027m Duke.\\nHow can I help you today?\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Prints the input string on the console between two lines."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void printMessage(String message) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tshowLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tString[] splitByNewLine \u003d message.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tfor (String str : splitByNewLine) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tindent();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tSystem.out.println(str);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tshowLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Reads a line of command from the CLI and returns it as a String."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @return The String of the input in CLI."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic String readCommand() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tString command \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\treturn command;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Prints the input String with exclamation marks at the front and end of"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * the String to signify an error message."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * @param errorMessage The String of the error message to be printed."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void showError(String errorMessage) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tshowLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tString[] splitByNewLine \u003d errorMessage.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tfor (String str : splitByNewLine) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tindent();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tSystem.out.println(\"!!! \" + str + \" !!!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tshowLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t * Prints a line in the CLI."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void showLine() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tindent();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tSystem.out.println(LINE);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tvoid indent() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tSystem.out.print(INDENTATION);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 81
    }
  },
  {
    "path": "src/test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "T | 0 | description"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "D | 0 | description | 2012-02-12 | 16:00"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 2
    }
  },
  {
    "path": "src/test/data/invalidDuke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "some invalid text"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "more invalid text"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 2
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void dummyTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\tassertEquals(2,2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 11
    }
  },
  {
    "path": "src/test/java/duke/command/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void addTodo() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tTask todo \u003d new ToDo(\"description\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tCommand command \u003d new AddCommand(todo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tcommand.execute(new TaskList(), new Ui(), new Storage(\"data/duke.txt\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tfail(\"Should not have failed at adding todo task\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void addEvent() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tTask event \u003d new Event(\"description\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\tLocalDate.parse(\"2012-12-02\"), LocalTime.parse(\"16:00:00\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tCommand command \u003d new AddCommand(event);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tcommand.execute(new TaskList(), new Ui(), new Storage(\"data/duke.txt\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tfail(\"Should not have failed at adding event task\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void addDeadline() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tTask deadline \u003d new Deadline(\"description\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\tLocalDate.parse(\"2012-12-02\"), LocalTime.parse(\"16:00:00\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tCommand command \u003d new AddCommand(deadline);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tcommand.execute(new TaskList(), new Ui(), new Storage(\"data/duke.txt\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tfail(\"Should not have failed at adding deadline task\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 52
    }
  },
  {
    "path": "src/test/java/duke/command/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void successfulDelete() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tTaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tUi ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tStorage storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tTask todo \u003d new ToDo(\"description\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tCommand command \u003d new AddCommand(todo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tcommand.execute( taskList, ui, storage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tCommand deleteCommand \u003d new DeleteCommand(0);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tdeleteCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tfail(e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void wrongIndex() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tTaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tUi ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tStorage storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tCommand deleteCommand \u003d new DeleteCommand(-1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tdeleteCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tfail(\"Index is out of bounds and should have thrown an exception\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\treturn;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 44
    }
  },
  {
    "path": "src/test/java/duke/command/FindCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class FindCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void successfulFind() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tTaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tUi ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tStorage storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tTask todo \u003d new ToDo(\"description\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tCommand command \u003d new AddCommand(todo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tcommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tCommand findCommand \u003d new FindCommand(\"description\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tfindCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tfail(e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 29
    }
  },
  {
    "path": "src/test/java/duke/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void incorrectParse() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tCommand command \u003d Parser.parse(\"some funny unknown command\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tfail(\"Incorrect message in parser should have thrown exception\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\treturn;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void correctParse() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tCommand command \u003d Parser.parse(\"event description /at 22/2/2012 1630\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tfail(e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 29
    }
  },
  {
    "path": "src/test/java/duke/storage/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void invalidStorageFile() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tStorage storage \u003d new Storage(\"data/invalidDuke.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tstorage.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tfail(\"Should have thrown an exception due to invalid storage text file\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\treturn;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void validStorageFile() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tStorage storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tstorage.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tfail(\"Should not have thrown an exception due to valid storage text file\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bchenghi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\tpublic void readAndWriteToFile() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\ttasks.add(new ToDo(\"description\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\ttasks.add(new Deadline(\"description\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t\t\tLocalDate.parse(\"2012-02-12\"), LocalTime.parse(\"16:00:00\")));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tTaskList taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tStorage storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tstorage.updateStorage(taskList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tArrayList\u003cTask\u003e returnedTaskList \u003d storage.load();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\tfail(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t\t//fail(\"Should not throw exception when updating or reading from file\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 54
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "todo description"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "deadline description /by 2/1/2012 2100"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "event description /at 22/1/2101 1400"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "event"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "event test description"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "event test description /at"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "event test description /at 22/1/2012"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "event test description /at 222/2/20100"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "event test description /at 22/1/2100 160"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "event test description /at 22/1/2100 1600"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "deadline test description"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "deadline test description /by"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "deadline test description /by 22/1/2012"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "deadline test description /by 222/2/20100"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "deadline test description /by 22/1/2100 160"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "deadline test description /by 22/1/2100 1600"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "list 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "date 22/1/2100"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "dateAndTime 22/1/2100 1600"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "find description"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 33
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "bchenghi": 3
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\duke\\command\\AddCommand.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\duke\\command\\Command.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\duke\\command\\DateAndTimeListCommand.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\duke\\command\\DateListCommand.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\duke\\command\\DeleteCommand.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\duke\\command\\DoneCommand.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\duke\\command\\ExitCommand.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\duke\\command\\FindCommand.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\duke\\command\\ListCommand.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\duke\\exception\\DukeException.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\duke\\parser\\Parser.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\duke\\storage\\Storage.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\duke\\task\\Deadline.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\duke\\task\\Event.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\duke\\task\\Task.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\duke\\task\\TaskList.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\duke\\task\\ToDo.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bchenghi"
        },
        "content": "C:\\Users\\Pactech\\Desktop\\ip\\src\\main\\java\\duke\\ui\\Ui.java"
      }
    ],
    "authorContributionMap": {
      "bchenghi": 19
    }
  }
]
