[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "//    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "//        Task deadline \u003d new Deadline(\"return book\", \"monday\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "//        System.out.println(deadline);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final int DATE_INDEX \u003d 4;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final int DEADLINE_INDEX \u003d 9;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final int DELETE_INDEX \u003d 7;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final int DONE_INDEX \u003d 5;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final int EVENT_INDEX \u003d 6;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final int TODO_INDEX \u003d 5;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "    private static void botStart() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "        List\u003cTask\u003e taskStorage \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "        int storageCount \u003d 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"\\nHi, my name is Duke.\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"\\nWhat can I do for you today?\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "                + \"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kswk"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kswk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kswk"
        },
        "content": "                String command \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kswk"
        },
        "content": "                String[] commandWordArray \u003d command.split(\" \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kswk"
        },
        "content": "                if (command.equals(BYE)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    System.out.println(\"Thanks for chatting with me, see you soon!\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kswk"
        },
        "content": "                            + \"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kswk"
        },
        "content": "                } else if (command.equals(LIST)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    for (int i \u003d 0; i \u003c storageCount; i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        System.out.println(i + 1 + \".\" + taskStorage.get(i));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kswk"
        },
        "content": "                } else if (commandWordArray[0].equals(DONE)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    if (command.substring(DONE_INDEX - 1).isBlank()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        throw new DukeException(\"Argument of done cannot be empty!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(command.substring(DONE_INDEX));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        taskStorage.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        System.out.println(\"I have marked this task as done: \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kswk"
        },
        "content": "                                + \"\\n\" + taskStorage.get(taskNumber - 1));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        throw new DukeException(\"That task does not exist in the list!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        throw new DukeException(\"Please enter a valid argument for done!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kswk"
        },
        "content": "                } else if (commandWordArray[0].equals(DELETE)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    if (command.substring(DELETE_INDEX - 1).isBlank()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        throw new DukeException(\"Argument of delete cannot be empty!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(command.substring(DELETE_INDEX));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        System.out.println(\"I have deleted this task: \""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kswk"
        },
        "content": "                                + \"\\n\" + taskStorage.get(taskNumber - 1));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        taskStorage.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        storageCount--;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        throw new DukeException(\"That task does not exist in the list!\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        throw new DukeException(\"Please enter a valid argument for delete!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kswk"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    Task task;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    if (commandWordArray[0].equals(TODO)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        if (command.substring(TODO_INDEX - 1).isBlank()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kswk"
        },
        "content": "                            throw new DukeException(\"Description of todo cannot be empty!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        task \u003d new Todo(command.substring(TODO_INDEX));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        if (commandWordArray[0].equals(DEADLINE)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kswk"
        },
        "content": "                            if (command.substring(DEADLINE_INDEX - 1).isBlank()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kswk"
        },
        "content": "                                throw new DukeException(\"Description of deadline cannot be empty!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kswk"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kswk"
        },
        "content": "                                try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kswk"
        },
        "content": "                                    String date \u003d command.substring(command.indexOf(\"/\") + DATE_INDEX);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kswk"
        },
        "content": "                                    task \u003d new Deadline("
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kswk"
        },
        "content": "                                            command.substring("
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kswk"
        },
        "content": "                                                    DEADLINE_INDEX, command.indexOf(\"/\") - 1), date);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kswk"
        },
        "content": "                                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kswk"
        },
        "content": "                                    throw new DukeException(\"Please enter a valid date!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kswk"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kswk"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        } else if (commandWordArray[0].equals(EVENT)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kswk"
        },
        "content": "                            if (command.substring(EVENT_INDEX - 1).isBlank()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kswk"
        },
        "content": "                                throw new DukeException(\"Description of event cannot be empty!\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kswk"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kswk"
        },
        "content": "                                try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kswk"
        },
        "content": "                                    String date \u003d command.substring(command.indexOf(\"/\") + DATE_INDEX);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kswk"
        },
        "content": "                                    task \u003d new Event("
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kswk"
        },
        "content": "                                            command.substring("
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kswk"
        },
        "content": "                                                    EVENT_INDEX, command.indexOf(\"/\") - 1), date);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kswk"
        },
        "content": "                                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kswk"
        },
        "content": "                                    throw new DukeException(\"Please enter a valid date!\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kswk"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kswk"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kswk"
        },
        "content": "                            throw new DukeException(\"Invalid command!\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kswk"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    taskStorage.add(storageCount, task);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    System.out.println(\"\u003e\" + \"added: \" + task + \"\u003c\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    storageCount++;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kswk"
        },
        "content": "                    System.out.println(\"You now have \" + storageCount + \" task(s) in your list.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kswk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kswk"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kswk"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kswk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kswk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kswk"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kswk"
        },
        "content": "        Duke.botStart();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "kswk": 121
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "//    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "//        Task event \u003d new Event(\"attend wedding\", \"friday\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "//        System.out.println(event);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 19
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kswk"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kswk"
        },
        "content": "//    public static void main(String[] args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kswk"
        },
        "content": "//        Task task \u003d new Task(\"read book\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kswk"
        },
        "content": "//        task.markAsDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kswk"
        },
        "content": "//        System.out.println(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kswk"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 29
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "//    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "//        Task todo \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "//        System.out.println(todo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kswk"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kswk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kswk": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kswk"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kswk"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kswk"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kswk"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kswk"
        },
        "content": "done 7"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kswk"
        },
        "content": "done abc"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kswk"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kswk"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "events"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": "test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kswk"
        },
        "content": "/c"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "delete 7"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kswk"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kswk"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "kswk": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kswk"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kswk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kswk"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "kswk": 3
    }
  }
]
