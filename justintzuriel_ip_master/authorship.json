[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 16,
      "-": 46
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * Represents Duke, a virtual task management system and personal assistant."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private boolean isQuitting;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Initializes a newly created Duke program with a saved file path."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param filePath path of the saved tasks file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.isQuitting \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            ui.chatPrint(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Runs the Duke program"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.ui.greet();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        while (!this.isQuitting) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                Command c \u003d Parser.parse(this.ui.getInput());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                c.execute(this.tasks, this.ui, this.storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                this.isQuitting \u003d c.isQuitting();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                ui.chatPrint(e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return c.execute(this.tasks, this.ui, this.storage);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            this.ui.chatPrint(e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 63,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * Represents exceptions in the Duke program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Initializes a newly created DukeException with a message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param msg message of the exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 16
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * Represents an add task command in the Duke program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    protected String desc;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Initializes a newly created add task command with a description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param desc description of task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public AddCommand(String desc) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Executes the add task command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param tasks TaskList of the program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param ui user interface of the program."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param storage storage of the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return the execution message."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @throws DukeException if there is a saving issue."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Task newTodo \u003d tasks.addTodo(this.desc, false);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        storage.save(tasks.getList());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return ui.onAdd(newTodo, tasks.size());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Checks whether an object equals this add task command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param obj object to be compared with this command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        if (this \u003d\u003d obj) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } else if (obj instanceof AddCommand) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            AddCommand ac \u003d (AddCommand) obj;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return this.desc.equals(ac.desc);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 57
    }
  },
  {
    "path": "src/main/java/duke/command/AddTimedCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * Represents an add timed task command in the Duke program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class AddTimedCommand extends AddCommand {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private Optional\u003cLocalTime\u003e time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Initializes a newly created add timed task command with a type, description, and date"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param type type of task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param desc description of task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param date date of task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public AddTimedCommand(String type, String desc, LocalDate date) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.time \u003d Optional.empty();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Initializes a newly created add timed task command with a type, description, date, and time"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param type type of task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param desc description of task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param date date of task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param time time of task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public AddTimedCommand(String type, String desc, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.time \u003d Optional.ofNullable(time);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Executes the add timed task command."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param tasks TaskList of the program."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param ui user interface of the program."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param storage storage of the program."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return the execution message."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @throws DukeException if there is a saving issue."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Task newTask \u003d this.time.map("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                time -\u003e tasks.addTimedTask(this.type, this.desc, this.date, time, false))"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                .orElseGet(() -\u003e tasks.addTimedTask(this.type, this.desc, this.date,false));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        storage.save(tasks.getList());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return ui.onAdd(newTask, tasks.size());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Checks whether an object equals this add timed task command."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param obj object to be compared with this command."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        if (this \u003d\u003d obj) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } else if (obj instanceof AddTimedCommand) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            AddTimedCommand ac \u003d (AddTimedCommand) obj;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return this.desc.equals(ac.desc)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    \u0026\u0026 this.type.equals(ac.type)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    \u0026\u0026 this.date.equals(ac.date)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    \u0026\u0026 this.time.equals(ac.time);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 88
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * Represents a bye command in the Duke program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Checks whether the program is quitting."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public boolean isQuitting() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Executes the bye command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param tasks TaskList of the program."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param ui user interface of the program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param storage storage of the program."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return the execution message."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return ui.farewell();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Checks whether an object is a bye command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param obj object to be compared with this command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return obj instanceof ByeCommand;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 44
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * Represents a command in the Duke program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Checks whether the program is quitting."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public boolean isQuitting() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param tasks TaskList of the program."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param ui user interface of the program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param storage storage of the program."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return the execution message."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @throws DukeException if a task doesn\u0027t exist or if there is an saving issue."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 32
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * Represents a delete command in the Duke program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private int idx;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Initializes a newly created delete command with a task index."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param idx index of the task to delete."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public DeleteCommand(int idx) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.idx \u003d idx;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Executes the delete command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param tasks TaskList of the program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param ui user interface of the program."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param storage storage of the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return the execution message."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @throws DukeException if the task doesn\u0027t exist."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        if (this.idx \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            throw new DukeException(\"Oh dear! That task doesn\u0027t exist!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Task rmTask \u003d tasks.remove(this.idx);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        storage.save(tasks.getList());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return ui.onDelete(rmTask, tasks.size());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Checks whether an object equals this delete command."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param obj object to be compared with this command."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        if (this \u003d\u003d obj) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } else if (obj instanceof DeleteCommand) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            DeleteCommand dc \u003d (DeleteCommand) obj;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return this.idx \u003d\u003d dc.idx;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 60
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * Represents a done command in the Duke program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private int idx;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Initializes a newly created done command with a task index."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param idx index of the task to set as done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public DoneCommand(int idx) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.idx \u003d idx;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Executes the done command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param tasks TaskList of the program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param ui user interface of the program."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param storage storage of the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return the execution message."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @throws DukeException if the task doesn\u0027t exist."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        if (this.idx \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            throw new DukeException(\"Oh dear! That task doesn\u0027t exist!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Task doneTask \u003d tasks.setDone(this.idx);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        storage.save(tasks.getList());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return ui.onDone(doneTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Checks whether an object equals this done command."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param obj object to be compared with this command."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        if (this \u003d\u003d obj) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } else if (obj instanceof DoneCommand) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            DoneCommand dc \u003d (DoneCommand) obj;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return this.idx \u003d\u003d dc.idx;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 60
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * Represents a find command in the Duke program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Initializes a newly created delete command with a keyword."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param keyword keyword to find in task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Executes the find command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param tasks TaskList of the program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param ui user interface of the program."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param storage storage of the program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return the execution message."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return ui.onFind(tasks.find(this.keyword));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Checks whether an object equals this find command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param obj object to be compared with this command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        if (this \u003d\u003d obj) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } else if (obj instanceof FindCommand) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            FindCommand fc \u003d (FindCommand) obj;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return this.keyword.equals(fc.keyword);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 52
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * Represents a list command in the Duke program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Executes the list command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param tasks TaskList of the program."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param ui user interface of the program."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param storage storage of the program."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return the execution message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return ui.onList(tasks.getList());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Checks whether an object is a list command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param obj object to be compared with this command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return obj instanceof ListCommand;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 34
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 61
    }
  },
  {
    "path": "src/main/java/duke/gui/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 12
    }
  },
  {
    "path": "src/main/java/duke/gui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setStage(stage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 33
    }
  },
  {
    "path": "src/main/java/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * Controller for duke.gui.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private Stage stage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public void setStage(Stage s) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.stage \u003d s;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            this.stage.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 63
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * Represents a task with info of by when it must be done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private Optional\u003cLocalTime\u003e time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Initializes a newly created Deadline with a description, date, and whether it is done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param desc description of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param date date of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param isDone whether task is done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Deadline(String desc, LocalDate date, boolean isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        super(desc, isDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.time \u003d Optional.empty();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Initializes a newly created Deadline with a description, date, time, and whether it is done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param desc description of task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param date date of task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param time time of task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param isDone whether task is done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Deadline(String desc, LocalDate date, LocalTime time, boolean isDone) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        super(desc, isDone);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.time \u003d Optional.ofNullable(time);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Sets this task as done."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return task set as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Task setDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Task doneTask \u003d this.time.map("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                localTime -\u003e new Deadline(this.desc, this.date, localTime, this.isDone))"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                .orElseGet(() -\u003e new Deadline(this.desc, this.date, this.isDone));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        doneTask.isDone \u003d true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Formats the task to a string to write in a file."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return formatted task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String formatTask() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return (\"D\" + \" | \" + (isDone ? \"V\" : \"X\") + \" | \" + desc + \" | \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + this.date.format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"))"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + this.time.map(localTime -\u003e \" \" + localTime.format(DateTimeFormatter.ofPattern(\"HHmm\")))"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                .orElse(\"\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Returns a string representation of the task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return string representation of task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + this.time.map(time -\u003e \" \" + time.toString()).orElse(\"\") + \")\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 83
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * Represents a task with info of when it will be held"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private Optional\u003cLocalTime\u003e time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Initializes a newly created Event with a description, date, and whether it is done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param desc description of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param date date of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param isDone whether task is done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Event(String desc, LocalDate date, boolean isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        super(desc, isDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.time \u003d Optional.empty();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Initializes a newly created Event with a description, date, time, and whether it is done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param desc description of task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param date date of task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param time time of task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param isDone whether task is done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Event(String desc, LocalDate date, LocalTime time, boolean isDone) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        super(desc, isDone);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.time \u003d Optional.ofNullable(time);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Sets this task as done."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return task set as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Task setDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Task doneTask \u003d this.time.map("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                localTime -\u003e new Event(this.desc, this.date, localTime, this.isDone))"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                .orElseGet(() -\u003e new Event(this.desc, this.date, this.isDone));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        doneTask.isDone \u003d true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Formats the task to a string to write in a file."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return formatted task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String formatTask() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return (\"E | \" + (isDone ? \"V\" : \"X\") + \" | \" + desc + \" | \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + this.date.format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"))"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + this.time.map(localTime -\u003e \" \" + localTime.format(DateTimeFormatter.ofPattern(\"HHmm\")))"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                .orElse(\"\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Returns a string representation of the task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return string representation of task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + this.time.map(time -\u003e \" \" + time.toString()).orElse(\"\") + \")\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 83
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * Represents a task in the Duke program, which has a description and can be set as done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    protected String desc;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Initializes a newly created Task with a description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param desc description of task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Task(String desc) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Initializes a newly created Task with a description and whether it is done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param desc description of task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param isDone whether task is done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Task(String desc, boolean isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Gets the description of this task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return description of task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return this.desc;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Sets this task as done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return task set as done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Task setDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Task doneTask \u003d new Task(this.desc);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        doneTask.isDone \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Formats the task to a string to write in a file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return formatted task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String formatTask() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return (\"P | \" + (isDone ? \"V\" : \"X\") + \" | \" + desc);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Returns a string representation of the task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return string representation of task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return (\"[\" + (isDone ? \"V\" : \"X\") + \"] \" + desc);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Checks whether a given task equals this task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param o object to be compared with this task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return true if they are equal, false otherwise."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } else if (o instanceof Task) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            Task c \u003d (Task) o;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return this.desc.equals(c.desc);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 88
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * Represents a task without any additional info."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Initializes a newly created Todo with a description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param desc description of task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Todo(String desc) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Initializes a newly created Todo with a description and whether it is done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param desc description of task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param isDone whether task is done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Todo(String desc, boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        super(desc, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Sets this task as done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return task set as done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Task setDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Task doneTask \u003d new Todo(this.desc);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        doneTask.isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Formats the task to a string to write in a file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return formatted task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String formatTask() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return (\"T | \" + (isDone ? \"V\" : \"X\") + \" | \" + desc);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Returns a string representation of the task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return string representation of task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 57
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.command.AddTimedCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * Represents a parser which parses user commands into Command objects."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Parses the given input and returns the corresponding command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return corresponding command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @throws DukeException if there are any date/time parsing issues or unknown commands."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        String trimmedInput \u003d input.trim();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        String command \u003d trimmedInput.split(\" \")[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                String keyword \u003d trimmedInput.substring(trimmedInput.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                return new FindCommand(keyword);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                int doneIdx \u003d Integer.parseInt(trimmedInput.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                return new DoneCommand(doneIdx);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                int deleteIdx \u003d Integer.parseInt(trimmedInput.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                return new DeleteCommand(deleteIdx);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                taskFormatCheck(command, trimmedInput);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                String desc \u003d trimmedInput.substring(trimmedInput.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                return new AddCommand(desc);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                taskFormatCheck(command, trimmedInput);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                String tInfo \u003d trimmedInput.substring(trimmedInput.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                String tDesc \u003d tInfo.substring(0, tInfo.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                String meta \u003d tInfo.substring(tInfo.indexOf(\u0027/\u0027) + 4);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                LocalDate date;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                if (meta.contains(\" \")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    date \u003d LocalDate.parse(meta.substring(0, meta.indexOf(\u0027 \u0027)),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                            DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    LocalTime time \u003d LocalTime.parse(meta.substring(meta.indexOf(\u0027 \u0027) + 1),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                            DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    return new AddTimedCommand(command, tDesc, date, time);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    date \u003d LocalDate.parse(meta, DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    return new AddTimedCommand(command, tDesc, date);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                throw new DukeException(\"Oh dear! I\u0027m sorry, but I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            throw new DukeException(\"Oh dear! Please format the date and time as yyyy/MM/dd HHmm!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } catch (NumberFormatException | ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            throw new DukeException(\"Oh dear! Please give me a number!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Checks for any task formatting issues"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param type type of task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @throws DukeException if there are any formatting issues."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private static void taskFormatCheck(String type, String input) throws DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        int idxSpace \u003d input.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        int idxMeta \u003d input.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        int infoLength \u003d idxMeta - (idxSpace + 1);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        if (idxSpace \u003d\u003d -1"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                || (idxMeta !\u003d -1 \u0026\u0026 infoLength \u003c 1)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            throw new DukeException(\"Oh dear! A task description cannot be empty!\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        String info \u003d input.substring(input.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        if (type.equals(\"todo\") \u0026\u0026 info.contains(\"/\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            throw new DukeException(\"Oh dear! A todo shouldn\u0027t contain a timestamp!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        if (type.equals(\"deadline\") \u0026\u0026 !info.contains(\"/by\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            throw new DukeException(\"Oh dear! A deadline must contain \u0027/by\u0027!\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        if (type.equals(\"event\") \u0026\u0026 !info.contains(\"/at\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            throw new DukeException(\"Oh dear! An event must contain \u0027/at\u0027!\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        if (type.equals(\"deadline\") \u0026\u0026  info.substring(idxMeta).length() \u003c 5) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            throw new DukeException(\"Oh dear! A deadline must contain a timestamp!\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        if (type.equals(\"event\") \u0026\u0026 info.substring(idxMeta).length() \u003c 5) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            throw new DukeException(\"Oh dear! An event must contain a timestamp!\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 112
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * Represents the program storage, which can load and save tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private final String FILE_PATH;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Initializes a newly created Storage with a file path."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param filePath path of the saved tasks file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.FILE_PATH \u003d filePath;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Loads tasks into a task list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return list of tasks."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @throws DukeException if there are any I/O issues."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            int lastSlash \u003d this.FILE_PATH.lastIndexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            if (lastSlash !\u003d -1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                String folderDir \u003d FILE_PATH.substring(0, lastSlash);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                Files.createDirectories(Paths.get(\"./\" + folderDir));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            File file \u003d new File(this.FILE_PATH);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            if (!file.createNewFile()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                loadFromFile(tasks);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            throw new DukeException(\"Oh dear! \" + ex.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Loads tasks from a file to a list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @throws DukeException if there are any I/O issues."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private void loadFromFile(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            File f \u003d new File(this.FILE_PATH);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            int lineCounter \u003d 0;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                lineCounter++;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                String[] attr \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                formatCheck(attr, lineCounter);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                switch (attr[0]) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    tasks.add(new Todo(attr[2], attr[1].equals(\"V\")));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    tasks.add(taskCreator(\"deadline\", attr));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    tasks.add(taskCreator(\"event\", attr));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            throw new DukeException(\"Oh dear! Bad date and time format.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            throw new DukeException(ex.getMessage());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Processes a string from the save file to a task."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param type type of task."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param attr attributes of task."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return task derived from string."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private Task taskCreator(String type, String[] attr) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        String meta \u003d attr[3];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        if (meta.contains(\" \")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(meta.substring(0, meta.indexOf(\u0027 \u0027)),"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            LocalTime time \u003d LocalTime.parse(meta.substring(meta.indexOf(\u0027 \u0027) + 1),"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return type.equals(\"deadline\")"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    ? new Deadline(attr[2], date, time, attr[1].equals(\"V\"))"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    : new Event(attr[2], date, time, attr[1].equals(\"V\"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(meta, DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            return type.equals(\"deadline\")"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    ? new Deadline(attr[2], date, attr[1].equals(\"V\"))"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                    : new Event(attr[2], date, attr[1].equals(\"V\"));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Checks for any formatting issues from the save file."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param attr attributes of task."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param lineCounter current line number."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @throws DukeException if there are any formatting issues."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private void formatCheck(String[] attr, int lineCounter) throws DukeException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        if (attr.length \u003c 3 || (!attr[1].equals(\"V\") \u0026\u0026 !attr[1].equals(\"X\"))"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                || ((attr[0].equals(\"D\") || attr[0].equals(\"E\")) \u0026\u0026 attr.length !\u003d 4)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                || (!attr[0].equals(\"D\") \u0026\u0026 !attr[0].equals(\"E\")) \u0026\u0026 !attr[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            throw new DukeException(\"Oh dear! Invalid task in line \" + lineCounter + \".\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Saves the list of tasks to a file."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @throws DukeException if there are any I/O issues."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public void save(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        StringBuilder taskData \u003d new StringBuilder();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        for (Task ts : tasks) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            taskData.append(ts.formatTask()).append(\"\\n\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            writeToFile(taskData.toString());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            throw new DukeException(\"Oh dear! \" + ex.getMessage());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Writes a line to a file."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param textToAdd text to be written."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @throws IOException if there are any I/O issues."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.FILE_PATH);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 171
    }
  },
  {
    "path": "src/main/java/duke/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * Represents a list of tasks that can be added, deleted, or set as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Initializes a newly created TaskList with an empty list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Initializes a newly created TaskList with a given list of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Returns the list of tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Returns the size of the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return size of list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Returns a filtered list of tasks according to the given keyword."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param key keyword of the find command."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return filtered list of tasks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public List\u003cTask\u003e find(String key) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return this.tasks.stream().filter(task -\u003e task.getDesc().contains(key))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Set a task as done."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param idx index of task to be set as done."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return task set as done."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Task setDone(int idx) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Task doneTask \u003d tasks.get(idx).setDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.tasks.set(idx, doneTask);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Remove a task from the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param idx index of task to be removed from the list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return removed task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Task remove(int idx) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Task rmTask \u003d tasks.get(idx);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.tasks.remove(idx);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return rmTask;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Add a todo task to the list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param desc description of the task."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param isDone whether the task is done."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return added task."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Task addTodo(String desc, boolean isDone) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Task newTask \u003d new Todo(desc, isDone);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.tasks.add(newTask);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Add a deadline or event task to the list with a date."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param type type of the task."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param desc description of the task."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param date date of the task."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param isDone whether the task is done."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return added task."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Task addTimedTask(String type, String desc, LocalDate date, boolean isDone) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            newTask \u003d new Deadline(desc, date, isDone);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            newTask \u003d new Event(desc, date, isDone);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.tasks.add(newTask);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Add a deadline or event task to the list with a date and time."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param type type of the task."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param desc description of the task."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param date date of the task."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param time time of the task."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param isDone whether the task is done."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return added task."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Task addTimedTask(String type, String desc, LocalDate date, LocalTime time, boolean isDone) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            newTask \u003d new Deadline(desc, date, time, isDone);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            newTask \u003d new Event(desc, date, time, isDone);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.tasks.add(newTask);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 140
    }
  },
  {
    "path": "src/main/java/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " * Represents the user interface of the Duke program, dealing with input and output."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    private String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Initializes a newly created Ui with a Scanner."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Returns the user input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Greets the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return the printed message."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        String textToPrint \u003d \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + \"What can I do for you?\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        chatPrint(textToPrint);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return textToPrint;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Prints a farewell message to the user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return the printed message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String farewell() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        String textToPrint \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        chatPrint(textToPrint);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return textToPrint;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Prints the set output whenever the list command is called."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return the printed message."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String onList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        int id \u003d 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            output.append(\"\\n\").append(id).append(\". \").append(task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            id++;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        chatPrint(output.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Prints the set output whenever a find command is executed."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param tasks a list of tasks."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return the printed message."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String onFind(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        int id \u003d 1;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            output.append(\"\\n\").append(id).append(\". \").append(task);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            id++;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        chatPrint(output.toString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Prints the set output whenever a task is done."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param task a done task."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return the printed message."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String onDone(Task task) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        String textToPrint \u003d \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + \"   \" + task;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        chatPrint(textToPrint);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return textToPrint;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Prints the set output whenever a task is removed."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param task a removed task."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param size size of the list."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return the printed message."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String onDelete(Task task, int size) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        String textToPrint \u003d \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + \"   \" + task + \"\\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + \"Now you have \" + size + \" tasks in the list.\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        chatPrint(textToPrint);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return textToPrint;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Prints the set output whenever a task is added."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param task an added task."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param size size of the list."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @return the printed message."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public String onAdd(Task task, int size) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        String textToPrint \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + \"   \" + task + \"\\n\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                + \"Now you have \" + size + \" tasks in the list.\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        chatPrint(textToPrint);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        return textToPrint;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * Formats and prints a string."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     * @param toPrint string to print."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public void chatPrint(String toPrint) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        System.out.println(toPrint);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        System.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 142
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-label-padding: 10;\" text\u003d\"Label\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                \u003cFont name\u003d\"Monospaced Regular\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                \u003cInsets /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            \u003cminHeight\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            \u003c/minHeight\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"40.0\" fitWidth\u003d\"40.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 28
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 19
    }
  },
  {
    "path": "src/test/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public void testParse_listCommand_success() throws DukeException{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        assertEquals(new ListCommand(), Parser.parse(\"list\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public void testParse_addCommand_success() throws DukeException{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        assertEquals(new AddCommand(\"hang out\"), Parser.parse(\"todo hang out\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public void testParse_unknownCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            assertEquals(new ListCommand(), Parser.parse(\"what\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "            assertEquals(\"Oh dear! I\u0027m sorry, but I don\u0027t know what that means :(\", e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 32
    }
  },
  {
    "path": "src/test/duke/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public void testSetDone_notDoneTask_success() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        assertEquals(new Task(\"test\", true), new Task(\"test\", false).setDone());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    public void testFormatTask_notDoneTask_success() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "        assertEquals(\"P | X | test\", new Task(\"test\", false).formatTask());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "todo watch a movie"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "deadline finish the program /by tomorrow"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "event supper with friends /at 11pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justintzuriel"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "justintzuriel": 1,
      "-": 20
    }
  }
]
