[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    compile group: \u0027org.json\u0027, name: \u0027json\u0027, version: \u002720200518\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 25,
      "-": 43
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Welcome to the Duke created by Xia Liyi to help you mange your tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "## Content"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "* [Introduction](#introduction)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "* [About](#about)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "* [Getting Started](#getting-started)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "* [Features List](#features-list)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "* [Usage](#usage)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "* [Credits](#credits)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "This is mainly a task management application supported by JavaFX. It is an individual project in CS2103/T. It is also the gift I prepare for the girl I love."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "## About"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Author: Xia Liyi"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "GitHub: https://github.com/XIA-LIYI/ip"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Version: v0.2"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Release Date: 15 September 2020"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "## Getting Started"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "1. Download and install Java JDK 11."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "2. Mac / Linux / Windows are supported."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "3. Double click the Duke or run `java -jar Duke.jar`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "4. Log in with default user e.g. key in `login admin password`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "## Features List"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "All the commands are case-sensitive."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "* Log in to start the app e.g. `login`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "* Add a user e.g. `adduser`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "* Add a task e.g. `todo`, `deadline`, `event`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "* List all the tasks e.g. `list`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "* Mark a task as done e.g. `done`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "* Delete a task e.g. `delete`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "* Set a tag for a task e.g. `tag`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "* Find tasks by a keyword e.g. `find`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "* Get a random reply e.g. `love`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "* Exit and save the changed data e.g. `bye`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "### `login`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "You need to log in to use the Duke."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Format: `login USRNAME PASSOWRD`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Note: The username and password of default user is \"admin\" and \"password\"."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "### `adduser`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "You can add a new user."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Format: `adduser USERNAME PASSWORD NICKNAME`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "### `todo`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "You can add a TODO task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Format: `todo DESCRIPTION`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "### `event`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "You can add a EVENT task. The EVENT is a task with a time."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Format: `event DESCRIPTION /at TIME`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Note: The format of the `TIME` is either `yyyy/mm/dd HH:mm` or `yyyy/mm/dd`. "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "### `deadline`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "You can add a DEADLINE task. The DEADLINE is a task with a deadline."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Format: `deadline DESCRIPTION /by TIME`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Note: The format of the `TIME` is either `yyyy/mm/dd HH:mm` or `yyyy/mm/dd`. "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "### `list`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "You can list all the tasks."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "### `done`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "You can mark a task as DONE."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Format: `done TASKINDEX`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Note: You should give a valid task index. You are recommended that you run `list` first."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "### `delete`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "You can delete a task."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Format: `delete TASKINDEX`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Note: You should give a valid task index. You are recommended that you run `list` first."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "### `tag`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "You can set a tag for a task. The tag is optional for tasks."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Format: `tag TASKINDEX TAGCONTENT`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "### `find`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "You can find a task by the keyword. It executes rough search for tasks based on description and tag."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "### `love`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "You can get a random message to make you happy. You can try once a day."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Format: `love`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "### `bye`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "The Duke will be closed and any change of tasks will be stored."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "## Credits"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "Packages used:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "* JavaFX"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "* JUnit"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "* java-json"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 108,
      "-": 11
    }
  },
  {
    "path": "duke/userInfo.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "admin,password,dear"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "ysy,ysy,ysy"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 2
    }
  },
  {
    "path": "src/main/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "T,0,ls,,null"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 1
    }
  },
  {
    "path": "src/main/data/userInfo.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "ysy,ysy,Siyang"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "sjy,sjy,Jingyi"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 2
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.support.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.support.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * Duke is a small educational project which acts"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * based on user input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * @author Xia Liyi."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code Duke} with a storage and a filled task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        storage \u003d new Storage(\"duke.txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        taskList \u003d new TaskList(storage.getTaskList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            Command cmd \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            String res \u003d cmd.run(taskList, storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            if (cmd.isBye()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return res;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 38,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.user.UserList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            scene.getStylesheets().add(\"view/MainWindow.css\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            scene.getStylesheets().add(\"view/DialogBox.css\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            UserList.initialize();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 38
    }
  },
  {
    "path": "src/main/java/duke/commands/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exceptions.CommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.support.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Adds a Deadline task to the task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String commandContent;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code AddDeadlineCommand} with given command content."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param commandContent A String of user input for command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public AddDeadlineCommand(String commandContent) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.commandContent \u003d commandContent;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses user\u0027s input into task index, deadline and content and creates a {@code Deadline} task for the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public String run(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            Task newTask;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            int index \u003d commandContent.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            String taskContent \u003d commandContent.substring(0, index - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            String dateString \u003d commandContent.substring(index + 4);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                LocalDate taskDeadline \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                newTask \u003d new Deadline(taskContent, taskDeadline);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                newTask \u003d new Deadline(taskContent, dateString);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return Ui.addTask(newTask, taskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(\"Sorry! Failed to add a deadline. Please check the input format.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 31,
      "-": 21
    }
  },
  {
    "path": "src/main/java/duke/commands/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exceptions.CommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.support.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Adds a Event task to the task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String commandContent;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code AddDeadlineCommand} with given command content."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param commandContent A String of user input for command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public AddEventCommand(String commandContent) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.commandContent \u003d commandContent;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses user\u0027s input into task index, time and content and creates a {@code Event} task for the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public String run(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            Task newTask;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            int index \u003d commandContent.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            String taskContent \u003d commandContent.substring(0, index - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            String taskTime \u003d commandContent.substring(index + 4);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            newTask \u003d new Event(taskContent, taskTime);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return Ui.addTask(newTask, taskList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(\"Sorry! Failed to add a event. Please check the input format.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 24,
      "-": 21
    }
  },
  {
    "path": "src/main/java/duke/commands/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exceptions.CommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.support.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Adds a ToDo task to the task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class AddToDoCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String commandContent;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@AddDeadlineCommand} with given command content."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param commandContent A String of user input for command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public AddToDoCommand(String commandContent) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.commandContent \u003d commandContent;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public String run(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            Task newTask;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            newTask \u003d new ToDo(commandContent);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return Ui.addTask(newTask, taskList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(\"Sorry! Failed to add a todo. Please check the input format.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 24,
      "-": 18
    }
  },
  {
    "path": "src/main/java/duke/commands/AddUserCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.support.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.user.User;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.user.UserList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Adds a user to the user list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class AddUserCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private User user;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code AddUserCommand} with given user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public AddUserCommand(User user) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.user \u003d user;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds the {@code user} to the user list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String run(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        UserList.addUser(user);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return Ui.addUser();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 19,
      "-": 10
    }
  },
  {
    "path": "src/main/java/duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.support.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Exits the programme."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String run(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        storage.write(taskList.getList());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return Ui.bye();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 22,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.support.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the command the system will run."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     * Runs the operation inside each command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskList A {@code TaskList} where stores all tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param storage A {@code Storage} where reads and writes data file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A String as a repsonse to the user\u0027s command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public abstract String run(TaskList taskList, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 12,
      "-": 12
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exceptions.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.support.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Delete certain task from task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code DeleteCommand} with given task index."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskIndex The index of the task deleted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public DeleteCommand(String taskIndex) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.taskIndex \u003d Integer.parseInt(taskIndex);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public String run(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            Task currentTask \u003d taskList.get(taskIndex - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            taskList.remove(taskIndex - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return Ui.deleteTask(currentTask, taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 19,
      "-": 15
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exceptions.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.support.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Marks a certain task as done status."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code DoneCommand}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskIndex The index of the task marked."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public DoneCommand(String taskIndex) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.taskIndex \u003d Integer.parseInt(taskIndex);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public String run(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            Task currentTask \u003d taskList.get(taskIndex - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            currentTask.markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return Ui.doneTask(currentTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(\"Sorry! Failed to mark task as done. Please check the index.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 20,
      "-": 15
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.support.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Finds tasks based on certain conditions."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String findCondition;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code FindComamnd} with given user input as find condition."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param findCondition A String of user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public FindCommand(String findCondition) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.findCondition \u003d findCondition;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String run(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return Ui.getTasks(taskList.find(findCondition));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 17,
      "-": 9
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.support.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Lists out all of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String run(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return Ui.getTasks(taskList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 17,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/commands/LoginCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.support.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Logs in to the system."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class LoginCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public LoginCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String run(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return Ui.login();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 16,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/commands/LoveCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.support.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Shows daily message to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class LoveCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public LoveCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String run(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return Ui.love();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 16,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/commands/TagCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.support.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Sets a tag to a certain task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class TagCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String taskTag;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code TagCommand} with given user input as task index and tag."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskIndex The index of the task set."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskTag A String of the tag."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public TagCommand(int taskIndex, String taskTag) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.taskTag \u003d taskTag;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String run(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        Task task \u003d taskList.get(taskIndex - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        String oldTag \u003d task.setTag(taskTag);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return Ui.setTaskTag(taskIndex, oldTag, taskTag);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 23,
      "-": 9
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a special exception for Duke project."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code DukeException} with error message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public DukeException(String errMsg) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        super(errMsg);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 7,
      "-": 6
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents an exception for invalid input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String ERROR_MSG \u003d \"Sorry! The input is not valid.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates an {@code InvalidInputException} with default error message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public InvalidInputException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        super(ERROR_MSG);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates an {@code InvalidInputException} with given error message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public InvalidInputException(String errMsg) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        super(errMsg);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 12,
      "-": 11
    }
  },
  {
    "path": "src/main/java/duke/support/Login.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.support;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.user.User;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.user.UserList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents log in record."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Login {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static boolean isLogined \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static User user;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * Logs in to the system with given user name and password. Creates a new user with input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * and checks whether it is a valid user in {@code UserList}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param username A String of username."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param password A String of password."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static void login(String username, String password) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        User currentUser \u003d new User(username, password);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        User validUser \u003d UserList.check(currentUser);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        if (validUser !\u003d null) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            isLogined \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            user \u003d validUser;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the User."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return {@code user}."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static User getUser() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return user;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the current log information."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return {@code isLogined}."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static boolean isLogined() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return isLogined;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 28,
      "-": 20
    }
  },
  {
    "path": "src/main/java/duke/support/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.support;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.commands.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.commands.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.commands.AddToDoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.commands.AddUserCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.commands.ByeCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.commands.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.commands.LoginCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.commands.LoveCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.commands.TagCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exceptions.EmptyConditionException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exceptions.InvalidInputException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exceptions.NoAccessException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.user.User;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * Parser deals with making sense of the user command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String COMMAND_TAG \u003d \"tag\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String COMMAND_LOGIN \u003d \"login\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String COMMAND_ADDUSER \u003d \"adduser\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static final String COMMAND_LOVE \u003d \"love\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses user input into certain commands."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input A String of user\u0027s input."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return {@code Command} parsed."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            String[] inputArr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            String commandType \u003d inputArr[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            String commandContent;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            if ((!Login.isLogined()) \u0026\u0026 (!commandType.equals(COMMAND_LOGIN))) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new NoAccessException();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isInvalidCommand(commandType)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            if (commandType.equals(COMMAND_BYE)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            } else if (commandType.equals(COMMAND_LIST)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            } else if (commandType.equals(COMMAND_LOVE)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                return new LoveCommand();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            if (inputArr.length \u003c 2) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new EmptyConditionException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            commandContent \u003d inputArr[1];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            if (commandType.equals(COMMAND_DONE)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                return new DoneCommand(commandContent);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            } else if (commandType.equals(COMMAND_FIND)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                return new FindCommand(commandContent);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            } else if (commandType.equals(COMMAND_DELETE)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                return new DeleteCommand(commandContent);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            } else if (commandType.equals(COMMAND_TODO)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                return new AddToDoCommand(commandContent);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            } else if (commandType.equals(COMMAND_EVENT)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                return new AddEventCommand(commandContent);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            } else if (commandType.equals(COMMAND_DEADLINE)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                return new AddDeadlineCommand(commandContent);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            } else if (commandType.equals(COMMAND_TAG)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String[] tagInfo \u003d commandContent.split(\" \", 2);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                int taskIndex \u003d Integer.parseInt(tagInfo[0]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String taskTag \u003d tagInfo[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                return new TagCommand(taskIndex, taskTag);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            } else if (commandType.equals(COMMAND_LOGIN)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String[] userInfo \u003d commandContent.split(\" \", 2);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String username \u003d userInfo[0];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String userPassword \u003d userInfo[1];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                Login.login(username, userPassword);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                return new LoginCommand();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            } else if (commandType.equals(COMMAND_ADDUSER)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String[] newUserInfo \u003d commandContent.split(\" \", 3);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String username \u003d newUserInfo[0];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String userPassword \u003d newUserInfo[1];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String userNickname \u003d newUserInfo[2];"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                return new AddUserCommand(new User(username, userPassword, userNickname));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new InvalidInputException();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (EmptyConditionException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EmptyConditionException();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NoAccessException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new NoAccessException();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            throw new InvalidInputException();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks whether input value is a valid command."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isInvalidCommand(String commandType) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        if (commandType.equals(COMMAND_ADDUSER)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                || commandType.equals(COMMAND_BYE)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                || commandType.equals(COMMAND_DEADLINE)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                || commandType.equals(COMMAND_DELETE)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                || commandType.equals(COMMAND_DONE)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                || commandType.equals(COMMAND_EVENT)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                || commandType.equals(COMMAND_FIND)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                || commandType.equals(COMMAND_LIST)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                || commandType.equals(COMMAND_LOGIN)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                || commandType.equals(COMMAND_LOVE)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                || commandType.equals(COMMAND_TAG)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                || commandType.equals(COMMAND_TODO)) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 73,
      "-": 63
    }
  },
  {
    "path": "src/main/java/duke/support/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.support;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * Storage deals with loading tasks from the file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * and saving tasks in the file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private Path path;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code Storage} with given file name."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param fileName A String of file name."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public Storage(String fileName) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        String dir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        Path path \u003d Paths.get(dir, \"duke\", fileName);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        File file \u003d path.toFile();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            this.file \u003d file;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                this.file \u003d file;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                System.out.println(\"Failed to create\" + fileName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method writes all of tasks onto the disk."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void write(ArrayList\u003c? extends Task\u003e tasks) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            for (Task task: tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String taskInfo \u003d task.getType() + \",\" + (task.isDone() ? 1 : 0)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        + \",\" + task.getContent() + \",\" + task.getDate() + \",\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        + task.getTag();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                taskInfo \u003d taskInfo + \"\\n\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                writer.write(taskInfo);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            System.out.println(\"Failed to write into \" + this.path.getFileName());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     * This method fetches all of tasks stored in disk."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     * @return an ArrayList consisting of all of tasks stored in the duke.txt."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            Scanner sc \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String taskContent \u003d sc.nextLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String[] taskInfo \u003d taskContent.split(\",\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                if (taskInfo[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    task \u003d new ToDo(taskInfo[2]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                } else if (taskInfo[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    task \u003d new Event(taskInfo[2], taskInfo[3]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                } else if (taskInfo[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        LocalDate taskDeadline \u003d LocalDate.parse(taskInfo[3]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        task \u003d new Deadline(taskInfo[2], taskDeadline);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                        task \u003d new Deadline(taskInfo[2], taskInfo[3]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    task \u003d new Task(taskInfo[2]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                if (taskInfo[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                if (!taskInfo[4].equals(\"null\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                    task.setTag(taskInfo[4]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            System.out.println(\"Failed to load\" + this.path.getFileName());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 99,
      "-": 12
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a Deadline task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String byDateString;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private LocalDate byDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code Deadline} with given task content and date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskContent A String of content."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param byDateString A String of date."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public Deadline(String taskContent, String byDateString) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        super(taskContent);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.byDateString \u003d byDateString;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code Deadline} with given task content and date."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskContent A String of content."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param byDate A LocalDate of date."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public Deadline(String taskContent, LocalDate byDate) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        super(taskContent);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.byDate \u003d byDate;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        if (byDateString !\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return byDateString;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getDate() + \")\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 36,
      "-": 16
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a Event task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String eventTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates an {@code Event} with given content and event time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskContent A String of content."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param eventTime A String of event time."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public Event(String taskContent, String eventTime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        super(taskContent);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return this.eventTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.eventTime + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 23,
      "-": 9
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String taskContent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String taskTag;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code Task} with given content."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskContent A String of content."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public Task(String taskContent) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.taskContent \u003d taskContent;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.taskTag \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks whether the task has been marked as done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the task type."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the task content."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getContent() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return this.taskContent;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the task date."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     * Sets a tag for task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     * @param tag is fetched from user command and stored as taskTag."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     * @return original tag if exists. Otherwise, it will return null."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String setTag(String tag) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        String oldTag \u003d this.taskTag;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        if (tag.equals(\"null\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            this.taskTag \u003d null;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            this.taskTag \u003d tag;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return oldTag;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the task tag."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getTag() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return this.taskTag;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            res +\u003d \"[\" + \"\\u2713\" + \"] \" + this.taskContent;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            res +\u003d \"[\" + \"\\u2718\" + \"] \" + this.taskContent;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        if (taskTag !\u003d null) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            res +\u003d \" \" + taskTag;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 58,
      "-": 36
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * TaskList contains the task list e.g.,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * it has operations to add/delete tasks in the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code TaskList} with an array list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates an empty {@code TaskList}."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds a task into list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Removes a task with given index out of list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param index The index of the task which needs to be removed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the task with certain index."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the size of task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets an array list containing all tasks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return {@code taskList}."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     * Finds tasks whose content and tag include given conditions."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A {@code TaskList} containing all of satisfied tasks."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public TaskList find(String condition) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        ArrayList\u003cTask\u003e newTaskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        taskList.stream()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                .filter(x-\u003ex.getContent().contains(condition) || x.getTag().contains(condition))"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                .forEach(x-\u003enewTaskList.add(x));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return new TaskList(newTaskList);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 47,
      "-": 33
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a ToDo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code ToDo} with given content."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskContent A String of task content."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public ToDo(String taskContent) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        super(taskContent);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 17,
      "-": 8
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 61
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getDukeDialog(\"Hi!\\nIf you have already had the account, \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"you can use \u0027login {username} {password} to log in.\u0027 \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"If you are a new user, you can use \u0027login admin password\u0027 \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"to log in. You can add more valid users.\u0027\", dukeImage)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        );"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        );"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 54,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.support.Login;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import duke.user.User;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " * Ui deals with interactions with the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows when existing the app."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static String bye() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"See you again!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows when adding the task successfully."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static String addTask(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\" + task.toString() + \"\\nNow you have \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows when listing tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static String getTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        int num \u003d 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        String res \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        for (Task task: taskList.getList()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            res +\u003d (num + \".\" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            num++;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows when marking task as done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static String doneTask(Task task) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\" + task.toString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows when deleting a task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static String deleteTask(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n\" + task.toString()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows when setting a tag."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static String setTaskTag(int taskIndex, String oldTag, String newTag) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        if (oldTag \u003d\u003d null) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return \"Noted. I\u0027ve tagged Task \" + taskIndex + \" as \" + newTag + \".\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return \"Noted. I\u0027ve tagged Task \" + taskIndex + \" as \" + newTag + \". Its original tag is \" + oldTag + \".\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows when logging in the app."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static String login() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        if (Login.isLogined()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            User user \u003d Login.getUser();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return \"Hi, \" + user.getNickname() + \"! Long time no see.\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return \"Invalid username or password. Please try again.\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows when there is no access."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static String accessMissing() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"No Access for Command. Please login in first.\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows when adding a user."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static String addUser() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return \"A new user has been added successfully.\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     * Shows when calling love command."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static String love() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        String[] reply;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        reply \u003d new String[]{"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Love you!\", \"Good Good Study, Day Day Up\","
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            \"It is lucky to have you!\", \"Pig!\", \"Beauty\", \"Are you with me ?\", \"Take a photo to record the life~\","
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            \"When I first saw you, I thought you were a pig!\", \"LMAO, nothing here!\","
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Nothing deserves my love except you.\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        };"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        Random random \u003d new Random();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        int index \u003d random.nextInt(reply.length);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return reply[index];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 76,
      "-": 35
    }
  },
  {
    "path": "src/main/java/duke/user/User.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class User {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String username;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String userPassword;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private String nickname;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code User} with given username and password."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param username A String of username."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userPassword A String of password."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public User(String username, String userPassword) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.username \u003d username;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.userPassword \u003d userPassword;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.nickname \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a {@code User} with given username, password and nickname."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param username A String of username."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userPassword A String of password."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param nickname A String of nickname."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public User(String username, String userPassword, String nickname) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.username \u003d username;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.userPassword \u003d userPassword;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        this.nickname \u003d nickname;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getUsername() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return this.username;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getUserPassword() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return this.userPassword;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public String getNickname() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return this.nickname;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks whether the user is same as itself."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param user The user checked."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return true if their usernames and passwords are same."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public boolean isEqual(User user) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        if (user.getUsername().equals(username) \u0026\u0026 user.getUserPassword().equals(userPassword)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 36,
      "-": 21
    }
  },
  {
    "path": "src/main/java/duke/user/UserList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "package duke.user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a user list consisting of all of users."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class UserList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static File file;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static Path filepath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    private static ArrayList\u003cUser\u003e userList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes the user list by reading users from data file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static void initialize() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        String dir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        Path path \u003d Paths.get(dir, \"duke\", \"userInfo.txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        filepath \u003d path;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        File targetFile \u003d path.toFile();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        if (targetFile.exists()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            file \u003d targetFile;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                targetFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                targetFile.createNewFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                file \u003d targetFile;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String userInfo \u003d \"admin,password,dear\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                writer.write(userInfo);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                writer.close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                System.out.println(\"Failed to create\" + file.getAbsolutePath());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks whether the user is inside the list by comparing it with all of users in the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param currentUser The user checked."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static User check(User currentUser) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        ArrayList\u003cUser\u003e users \u003d readUsersInfo();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        for (User user: users) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            if (currentUser.isEqual(user)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                return user;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     * Reads user information from data file."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static ArrayList\u003cUser\u003e readUsersInfo() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        ArrayList\u003cUser\u003e users \u003d new ArrayList\u003cUser\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String userContent \u003d sc.nextLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                String[] userInfo \u003d userContent.split(\",\", 3);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                User user \u003d new User(userInfo[0], userInfo[1], userInfo[2]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                users.add(user);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            userList \u003d users;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            System.out.println(\"Failed to load users information.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        return userList;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds a user to user list and write back to data file."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param user The user added."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static void addUser(User user) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        userList.add(user);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        write();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * Writes user list on the disk."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public static void write() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            ArrayList\u003cUser\u003e users \u003d userList;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            String usersInfo \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            for (User user: users) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                usersInfo +\u003d (user.getUsername() + \",\" + user.getUserPassword() + \",\" + user.getNickname() + \"\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            writer.write(usersInfo);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            System.out.println(\"Failed to write info int userInfo.txt\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 85,
      "-": 24
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \u003cVBox minHeight\u003d\"-Infinity\" alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"300\" maxHeight\u003d\"-Infinity\" \u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "                \u003cLabel fx:id\u003d\"dialog\" styleClass\u003d\"dialogText\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \u003cHBox prefWidth\u003d\"4\"\u003e\u003c/HBox\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\"  fitWidth\u003d\"40.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 22
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" styleClass\u003d\"textFieldStyle\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"310.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" styleClass\u003d\"buttonStyle\" layoutX\u003d\"310.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" styleClass\u003d\"scrollPane\" vbarPolicy\u003d\"ALWAYS\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"600\" prefWidth\u003d\"400.0\" vvalue\u003d\"552.0\" viewOrder\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \u003ccontent\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" styleClass\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        \u003c/content\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 20
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    Task toDo \u003d new ToDo(\"Read Book\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    Task event \u003d new Event(\"Project Meeting\", \"today\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    Task deadline \u003d new Deadline(\"Return Book\", \"2020-09-01\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void ToDoTest(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Read Book\", toDo.getContent());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void EventTest() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "        assertEquals(\"today\", event.getDate());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    public void DeadlineTest() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        Assertions.assertFalse(\"Sep 1, 2020\" \u003d\u003d deadline.getDate());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        Assertions.assertTrue(deadline.getDate().equals(\"2020-09-01\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 20,
      "-": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "XIA-LIYI"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "XIA-LIYI": 1,
      "-": 20
    }
  }
]
