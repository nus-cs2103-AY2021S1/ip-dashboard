[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public static String icon \u003d \"D\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    private String preposition;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    private String deadlineString;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    Deadline(String taskString, String preposition, String deadlineString) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        super(taskString);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.preposition \u003d preposition;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.deadlineString \u003d deadlineString;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        String statusIcon \u003d (status)?\"✓\":\"✗\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return \"[\" + icon + \"]\" + \"[\" + statusIcon + \"] \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                + this.taskString + \" (\" + this.preposition + \": \" + this.deadlineString + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        String welcomeMessage \u003d ("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            \"     Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            \"     What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        System.out.println(welcomeMessage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        String currInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        List\u003cTask\u003e inputList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        while (!currInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            String toSplit \u003d String.valueOf(currInput);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            String[] splitString \u003d toSplit.split(\" \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            if (currInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                for (int i \u003d 0; i \u003c inputList.size(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    System.out.println(inputList.get(i).toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            } else if (splitString[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                // can add error handling exception in case out of bounds"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                // can add error handling for exception already done"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                int index \u003d Integer.parseInt(splitString[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                inputList.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                for (int i \u003d 0; i \u003c inputList.size(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    System.out.println(inputList.get(i).toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            } else if (splitString[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                // can add error handling exception in case out of bounds"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                int index \u003d Integer.parseInt(splitString[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                inputList.remove(index - 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                for (int i \u003d 0; i \u003c inputList.size(); i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    System.out.println(inputList.get(i).toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            }else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    Task currTask \u003d StringProcessor.stringProcessor(currInput);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    inputList.add(currTask);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    System.out.println(currTask.toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                } catch(Exception e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    System.out.println(\"DUKE DOES NOT UNDERSTAND YOU!!!@#%#$%^!@^%\\n\" + e + \"\\nTRY AGAIN!!!\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            currInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        String endMessage \u003d ("
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            \"     Bye. Hope to see you again soon!\\n\" +"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            \"____________________________________________________________\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        System.out.println(endMessage);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 96,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public static String icon \u003d \"E\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    private String preposition;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    private String eventString;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    Event(String taskString, String preposition, String eventString) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        super(taskString);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.preposition \u003d preposition;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.eventString \u003d eventString;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        String statusIcon \u003d (status)?\"✓\":\"✗\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return \"[\" + icon + \"]\" + \"[\" + statusIcon + \"] \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                + this.taskString + \" (\" + this.preposition + \": \" + this.eventString + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 19
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "public class InvalidInputException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    InvalidInputException(String s) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 6
    }
  },
  {
    "path": "src/main/java/StringProcessor.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "public class StringProcessor {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    private String rawInput;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//    StringProcessor(String rawInput) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//        this.rawInput \u003d rawInput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public static Task stringProcessor(String rawInput) throws InvalidInputException{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        String[] splitString \u003d rawInput.split(\" \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        int splitStringLength \u003d splitString.length;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        if (splitString[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                throw new InvalidInputException(\"Description of To Do cannot be empty\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                String[] taskStringArray \u003d Arrays.copyOfRange(splitString, 1, splitStringLength);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                return new Todo(String.join(\" \", taskStringArray));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        } else if (splitString[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                throw new InvalidInputException(\"Description of Deadline cannot be empty\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                String[] taskStringArray \u003d Arrays.copyOfRange(splitString, 1, splitStringLength);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                String toSplit \u003d String.join(\" \", taskStringArray);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                int indexOfSlash \u003d toSplit.indexOf(\"/\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                if (indexOfSlash \u003d\u003d -1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    throw new InvalidInputException(\"Date/time for Deadline cannot be empty/not recognised\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    int indexOfNextWord \u003d toSplit.indexOf(\" \", indexOfSlash);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    return new Deadline(toSplit.substring(0, indexOfSlash - 1),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                            toSplit.substring(indexOfSlash + 1, indexOfNextWord),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                            toSplit.substring(indexOfNextWord + 1));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        } else if (splitString[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                throw new InvalidInputException(\"Description of Event cannot be empty\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                String[] taskStringArray \u003d Arrays.copyOfRange(splitString, 1, splitStringLength);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                String toSplit \u003d String.join(\" \", taskStringArray);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                int indexOfSlash \u003d toSplit.indexOf(\"/\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                if (indexOfSlash \u003d\u003d -1) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    throw new InvalidInputException(\"Date/time for Event cannot be empty/not recognised\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    int indexOfNextWord \u003d toSplit.indexOf(\" \", indexOfSlash);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                    return new Event(toSplit.substring(0, indexOfSlash - 1),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                            toSplit.substring(indexOfSlash + 1, indexOfNextWord),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                            toSplit.substring(indexOfNextWord + 1));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "            throw new InvalidInputException(\"Unrecognized task\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 63
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public static String icon;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    protected String taskString;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    protected Boolean status;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    Task(String taskString) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.taskString \u003d taskString;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.status \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        this.status \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return this.taskString;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return this.status;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 23
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public static String icon \u003d \"T\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    Todo(String taskString) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        super(taskString);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        String statusIcon \u003d (status)?\"✓\":\"✗\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "        return \"[\" + icon + \"]\" + \"[\" + statusIcon + \"] \" + this.taskString;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "todo hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "deadline hi /by today"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "event hey /at tmr"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YangJiyu98"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "YangJiyu98": 1,
      "-": 20
    }
  }
]
