[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    mainClassName \u003d \"duke.gui.Launcher\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 23,
      "-": 45
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Duke is a personal chat bot with the following functionalities:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *     (i) Adding and removing of Tasks to a list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *     (ii) Checking Tasks as completed"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *     (iii) Viewing current task list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *     (iv) Searching for tasks using query string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * This bot has two main ways of usage; the Command Line Interface (CLI)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * or Graphical User Interface (GUI), both handled by this class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * @author Andy Wu"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** List which stores the Tasks. */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** Reads and writes the txt file. */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** In charge of all user interface related operations */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructor for initializing the bot."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * A file path is required to store the task list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param filePath the path of the txt file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        TaskList temp;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            temp \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            temp \u003d new TaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        tasks \u003d temp;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        TaskList temp;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            temp \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            temp \u003d new TaskList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        tasks \u003d temp;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * The run method is mainly used in the CLI mode. It contains the main"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * algorithm for receiving user inputs, processing and returning the"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * appropriate response."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Throughout the process, DukeExceptions may be created but are"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * caught and handled by the respective classes."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        boolean isRunning \u003d true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        while (isRunning) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                isRunning \u003d !c.isExit();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                ui.sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return ui.getGuiWelcomeMessage();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Driver to create the chat bot object and run it in CLI mode."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param args optional and will be treated as the first user input."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 104,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The add command manages the adding of a new task to the"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * task list. Details are in the execute method."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class AddCommand implements Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** The subtype of the task - T/D/E */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final String type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** The raw description of the task */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructor for the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param type the subtype of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the raw description of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public AddCommand(String type, String description) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * The flag required by the main program."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * In this command\u0027s case, the program does not need to exit."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * This command execution is summarized as:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     1. Create new task using TaskList method"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     2. Add the new task to the TaskList"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     3. Calls Storage to update the txt file"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     4. Calls Ui to send success message"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * DukeException can be generated upon failure in any"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * of the above steps. It will be caught and sent to"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * the user via the ui."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param storage the storage."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Task task \u003d TaskList.createTask(type, description);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            storage.update(tasks.getList());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String msg \u003d ui.getSuccessMessage(\"add\", task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            msg +\u003d \"\\n\" + ui.getTaskReportMessage(tasks.size());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(msg);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return msg;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 71
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The Command is the response of the program to be executed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Execution of command may involve manipulation of TaskList,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Ui, or Storage depending on the required response."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    boolean isExit();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 16
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The done command is in charge of marking tasks as done when"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * the user indicates via the task number. Details are in th"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * execute method."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * This command execution is summarized as:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     1. Gets the task which is marked done by TaskList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     2. Calls Storage to update the txt file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     3. Calls Ui to send success message"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * DukeException can be generated upon failure in any"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * of the above steps. It will be caught and sent to"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * the user via the ui."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param storage the storage."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Task task \u003d tasks.markDone(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            storage.update(tasks.getList());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String msg \u003d ui.getSuccessMessage(\"done\", task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(msg);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return msg;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 54
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The exit command flags the program to exit upon execution."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * This terminates the chat bot in CLI mode."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class ExitCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return \"byeeee!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 21
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The find command allows user to search for tasks with descriptions that"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * contain the query string. Currently, the implementation allows for all"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * containment including substrings. For example, the query \"end\" will bring"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * up descriptions like \"friend\" and \"send message\" instead of matching full strings."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Future implementation can force descriptions to be split and match exact elements."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final String query;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public FindCommand(String query) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.query \u003d query;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * This command execution is summarized as:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     1. Create a list to contain task numbers"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     2. Scan the task list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *         - Add index to the list if task matches query"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     3. Calls task list to get the filtered list message"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param storage the storage."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String msg \u003d tasks.getFilteredListMessage(query);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui.sendMessage(msg);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 46
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The help command provides users a way to learn how to use the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Available commands will be listed out for the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class HelpCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String message \u003d ui.getListOfCommands();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui.sendMessage(message);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return ui.getListOfCommands();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 24
    }
  },
  {
    "path": "src/main/java/duke/command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * When users input unrecognized or invalid commands, this object is"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * created to handle it. The default response for this command is to"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * notify the user that the program does not understand the input. However,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * this class allows for custom message to be passed to the user as well."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class InvalidCommand implements Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final String toSend;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public InvalidCommand(String toSend) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.toSend \u003d toSend;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public InvalidCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        toSend \u003d \"Sorry I do not know what that means :(\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui.sendMessage(toSend);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return toSend;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 35
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The list command helps to print all the tasks in the task list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * in a neatly-formatted way."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String msg \u003d tasks.getPrintMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui.sendMessage(msg);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 24
    }
  },
  {
    "path": "src/main/java/duke/command/RemoveCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The remove command allows user to indicate if they want to"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * remove all tasks in the list or remove a specific task via"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * a task number. Details are in the execute method."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class RemoveCommand implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final boolean isClear;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public RemoveCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        isClear \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public RemoveCommand() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        index \u003d -1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        isClear \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * This command execution is summarized as:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     if the user calls for removing all tasks,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *         1. Clear the task list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *         2. Calls Storage to update the txt file"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *         3. Calls Ui to send success message"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     if the user gives a task number,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *         1. Gets the removed task from the task list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *         2. Calls Storage to update the txt file"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *         3. Calls Ui to send success message"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * DukeException can be generated upon failure in any"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * of the above steps. It will be caught and sent to"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * the user via the ui."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param tasks the task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param ui the ui."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param storage the storage."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (isClear) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            tasks.removeAll();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            storage.update(tasks.getList());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(\"Your list has been cleared!!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return \"Your list has been cleared!!\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Task task \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            storage.update(tasks.getList());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String msg \u003d ui.getSuccessMessage(\"remove\", task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            msg +\u003d \"\\n\" + ui.getTaskReportMessage(tasks.size());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(msg);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return msg;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 74
    }
  },
  {
    "path": "src/main/java/duke/command/SortCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class SortCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final String sortBy;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public SortCommand(String sortBy) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        assert List.of(\"name\", \"type\", \"datetime\").contains(sortBy)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                : \"sortBy should only be name, type, or datetime.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (!List.of(\"name\", \"type\", \"datetime\").contains(sortBy)) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid sorting parameter!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.sortBy \u003d sortBy;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        tasks.sort(sortBy);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        storage.update(tasks.getList());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String successMessage \u003d \"Your list has been sorted!\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui.sendMessage(successMessage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return successMessage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 36
    }
  },
  {
    "path": "src/main/java/duke/command/StartTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.FixedDurationTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class StartTaskCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final String startAt;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public StartTaskCommand(int index, String startAt) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.startAt \u003d startAt;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (!(task instanceof FixedDurationTask)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"That is not a fixed duration task!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            FixedDurationTask fixedDurationTask \u003d (FixedDurationTask) task;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fixedDurationTask.setStartDateTimeFromString(startAt);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            storage.update(tasks.getList());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String msg \u003d ui.getSuccessMessage(\"start\", task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(msg);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return msg;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 43
    }
  },
  {
    "path": "src/main/java/duke/gui/DukeDialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class DukeDialogBox extends HBox {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public DukeDialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DukeDialogBox.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 31
    }
  },
  {
    "path": "src/main/java/duke/gui/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 9
    }
  },
  {
    "path": "src/main/java/duke/gui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            stage.setTitle(\"Tebby the Task Manager\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 30
    }
  },
  {
    "path": "src/main/java/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Controller for MainWindow. Provides layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/tebby.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Tebby started in GUI mode ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        duke \u003d new Duke();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String welcomeMessage \u003d duke.getWelcomeMessage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                new DukeDialogBox(welcomeMessage, dukeImage)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        );"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        System.out.println(\"User: \" + input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                new UserDialogBox(input, userImage),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                new DukeDialogBox(response, dukeImage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 56
    }
  },
  {
    "path": "src/main/java/duke/gui/UserDialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class UserDialogBox extends HBox {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public UserDialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 31
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Deadline is a subtype of Task which has a stipulated deadline for the task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * to be completed by. Example:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *     [D][✘] assignment (by: Aug 26 2020, 11:59 pm)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Deadline extends TaskWithDateTime {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"D\", description, by);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"D\", description, by, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String dt \u003d String.format(\" (by: %s\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"d MMM\")));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (time.isPresent()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            dt +\u003d String.format(\", %s)\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    time.get().format(DateTimeFormatter.ofPattern(\"h:mm a\")));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            dt +\u003d \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return super.toString() + dt;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 35
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Event is a subtype of TaskWithDateTime which requires an attendance at a fixed time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Example:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *     [E][✘] birthday celebration (at: Mar 7 2020, 08:00 pm)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Event extends TaskWithDateTime {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"E\", description, at);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Event(String description, String at, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"E\", description, at, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String dt \u003d String.format(\" (at: %s\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"d MMM\")));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (time.isPresent()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            dt +\u003d String.format(\", %s)\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    time.get().format(DateTimeFormatter.ofPattern(\"h:mm a\")));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            dt +\u003d \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return super.toString() + dt;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 35
    }
  },
  {
    "path": "src/main/java/duke/task/FixedDurationTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "// TODO: AddCommand add FixedDurationTask; Parser; StartTaskCommand; HelpCommand Ui"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The fixed duration task has two main states; task with duration without a"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * specified start date time, and task with duration and specified start date time."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * This allows users to create a task without a decided start date time and they"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * are free to provide the start date time in the future."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class FixedDurationTask extends Task {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private Optional\u003cLocalDate\u003e startDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private Optional\u003cLocalTime\u003e startTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final Duration duration;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public FixedDurationTask(String description, String duration) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"F\", description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.duration \u003d parseDuration(duration);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        startDate \u003d Optional.empty();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        startTime \u003d Optional.empty();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public FixedDurationTask(String description, long durationSeconds) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"F\", description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.duration \u003d Duration.ofSeconds(durationSeconds);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        startDate \u003d Optional.empty();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        startTime \u003d Optional.empty();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Parses the user input string into a duration for the task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * This duration object will be stored in the task and used to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * generate the start time and end time of a particular date once"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * the date time information is provided by the user."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Example:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     \"1h 10m\" -\u003e PT1H10M"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     \"2h\" -\u003e PT2H"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     \"160m\" -\u003e PT2H40M"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Users have some freedom in choosing whether or not the hour"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * or minute should be included."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param raw the user input to be parsed."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the duration of the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Duration parseDuration(String raw) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String[] temp \u003d raw.toLowerCase().split(\" \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        int hour;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        int minute;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (temp[0].contains(\"h\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            hour \u003d Integer.parseInt(temp[0].split(\"h\")[0]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (temp.length \u003e 1 \u0026\u0026 temp[1].contains(\"m\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                System.out.println(\"Contains m\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                minute \u003d Integer.parseInt(temp[1].split(\"m\")[0]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                minute \u003d 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            hour \u003d 0;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            minute \u003d Integer.parseInt(temp[0].split(\"m\")[0]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return Duration.ofMinutes((long) (60 * hour) + minute);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Sets the start date and time of the task from the user input."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * This will mutate the task to provide a start time and end time"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * information whenever it is being displayed."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param dateTime the user input containing the date and time."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void setStartDateTimeFromString(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String[] dateTimeSplit \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            LocalDate date \u003d parseDate(dateTimeSplit[0]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            LocalTime time \u003d parseTime(dateTimeSplit[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            setStartDateTime(date, time);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DateTimeParseException de) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid date or time format!\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Missing date or time!\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void setStartDateTime(LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        startDate \u003d Optional.of(date);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        startTime \u003d Optional.of(time);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private LocalDate parseDate(String raw) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (raw.equals(\"today\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return LocalDate.now();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } else if (raw.equals(\"tomorrow\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return LocalDate.now().plusDays(1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return LocalDate.parse(raw.replaceAll(\"/\", \"-\"));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private LocalTime parseTime(String raw) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String timeString \u003d String.format(\"%1$\" + 5 + \"s\","
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                raw.replace(\".\", \":\"))"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                .replace(\" \", \"0\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return LocalTime.parse(timeString);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return String.format(\"%s / %s / %s %s\", description, duration.getSeconds(),"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                startDate.map(LocalDate::toString).orElse(\"\"),"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                startTime.map(LocalTime::toString).orElse(\"\"));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String info \u003d \"\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (startDate.isPresent() \u0026\u0026 startTime.isPresent()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            info +\u003d String.format(\" (start: %s, %s)\","
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    startDate.get().format(DateTimeFormatter.ofPattern(\"d MMM\")),"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    startTime.get().format(DateTimeFormatter.ofPattern(\"h:mm a\")));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        long sec \u003d duration.getSeconds();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        info +\u003d String.format(\" (for: %dh %dm)\", sec / 3600, (sec % 3600) / 60);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return super.toString() + info;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 132
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The Task class encapsulates tasks which are pieces of work"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * to be done. This is used by the Duke chat bot for creating"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * of tasks which can be marked as completed."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** The description of the task */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** Flags if a task has been completed */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** The type of task */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructor for the Task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Tasks are created to be not completed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param type the type of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Task(String type, String description) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Overloaded constructor for the Task which includes isDone."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param type the type of task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param isDone the completion flag of the task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Task(String type, String description, boolean isDone) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the completion flag of the task and generates the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * unicode string representation of the task status;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * a tick for completed, a cross for not completed."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the unicode of the completion flag."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Checks if the task is completed based on the completion flag."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return boolean value for completion flag."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Marks a task as completed by setting completion flag to true."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the string description of the task, which is the same"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * string used during initialization."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "      * @return description of the task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return String.format(\"[%s][%s] %s\", type, getStatusIcon(), description);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 85
    }
  },
  {
    "path": "src/main/java/duke/task/TaskWithDateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Some tasks have more information such as the date and time of their"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * occurrence or a particular deadline in which the task has to be attended to or"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * completed by."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * This subtype uses the java.time package for its date and time."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * the time is optional, as depicted by the use of Optional class, as some"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * tasks do not have exact stipulated time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public abstract class TaskWithDateTime extends Task {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected Optional\u003cLocalTime\u003e time;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructor for tasks with date time. The date time is a raw string which will"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * be parsed into LocalDate and LocalTime objects if successful."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param dateTime the raw date time string of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException when the date time format is incorrect."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public TaskWithDateTime(String type, String description, String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(type, description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String[] dateTimeSplit \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            date \u003d parseDate(dateTimeSplit[0]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (dateTimeSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                time \u003d Optional.empty();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                time \u003d Optional.of(parseTime(dateTimeSplit[1]));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DateTimeParseException de) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid date or time format!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Missing date!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Overloaded constructor for Event."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * This constructor is usually used when loading tasks from the txt file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param dateTime the raw date time string of the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param isDone the completion flag of the task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException when the date time format is incorrect."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public TaskWithDateTime(String type, String description, String dateTime, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(type, description, isDone);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String[] dateTimeSplit \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            date \u003d parseDate(dateTimeSplit[0]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (dateTimeSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                time \u003d Optional.empty();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                time \u003d Optional.of(parseTime(dateTimeSplit[1]));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DateTimeParseException de) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid date or time format!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Missing date!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private LocalDate parseDate(String raw) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (raw.equals(\"today\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return LocalDate.now();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } else if (raw.equals(\"tomorrow\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return LocalDate.now().plusDays(1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return LocalDate.parse(raw.replaceAll(\"/\", \"-\"));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private LocalTime parseTime(String raw) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String timeString \u003d String.format(\"%1$\" + 5 + \"s\","
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                raw.replace(\".\", \":\"))"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                .replace(\" \", \"0\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return LocalTime.parse(timeString);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Optional\u003cLocalTime\u003e getTime() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return String.format(\"%s / %s%s\", description, date,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                time.map(localTime -\u003e \" \" + localTime).orElse(\"\"));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 102
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Todo is a simple subtype of Task which has a description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Example:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *     [T][✘] cry"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The task description has no further parsing and will be taken"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * literally as a string."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructor for Todo."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"T\", description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"T\", description, isDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 25
    }
  },
  {
    "path": "src/main/java/duke/test/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void constructor_missingTime_success() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            new Deadline(\"unit testing\", \"2020-01-01\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fail(\"Should create task successfully, time is Optional.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 18
    }
  },
  {
    "path": "src/main/java/duke/test/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void constructor_missingTime_success() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            new Event(\"unit testing\", \"2020-01-01\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fail(\"Should create task successfully, time is Optional.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 18
    }
  },
  {
    "path": "src/main/java/duke/test/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void getTaskDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        assertEquals(\"2 3 4\", Parser.getTaskDescription("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                new String[] {\"1\", \"2\", \"3\", \"4\"}));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void parse() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        // err ..."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 19
    }
  },
  {
    "path": "src/main/java/duke/test/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void createTask_todo_success() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            assertEquals(new Todo(\"borrow book\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    TaskList.createTask(\"todo\", \"borrow book\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void createTask_event_success() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            assertEquals(new Event(\"book borrowing\", \"2020-08-26 00:00\"),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    TaskList.createTask(\"event\", \"book borrowing /at 2020-08-26 00:00\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void createTask_eventMissingAt_exceptionThrown() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            assertEquals(new Event(\"book borrowing\", \"2020-08-26 00:00\"),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    TaskList.createTask(\"event\", \"book borrowing at 2020-08-26 00:00\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fail(\"Should have thrown exception.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            assertEquals(\"!!Whoops!! Invalid event description!\", e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 43
    }
  },
  {
    "path": "src/main/java/duke/util/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Since Duke has specific keywords or command formats required from"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * the user input to function as intended, and user inputs can deviate"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * from expected formats due to an array of errors i.e. number format error,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * wrong command error, non-existing command error, command format error,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * the DukeException helps to standardize all Duke related errors."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructor which prepends a Duke error signature"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * to the given message for standardization."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param message the error message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"!!Whoops!! \" + message);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 20
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.RemoveCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.InvalidCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.SortCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.command.StartTaskCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The Parser is in charge of parsing raw strings of user inputs"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * and generating the appropriate response to the inputs. For example,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * when the user sends \"exit\", the parser will return an ExitCommand"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * to be executed by the program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * All methods of this class are static as this class is meant to be used functionally."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Splits the raw string using single spaces as delimiters to generate"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * tokenized strings. This is required for the program to parse commands."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Example:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * \"a user input\" -\u003e [\"a\", \"user\", \"input\"]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param raw the raw string input."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the split string."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private static String[] format(String raw) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return raw.split(\" \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * This method is used when the user\u0027s command involves"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * task creation. The parser extracts the description of the task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * \"todo sleep for 20 hrs\"          -\u003e \"sleep for 20 hrs\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * \"event lecture /at today 10:00\"  -\u003e \"lecture /at today 10:00\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * The output string will be passed onto the respective task constructors."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param raw the raw string input."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the task description."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public static String getTaskDescription(String[] raw) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String[] temp \u003d Arrays.copyOfRange(raw, 1, raw.length);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return String.join(\" \", temp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Generates the appropriate command object based on the user input."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * This requires a series of string analysis such as checking of the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * command denoted as the first word of the user\u0027s message, and further"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * parsing of the rest of the message accordingly."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param input the raw string input."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the appropriate Command object in response to the user input."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException when task creation fails or task indices are incorrect."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String[] parsed \u003d Parser.format(input);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String command \u003d parsed[0];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        switch (command.toLowerCase()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"quit\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"exit\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"fixed\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String description \u003d Parser.getTaskDescription(parsed);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return new AddCommand(command, description);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                int i \u003d Integer.parseInt(parsed[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new DoneCommand(i);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new InvalidCommand(\"Hm? What task number have you done?\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"remove\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                String taskSelection \u003d parsed[1];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                if (taskSelection.equals(\"all\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    return new RemoveCommand();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(taskSelection);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new RemoveCommand(taskNumber);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new InvalidCommand(\"Uh? What task number to remove?\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new FindCommand(parsed[1]);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new InvalidCommand(\"Hm? What do you want to find?\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"sort\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new SortCommand(parsed[1]);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new InvalidCommand(\"You can sort by: name, type, datetime\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"start\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(parsed[1]);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new StartTaskCommand(taskNumber, parsed[2] + \" \" + parsed[3]);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new InvalidCommand();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 133
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.FixedDurationTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The Storage class handles all the reading and writing between"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * the program and the txt file which stores all the tasks in a"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * comma-separated value (csv) format. Each time the task list in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * the program is being updated, the Storage object will rewrite"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * the txt file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * This class enables the saving and loading feature of the task list, which"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * makes the program more usable as users do not have to rewrite all their"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * tasks whenever the program restarts."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final File file;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Initialises with the File object using the txt file path."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * If the path does not exist due to missing directories,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * this constructor will attempt to create the necessary"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * directories."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param filePath the path of the txt file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (!file.getParentFile().exists()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (IOException ioe) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                System.err.println(\"IOException: \" + ioe.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Reads the txt file and creates the tasks accordingly. This allows"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * users to retrieve their last edited task list to resume usage. Interestingly,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * csv files should be usable as the duke.txt replacement since the format of"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * saving and writing are comma-separated."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     Subtype , Description , DateTime"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Subtypes are single letters - T/D/E"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Descriptions are strings"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * DateTime are raw date time strings for Deadline and Event only."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the list of tasks to be loaded into TaskList."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException when task creation fails."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                String[] t \u003d sc.nextLine().split(\",\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                assert List.of(\"T\", \"E\", \"D\", \"F\").contains(t[0]) : \"Subtype should be T, E, F, or D only\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                switch (t[0]) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    list.add(new Todo(t[2], t[1].equals(\"1\")));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    list.add(new Deadline(t[2], t[3], t[1].equals(\"1\")));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    list.add(new Event(t[2], t[3], t[1].equals(\"1\")));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                case \"F\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    FixedDurationTask fdt \u003d new FixedDurationTask(t[2], Integer.parseInt(t[3]));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    if (t[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        fdt.markAsDone();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    if (t.length \u003e 4) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        fdt.setStartDateTimeFromString(t[4]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    list.add(fdt);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    throw new DukeException(\"Corrupted file, previous data will not be loaded!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Updates the task list txt file by rewriting the file using the input task list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * This allows users to save their progress while using the task list."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param list the list of task to be read and written into txt file."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void update(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            for (Task t: list) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                StringBuilder toWrite \u003d new StringBuilder("
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        String.format(\"%s,%s\", t.getType(), (t.getDone() ? \"1\" : \"0\")));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                String desc \u003d t.getDescription();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                if (List.of(\"D\", \"E\", \"F\").contains(t.getType())) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    toWrite.append(\",\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    String[] descSplit \u003d desc.split(\" / \");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    toWrite.append(String.join(\",\", descSplit));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    toWrite.append(\",\").append(desc);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                fw.write(toWrite + \"\\n\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            System.err.println(\"IOException: \" + ioe.getMessage());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 135
    }
  },
  {
    "path": "src/main/java/duke/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The TaskList encapsulates the list of tasks and is in charge of"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * creating tasks, adding or removing tasks from the list, marking"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * tasks as completed, and generating a print message of the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** The list containing Tasks objects. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructor for TaskList. This constructor is usually"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * used when loading a list of tasks from the txt file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param list the list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructor for TaskList to create an empty list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Returns the size of the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the size of the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Returns the task list object."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the task list object."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * The static factory method to create the subtypes of Tasks:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     - Todo: A simple task with a description only"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     - Event: A task requiring attendance at a date and time"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     - Deadline: A task requiring completion by a date and time"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Creation of these tasks are based on the type input. After which,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * the description of the task will be parsed and handled individually"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * by the appropriate subclasses."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param type the subtype of the Task to be created."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the raw description of the task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the created Task object."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException when creation fails usually due to improper format description."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public static Task createTask(String type, String description) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        Task task \u003d new Todo(\"\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String[] split;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String desc;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        description \u003d description.trim();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Description cannot be empty!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            task \u003d new Todo(description);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                split \u003d description.split(\" /by \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                desc \u003d split[0];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                String by \u003d split[1];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                task \u003d new Deadline(desc, by);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (IndexOutOfBoundsException ioobe) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Invalid \" + type + \" description!\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                split \u003d description.split(\" /at \");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                desc \u003d split[0];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                String at \u003d split[1];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                task \u003d new Event(desc, at);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (IndexOutOfBoundsException ioobe) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Invalid \" + type + \" description!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"fixed\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                split \u003d description.split(\" /for \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                desc \u003d split[0];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                String duration \u003d split[1];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                task \u003d new FixedDurationTask(desc, duration);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (IndexOutOfBoundsException ioobe) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Invalid \" + type + \" description!\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return list.get(i);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Removes the task of the given task number. The removed task"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * is then returned for the application to print or handle if required."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Important to note that task numbers are based on their indices in the list,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * and tasks after a deleted task will have their indices shifted down by one value."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param i the index of the task to be removed."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the removed task."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException when the index does not contain a task."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Task remove(int i) throws DukeException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            i--;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return list.remove(i);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (IndexOutOfBoundsException ioobe) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void removeAll() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        list.clear();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Marks a task as completed and returns the same task for the application"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * to print of handle if required. Indices are based on the objects\u0027 indices"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * in the list."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param i the index of the task."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the task."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @throws DukeException when the index does not contain a task."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Task markDone(int i) throws DukeException {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            i--;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Task task \u003d list.get(i);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (task.getDone()) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Task is already done!\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (IndexOutOfBoundsException ioobe) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Generates a print message containing the list of tasks. The message"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * will go through Ui formatting and be printed out. Example:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * \u003e\u003e list"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     --------------------------------------------------------"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     Here are the tasks in your list:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     1. [T][✘] Mop the floor"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     2. [D][✘] assignment (by: Aug 26 2020, 11:59 pm)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     3. [E][✘] future date (at: Feb 14 2021, 07:00 pm)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     --------------------------------------------------------"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the formatted print message of the list."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getPrintMessage() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return \"Your list is empty!\";"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String msg \u003d (list.size() \u003e 1"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                ? \"Here are the tasks in your list:\\n\""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                : \"Here\u0027s your one and only task:\\n\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        msg +\u003d IntStream.range(0, list.size())"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                .mapToObj(i -\u003e String.format(\"%d. %s\", i + 1, list.get(i)))"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                .reduce((t1, t2) -\u003e String.format(\"%s\\n%s\", t1, t2))"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                .orElse(\"\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Generates a print message containing the list of tasks that the user"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * is interested in seeing based on the input query keyword. Keywords are"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * matched as whole words instead of substrings."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * The search result may be empty."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param query the keyword to filter tasks."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the formatted print message of the filtered list."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getFilteredListMessage(String query) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        Optional\u003cString\u003e filtered \u003d IntStream.range(0, list.size())"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                .mapToObj(i -\u003e String.format(\"%d. %s\", i + 1, list.get(i)))"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                .filter(s -\u003e Arrays.asList(s.split(\" \")).contains(query))"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                .reduce((t1, t2) -\u003e String.format(\"%s\\n%s\", t1, t2));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (filtered.isEmpty()) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return \"Search result is empty!\";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return \"Search result:\\n\" + filtered.get();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Sorts the task list based on the input parameter. Users can sort by"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * either task names lexicographically, subtypes, or date time if applicable."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * In the case of date time sorting, tasks without date time will be sorted"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * last."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param sortBy the parameter of sorting the list."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void sort(String sortBy) throws DukeException {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        switch (sortBy) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"name\":"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sortByName();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"type\":"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sortByType();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"datetime\":"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sortByDateTime();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid sorting parameter\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private void sortByName() {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        list.sort(Comparator.comparing(Task::getDescription));"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private void sortByType() {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        list.sort(Comparator.comparing(Task::getType));"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private void sortByDateTime() {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        list.sort("
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                (Task t1, Task t2) -\u003e {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    if (t1 instanceof TaskWithDateTime \u0026\u0026 t2 instanceof TaskWithDateTime) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        TaskWithDateTime dt1 \u003d (TaskWithDateTime) t1;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        TaskWithDateTime dt2 \u003d (TaskWithDateTime) t2;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        if (dt1.getDate().equals(dt2.getDate())) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                            if (dt1.getTime().isPresent() \u0026\u0026 dt2.getTime().isPresent()) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                                return dt1.getTime().get().compareTo(dt2.getTime().get());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                            } else if (dt1.getTime().isPresent()) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                                return -1;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                            } else if (dt2.getTime().isPresent()){"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                                return 1;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                                return 0;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                            return dt1.getDate().compareTo(dt2.getDate());"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    if (t1 instanceof TaskWithDateTime) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        return -1;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    } else if (t2 instanceof TaskWithDateTime) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        return 1;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                        return 0;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        );"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 278
    }
  },
  {
    "path": "src/main/java/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * User Interface (Ui) is the front-end of the CLI application which the user"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * interacts with for both inputs and outputs. Majority of the chat bot\u0027s"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * personality is being portrayed onto this class. A snippet of this"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * interaction is as shown:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * \u003e\u003e list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *     --------------------------------------------------------------"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *     Your list is empty!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *     --------------------------------------------------------------"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * \u003e\u003e bye"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *     --------------------------------------------------------------"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *     Have a good day! Tebby logging off..."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *     --------------------------------------------------------------"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** The Scanner object for user inputs */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** The line for enclosing messages */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final String LINE \u003d \"    --------------------------------------------------------------\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructor for the Ui class."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * The scanner is being initialized together with the Ui object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Prints the logo of the chat bot along with the greeting message."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String logo \u003d \"                                                 _     _\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \" _______  _______  _______  _______  __   __    (c).-.(c)\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"|       ||       ||  _    ||  _    ||  | |  |    / ._. \\\\ \\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"|_     _||    ___|| |_|   || |_|   ||  |_|  |  __\\\\( Y )/__\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"  |   |  |   |___ |       ||       ||       | (_.-/\u0027-\u0027\\\\-._)\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"  |   |  |    ___||  _   | |  _   | |_     _|    ||   || \\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"  |   |  |   |___ | |_|   || |_|   |  |   |    _.\u0027 `-\u0027 \u0027._\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"  |___|  |_______||_______||_______|  |___|   (.-./`-\u0027\\\\.-.)\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"                                               `-\u0027     `-\u0027\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"By: Andy Wu\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        sendMessage(\"Hello! Tebby lives to serve :)\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Prints the exit message before the application closes."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String msg \u003d LINE + \"\\n    Have a good day! Tebby logging off...\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        msg +\u003d \"    ----------------------------X---------------------------------\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * The standardized format for printing messages from the bot is:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     --------------------------------------------------------------"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     Bot\u0027s message here, Line 1"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     Line 2"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *     --------------------------------------------------------------"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Messages are enclosed by 62 dash characters and indented by 4 spaces."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param message the message of the bot to be formatted."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void sendMessage(String message) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(message);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        int offset \u003d 0;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            int nextIndex \u003d sb.indexOf(\"\\n\", offset);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (nextIndex !\u003d -1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                sb.insert(nextIndex + 1, \"    \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                offset \u003d nextIndex + 5;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        System.out.println(LINE + \"\\n    \" + sb + \"\\n\" + LINE);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Prefixes the scanner input with \"\u003e\u003e\" as a"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * visual indication for the user to type an input. Example:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * \u003e\u003e User input here"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * This method takes in the full raw input and will need to be parsed."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the entire line of user input."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        System.out.print(\"\u003e\u003e \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Returns the message for reporting the number of tasks in the list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * The message considers zero, singular, and plural number of tasks."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param size the size of the list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the task report message."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getTaskReportMessage(int size) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String task \u003d size \u003d\u003d 1 ? \"task\" : \"tasks\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String num \u003d size \u003d\u003d 0 ? \"no\" : String.valueOf(size);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return \"now you have \" + num + \" \" + task + \" in the list!\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Returns the message after a task manipulation command has been"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * successfully processed. Task manipulations include adding of task,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * deleting of task, and marking a task as completed."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param type the type of task manipulation - add, remove, done."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param task the task object to be added to the message."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the formatted success message."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getSuccessMessage(String type, Task task) throws DukeException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Okay I\u0027ve \");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        assert List.of(\"add\", \"remove\", \"done\", \"start\").contains(type)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                : \"Task manipulation type can only be one of [add, remove, done, start].\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        switch(type) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sb.append(\"added:\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"remove\":"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sb.append(\"removed:\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sb.append(\"marked this task as done:\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"start\":"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sb.append(\"set this task\u0027s start date time:\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Unrecognized task manipulation type!\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        sb.append(String.format(\"\\n    %s\", task));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getListOfCommands() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String[] commands \u003d new String[]{"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                \"help\", \"list\", \"todo \u003cdescription\u003e\","
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                \"event \u003cdescription\u003e /at \u003cdate\u003e [time]\","
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                \"deadline \u003cdescription\u003e /by \u003cdate\u003e [time]\","
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                \"fixed \u003cdescription\u003e /for \u003cduration\u003e\","
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                \"done \u003ctask no.\u003e\", \"remove \u003ctask no.\u003e\","
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                \"remove all\", \"sort \u003cname/type/datetime\u003e\","
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                \"start \u003ctask no.\u003e \u003cdate\u003e \u003ctime\u003e\", \"bye\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        };"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the available commands:\\n\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        for (String command: commands) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sb.append(\" - \").append(command).append(\"\\n\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        sb.append(\"\u003crequired\u003e [optional]\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getGuiWelcomeMessage() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return \"Hello! Tebby lives to serve :)\\nType help for list of commands!\";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 171
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"405.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" graphicTextGap\u003d\"8.0\" lineSpacing\u003d\"1.0\" style\u003d\"-fx-background-color: #42A6FE;\" styleClass\u003d\"textlabel\" stylesheets\u003d\"@../images/stylesheet.css\" text\u003d\"hey tebby, delete my life please\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cInsets right\u003d\"15.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cFont name\u003d\"Segoe UI\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cimage\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cImage url\u003d\"@../images/user.png\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/image\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "sudogene": 36
    }
  },
  {
    "path": "src/main/resources/view/DukeDialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003cfx:root maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"0.0\" prefWidth\u003d\"405.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cimage\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cImage url\u003d\"@../images/tebby.png\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/image\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" graphicTextGap\u003d\"8.0\" lineSpacing\u003d\"1.0\" style\u003d\"-fx-background-color: #42A6FE;\" styleClass\u003d\"textlabel\" stylesheets\u003d\"@../images/stylesheet.css\" text\u003d\"Sorry I do not know what that means :(\u0026#10;Sorry I do not know what that means :(\u0026#10;Sorry I do not know what that means :(\u0026#10;Sorry I do not know what that means :(\u0026#10;Sorry I do not know what that means :(\u0026#10;Sorry I do not know what that means :(\u0026#10;Sorry I do not know what that means :(\u0026#10;Sorry I do not know what that means :(\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cFont name\u003d\"Segoe UI\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cInsets left\u003d\"15.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "   \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "      \u003cInsets /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "   \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "sudogene": 39
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"2.0\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"339.0\" styleClass\u003d\"textlabel\" stylesheets\u003d\"@../images/stylesheet.css\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"344.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"53.0\" styleClass\u003d\"textlabel\" stylesheets\u003d\"@../images/stylesheet.css\" text\u003d\"Send\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            \u003cFont name\u003d\"Arial\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "      \u003c/Button\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "sudogene": 24
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "todo todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": "event event at 2020-08-10"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "event event /at some date"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "deadline deadline /by some date"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "done two"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "delete 200"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sudogene": 12
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "sudogene": 1,
      "-": 37
    }
  }
]
