[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": "run {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raymondge"
        },
        "content": "test {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raymondge"
        },
        "content": "application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raymondge"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raymondge"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raymondge"
        },
        "content": "run{"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 50
    }
  },
  {
    "path": "data/duke.txt.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "E | 0 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "T | 1 | join sports club"
      }
    ],
    "authorContributionMap": {
      "raymondge": 4
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raymondge"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raymondge"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raymondge"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raymondge"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raymondge"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raymondge"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raymondge"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raymondge"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raymondge"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raymondge"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raymondge"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raymondge"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raymondge"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raymondge"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raymondge"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raymondge"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raymondge"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raymondge"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raymondge"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raymondge"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raymondge"
        },
        "content": ":init"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raymondge"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raymondge"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raymondge"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "raymondge"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "raymondge"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "raymondge"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "raymondge"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "raymondge"
        },
        "content": ":end"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "raymondge"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "raymondge"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "raymondge"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "raymondge"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "raymondge"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "raymondge"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "raymondge"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "raymondge"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "raymondge"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "raymondge"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "raymondge": 103
    }
  },
  {
    "path": "src/main/java/DataManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * Encapsulates the data managing processes of the program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class DataManager {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    static String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public DataManager(String Path) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        filePath \u003d Path;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public static ArrayList\u003cTask\u003e loadTaskFromFile() throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        ArrayList\u003cTask\u003e listOfTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                String[] task \u003d sc.nextLine().split(\"|\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                String type \u003d task[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                boolean isDone \u003d Integer.parseInt(task[1]) \u003d\u003d 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                String description \u003d task[2];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    listOfTask.add(new Todo(description, isDone));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    LocalDate date \u003d LocalDate.parse(task[3]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    listOfTask.add(new Deadline(description, isDone, date));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    LocalDate time \u003d LocalDate.parse(task[3]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                    listOfTask.add(new Event(description, isDone, time));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            System.out.println(\"\\\"Could not save file!\" + e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return listOfTask;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public static void writeToFile(ArrayList\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        StringBuilder stringToAppend \u003d new StringBuilder();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        for (Task currentTask : taskList) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            String currentLine \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            String isTaskDone \u003d currentTask.checkDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            String description \u003d currentTask.getDescription();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            if (currentTask instanceof Todo) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                currentLine +\u003d \"T\" + \"|\" + isTaskDone + \"|\" + description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            if (currentTask instanceof Deadline) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                currentLine +\u003d \"D\" + isTaskDone + \"|\" + description + \"|\" + ((Deadline) currentTask).getDate();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            if (currentTask instanceof Event) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                currentLine +\u003d \"E\" + isTaskDone + \"|\" + description + \"|\" + ((Event) currentTask).getTime();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            stringToAppend.append(currentLine).append(\"\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        fw.write(stringToAppend.toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 79
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * Encapsulates data for a deadline task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDate time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return time.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getDate() + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 25
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * A chatbot reacting on tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            ui.showLoadingError(e);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public static void main(String[] args){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 28,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * Give the message of what problem the program runs into."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 8
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * Encapsulates data for an event task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public Event(String description, boolean isDone, LocalDate time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return time.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + getTime() + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 24
    }
  },
  {
    "path": "src/main/java/InvalidDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * The program runs into a invalid Deadline exception"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class InvalidDeadlineException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public InvalidDeadlineException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        super(\"☹ OOPS!!! The description of a Deadline cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 8
    }
  },
  {
    "path": "src/main/java/InvalidEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * The program runs into a invalid Event exception"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class InvalidEventException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public InvalidEventException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        super(\"☹ OOPS!!! The description of a Event cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 8
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * The program runs into a invalid Input exception"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public InvalidInputException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        super(\"☹ OOPS!!! Sorry I do not understand this command!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 8
    }
  },
  {
    "path": "src/main/java/InvalidTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * The program runs into a invalid Todo input exception"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class InvalidTodoException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public InvalidTodoException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        super(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 8
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * Encapsulates behavior for reading and writing to files."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": "     public ArrayList\u003cTask\u003e load() throws DukeException, IOException{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": "         Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raymondge"
        },
        "content": "         System.out.println(\"Hello! I\u0027m Duke\\n\"+\"What can I do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raymondge"
        },
        "content": "         ArrayList\u003cTask\u003e listOfItems \u003d DataManager.loadTaskFromFile();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raymondge"
        },
        "content": "         String echo\u003d sc.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raymondge"
        },
        "content": "         while(!echo.equals(\"bye\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raymondge"
        },
        "content": "             try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                 String[] tempArray \u003d echo.split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                 if (echo.equals(\"list\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     int iterator \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     for (Task s : listOfItems) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         System.out.println(iterator + \".\" + s.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         iterator++;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                 }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                 else if (tempArray[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     int index \u003d Integer.parseInt(tempArray[1]) - 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     listOfItems.get(index).markDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + listOfItems.get(index).toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                 }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                 else if (tempArray[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     int index \u003d Integer.parseInt(tempArray[1]) - 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     Task tobeRemove \u003d listOfItems.get(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     listOfItems.remove(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + tobeRemove.toString() + \"\\nNow you have \" + listOfItems.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                 }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                 else if (tempArray[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     ArrayList\u003cTask\u003e listOfFoundItems \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     for (Task s : listOfItems) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         String[] items \u003d s.description.split(\" \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         for (int i \u003d 0; i \u003c items.length; i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                             if (tempArray[1].equals(items[i])) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                                 listOfFoundItems.add(s);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                                 break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                             }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     int iterator \u003d 1;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     System.out.println(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     for (Task s : listOfFoundItems) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         System.out.println(iterator + \".\" + s.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         iterator++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                 }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                 else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     if (tempArray[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         if(tempArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                             throw new InvalidTodoException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         Todo newTodo \u003d new Todo(echo.substring(5), false);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         listOfItems.add(newTodo);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newTodo.toString() +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                                 \"\\nNow you have \" + listOfItems.size() + \" tasks in total\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     else if (tempArray[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         if(tempArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                             throw new InvalidDeadlineException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         String[] tempString \u003d echo.substring(9).split(\" /by\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         Deadline newDeadline \u003d new Deadline(tempString[0], false, LocalDate.parse(tempString[1]));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         listOfItems.add(newDeadline);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newDeadline.toString()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                                 + \"\\nNow you have \" + listOfItems.size() + \" tasks in total\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     else if (tempArray[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         if(tempArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                             throw new InvalidEventException();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         String[] tempString \u003d echo.substring(7).split(\" /at\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         Event newEvent \u003d new Event(tempString[0], false,  LocalDate.parse(tempString[1]));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         listOfItems.add(newEvent);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newEvent.toString()"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                                 + \"\\nNow you have \" + listOfItems.size() + \" tasks in total\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                         throw new InvalidInputException();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                     }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                 }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "raymondge"
        },
        "content": "             } catch (DukeException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "raymondge"
        },
        "content": "                 System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "raymondge"
        },
        "content": "             }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "raymondge"
        },
        "content": "             echo \u003d sc.nextLine();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "raymondge"
        },
        "content": "         }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "raymondge"
        },
        "content": "         DataManager.writeToFile(listOfItems);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "raymondge"
        },
        "content": "         System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "raymondge"
        },
        "content": "         return listOfItems;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "raymondge"
        },
        "content": "     }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 109
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    /** The task\u0027s messages */"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    /** Whether the task is Done*/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public boolean checkDone(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public void markDone(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 37
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * Encapsulates the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    ArrayList\u003cTask\u003e listOfItems;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e listOfItems) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        this.listOfItems \u003d listOfItems;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 13
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * Encapsulates data for a todo task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 13
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": " * Encapsulates messages for interacting with the user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public void showLoadingError(DukeException e){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 10
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 10
    }
  },
  {
    "path": "src/test/java/UITest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "public class UITest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    public void MessagePrintTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            String testString \u003d \"☹ OOPS!!! The description of a Deadline cannot be empty.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "raymondge"
        },
        "content": "            UI ui \u003d new UI();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "raymondge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "raymondge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "raymondge": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "raymondge"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "raymondge"
        },
        "content": "todo return book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "raymondge"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "raymondge"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "raymondge"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "raymondge"
        },
        "content": "delete 3"
      }
    ],
    "authorContributionMap": {
      "raymondge": 6
    }
  }
]
