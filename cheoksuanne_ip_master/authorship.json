[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 45,
      "cheoksuanne": 16
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "T ## 1 ## eat laksa today"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 1
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public AddCommand(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        String[] splitInput \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        this.taskType \u003d splitInput[0]; //"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        this.taskDescription \u003d splitInput[1];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public String handle(String input, TaskManager taskManager, Storage fileHandler) throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        if (this.taskType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            //if the task is a todo task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            Todo todo \u003d new Todo(this.taskDescription);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            taskManager.addTask(todo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            fileHandler.writeToFile(taskManager);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                    + todo + \"\\nNow you have \" + taskManager.getNumTasks()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                    + \" tasks in the list\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } else if (this.taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            //if the task is a deadline task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            String task \u003d this.taskDescription.replace(\"/by\", \"/\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            String taskName \u003d TextAndTaskConverter.getTaskName(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            LocalDate date \u003d TextAndTaskConverter.getDate(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            Deadline deadline \u003d new Deadline(taskName, date);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            taskManager.addTask(deadline);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            fileHandler.writeToFile(taskManager);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                    + deadline + \"\\nNow you have \" + taskManager.getNumTasks()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                    + \" tasks in the list\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            //if task is an event task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            String task \u003d this.taskDescription.replace(\"/at\", \"/\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            String taskName \u003d TextAndTaskConverter.getTaskName(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            LocalDate date \u003d TextAndTaskConverter.getDate(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            LocalTime time \u003d TextAndTaskConverter.getTime(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            Event event \u003d new Event(taskName, date, time);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            taskManager.addTask(event);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            fileHandler.writeToFile(taskManager);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                    + event + \"\\nNow you have \" + taskManager.getNumTasks()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                    + \" tasks in the list\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 61
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public String handle(String input, TaskManager taskManager, Storage fileHandler) throws IOException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        fileHandler.writeToFile(taskManager);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return \"bye bye!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 10
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " * Handles the input by the user and generates the respective output."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * Handles the input by the user and prints the respective output."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public abstract String handle(String input, TaskManager taskManager, Storage fileHandler) throws IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//        catch(FileNotFoundException e){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//            return \"File not found!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//            //System.out.println(\"File not found!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//        catch(IOException e){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//            return \"OOPS something went wrong!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "////            System.out.println(\"OOPS something went wrong!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 30
    }
  },
  {
    "path": "src/main/java/DataFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//public class DataFile {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//    private File data;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//    public DataFile(File data) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//        this.data \u003d data;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//    public File newFile()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 13
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public Deadline(String description, LocalDate date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return \"[D]\" + getStatusIcon() + this.description + \"(by: \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 34
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public DeleteCommand(String input) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        this.taskNum \u003d Integer.parseInt(splitInput[1]);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public String handle(String input, TaskManager taskManager, Storage fileHandler) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        if (taskManager.getTasksList().isEmpty() || taskManager.getTasksList().size() \u003c taskNum) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return \"There\u0027s nothing to delete!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            Task deletedTask \u003d taskManager.getTask(taskNum - 1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            taskManager.removeTask(taskNum);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            fileHandler.writeToFile(taskManager);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                    + deletedTask + \"\\nNow you have \" + taskManager.getNumTasks()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                    + \" tasks in the list\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 28
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 59
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public DoneCommand(String input) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        this.taskNum \u003d Integer.parseInt(splitInput[1]);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public String handle(String input, TaskManager taskManager, Storage fileHandler) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        if (taskManager.getTasksList().isEmpty() || taskManager.getTasksList().size() \u003c taskNum) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return \"This task doesn\u0027t exist!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } else if (taskManager.getTask(this.taskNum - 1).isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return \"This task is already done!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            taskManager.setTaskDone(this.taskNum);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            fileHandler.writeToFile(taskManager);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                    + taskManager.getTask(taskNum - 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 27
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " * The Duke program keeps track of the list of tasks to be done."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private TaskManager taskManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private Storage fileHandler;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public Duke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        this.fileHandler \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        this.taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            List\u003cString\u003e files \u003d Storage.readSavedFile(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            assert files !\u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            for (String value : files) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                Task task \u003d TextAndTaskConverter.textConverter(value);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                taskManager.getTasksList().add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            System.out.println(\"File not found!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        System.out.println(logo +\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private void run() throws IOException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        Command ioHandler \u003d Parser.parseInput(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        assert ioHandler !\u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        System.out.println(ioHandler.handle(input, taskManager, fileHandler));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public String getResponse(String input) throws IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        Command ioHandler \u003d Parser.parseInput(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        assert ioHandler !\u003d null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return ioHandler.handle(input, taskManager, fileHandler);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 54,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " * Represents exceptions thrown in Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private final String message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 16
    }
  },
  {
    "path": "src/main/java/DukeExceptionHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " * Handles exceptions in Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class DukeExceptionHandler {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * Handles exceptions in Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * @param text user input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * @return error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public static String handleException(String text) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        if (text.equals(\"todo\") || text.equals(\"deadline\") || text.equals(\"event\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                || text.equals(\"find\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            NoDescriptionException error \u003d new NoDescriptionException(text);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return error.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } else if (!text.contains(\"todo\") \u0026\u0026 !text.contains(\"deadline\") \u0026\u0026 !text.contains(\"event\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                \u0026\u0026 !text.contains(\"done\") \u0026\u0026 !text.contains(\"delete\") \u0026\u0026 !text.contains(\"find\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                \u0026\u0026 !text.equals(\"list\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            InvalidInputException error \u003d new InvalidInputException(text);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return error.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 27
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " * Represents an event task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private final LocalTime time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public Event(String description, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return \"[E]\" + getStatusIcon() + this.description + \"(at: \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \", \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                + this.time + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 40
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    String searchWord;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public FindCommand(String input) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        this.searchWord \u003d splitInput[1];"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public String handle(String input, TaskManager taskManager, Storage fileHandler) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        ArrayList\u003cString\u003e tasksFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        for (int i \u003d 0; i \u003c taskManager.getTasksList().size(); i++) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            String found \u003d taskManager.getTasksList().get(i).toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            if (found.contains(this.searchWord)) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                tasksFound.add(found);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        //print tasks that match the search word"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        if (tasksFound.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return \"Sorry nothing matches :(\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            String result \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            for (int j \u003d 0; j \u003c tasksFound.size(); j++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                result \u003d result + (j + 1) + \". \" + tasksFound.get(j) + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return \"Here are the matching tasks in your list:\\n\" + result;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 34
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " * Represents an exception where there is an invalid input."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public InvalidInputException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 14
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public String handle(String input, TaskManager taskManager, Storage fileHandler) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return taskManager.toString();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 7
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public Main() throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 32
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                    DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            System.out.println(\"File not found!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } catch(IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            System.out.println(\"OOPS something went wrong!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 62
    }
  },
  {
    "path": "src/main/java/NoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " * Represents an exception where the input has no description."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class NoDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public NoDescriptionException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return \"OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 14
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public static Command parseInput(String input) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return new DoneCommand(input);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return new DeleteCommand(input);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } else if (input.contains(\"find\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return new FindCommand(input);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } else if (input.contains(\"todo\") || input.contains(\"deadline\") || input.contains(\"event\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return new AddCommand(input);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 21
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " * Handles txt files created."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * Writes tasks to the .txt file to store the data."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * @param taskManager task manager that contains the list of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public void writeToFile(TaskManager taskManager) throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        ArrayList\u003cTask\u003e tasksList \u003d taskManager.getTasksList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        for (Task task : tasksList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            if (task instanceof Todo) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                fileWriter.write(\"T ## \" + (task.getDone() ? 1 : 0) + \" ## \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                        + task.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                fileWriter.write(\"D ## \" + (task.getDone() ? 1 : 0) + \" ## \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                        + task.getDescription() + \" ## \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                        + ((Deadline) task).getDate() + \"\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            if (task instanceof Event) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                fileWriter.write(\"E ## \" + (task.getDone() ? 1 : 0) + \" ## \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                        + task.getDescription() + \" ## \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                        + ((Event) task).getDate() + \" \" + ((Event) task).getTime() + \"\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * Reads data stored in the file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * @param fileName file to be read."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * @return list of lines read in the file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public static ArrayList\u003cString\u003e readSavedFile(String fileName) throws IOException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        File file \u003d new File(fileName);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return (ArrayList\u003cString\u003e) Files.readAllLines(Paths.get(fileName));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 63
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return getStatusIcon() + this.description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 34
    }
  },
  {
    "path": "src/main/java/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " * Manages a list of tasks for the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public final ArrayList\u003cTask\u003e tasksList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        tasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public Task getTask(int taskNum) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return tasksList.get(taskNum);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * @param task task to be added."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        tasksList.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public void setTaskDone(int taskNum) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        tasksList.get(taskNum - 1).setDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public int getNumTasks() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return tasksList.size();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasksList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return tasksList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * Removes a task from the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * @param taskNum number of tasks in the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public void removeTask(int taskNum) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        tasksList.remove(taskNum - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        if (this.getTasksList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return \"You have nothing to do!\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            String result \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            for (int i \u003d 0; i \u003c tasksList.size(); i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                result \u003d result + (i + 1) + \". \" + tasksList.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 58
    }
  },
  {
    "path": "src/main/java/TextAndTaskConverter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " * Handles the conversion of texts and tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class TextAndTaskConverter {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * Converts texts into tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * @param text line of text read from the saved file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * @return respective task that corresponds to the text."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public static Task textConverter(String text) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        String[] splitLines \u003d text.split(\" ## \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        String description \u003d splitLines[2];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        if (splitLines.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            Todo task \u003d new Todo(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            if (splitLines[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                task.setDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } else if (splitLines.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            Task task \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            if (splitLines[0].trim().equals(\"D\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(splitLines[3]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                task \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                if (splitLines[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                    task.setDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            } else if (splitLines[0].trim().equals(\"E\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                String[] dateAndTime \u003d splitLines[3].split(\" \", 2);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(dateAndTime[0]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                LocalTime time \u003d LocalTime.parse(dateAndTime[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                task \u003d new Event(description, date, time);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                if (splitLines[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                    task.setDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            System.out.println(\"else\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * Gets the name of the task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * @param text line of text read from the saved file."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * @return name of the task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public static String getTaskName(String text) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        String[] splitLines \u003d text.split(\"/\", 2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return splitLines[0];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * Gets the date the task needs to be done by."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * @param text line of text read from the saved file."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * @return date of completion."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public static LocalDate getDate(String text) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        String[] splitLines \u003d text.split(\"/\", 2);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        String trimText \u003d splitLines[1].trim();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        if (!trimText.contains(\" \")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return LocalDate.parse(trimText);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            String[] splitLines2 \u003d trimText.split(\" \", 2);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return LocalDate.parse(splitLines2[0]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * Gets the time the task needs to be done by."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * @param text line of text read from the saved file."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     * @return time of completion."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public static LocalTime getTime(String text) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        String[] splitLines \u003d text.split(\"/\", 2);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        String trimText \u003d splitLines"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        [1].trim();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        if (trimText.split(\" \", 2).length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            String[] splitLines2 \u003d trimText.split(\" \", 2);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            LocalTime t \u003d LocalTime.parse(splitLines2[1]);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "            return t;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 103
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " * Represents a todo task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        return \"[T]\" + getStatusIcon() + this.description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 17
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//    private final String input;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//    public Ui(String input) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//        this.input \u003d input;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//        if (this.input \u003d\u003d \"list\") {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//            System.out.print(taskManager);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 16
    }
  },
  {
    "path": "test/TextAndTaskConverterTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "class TextAndTaskConverterTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public void testTextConverter() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        assertEquals(\"[T]✘homework\", TextAndTaskConverter.textConverter(\"T ## 0 ## homework\").toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 11
    }
  },
  {
    "path": "test/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    public void testCreateTodo() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "        assertEquals(\"[T]✘read book\", new Todo(\"read book\").toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "todo go for a run"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "deadline homework /by 2020-11-22"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "event meeting /at 2020-12-12 18:00"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "deadline cs assignment /by 2020-03-14"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "todo math assignment"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "find assignment"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "cheoksuanne": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheoksuanne"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "cheoksuanne": 1
    }
  }
]
