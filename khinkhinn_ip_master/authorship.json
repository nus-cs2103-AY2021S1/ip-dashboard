[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 16,
      "-": 45
    }
  },
  {
    "path": "data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "0"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    protected LocalDate deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Deadline(String s, String deadline) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.deadline \u003d LocalDate.parse(deadline);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Deadline(String name, boolean completed, String deadline) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(name, completed);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.deadline \u003d LocalDate.parse(deadline);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private Deadline(String name, boolean completed, LocalDate deadline) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(name, completed);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return \"deadline\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return deadline.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public Deadline completeTask() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return new Deadline(this.name, true, this.deadline);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return \"[deadline]\" + super.toString()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                + \" (by: \" + this.deadline.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 42
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 45
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    static String HOME \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    static java.nio.file.Path PATH \u003d java.nio.file.Paths.get(HOME, \"ip\", \"data.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    static Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    static Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    static String s;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    static TaskList tasklist;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public void start(Stage stage) throws IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        initialize();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        // step 2 making window look as expected"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        handleUserInput();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    });"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        handleUserInput();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    });"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        );"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                return ui.exit();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                return ui.list();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                int n \u003d parser.getTaskNumber(input);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                Task t \u003d tasklist.complete(n);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                return ui.complete(t);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                int n \u003d parser.getTaskNumber(input);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                Task t \u003d tasklist.delete(n);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                return ui.delete(t, tasklist.getTotal());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            } else if (input.startsWith(\"todo\") || input.startsWith(\"deadline\") || input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                Task t \u003d tasklist.add(input);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                return ui.add(t, tasklist.getTotal());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                String keyword \u003d parser.getKeyword(input);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                return ui.find(keyword);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            } else { // unknown input"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                throw new UnknownInputException();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            return ui.handleException(e);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    static void initialize() throws IOException {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Scanner myReader \u003d new Scanner(PATH);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        int total \u003d myReader.nextInt();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        tasklist \u003d new TaskList(total);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        // use launcher to launch"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 167,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Event(String s, String time) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.time \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Event(String name, boolean completed, String time) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(name, completed);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.time \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    private Event(String name, boolean completed, LocalDate time) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(name, completed);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return \"event\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return time.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public Event completeTask() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return new Event(this.name, true, this.time);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return \"[event]\" + super.toString()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                + \" (at: \" + this.time.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 42
    }
  },
  {
    "path": "src/main/java/IncompleteInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class IncompleteInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    IncompleteInputException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(\"please finish your sentence.. :(\\neither your task name is blank or youre missing the time!!\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 5
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 10
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " * This is a class that parses string to return relevant information."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Returns task number that user wants to edit."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param s User input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Task number that user wants to edit."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public int getTaskNumber(String s) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(s.split(\" \")[1]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return taskNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Returns Task after reading string representation stored in save file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param s String representation of task in save file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Task based on data provided in String."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public Task stringToTask(String s) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String[] arr \u003d s.split(\" @\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String type \u003d arr[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String status \u003d arr[1].substring(1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Boolean completed;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String name \u003d arr[2].substring(1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String time \u003d arr[3].substring(1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        if (status.equals(\"x\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            completed \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            completed \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            return new Todo(name, completed);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            return new Deadline(name, completed, time);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            return new Event(name, completed, time);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Returns Task that user wants to add."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param s User input."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Task based on user input."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @throws IncompleteInputException If user input is incomplete."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public Task commandToTask(String s) throws IncompleteInputException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String type;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String name;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            if (s.contains(\"/\")) { // event or deadline"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                String[] arr \u003d s.split(\"/\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                String[] typeAndName \u003d arr[0].split(\" \", 2);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                type \u003d typeAndName[0];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                name \u003d typeAndName[1];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                time \u003d arr[1].split(\" \")[1];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                    return new Deadline(name, time);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                    return new Event(name, time);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            } else { // to-do"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                String[] arr \u003d s.split(\" \", 2);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                name \u003d arr[1];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                return new Todo(name);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            throw new IncompleteInputException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    String getKeyword(String s) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return s.split(\" \")[1];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 82
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " * This is a class to represent tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /** Name of task */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /** Status of task, can either be complete or incomplete */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    protected boolean completed;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Task(String name) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.completed \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Task(String name, boolean completed) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.completed \u003d completed;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    String getName() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    String getType() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    String getTime() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Returns symbol used to represent status of task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return o if task is complete, x if task is incomplete."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return (this.completed ? \"o\" : \"x\"); //return O or X symbols"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Updates the status of the task to completed."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Completed task with same name."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public Task completeTask() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return new Task(this.name, true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            return \"[\" + this.getStatusIcon() + \"] \" + this.name;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 55
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " * This is a class to edit data in the save file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    String HOME \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    java.nio.file.Path PATH \u003d java.nio.file.Paths.get(HOME, \"ip\", \"data.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /** Total number of tasks in the task list */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    int total;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    TaskList(int total) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        this.total \u003d total;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    int getTotal() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return this.total;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Returns String representation of data of Task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param t Task to be converted into String."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return String representation of data."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String taskToString(Task t) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String s \u003d t.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String type \u003d t.getType();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String status \u003d t.getStatusIcon();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String name \u003d t.getName();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String time \u003d t.getTime();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return type + \" @ \" + status + \" @ \" + name + \" @ \" + time;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Adds Task to save file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param t Task to be added."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @throws IOException If FileWriter is unable to find file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public void writeData(Task t) throws IOException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        FileWriter fw \u003d new FileWriter(PATH.toFile(), true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(bw);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        pw.println(taskToString(t));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        pw.flush();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        pw.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        bw.close();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Updates total number of Tasks in save file."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param newTotal New total number of tasks."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @throws IOException If FileWriter is unable to find file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public void updateTotal(int newTotal) throws IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        File fileToBeModified \u003d PATH.toFile();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String newText \u003d \"\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        BufferedReader reader \u003d null;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        FileWriter writer \u003d null;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        reader \u003d new BufferedReader(new FileReader(fileToBeModified));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        newText \u003d newTotal + System.lineSeparator();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        line \u003d reader.readLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            newText \u003d newText + line + System.lineSeparator();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            line \u003d reader.readLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writer \u003d new FileWriter(fileToBeModified);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writer.write(newText);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Replaces specified line of text with another line of text."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param prevTask Text to be replaced."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param newTask Text to be added."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @throws IOException If FileWriter is unable to find file."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public void replaceText(String prevTask, String newTask) throws IOException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        File fileToBeModified \u003d PATH.toFile();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String oldText \u003d \"\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        BufferedReader reader \u003d null;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        FileWriter writer \u003d null;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        reader \u003d new BufferedReader(new FileReader(fileToBeModified));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            oldText \u003d oldText + line + System.lineSeparator();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            line \u003d reader.readLine();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String newText \u003d oldText.replaceAll(prevTask, newTask);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writer \u003d new FileWriter(fileToBeModified);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writer.write(newText);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Deletes specified line of text from file."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param task Task to be deleted."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @throws IOException If FileWriter is unable to find file."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public void deleteText(String task) throws IOException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        File fileToBeModified \u003d PATH.toFile();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String newText \u003d \"\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        BufferedReader reader \u003d null;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        FileWriter writer \u003d null;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        reader \u003d new BufferedReader(new FileReader(fileToBeModified));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            if (line.equals(task)) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                line \u003d reader.readLine();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                newText \u003d newText + line + System.lineSeparator();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                line \u003d reader.readLine();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writer \u003d new FileWriter(fileToBeModified);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writer.write(newText);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Completes specified Task."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param taskNumber Number of task to be completed."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Completed task."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @throws IOException If FileWriter is unable to find file."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public Task complete(int taskNumber) throws IOException {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Scanner myReader \u003d new Scanner(PATH);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String taskData \u003d \"\";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        for (int i \u003d 0; i \u003c\u003d taskNumber; i++) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            taskData \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Task t \u003d p.stringToTask(taskData);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        t \u003d t.completeTask();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        replaceText(taskData, taskToString(t));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Deletes specified Task from save file."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param taskNumber Number of task to be deleted."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Task to be deleted."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @throws IOException If FileWriter is unable to find file."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public Task delete(int taskNumber) throws IOException {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Scanner myReader \u003d new Scanner(PATH);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String taskData \u003d \"\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        for (int i \u003d 0; i \u003c\u003d taskNumber; i++) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            taskData \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Task t \u003d p.stringToTask(taskData);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        deleteText(taskToString(t));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        total--;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        updateTotal(total);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Adds new Task to save file."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @param s"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @throws IOException If FileWriter is unable to find file."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @throws IncompleteInputException If user input is incomplete."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public Task add(String s) throws IOException, IncompleteInputException {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Task t \u003d p.commandToTask(s);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        writeData(t);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        total++;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        updateTotal(total);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 220
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Todo(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Todo(String name, boolean completed) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(name, completed);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return \"0\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public Todo completeTask() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return new Todo(this.name, true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return \"[todo]\" + super.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        Todo test \u003d (Todo) obj;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } else if (obj \u003d\u003d null || obj.getClass() !\u003d this.getClass()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } else if (this.name.equals(test.name) \u0026\u0026 (this.completed \u003d\u003d test.completed)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 43
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "// deals with interactions with the user"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "// probably about printing stuff to user ie \"talking\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " * This is class to interact with the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    static String HOME \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    java.nio.file.Path PATH \u003d java.nio.file.Paths.get(HOME, \"ip\", \"data.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    String line \u003d \"______________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    String enter \u003d \"\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Greets user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Next line that user inputs."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d logo + enter;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d \"welcome to my crib\" + enter;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Bids user farewell."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String exit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d \"ok u can leave lmao\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * List all Tasks in save file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Next line that user inputs."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String list() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            Scanner myReader \u003d new Scanner(PATH);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            myReader.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            while (myReader.hasNextLine()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                String data \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                result +\u003d counter + \". \" + p.stringToTask(data) + enter;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Informs user of completed task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Next line that user inputs."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String complete(Task t) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d \"gfy youve managed to finish the following...\" + enter;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        t \u003d t.completeTask();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d t + enter;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Informs user of deleted task."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Next line that user inputs."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String delete(Task t, int total) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d \"removed!! ^^\" + enter;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d t + enter;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d \"total task: \" + total + \"\\n:o\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Informs user of added task."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Next line that user inputs."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String add(Task t, int total) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d \"added!\" + enter;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d t + enter;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d \"total task: \" + total + \"\\n:o\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * Informs user of exception."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     * @return Next line that user inputs."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String handleException(Exception e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        result +\u003d e.getMessage();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public String find(String keyword) throws IOException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            Scanner reader \u003d new Scanner(PATH);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            int total \u003d reader.nextInt(); // to skip the first integer"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            String line \u003d reader.nextLine();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            while (reader.hasNextLine()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                if (line.contains(keyword)) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                    result +\u003d counter + \". \" + p.stringToTask(line) + enter;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                line \u003d reader.nextLine();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        if (line.contains(keyword)) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            result +\u003d counter + \". \" + p.stringToTask(line) + enter;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 154
    }
  },
  {
    "path": "src/main/java/UnknownInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class UnknownInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    UnknownInputException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        super(\"i dont know what youre tryna say T.T\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 5
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public void testGetTaskNumber() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        assertEquals(1, p.getTaskNumber( \"done 1\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        assertEquals(17, p.getTaskNumber( \"delete 17\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        assertEquals(299, p.getTaskNumber( \"done 299\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public void testCommandToTask_completeInput_success() throws IncompleteInputException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        assertEquals(new Todo(\"eat\"), p.commandToTask(\"todo eat\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        /*assertEquals(new Deadline(\"homework\", \"2020-08-30\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                p.commandToTask(\"deadline homework /by 2020-08-30\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        assertEquals(new Event(\"birthday\", \"2020-12-04\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                p.commandToTask(\"event birthday /at 2020-12-4\"));*/"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public void testCommandToTask_incompleteInput_exceptionThrown() throws IncompleteInputException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            assertEquals(new Todo(\"eat\"), p.commandToTask(\"todo\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "            assertEquals(\"please finish your sentence.. :(\\neither your task name is blank \" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                    \"or youre missing the time!!\", e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        /*assertEquals(new Deadline(\"homework\", \"2020-08-30\"),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                p.commandToTask(\"deadline homework /by 2020-08-30\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        assertEquals(new Event(\"birthday\", \"2020-12-04\"),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "                p.commandToTask(\"event birthday /at 2020-12-4\"));*/"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 39
    }
  },
  {
    "path": "src/test/java/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "todo eat"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "deadline cry /by tonight"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "event hackathon /at 30 august"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 5,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "../src/main/java/Todo.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "../src/main/java/IncompleteInputException.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "../src/main/java/UnknownInputException.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khinkhinn"
        },
        "content": "../src/main/java/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "khinkhinn": 8
    }
  }
]
