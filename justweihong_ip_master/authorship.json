[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justweihong"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "-": 24,
      "justweihong": 2
    }
  },
  {
    "path": "output/production/ip/duke/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "T | 0 | fdsfds /by 2012-12-21 1900"
      }
    ],
    "authorContributionMap": {
      "justweihong": 1
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justweihong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justweihong"
        },
        "content": " * duke.Duke program is a Task Management App. It takes in user command for task manipulations"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justweihong"
        },
        "content": " * and shows a list of Tasks that is ongoing."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justweihong"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param filePath string path of the file for storage purpose."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            taskList \u003d storage.init();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Run start the program."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Initialise the relevant objects to handle user commands."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                String inputLine \u003d ui.readNextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                Command command \u003d Parser.parse(inputLine);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                command.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//            TaskList taskList \u003d storage.init();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//            this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//            while (true) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                    String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                    if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        this.taskList.print();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                    } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        int index \u003d Integer.valueOf(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        Task currentTask \u003d taskList.get(index);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        currentTask.markDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        this.taskList.set(index, currentTask);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        System.out.println(\"\\t\" + currentTask);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        this.storage.updateFile(this.taskList);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                    } else if (input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        int index \u003d Integer.valueOf(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        Task currentTask \u003d this.taskList.get(index);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        this.taskList.remove(index);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        System.out.println(\"\\t\" + currentTask);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        System.out.println(\"Now you have \" + String.valueOf(this.taskList.size()) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        System.out.println(\"Now you have \" + String.valueOf(this.taskList.size()) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "justweihong"
        },
        "content": "////                    updateFile(filePath, taskList );"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        this.storage.updateFile(this.taskList);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                    } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        ui.printExitMessage();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                    } else if (input.length() \u003e\u003d4 \u0026\u0026 input.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        if (input.length() \u003d\u003d 4 || (input.length() \u003d\u003d 5 \u0026\u0026 input.substring(4,5).equals(\" \"))) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        } else if (input.length() \u003d\u003d 5 \u0026\u0026 !input.substring(4,5).equals(\" \")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        Task newTask \u003d new TodoTask(input);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        System.out.println(\"\\t\" + newTask);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        System.out.println(\"Now you have \" + String.valueOf(this.taskList.size()) + \" tasks in your list.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "justweihong"
        },
        "content": "////                    updateFile(filePath, this.taskList );"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        this.storage.updateFile(this.taskList);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                    } else if (input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        if (input.length() \u003d\u003d 8 || (input.length() \u003d\u003d 9 \u0026\u0026 input.substring(8,9).equals(\" \"))) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        } else if (input.length() \u003d\u003d 9 \u0026\u0026 !input.substring(8,9).equals(\" \")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        String[] descDue \u003d input.substring(9).split(\"/\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        Task newTask \u003d new DeadlineTask(descDue[0], descDue[1]);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        System.out.println(\"\\t\" + newTask);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        System.out.println(\"Now you have \" + String.valueOf(this.taskList.size()) + \" tasks in your list.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "justweihong"
        },
        "content": "////                    updateFile(filePath, this.taskList );"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        this.storage.updateFile(this.taskList);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                    } else if (input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        if (input.length() \u003d\u003d 5 || (input.length() \u003d\u003d 6 \u0026\u0026 input.substring(5,6).equals(\" \"))) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        } else if (input.length() \u003d\u003d 6 \u0026\u0026 !input.substring(5,6).equals(\" \")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        String[] descDue \u003d input.substring(6).split(\"/\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        Task newTask \u003d new EventTask(descDue[0], descDue[1]);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        System.out.println(\"\\t\" + newTask);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        System.out.println(\"Now you have \" + String.valueOf(this.taskList.size()) + \" tasks in your list.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "justweihong"
        },
        "content": "////                    updateFile(filePath, this.taskList );"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        this.storage.updateFile(this.taskList);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                    } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                } catch (DukeException | IOException err) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                    ui.printErrorMessage(err.getMessage());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /** Initialise empty duke.txt if not found, else initialise the taskList based on existing duke.txt **/"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public static void initFile(String filePath) throws IOException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /** Updates the file in hard disk based on the new taskList. **/"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public static void updateFile(String filePath, ArrayList\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        for (int index \u003d 0; index \u003c taskList.size(); index++) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            Task task \u003d taskList.get(index);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            fileWriter.write(task.fileString() + \"\\n\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Main program to run the application."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        String filePath \u003d \"duke/data/duke.txt\";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        Duke duke \u003d new Duke(filePath);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "justweihong": 165
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justweihong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justweihong"
        },
        "content": " * commands.Command that adds a new task and updates the storage."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justweihong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justweihong"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    String[] parsedStrings;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param parsedStrings Array of the different parameters of a Task input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public AddCommand(String[] parsedStrings) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.parsedStrings \u003d parsedStrings;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Adds a Task to the TaskList and update the file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param taskList TaskList containing Tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param ui Ui that handles system output."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param storage Storage that handles file saving."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @throws IOException If file don\u0027t exist."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @throws DukeException If input is not recognised."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        String taskType \u003d parsedStrings[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        String description \u003d parsedStrings[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        String due;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                newTask \u003d new TodoTask(description);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                due \u003d parsedStrings[2];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                System.out.println(description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justweihong"
        },
        "content": "//                System.out.println(due);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                newTask \u003d new DeadlineTask(description, due);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                due \u003d parsedStrings[2];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                newTask \u003d new EventTask(description, due);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                throw new DukeException(\"I don\u0027t know what type of task this is :(\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        ui.printAddMessage(newTask, taskList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        super.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "justweihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justweihong": 58
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justweihong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justweihong"
        },
        "content": " * Manages the user command and modify the taskList, output, and storage accordingly."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justweihong"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justweihong"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    boolean isExit \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Adds a Task to the TaskList and update the file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param taskList TaskList containing Tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param ui Ui that handles system output."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param storage Storage that handles file saving."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @throws IOException If file don\u0027t exist."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @throws DukeException If input is not recognised."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        storage.updateFile(taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Boolean indicator for commands.Command to end the program."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @return boolean indicator."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justweihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justweihong": 40
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justweihong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justweihong"
        },
        "content": " * commands.Command that deletes a task and updates the storage."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justweihong"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justweihong"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param index index integer of the TaskList containing the Task to be removed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Remove a Task to the TaskList an d update the file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param taskList TaskList containing Tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param ui Ui that handles system output."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param storage Storage that handles file saving."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @throws IOException If file don\u0027t exist."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @throws DukeException If input is not recognised."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        Task deletedTask \u003d taskList.remove(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        ui.printDeleteMessage(deletedTask, taskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        super.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justweihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justweihong": 38
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justweihong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justweihong"
        },
        "content": " * commands.Command that marks a Task as completed and updates the storage."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justweihong"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justweihong"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param index index integer of the Tasklist containing the Task to be marked done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Mark a Task as done in the TaskList an d update the file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param taskList TaskList containing Tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param ui Ui that handles system output."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param storage Storage that handles file saving."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @throws IOException If file don\u0027t exist."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @throws DukeException If input is not recognised."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        Task doneTask \u003d taskList.setDoneTask(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        ui.printDoneMessage(doneTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        super.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justweihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justweihong": 39
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justweihong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justweihong"
        },
        "content": " * commands.Command that prompts duke.Duke to end and updates the storage."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justweihong"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justweihong"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Prompt duke.Duke to end and update storage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param taskList TaskList containing Tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param ui Ui that handles system output."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param storage Storage that handles file saving."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @throws IOException If file don\u0027t exist."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @throws DukeException If input is not recognised."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        ui.printExitMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        super.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justweihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justweihong": 34
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justweihong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justweihong"
        },
        "content": " * commands.Command that list out the task in the TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justweihong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justweihong"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * List out the task in TaskList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param taskList TaskList containing Tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param ui Ui that handles system output."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param storage Storage that handles file saving."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        taskList.print();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justweihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justweihong": 23
    }
  },
  {
    "path": "src/main/java/duke/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "T | 0 | fdsfds /by 2012-12-21 1900"
      }
    ],
    "authorContributionMap": {
      "justweihong": 1
    }
  },
  {
    "path": "src/main/java/duke/tasks/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.DukeDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justweihong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justweihong"
        },
        "content": " * Deadline Task object with description and due date."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justweihong"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justweihong"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    protected DukeDate due;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param description string description of event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param due string due time/date of event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public DeadlineTask(String description, String due) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.due \u003d new DukeDate(due);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Overloaded Constructor to create existing tasks in storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param description string description of event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param due string due time/date of event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param isCompleted boolean check if task has been completed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public DeadlineTask(String description, String due, boolean isCompleted) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.due \u003d new DukeDate(due);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.isCompleted \u003d isCompleted;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Displays the string output representation in storage."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @return string representation."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public String fileString() {return \"D | \" + super.fileString() + \" | \" + due; }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Displays the string output representation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @return string representation."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        return \"[D] \" + super.toString() + \" (by: \" + due + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justweihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justweihong": 51
    }
  },
  {
    "path": "src/main/java/duke/tasks/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.DukeDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justweihong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justweihong"
        },
        "content": " * Event Task object with description and due date."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justweihong"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justweihong"
        },
        "content": "public class EventTask extends Task{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    protected DukeDate due;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param description string description of event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param due string due time/date of event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public EventTask(String description, String due) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.due \u003d new DukeDate(due);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Overloaded Constructor to create existing tasks in storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param description string description of event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param due string due time/date of event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param isCompleted boolean check if task has been completed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public EventTask(String description, String due, boolean isCompleted) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.due \u003d new DukeDate(due);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.isCompleted \u003d isCompleted;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Displays the string output representation in storage."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @return string representation."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public String fileString() {return \"E | \" + super.fileString() + \" | \" + due; }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Displays the string output representation."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @return string representation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        return \"[E] \" + super.toString() + \" (at: \" + due + \")\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justweihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justweihong": 52
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justweihong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justweihong"
        },
        "content": " * Task object with description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justweihong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justweihong"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    protected boolean isCompleted;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param description description string of Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Set the task as completed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.isCompleted \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Get the status icon of the Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * status icon either displays \"✓\" as completed or \"✗\" as incomplete."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @return the status icon of the Task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        return (isCompleted) ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Get the file representation of status icon of the Task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * status icon either displays \"1\" as completed or \"0\" as incomplete."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @return the file representation of the status icon of the task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public String getFileStatusIcon() { return (isCompleted) ? \"1\" : \"0\"; }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public String fileString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        return getFileStatusIcon() + \" | \" + description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * String representation of the Task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @return string representation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justweihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justweihong": 55
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justweihong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justweihong"
        },
        "content": " * A list of Tasks that has several methods to manipulate the Tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justweihong"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justweihong"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param taskList ArrayList of Tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Empty Constructor to set up new list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Gets the size of the Task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @return integer size of the TaskList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Adds a new task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Set a current Task in the TaskList to another replacement task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param replacementTask"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void set(int index, Task replacementTask) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.taskList.set(index, replacementTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Get the Task in TaskList that corresponds a given index."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param index index in the TaskList."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @return Task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        return this.taskList.get(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Remove a Task in TaskList that corresponds to a given index."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param index in the TaskList."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @return the removed Task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        Task deletedTask \u003d this.taskList.get(index);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.taskList.remove(index);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        return deletedTask;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Print the outputs of the Tasks in the TaskList."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void print() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            String stringCount \u003d String.valueOf(i + 1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            System.out.println(stringCount + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Set the Task in TaskList corresponding to a given index as done."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param index in the TaskList."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @return the completed Task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public Task setDoneTask(int index) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        Task task \u003d this.taskList.get(index);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.taskList.set(index, task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "justweihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justweihong": 93
    }
  },
  {
    "path": "src/main/java/duke/tasks/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justweihong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justweihong"
        },
        "content": " * TodoTask object with description."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justweihong"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justweihong"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param description string description of event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Overloaded Constructor to create existing tasks in storage."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param description string description of event."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param isCompleted boolean check if task has been completed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public TodoTask(String description, boolean isCompleted) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.isCompleted \u003d isCompleted;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Displays the string output representation in storage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @return string representation."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public String fileString() {return \"T | \" + super.fileString(); }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Displays the string output representation."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @return string representation."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        return \"[T] \" + super.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justweihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justweihong": 45
    }
  },
  {
    "path": "src/main/java/duke/util/DukeDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justweihong"
        },
        "content": "public class DukeDate {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    private LocalDate localDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param datetimeString raw string containing the date time from user input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public DukeDate(String datetimeString) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        String[] datetimeArray \u003d datetimeString.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            this.localDate \u003d LocalDate.parse(datetimeArray[0].trim());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            throw new DukeException(\"I can\u0027t really understand the due dates.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * String representation of the datetime format for output."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @return string representation."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        String day \u003d String.valueOf(localDate.getDayOfMonth());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        String monthString \u003d String.valueOf(localDate.getMonth());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        String year \u003d String.valueOf(localDate.getYear());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        return day + \" \" + monthString + \" \" + year;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justweihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justweihong": 34
    }
  },
  {
    "path": "src/main/java/duke/util/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justweihong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justweihong"
        },
        "content": " * Throws a duke.Duke exception with a customised error message."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justweihong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justweihong"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param errorMessage string containing error message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justweihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justweihong": 15
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justweihong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justweihong"
        },
        "content": " * Handles the user input and determine the correct commands.Command to activate."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justweihong"
        },
        "content": " * Contains helper methods to help out with this parsing process."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justweihong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justweihong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Parse the user input and determine the correct commands.Command to activate."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param inputLine User input line string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @return commands.Command that correspond to the input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @throws DukeException If the input is not recognised."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public static Command parse(String inputLine) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        Scanner scanner \u003d new Scanner(inputLine);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        String action \u003d scanner.next();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        String remainingString;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        String[] parsedStrings;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                remainingString \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                parsedStrings \u003d parseRemainingString(action, remainingString);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                return new AddCommand(parsedStrings);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                index \u003d scanner.nextInt() - 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                return new DoneCommand(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                index \u003d scanner.nextInt() - 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                return new DeleteCommand(index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                throw new DukeException(\"Sorry, I\u0027m not sure what that means :(\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Helper method to parse the remaining string from the input line for new Task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param taskType Type of task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param remainingString String that contains the description (and due)."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public static String[] parseRemainingString(String taskType, String remainingString) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        if (remainingString.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            throw new DukeException(\"The description can\u0027t be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        String due;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        String[] splitStrings;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                description \u003d remainingString.trim();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                return new String[] {\"todo\", description};"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                splitStrings \u003d remainingString.split(\"/by\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                description \u003d splitStrings[0].trim();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                due \u003d splitStrings[1].trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                if (description.length() \u003d\u003d 0 || due.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                    throw new DukeException(\"Description or due date is empty.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                return new String[] {\"deadline\", description, due};"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                splitStrings \u003d remainingString.split(\"/at\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                description \u003d splitStrings[0].trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                due \u003d splitStrings[1].trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                if (description.length() \u003d\u003d 0 || due.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                    throw new DukeException(\"Description or due date is empty.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                return new String[] {\"event\", description, due};"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                throw new DukeException(\"I don\u0027t know what type of task this is :(\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "justweihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justweihong": 89
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justweihong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justweihong"
        },
        "content": " * Handles the file storage for TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justweihong"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justweihong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /** Helper: creates file if it is not present in filePath."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @throws IOException If file dosen\u0027t exist."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void createFileIfNotPresent() throws IOException{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        if (!this.file.exists()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            this.file.createNewFile();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /** Helper: Converts text line to a Task object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @oaram fileString A single line string from file text"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @return Task that corresponds to that fileString"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public Task generateTaskFromFileString(String fileString) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        String[] strings \u003d fileString.split(\"[|]\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        String type \u003d strings[0].trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        boolean isCompleted \u003d (strings[1].trim().equals(\"1\")) ? true : false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        String desc \u003d strings[2].trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                return new TodoTask(desc, isCompleted);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                return new EventTask(desc, strings[3].trim(), isCompleted);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                return new DeadlineTask(desc, strings[3].trim(), isCompleted);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                throw new DukeException(\"unknown fileString\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /** Helper: generate the Tasks based on the text file."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @return TaskList that contains the collection of Tasks in the storage."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public TaskList generateTaskList () throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                Task task \u003d generateTaskFromFileString(scanner.nextLine());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "justweihong"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            return new TaskList(tasks);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            throw new DukeException(\"File not found.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /** Initialise the storage for duke.Duke."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @return TaskList that contains the collection of Tasks in the storage."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public TaskList init() throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            createFileIfNotPresent();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            return generateTaskList();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            throw new DukeException(\"Cannot update file.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Updates the file in storage based on new task list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param taskList the list of new tasks"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @throws IOException If file don\u0027t exist."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void updateFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        for (int index \u003d 0; index \u003c taskList.size(); index++) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            Task task \u003d taskList.get(index);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "justweihong"
        },
        "content": "            fileWriter.write(task.fileString() + \"\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "justweihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justweihong": 103
    }
  },
  {
    "path": "src/main/java/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justweihong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justweihong"
        },
        "content": " * Handles the printing outputs according to the user commands."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justweihong"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justweihong"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    Scanner scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Prints a welcome message when duke.Duke runs."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        System.out.println(\"Hello! I\u0027m duke.Duke baby :)\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Reads the next line of the input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @return String next line."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public String readNextLine() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        String query \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        query \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        return query;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Prints a done message for the given Task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param doneTask Task that is marked as completed."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void printDoneMessage(Task doneTask) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        System.out.println(\"\\t\" + doneTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Print an add message for the given Task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param newTask Task that has just been added."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param taskList current TaskList."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void printAddMessage(Task newTask, TaskList taskList) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        System.out.println(\"\\t\" + newTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        System.out.println(\"Now you have \" + String.valueOf(taskList.size()) + \" tasks in your list.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Prints a delete message for the deleted Task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param deletedTask Task that was deleted."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param taskList current TaskList."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void printDeleteMessage(Task deletedTask, TaskList taskList) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        System.out.println(\"\\t\" + deletedTask);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        System.out.println(\"Now you have \" + String.valueOf(taskList.size()) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Prints an exit message when duke.Duke exists."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void printExitMessage() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Prints an error message when file is not loaded."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        System.out.println(\"Unable to load file. New file is created.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * Prints an error message."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     * @param errorMessage error message."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "justweihong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "justweihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justweihong": 88
    }
  },
  {
    "path": "src/test/java/EventTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justweihong"
        },
        "content": "public class EventTaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void StringAndFileFormatTest() throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        EventTask task1 \u003d new EventTask(\"dinner\", \"2012-02-21 1900\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        assertEquals(\"[E] [✘] dinner (at: 21 FEBRUARY 2012)\", task1.toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        assertEquals(\"E | 0 | dinner | 21 FEBRUARY 2012\", task1.fileString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void MarkDoneTest() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        EventTask task1 \u003d new EventTask(\"Company Lunch\", \"2019-03-23 2000\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        assertEquals(\"[E] [✘] Company Lunch (at: 23 MARCH 2019)\", task1.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        task1.markDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        assertEquals(\"[E] [✓] Company Lunch (at: 23 MARCH 2019)\", task1.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "justweihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justweihong": 20
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justweihong"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "justweihong"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "justweihong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    public void ParseRemainingStringTest() throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        String remainingString \u003d \" CS2103T assignment /by 2020-08-22 2359\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        String[] actual \u003d Parser.parseRemainingString(\"deadline\", remainingString);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        String[] expected \u003d new String[] {\"deadline\", \"CS2103T assignment\", \"2020-08-22 2359\"};"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        assertEquals(expected[0], actual[0]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        assertEquals(expected[1], actual[1]);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "justweihong"
        },
        "content": "        assertEquals(expected[2], actual[2]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "justweihong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justweihong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "justweihong": 16
    }
  },
  {
    "path": "text-ui-test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "D | 0 | return book | 21 DECEMBER 2012"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justweihong"
        },
        "content": "E | 0 | project meeting | 11 NOVEMBER 2013"
      }
    ],
    "authorContributionMap": {
      "justweihong": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "justweihong"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "justweihong"
        },
        "content": "deadline return book /by 2012-12-21 1900"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "justweihong"
        },
        "content": "event project meeting /at 2013-11-11 1800"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "justweihong"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "justweihong": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "justweihong"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "justweihong"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "justweihong": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "justweihong"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke.Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "justweihong"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "justweihong": 2
    }
  }
]
