[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    mainClassName \u003d \"sg.christopher.duke.Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 45,
      "chrisgzf": 16
    }
  },
  {
    "path": "src/main/java/sg/christopher/duke/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " * Enums to determine the type of command that the user has input."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "package sg.christopher.duke;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    EXIT, TODO, DEADLINE, EVENT, DELETE, DONE, LIST, UNRECOGNISED, FIND"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisgzf": 8
    }
  },
  {
    "path": "src/main/java/sg/christopher/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "package sg.christopher.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import sg.christopher.duke.entities.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import sg.christopher.duke.entities.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import sg.christopher.duke.entities.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import sg.christopher.duke.entities.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import sg.christopher.duke.io.DataManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import sg.christopher.duke.ui.MainWindow;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private static List\u003cTask\u003e savedItems \u003d loadSavedItems();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private MainWindow mainWindowController;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private static Stage stage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public void setMainWindowController(MainWindow mw) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        mainWindowController \u003d mw;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public void setStage(Stage stage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        Duke.stage \u003d stage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private void dukePrint(String message) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        mainWindowController.printDukeMessage(message);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public void printWelcome() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        dukePrint(\"Hello I\u0027m Duke! What can I do for you?\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * Hydrates the task data store with saved data from disk."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * @return list of tasks that are saved on disk"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public static List\u003cTask\u003e loadSavedItems() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        List\u003cTask\u003e saved \u003d DataManager.readList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return saved !\u003d null ? saved : new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * Saves a task to memory and writes it to disk."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * @param task the task to be saved"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public static void saveItem(Task task) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        savedItems.add(task);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        DataManager.writeList(savedItems);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * Loads saved tasks from disk, and get a specific task using its index."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * @param index index of the task to be retrieved"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * @return the task at that index"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public static Task loadItem(int index) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        savedItems \u003d DataManager.readList();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return savedItems.get(index);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * Removes saved tasks from disk, using its index."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * @param index index of the task to be removed"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * @return task that is removed"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public static Task removeItem(int index) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        Task removed \u003d savedItems.remove(index);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        DataManager.writeList(savedItems);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return removed;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private static String doneHandler(String userInput) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        int taskNo;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            taskNo \u003d Integer.parseInt(userInput.split(\" \")[1]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return \"ERROR: No task no. found. Did you input the task no. of the task you\u0027d like to mark as done?\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return \"ERROR: Unrecognized task. Please input the task no. of the task you\u0027d like to mark as done.\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            task \u003d loadItem(taskNo - 1);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        } catch (IndexOutOfBoundsException ioobe) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return \"ERROR: Task no. not found. Does that task exist?\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\" + taskNo + \". \" + task;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private static String todoHandler(String userInput) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        // Check for description"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        if (userInput.split(\" \").length \u003c 2) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return \"ERROR: Description of todo cannot be empty.\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        String description \u003d userInput.replaceFirst(\"todo \", \"\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        saveItem(todo);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\" + todo + printRemainingCount();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private static String deadlineHandler(String userInput) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        // Check for description"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        if (userInput.split(\" \").length \u003c 2) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return \"ERROR: Description of deadline cannot be empty.\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        String[] input \u003d userInput.replaceFirst(\"deadline \", \"\").split(\" /by \");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        // Check for deadline in description"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return \"ERROR: Deadline not found. Did you input a deadline with `/by`?\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        } else if (input.length \u003e 2) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return \"ERROR: Multiple deadlines found. Please only input one deadline.\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        Deadline deadline \u003d new Deadline(input[0], input[1]);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        saveItem(deadline);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\" + deadline + printRemainingCount();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private static String eventHandler(String userInput) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        // Check for description"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        if (userInput.split(\" \").length \u003c 2) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return \"ERROR: Description of event cannot be empty.\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        String[] input \u003d userInput.replaceFirst(\"event \", \"\").split(\" /at \");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        // Check for dateTime in description"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return \"ERROR: Date/time not found. Did you input a date/time with `/at`?\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        } else if (input.length \u003e 2) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return \"ERROR: Multiple date/times found. Please only input one date/time.\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        Event event \u003d new Event(input[0], input[1]);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        saveItem(event);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\" + event + printRemainingCount();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private static String findHandler(String userInput) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        // Check for search term"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        if (userInput.split(\" \").length \u003c 2) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return \"ERROR: Search term not found. Did you type a search term?\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        String searchTerm \u003d userInput.replaceFirst(\"find \", \"\").toLowerCase();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        savedItems \u003d loadSavedItems();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        List\u003cTask\u003e foundTasks \u003d savedItems.stream().filter(task -\u003e task.getDescription().toLowerCase().contains(searchTerm)).collect(Collectors.toList());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        if (foundTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return \"No task matching your search term was found. Perhaps try another search term?\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        for (int i \u003d 0; i \u003c foundTasks.size(); ++i) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            Task task \u003d foundTasks.get(i);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            sb.append(i + 1 + \". \" + task + \"\\n\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private static String lsHandler() {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        if (savedItems.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return \"No tasks found. Start adding your first few tasks!\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        assert savedItems.size() \u003e\u003d 1;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        for (int i \u003d 0; i \u003c savedItems.size(); ++i) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            Task task \u003d loadItem(i);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            sb.append(i + 1 + \". \" + task + \"\\n\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        sb.append(printRemainingCount());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private static String deleteHandler(String userInput) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        int taskNo;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            taskNo \u003d Integer.parseInt(userInput.split(\" \")[1]);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return \"ERROR: No task no. found. Did you input the task no. of the task you\u0027d like to delete?\";"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return \"ERROR: Unrecognized task. Please input the task no. of the task you\u0027d like to delete.\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            task \u003d removeItem(taskNo - 1);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        } catch (IndexOutOfBoundsException ioobe) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return \"ERROR: Task no. not found. Does that task exist?\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n\" + taskNo + \". \" + task + printRemainingCount();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private static String printRemainingCount() {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return \"\\nYou now have \" + savedItems.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private static CommandType getCommandType(String command) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        case \"exit\":"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return CommandType.EXIT;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return CommandType.TODO;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return CommandType.DEADLINE;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return CommandType.EVENT;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return CommandType.FIND;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        case \"rm\":"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return CommandType.DELETE;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return CommandType.DONE;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        case \"ls\":"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return CommandType.LIST;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return CommandType.UNRECOGNISED;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public static String getResponse(String userInput) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        String command \u003d userInput.split(\" \")[0];"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        CommandType commandType \u003d getCommandType(command);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        case EXIT:"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            new Thread(() -\u003e {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "                    Thread.sleep(3000);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "                    Platform.runLater(() -\u003e stage.close());"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "                }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            }).start();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return todoHandler(userInput);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return deadlineHandler(userInput);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return eventHandler(userInput);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return deleteHandler(userInput);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return findHandler(userInput);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return doneHandler(userInput);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return lsHandler();"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        case UNRECOGNISED:"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return \"ERROR: Unrecognised command. Did you make a typo?\";"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 1,
      "chrisgzf": 272
    }
  },
  {
    "path": "src/main/java/sg/christopher/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "package sg.christopher.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisgzf": 12
    }
  },
  {
    "path": "src/main/java/sg/christopher/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "package sg.christopher.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import sg.christopher.duke.ui.MainWindow;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            MainWindow mainWindow \u003d fxmlLoader.\u003cMainWindow\u003egetController();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            mainWindow.setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            duke.setMainWindowController(mainWindow);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            duke.setStage(stage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            duke.printWelcome();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisgzf": 36
    }
  },
  {
    "path": "src/main/java/sg/christopher/duke/entities/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " * Wrapper class for deadlines."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "package sg.christopher.duke.entities;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * Creates a brand new Deadline task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * @param deadline deadline of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        parseDeadline(deadline);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private LocalDate ldDeadline;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private void parseDeadline(String deadline) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            LocalDate ld \u003d LocalDate.parse(deadline);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            ldDeadline \u003d ld;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        } catch (DateTimeParseException dtpe) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private String getDeadlineString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        if (ldDeadline !\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return ldDeadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return deadline;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getDeadlineString() + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisgzf": 45
    }
  },
  {
    "path": "src/main/java/sg/christopher/duke/entities/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " * Wrapper class for Event tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "package sg.christopher.duke.entities;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * Creates a new Event task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * @param dateTime time that task needs to be done at"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public Event(String description, String dateTime) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisgzf": 24
    }
  },
  {
    "path": "src/main/java/sg/christopher/duke/entities/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " * Wrapper class for tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "package sg.christopher.duke.entities;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * Creates a new Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * Gets a tick or cross representation of the done status of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * @return tick or cross icon representation of the done status of the task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * Gets the task\u0027s description."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * @return the task\u0027s description"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisgzf": 51
    }
  },
  {
    "path": "src/main/java/sg/christopher/duke/entities/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " * Wrapper class for Todo tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "package sg.christopher.duke.entities;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * Creates a new Todo task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * @param description description of Todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisgzf": 20
    }
  },
  {
    "path": "src/main/java/sg/christopher/duke/io/DataManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " * Handles persisting task data to disk."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "package sg.christopher.duke.io;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import sg.christopher.duke.entities.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "public class DataManager {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public static final File dataFile \u003d new File(\"data\", \"data.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * Writes the task list to disk."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * Creates the file and it\u0027s parent folders if it doesn\u0027t exist."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * @param inList task list to write to disk"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public static void writeList(List\u003cTask\u003e inList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            dataFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            dataFile.createNewFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            System.err.println(\"Unable to create data directory or file\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        try (ObjectOutputStream oos \u003d new ObjectOutputStream(new FileOutputStream(dataFile))) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            oos.writeObject(inList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            System.err.println(\"Unable to save Duke data to disk\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            ioe.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * Reads the task list from disk."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * @return task list, or null if file doesn\u0027t exist"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public static List\u003cTask\u003e readList() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        try (ObjectInputStream ois \u003d new ObjectInputStream(new FileInputStream(dataFile))) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return (List\u003cTask\u003e) ois.readObject();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        } catch (FileNotFoundException fnfe) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            System.err.println(\"Unable to read Duke data from disk\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisgzf": 59
    }
  },
  {
    "path": "src/main/java/sg/christopher/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "package sg.christopher.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisgzf": 61
    }
  },
  {
    "path": "src/main/java/sg/christopher/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "package sg.christopher.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import sg.christopher.duke.Duke;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public void printDukeMessage(String message) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "                DialogBox.getDukeDialog(message, dukeImage)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisgzf": 64
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-label-padding: 10;\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "chrisgzf": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"sg.christopher.duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "chrisgzf": 19
    }
  },
  {
    "path": "src/test/java/sg/christopher/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "package sg.christopher.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import sg.christopher.duke.Duke;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public void duke_runsNormally() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        InputStream normalSystemIn \u003d System.in;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        ByteArrayInputStream in \u003d new ByteArrayInputStream(\"exit\".getBytes());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        // Duke.main(new String[0]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        System.setIn(normalSystemIn);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisgzf": 19
    }
  },
  {
    "path": "src/test/java/sg/christopher/duke/entities/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "package sg.christopher.duke.entities;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import sg.christopher.duke.entities.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public void task_shouldBeCreatable() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        Task task \u003d new Task(\"mock desc\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public void task_whenNotDone_shouldDisplayCross() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        Task task \u003d new Task(\"mock desc\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        assertEquals(task.getStatusIcon(), \"\\u2718\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    public void task_whenDone_shouldDisplayTick() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        Task task \u003d new Task(\"mock desc\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "        assertEquals(task.getStatusIcon(), \"\\u2713\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisgzf": 27
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "todo eat lunch later"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "todo eat dinner later"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "deadline finish ip"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "deadline finish ip /by today 2359hrs /by today 2359hrs"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "deadline finish ip /by today 2359hrs"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "deadline watch cs2100 lecture /by tomorrow 7am"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "event go eat lunch with jingyen"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "event go eat lunch with jingyen /at 12 noon today /at 12 noon today"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "event go eat lunch with jingyen /at 12 noon today"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "event submit temperature declaration /at 11am"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "todo collect stuff from hackerspace nus"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "done"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "done asdf"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "done 9999999"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "thiscommanddoesntexist"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "delete asdadsf"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "delete 9999999"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "ls"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "chrisgzf": 54
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisgzf"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/sg/christopher/duke/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "chrisgzf": 1
    }
  }
]
