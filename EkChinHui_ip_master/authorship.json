[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private LocalDate dueDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public Deadline(String description, LocalDate dueDate) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public String getDueDate() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return dueDate.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String month \u003d dueDate.getMonth().getDisplayName(TextStyle.SHORT, Locale.forLanguageTag(\"en\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        int day \u003d dueDate.getDayOfMonth();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        int year \u003d dueDate.getYear();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String timeDisplay \u003d String.format(\"%d %s %d\", day, month, year);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return \"[D]\" + super.toString() + String.format(\" (by: %s)\", timeDisplay);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 27
    }
  },
  {
    "path": "src/main/java/duke/DeadlineMissingDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class DeadlineMissingDateException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public DeadlineMissingDateException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        super(\"Date is missing for deadline, please include a date preceded by /by\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 7
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            // ui.showLoadingError();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        ui.greeting();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            Parser.parseUserInput(input, ui, tasks, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 35,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    protected final String message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 14
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public Event(String description, LocalDate time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return time.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String month \u003d time.getMonth().getDisplayName(TextStyle.SHORT, Locale.forLanguageTag(\"en\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        int day \u003d time.getDayOfMonth();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        int year \u003d time.getYear();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String timeDisplay \u003d String.format(\"%d %s %d\", day, month, year);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return \"[E]\" + super.toString() + String.format(\" (at: %s)\", timeDisplay);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 27
    }
  },
  {
    "path": "src/main/java/duke/EventMissingDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class EventMissingDateException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public EventMissingDateException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        super(\"Your event is missing a date! Please include a date preceded by /at\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 8
    }
  },
  {
    "path": "src/main/java/duke/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public InvalidInputException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        super(\"Sorry I\u0027m not sure what you mean by that :/\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 7
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public static void parseUserInput(String userInput, Ui ui, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        if (userInput.startsWith(\"bye\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            ui.printMessage(\"Bye! See you next time :)\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        } else if (userInput.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            String message \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.getTasks().size(); i++) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                message +\u003d (i + 1) + \": \" + taskList.getTask(i) + \"\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            ui.printMessage(message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        } else if (userInput.matches(\"done ([0-9]+)\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            int number \u003d Integer.parseInt(userInput.split(\" \")[1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            if (number \u003e taskList.getTasks().size()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                ui.printMessage(\"duke.Task not found please choose another number!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            else if (number \u003c 100 \u0026\u0026 number \u003e 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                taskList.getTask(number - 1).markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                ui.printMessage(\"This task is done, great job!\\n\" + taskList.getTask(number - 1));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        } else if (userInput.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            String description \u003d userInput.replace(\"todo\", \"\").trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                System.out.println(new ToDoMissingDescriptionException());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                Task task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                taskList.addTask(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                storage.saveToFile(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                ui.printMessage(\"Added: \" + task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                        + String.format(\"\\nNow you have %d tasks in the list\", taskList.getTasks().size()));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        } else if (userInput.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            if (userInput.contains(\"/by\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                String description \u003d userInput.replace(\"deadline \", \"\").split(\"/by\")[0].trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                String dueDate \u003d userInput.replace(\"deadline\", \"\").split(\"/by\")[1].trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                Task task \u003d new Deadline(description, LocalDate.parse(dueDate));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                taskList.addTask(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                storage.saveToFile(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                ui.printMessage(\"Added \" + task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                        + String.format(\"\\nNow you have %d tasks in the list\", taskList.getTasks().size()));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                System.out.println(new DeadlineMissingDateException());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        } else if (userInput.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            if (userInput.contains(\"/at\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                String description \u003d userInput.replace(\"event \", \"\").split(\"/at\")[0].trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                String time \u003d userInput.replace(\"event \", \"\").split(\"/at\")[1].trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                System.out.println(time);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                Task task \u003d new Event(description, LocalDate.parse(time));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                taskList.addTask(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                storage.saveToFile(task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                ui.printMessage(\"Added \" + task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                        + String.format(\"\\nNow you have %d tasks in the list\", taskList.getTasks().size()));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                System.out.println(new EventMissingDateException());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        } else if (userInput.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            int taskToDelete \u003d Integer.parseInt(userInput.replace(\"delete \", \"\")) - 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            ui.printMessage(\"I have removed this task:\\n\" + taskList.getTask(taskToDelete)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    + String.format(\"\\nNow you have %d tasks in the list\", taskList.getTasks().size() - 1));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            taskList.deleteTask(taskToDelete);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            System.out.println(new InvalidInputException());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 73
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        File dataFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        if (dataFile.exists()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                Scanner scanner \u003d new Scanner(dataFile);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    String taskEntry \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    String[] taskInformation \u003d taskEntry.split(\"\\\\|\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    if (taskEntry.startsWith(\"[T]\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                        String description \u003d taskEntry.split(\"\\\\|\")[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                        Task task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                        if (taskInformation[0].contains(\"1\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                            task.markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    } else if (taskEntry.startsWith(\"[D]\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                        String description \u003d taskEntry.split(\"\\\\|\")[1];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                        Task task \u003d new Deadline(description, LocalDate.parse(taskEntry.split(\"\\\\|\")[2]));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                        if (taskInformation[0].contains(\"1\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                            task.markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    } else if (taskEntry.startsWith(\"[E]\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                        String description \u003d taskEntry.split(\"\\\\|\")[1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                        Task task \u003d new Event(description, LocalDate.parse(taskEntry.split(\"\\\\|\")[2]));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                        if (taskInformation[0].contains(\"1\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                            task.markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            } catch (IOException ioException) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                System.out.println(\"An error has occurred\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "                ioException.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void saveToFile(Task task) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(\"data.txt\", true);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            String[] strings \u003d task.toString().split(\"\\\\|\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            String isDone \u003d task.getIsDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            String description \u003d strings[2];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            fileWriter.write(strings[0] + \" | \" + isDone + \" | \" + description + \"\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            System.out.println(\"An error has occurred\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            ioException.printStackTrace();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 71
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return String.format(\"|[%s] | %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 28
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 33
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 12
    }
  },
  {
    "path": "src/main/java/duke/ToDoMissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class ToDoMissingDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public ToDoMissingDescriptionException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        super(\"duke.ToDo task needs a description :)\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 7
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private static final String SPACING \u003d \"         \";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    private static final String DIVIDER \u003d \"_______________________________________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void greeting() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String logo \u003d \"Dash\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        System.out.println(\"How can I help you today?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void getUserCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        System.out.println(\"Please enter a command:\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void printMessage(String... messages) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "            System.out.println(SPACING + message);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 26
    }
  },
  {
    "path": "src/test/java/duke/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void markAsDone_uncompletedTask_completedTask() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String description \u003d \"testDescription\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Task task \u003d new Task(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertTrue(task.getIsDone());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void getStatusIcon_uncompletedTask_crossSymbol() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String description \u003d \"test\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Task task \u003d new Task(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertEquals(\"\\u2718\", task.getStatusIcon());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void getStatusIcon_completedTask_tickSymbol() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String description \u003d \"test\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Task task \u003d new Task(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertEquals(\"\\u2713\", task.getStatusIcon());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        String description \u003d \"test\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        Task task \u003d new Task(description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertEquals(\"|[\\u2718] | test\", task.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 39
    }
  },
  {
    "path": "src/test/java/duke/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        ToDo toDo \u003d new ToDo(\"test\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "        assertEquals(\"[T]|[\\u2718] | test\", toDo.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "event watch Westworld /at June 20th 2pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EkChinHui"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "EkChinHui": 2,
      "-": 19
    }
  }
]
